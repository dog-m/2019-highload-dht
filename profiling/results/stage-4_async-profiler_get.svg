<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1125"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1125"> </text>
<g id="frames">
<g>
<title>all (3,210 samples, 100.00%)</title><rect x="10.0" y="1091.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1102.0">all</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.06%)</title><rect x="10.0" y="1075.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.03%)</title><rect x="10.7" y="1075.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="1086.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.03%)</title><rect x="11.1" y="1075.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.1" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (62 samples, 1.93%)</title><rect x="11.5" y="1075.0" width="22.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.5" y="1086.0">O..</text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (9 samples, 0.28%)</title><rect x="11.5" y="1059.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.5" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="11.5" y="1043.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.5" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (8 samples, 0.25%)</title><rect x="11.8" y="1043.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.8" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.19%)</title><rect x="11.8" y="1027.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.8" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.19%)</title><rect x="11.8" y="1011.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.8" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (1 samples, 0.03%)</title><rect x="11.8" y="995.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.8" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (1 samples, 0.03%)</title><rect x="11.8" y="979.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.8" y="990.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.03%)</title><rect x="11.8" y="963.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.8" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.16%)</title><rect x="12.2" y="995.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.2" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (1 samples, 0.03%)</title><rect x="12.2" y="979.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.2" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (1 samples, 0.03%)</title><rect x="12.6" y="979.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.6" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (1 samples, 0.03%)</title><rect x="12.6" y="963.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.6" y="974.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.03%)</title><rect x="12.6" y="947.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.6" y="958.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.06%)</title><rect x="12.9" y="979.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.9" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (2 samples, 0.06%)</title><rect x="12.9" y="963.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.9" y="974.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="13.3" y="947.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="16.3" y="958.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned int) (1 samples, 0.03%)</title><rect x="13.7" y="979.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.7" y="990.0"></text>
</g>
<g>
<title>ObjArrayKlass::array_klass_impl(bool, int, Thread*) (2 samples, 0.06%)</title><rect x="14.0" y="1027.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="14.4" y="1011.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="17.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="14.4" y="995.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="17.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="14.4" y="979.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="17.4" y="990.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (53 samples, 1.65%)</title><rect x="14.8" y="1059.0" width="19.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="17.8" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.09%)</title><rect x="14.8" y="1043.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="17.8" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (50 samples, 1.56%)</title><rect x="15.9" y="1043.0" width="18.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="18.9" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (47 samples, 1.46%)</title><rect x="16.6" y="1027.0" width="17.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="19.6" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (1 samples, 0.03%)</title><rect x="16.6" y="1011.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.6" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (46 samples, 1.43%)</title><rect x="17.0" y="1011.0" width="16.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.0" y="1022.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned int, Thread*) (3 samples, 0.09%)</title><rect x="18.5" y="995.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="21.5" y="1006.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.03%)</title><rect x="19.2" y="979.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.2" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (1 samples, 0.03%)</title><rect x="19.6" y="995.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.6" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (12 samples, 0.37%)</title><rect x="19.9" y="995.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.9" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (6 samples, 0.19%)</title><rect x="19.9" y="979.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.9" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (5 samples, 0.16%)</title><rect x="22.1" y="979.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="25.1" y="990.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (2 samples, 0.06%)</title><rect x="22.9" y="963.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.9" y="974.0"></text>
</g>
<g>
<title>VM_Operation::set_calling_thread(Thread*, ThreadPriority) (1 samples, 0.03%)</title><rect x="23.6" y="963.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="26.6" y="974.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="24.0" y="979.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.0" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (1 samples, 0.03%)</title><rect x="24.3" y="995.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="27.3" y="1006.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned int, Thread*) (2 samples, 0.06%)</title><rect x="24.7" y="995.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="27.7" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.25%)</title><rect x="25.4" y="995.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="28.4" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (1 samples, 0.03%)</title><rect x="25.8" y="979.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="28.8" y="990.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (1 samples, 0.03%)</title><rect x="26.2" y="979.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="29.2" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (4 samples, 0.12%)</title><rect x="26.5" y="979.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="29.5" y="990.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (1 samples, 0.03%)</title><rect x="26.5" y="963.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.5" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (3 samples, 0.09%)</title><rect x="26.9" y="963.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="29.9" y="974.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.03%)</title><rect x="26.9" y="947.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="29.9" y="958.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (1 samples, 0.03%)</title><rect x="27.3" y="947.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.3" y="958.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.03%)</title><rect x="27.6" y="947.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="30.6" y="958.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="28.0" y="979.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="31.0" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="28.0" y="963.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="31.0" y="974.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (12 samples, 0.37%)</title><rect x="28.4" y="995.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.4" y="1006.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (3 samples, 0.09%)</title><rect x="32.8" y="995.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="35.8" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="33.9" y="1027.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="36.9" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (13 samples, 0.40%)</title><rect x="34.3" y="1075.0" width="4.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="37.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.6" y="1059.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="37.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.6" y="1043.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="37.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.6" y="1027.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="37.6" y="1038.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (11 samples, 0.34%)</title><rect x="35.0" y="1059.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="38.0" y="1070.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.34%)</title><rect x="35.0" y="1043.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.0" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (11 samples, 0.34%)</title><rect x="35.0" y="1027.0" width="4.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="38.0" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 0.28%)</title><rect x="35.0" y="1011.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="38.0" y="1022.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (1 samples, 0.03%)</title><rect x="35.4" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="38.4" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.09%)</title><rect x="35.7" y="995.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="38.7" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (1 samples, 0.03%)</title><rect x="35.7" y="979.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="38.7" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (1 samples, 0.03%)</title><rect x="36.1" y="979.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="39.1" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (1 samples, 0.03%)</title><rect x="36.1" y="963.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="39.1" y="974.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (1 samples, 0.03%)</title><rect x="36.1" y="947.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="39.1" y="958.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="36.5" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="39.5" y="990.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="36.5" y="963.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="39.5" y="974.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.09%)</title><rect x="36.8" y="995.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="39.8" y="1006.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned int) (1 samples, 0.03%)</title><rect x="37.9" y="995.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="40.9" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.06%)</title><rect x="38.3" y="1011.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="41.3" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (24 samples, 0.75%)</title><rect x="39.0" y="1075.0" width="8.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="42.0" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.09%)</title><rect x="39.8" y="1059.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="42.8" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (18 samples, 0.56%)</title><rect x="40.9" y="1059.0" width="6.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="43.9" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (18 samples, 0.56%)</title><rect x="40.9" y="1043.0" width="6.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="43.9" y="1054.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (1 samples, 0.03%)</title><rect x="40.9" y="1027.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="43.9" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (17 samples, 0.53%)</title><rect x="41.2" y="1027.0" width="6.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="44.2" y="1038.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (3 samples, 0.09%)</title><rect x="41.2" y="1011.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="44.2" y="1022.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned int, Thread*) (1 samples, 0.03%)</title><rect x="41.6" y="995.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="44.6" y="1006.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="42.0" y="995.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="45.0" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (1 samples, 0.03%)</title><rect x="42.3" y="1011.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="45.3" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (1 samples, 0.03%)</title><rect x="42.7" y="1011.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="45.7" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="43.1" y="1011.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="46.1" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (9 samples, 0.28%)</title><rect x="43.5" y="1011.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="46.5" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="44.2" y="995.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="47.2" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (1 samples, 0.03%)</title><rect x="44.6" y="995.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="47.6" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (2 samples, 0.06%)</title><rect x="44.9" y="995.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="47.9" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (2 samples, 0.06%)</title><rect x="44.9" y="979.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="47.9" y="990.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (1 samples, 0.03%)</title><rect x="44.9" y="963.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="47.9" y="974.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.03%)</title><rect x="44.9" y="947.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="47.9" y="958.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (1 samples, 0.03%)</title><rect x="45.3" y="963.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="48.3" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (2 samples, 0.06%)</title><rect x="45.7" y="995.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="48.7" y="1006.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="46.4" y="995.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="49.4" y="1006.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (2 samples, 0.06%)</title><rect x="46.8" y="1011.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="49.8" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.03%)</title><rect x="47.5" y="1059.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="50.5" y="1070.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.03%)</title><rect x="47.5" y="1043.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="50.5" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (19 samples, 0.59%)</title><rect x="47.9" y="1075.0" width="6.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="50.9" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (17 samples, 0.53%)</title><rect x="48.2" y="1059.0" width="6.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="51.2" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.25%)</title><rect x="48.2" y="1043.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="51.2" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.63] (8 samples, 0.25%)</title><rect x="48.2" y="1027.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="51.2" y="1038.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.85] (8 samples, 0.25%)</title><rect x="51.2" y="1043.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="54.2" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (8 samples, 0.25%)</title><rect x="51.2" y="1027.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="54.2" y="1038.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.63] (4 samples, 0.12%)</title><rect x="51.2" y="1011.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="54.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="52.3" y="995.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="55.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="52.3" y="979.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="55.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="52.3" y="963.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="55.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="52.3" y="947.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="55.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="52.3" y="931.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="55.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="52.3" y="915.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="55.3" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.09%)</title><rect x="52.6" y="1011.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="55.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="52.6" y="995.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="55.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="52.6" y="979.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="55.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="52.6" y="963.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="55.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="52.6" y="947.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="55.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="52.6" y="931.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="55.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="53.0" y="915.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="56.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="53.0" y="899.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="56.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="53.0" y="883.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="56.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="53.4" y="867.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="56.4" y="878.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long long) (1 samples, 0.03%)</title><rect x="53.7" y="1011.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="56.7" y="1022.0"></text>
</g>
<g>
<title>__divdi3 (1 samples, 0.03%)</title><rect x="53.7" y="995.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="56.7" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="54.1" y="1043.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="57.1" y="1054.0"></text>
</g>
<g>
<title>ObjectSynchronizer::omAlloc(Thread*) (1 samples, 0.03%)</title><rect x="54.5" y="1059.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="57.5" y="1070.0"></text>
</g>
<g>
<title>[not_walkable] (2 samples, 0.06%)</title><rect x="54.8" y="1075.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="57.8" y="1086.0"></text>
</g>
<g>
<title>[not_walkable_Java] (21 samples, 0.65%)</title><rect x="55.6" y="1075.0" width="7.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="58.6" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.09%)</title><rect x="56.0" y="1059.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="59.0" y="1070.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="56.0" y="1043.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="59.0" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.06%)</title><rect x="56.3" y="1043.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="59.3" y="1054.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="56.7" y="1027.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="59.7" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (10 samples, 0.31%)</title><rect x="57.1" y="1059.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="60.1" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (10 samples, 0.31%)</title><rect x="57.1" y="1043.0" width="3.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="60.1" y="1054.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.12%)</title><rect x="57.1" y="1027.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="60.1" y="1038.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="57.4" y="1011.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="60.4" y="1022.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.06%)</title><rect x="57.8" y="1011.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="60.8" y="1022.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.19%)</title><rect x="58.5" y="1027.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="61.5" y="1038.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.03%)</title><rect x="58.5" y="1011.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="61.5" y="1022.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.03%)</title><rect x="58.5" y="995.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="61.5" y="1006.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (3 samples, 0.09%)</title><rect x="58.9" y="1011.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="61.9" y="1022.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="58.9" y="995.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="61.9" y="1006.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.06%)</title><rect x="58.9" y="979.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="61.9" y="990.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="59.6" y="995.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="62.6" y="1006.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned int, AllocFailStrategy::AllocFailEnum) (2 samples, 0.06%)</title><rect x="60.0" y="1011.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="63.0" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.16%)</title><rect x="60.7" y="1059.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="63.7" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (5 samples, 0.16%)</title><rect x="60.7" y="1043.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="63.7" y="1054.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="60.7" y="1027.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="63.7" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::heap() (1 samples, 0.03%)</title><rect x="60.7" y="1011.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="63.7" y="1022.0"></text>
</g>
<g>
<title>CardTableRS::is_in_young(oopDesc*) const (2 samples, 0.06%)</title><rect x="61.1" y="1027.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="64.1" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::is_in_young(oopDesc*) (2 samples, 0.06%)</title><rect x="61.8" y="1027.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="64.8" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.06%)</title><rect x="62.6" y="1059.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="65.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.19%)</title><rect x="63.3" y="1075.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="66.3" y="1086.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.03%)</title><rect x="63.3" y="1059.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="66.3" y="1070.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.16%)</title><rect x="63.7" y="1059.0" width="1.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="66.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="63.7" y="1043.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="66.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="63.7" y="1027.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="66.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="63.7" y="1011.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="66.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="63.7" y="995.0" width="1.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="66.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="63.7" y="979.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="66.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="63.7" y="963.0" width="1.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="66.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="63.7" y="947.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="66.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="63.7" y="931.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="66.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="65.1" y="915.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="68.1" y="926.0"></text>
</g>
<g>
<title>[unknown_Java] (110 samples, 3.43%)</title><rect x="65.5" y="1075.0" width="40.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="68.5" y="1086.0">[un..</text>
</g>
<g>
<title>Thread::current() (3 samples, 0.09%)</title><rect x="99.0" y="1059.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="102.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.44%)</title><rect x="100.1" y="1059.0" width="5.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="103.1" y="1070.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (2 samples, 0.06%)</title><rect x="100.1" y="1043.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="103.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="100.1" y="1027.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="103.1" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="100.1" y="1011.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="103.1" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="100.4" y="1011.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="103.4" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="100.8" y="1043.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="103.8" y="1054.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.03%)</title><rect x="101.5" y="1043.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="104.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.19%)</title><rect x="101.9" y="1043.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="104.9" y="1054.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.06%)</title><rect x="101.9" y="1027.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="104.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="102.6" y="1027.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="105.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="103.4" y="1011.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="106.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="103.4" y="995.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="106.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="103.4" y="979.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="106.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="103.7" y="963.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="106.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="103.7" y="947.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="106.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="103.7" y="931.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="106.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="103.7" y="915.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="106.7" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.06%)</title><rect x="104.1" y="1043.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="107.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="104.1" y="1027.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="107.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="104.1" y="1011.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="107.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="104.1" y="995.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="107.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="104.1" y="979.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="107.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="104.1" y="963.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="107.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="104.1" y="947.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="107.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="104.5" y="931.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="107.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="104.5" y="915.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="107.5" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="104.8" y="1043.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="107.8" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.06%)</title><rect x="105.2" y="1059.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="108.2" y="1070.0"></text>
</g>
<g>
<title>clone (55 samples, 1.71%)</title><rect x="105.9" y="1075.0" width="20.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="108.9" y="1086.0"></text>
</g>
<g>
<title>start_thread (55 samples, 1.71%)</title><rect x="105.9" y="1059.0" width="20.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="108.9" y="1070.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (55 samples, 1.71%)</title><rect x="105.9" y="1043.0" width="20.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="108.9" y="1054.0"></text>
</g>
<g>
<title>Thread::call_run() (55 samples, 1.71%)</title><rect x="105.9" y="1027.0" width="20.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="108.9" y="1038.0"></text>
</g>
<g>
<title>JavaThread::run() (15 samples, 0.47%)</title><rect x="105.9" y="1011.0" width="5.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="108.9" y="1022.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (15 samples, 0.47%)</title><rect x="105.9" y="995.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="108.9" y="1006.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.03%)</title><rect x="105.9" y="979.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="108.9" y="990.0"></text>
</g>
<g>
<title>load_agent(AttachOperation*, outputStream*) (1 samples, 0.03%)</title><rect x="105.9" y="963.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="108.9" y="974.0"></text>
</g>
<g>
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (1 samples, 0.03%)</title><rect x="105.9" y="947.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="108.9" y="958.0"></text>
</g>
<g>
<title>Agent_OnAttach (1 samples, 0.03%)</title><rect x="105.9" y="931.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="108.9" y="942.0"></text>
</g>
<g>
<title>Profiler::run(Arguments&amp;) (1 samples, 0.03%)</title><rect x="105.9" y="915.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="108.9" y="926.0"></text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::ostream&amp;) (1 samples, 0.03%)</title><rect x="105.9" y="899.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="108.9" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="105.9" y="883.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="108.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="105.9" y="867.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="108.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="105.9" y="851.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="108.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="105.9" y="835.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="108.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="105.9" y="819.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="108.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="105.9" y="803.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="108.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="105.9" y="787.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="108.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="105.9" y="771.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="108.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="105.9" y="755.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="108.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="105.9" y="739.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="108.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="105.9" y="723.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="108.9" y="734.0"></text>
</g>
<g>
<title>compiler_thread_entry(JavaThread*, Thread*) (14 samples, 0.44%)</title><rect x="106.3" y="979.0" width="5.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="109.3" y="990.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (14 samples, 0.44%)</title><rect x="106.3" y="963.0" width="5.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="109.3" y="974.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (14 samples, 0.44%)</title><rect x="106.3" y="947.0" width="5.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="109.3" y="958.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (14 samples, 0.44%)</title><rect x="106.3" y="931.0" width="5.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="109.3" y="942.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (14 samples, 0.44%)</title><rect x="106.3" y="915.0" width="5.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="109.3" y="926.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (9 samples, 0.28%)</title><rect x="106.3" y="899.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="109.3" y="910.0"></text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.06%)</title><rect x="106.3" y="883.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="109.3" y="894.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.03%)</title><rect x="106.3" y="867.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="109.3" y="878.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.03%)</title><rect x="106.3" y="851.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="109.3" y="862.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.03%)</title><rect x="106.7" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="109.7" y="878.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.03%)</title><rect x="106.7" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="109.7" y="862.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.06%)</title><rect x="107.0" y="883.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="110.0" y="894.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.06%)</title><rect x="107.0" y="867.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="110.0" y="878.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.03%)</title><rect x="107.4" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="110.4" y="862.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.03%)</title><rect x="107.4" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="110.4" y="846.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.03%)</title><rect x="107.4" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="110.4" y="830.0"></text>
</g>
<g>
<title>State::_sub_Op_URShiftI(Node const*) (1 samples, 0.03%)</title><rect x="107.4" y="803.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="110.4" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (5 samples, 0.16%)</title><rect x="107.8" y="883.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="110.8" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.06%)</title><rect x="107.8" y="867.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="110.8" y="878.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.03%)</title><rect x="108.1" y="851.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="111.1" y="862.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.03%)</title><rect x="108.1" y="835.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="111.1" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.06%)</title><rect x="108.5" y="867.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="111.5" y="878.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.03%)</title><rect x="108.9" y="851.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="111.9" y="862.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.03%)</title><rect x="108.9" y="835.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="111.9" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.03%)</title><rect x="109.3" y="867.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="112.3" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.03%)</title><rect x="109.3" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="112.3" y="862.0"></text>
</g>
<g>
<title>Compile::Optimize() (3 samples, 0.09%)</title><rect x="109.6" y="899.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="112.6" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&amp;, bool, bool, bool) (3 samples, 0.09%)</title><rect x="109.6" y="883.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="112.6" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (3 samples, 0.09%)</title><rect x="109.6" y="867.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="112.6" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.03%)</title><rect x="109.6" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="112.6" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.06%)</title><rect x="110.0" y="851.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="113.0" y="862.0"></text>
</g>
<g>
<title>IfNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="110.0" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="113.0" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.03%)</title><rect x="110.4" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="113.4" y="846.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="110.4" y="819.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="113.4" y="830.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="110.4" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="113.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="110.4" y="787.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="113.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="110.4" y="771.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="113.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="110.4" y="755.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="113.4" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="110.7" y="899.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="113.7" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="110.7" y="883.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="113.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="110.7" y="867.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="113.7" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="110.7" y="851.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="113.7" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="110.7" y="835.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="113.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="110.7" y="819.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="113.7" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="110.7" y="803.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="113.7" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="110.7" y="787.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="113.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="110.7" y="771.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="113.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="110.7" y="755.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="113.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="110.7" y="739.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="113.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="110.7" y="723.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="113.7" y="734.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="110.7" y="707.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="113.7" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="110.7" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="113.7" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="110.7" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="113.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="110.7" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="113.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="110.7" y="643.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="113.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="110.7" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="113.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="110.7" y="611.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="113.7" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="110.7" y="595.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="113.7" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="110.7" y="579.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="113.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="110.7" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="113.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="110.7" y="547.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="113.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="110.7" y="531.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="113.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="110.7" y="515.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="113.7" y="526.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="110.7" y="499.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="113.7" y="510.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="110.7" y="483.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="113.7" y="494.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="110.7" y="467.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="113.7" y="478.0"></text>
</g>
<g>
<title>is_init_with_ea(ciMethod*, ciMethod*, Compile*) (1 samples, 0.03%)</title><rect x="110.7" y="451.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="113.7" y="462.0"></text>
</g>
<g>
<title>ciMethod::is_initializer() const (1 samples, 0.03%)</title><rect x="110.7" y="435.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="113.7" y="446.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="111.1" y="723.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="114.1" y="734.0"></text>
</g>
<g>
<title>ciMethod::method_data() (1 samples, 0.03%)</title><rect x="111.1" y="707.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="114.1" y="718.0"></text>
</g>
<g>
<title>VMError::is_error_reported() (1 samples, 0.03%)</title><rect x="111.5" y="1011.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="114.5" y="1022.0"></text>
</g>
<g>
<title>VMThread::run() (33 samples, 1.03%)</title><rect x="111.8" y="1011.0" width="12.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="114.8" y="1022.0"></text>
</g>
<g>
<title>VMThread::loop() (33 samples, 1.03%)</title><rect x="111.8" y="995.0" width="12.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="114.8" y="1006.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="111.8" y="979.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="114.8" y="990.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (1 samples, 0.03%)</title><rect x="111.8" y="963.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="114.8" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="111.8" y="947.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="114.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="111.8" y="931.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="114.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="111.8" y="915.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="114.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="111.8" y="899.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="114.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="111.8" y="883.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="114.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="111.8" y="867.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="114.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="111.8" y="851.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="114.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="111.8" y="835.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="114.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="111.8" y="819.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="114.8" y="830.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (6 samples, 0.19%)</title><rect x="112.2" y="979.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="115.2" y="990.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (2 samples, 0.06%)</title><rect x="112.2" y="963.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="115.2" y="974.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.06%)</title><rect x="112.2" y="947.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="115.2" y="958.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.06%)</title><rect x="112.2" y="931.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="115.2" y="942.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (1 samples, 0.03%)</title><rect x="112.2" y="915.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="115.2" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::deflate_thread_local_monitors(Thread*, DeflateMonitorCounters*) (1 samples, 0.03%)</title><rect x="112.2" y="899.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="115.2" y="910.0"></text>
</g>
<g>
<title>frame::entry_frame_is_first() const (1 samples, 0.03%)</title><rect x="112.6" y="915.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="115.6" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.12%)</title><rect x="112.9" y="963.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="115.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="112.9" y="947.0" width="1.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="115.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="112.9" y="931.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="115.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="112.9" y="915.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="115.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="112.9" y="899.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="115.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="112.9" y="883.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="115.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="112.9" y="867.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="115.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="112.9" y="851.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="115.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="113.7" y="835.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="116.7" y="846.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (7 samples, 0.22%)</title><rect x="114.4" y="979.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="117.4" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (7 samples, 0.22%)</title><rect x="114.4" y="963.0" width="2.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="117.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.22%)</title><rect x="114.4" y="947.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="117.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.22%)</title><rect x="114.4" y="931.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="117.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.22%)</title><rect x="114.4" y="915.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="117.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.22%)</title><rect x="114.4" y="899.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="117.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.22%)</title><rect x="114.4" y="883.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="117.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.22%)</title><rect x="114.4" y="867.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="117.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.22%)</title><rect x="114.4" y="851.0" width="2.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="117.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="115.1" y="835.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="118.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="115.5" y="819.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="118.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="115.5" y="803.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="118.5" y="814.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.61] (19 samples, 0.59%)</title><rect x="117.0" y="979.0" width="7.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="120.0" y="990.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (19 samples, 0.59%)</title><rect x="117.0" y="963.0" width="7.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="120.0" y="974.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (19 samples, 0.59%)</title><rect x="117.0" y="947.0" width="7.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="120.0" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned int, bool) (19 samples, 0.59%)</title><rect x="117.0" y="931.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="120.0" y="942.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned int, bool, GenCollectedHeap::GenerationType) (19 samples, 0.59%)</title><rect x="117.0" y="915.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="120.0" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::print_heap_after_gc() (2 samples, 0.06%)</title><rect x="117.0" y="899.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="120.0" y="910.0"></text>
</g>
<g>
<title>outputStream::print_cr(char const*, ...) (1 samples, 0.03%)</title><rect x="117.3" y="883.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="120.3" y="894.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="117.3" y="867.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="120.3" y="878.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned int, bool, bool, bool, bool) (17 samples, 0.53%)</title><rect x="117.7" y="899.0" width="6.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="120.7" y="910.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned int, bool) (17 samples, 0.53%)</title><rect x="117.7" y="883.0" width="6.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="120.7" y="894.0"></text>
</g>
<g>
<title>DefNewGeneration::FastEvacuateFollowersClosure::do_void() (3 samples, 0.09%)</title><rect x="117.7" y="867.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="120.7" y="878.0"></text>
</g>
<g>
<title>void ContiguousSpace::oop_since_save_marks_iterate&lt;FastScanClosure&gt;(FastScanClosure*) (2 samples, 0.06%)</title><rect x="118.1" y="851.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="121.1" y="862.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FastScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, oopDesc*&gt;(FastScanClosure*, oopDesc*, Klass*) (2 samples, 0.06%)</title><rect x="118.1" y="835.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="121.1" y="846.0"></text>
</g>
<g>
<title>GCTracer::report_gc_heap_summary(GCWhen::Type, GCHeapSummary const&amp;) const (1 samples, 0.03%)</title><rect x="118.8" y="867.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="121.8" y="878.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (12 samples, 0.37%)</title><rect x="119.2" y="867.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="122.2" y="878.0"></text>
</g>
<g>
<title>CardGeneration::younger_refs_iterate(OopsInGenClosure*, unsigned int) (4 samples, 0.12%)</title><rect x="119.2" y="851.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="122.2" y="862.0"></text>
</g>
<g>
<title>CardTableRS::younger_refs_in_space_iterate(Space*, OopsInGenClosure*, unsigned int) (4 samples, 0.12%)</title><rect x="119.2" y="835.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="122.2" y="846.0"></text>
</g>
<g>
<title>ClearNoncleanCardWrapper::do_MemRegion(MemRegion) (4 samples, 0.12%)</title><rect x="119.2" y="819.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="122.2" y="830.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (3 samples, 0.09%)</title><rect x="119.5" y="803.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="122.5" y="814.0"></text>
</g>
<g>
<title>BlockOffsetArrayContigSpace::block_start_unsafe(void const*) const (2 samples, 0.06%)</title><rect x="119.5" y="787.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="122.5" y="798.0"></text>
</g>
<g>
<title>ContiguousSpace::block_size(HeapWord const*) const (2 samples, 0.06%)</title><rect x="119.5" y="771.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="122.5" y="782.0"></text>
</g>
<g>
<title>FilteringDCTOC::walk_mem_region(MemRegion, HeapWord*, HeapWord*) (1 samples, 0.03%)</title><rect x="120.3" y="787.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="123.3" y="798.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="120.6" y="851.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="123.6" y="862.0"></text>
</g>
<g>
<title>StringTable::oops_do(OopClosure*) (4 samples, 0.12%)</title><rect x="121.0" y="851.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="124.0" y="862.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(oopDesc**) (2 samples, 0.06%)</title><rect x="121.8" y="835.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="124.8" y="846.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.09%)</title><rect x="122.5" y="851.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="125.5" y="862.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.09%)</title><rect x="122.5" y="835.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="125.5" y="846.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(oopDesc**) (2 samples, 0.06%)</title><rect x="122.5" y="819.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="125.5" y="830.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (1 samples, 0.03%)</title><rect x="123.2" y="819.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="126.2" y="830.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (1 samples, 0.03%)</title><rect x="123.2" y="803.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="126.2" y="814.0"></text>
</g>
<g>
<title>ReferenceProcessorPhaseTimes::print_all_references(unsigned int, bool) const (1 samples, 0.03%)</title><rect x="123.6" y="867.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="126.6" y="878.0"></text>
</g>
<g>
<title>outputStream::print_cr(char const*, ...) (1 samples, 0.03%)</title><rect x="123.6" y="851.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="126.6" y="862.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, char*, bool) (1 samples, 0.03%)</title><rect x="123.6" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="126.6" y="846.0"></text>
</g>
<g>
<title>LogStream::write(char const*, unsigned int) (1 samples, 0.03%)</title><rect x="123.6" y="819.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="126.6" y="830.0"></text>
</g>
<g>
<title>LogTargetHandle::print(char const*, ...) (1 samples, 0.03%)</title><rect x="123.6" y="803.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="126.6" y="814.0"></text>
</g>
<g>
<title>LogTagSet::vwrite(LogLevel::type, char const*, char*) (1 samples, 0.03%)</title><rect x="123.6" y="787.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="126.6" y="798.0"></text>
</g>
<g>
<title>NamedThread::is_Named_thread() const (1 samples, 0.03%)</title><rect x="123.6" y="771.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="126.6" y="782.0"></text>
</g>
<g>
<title>WatcherThread::run() (6 samples, 0.19%)</title><rect x="124.0" y="1011.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="127.0" y="1022.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.06%)</title><rect x="124.0" y="995.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="127.0" y="1006.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (2 samples, 0.06%)</title><rect x="124.0" y="979.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="127.0" y="990.0"></text>
</g>
<g>
<title>ContiguousSpaceUsedHelper::take_sample() (1 samples, 0.03%)</title><rect x="124.0" y="963.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="127.0" y="974.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.03%)</title><rect x="124.3" y="963.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="127.3" y="974.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (4 samples, 0.12%)</title><rect x="124.7" y="995.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="127.7" y="1006.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.12%)</title><rect x="124.7" y="979.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="127.7" y="990.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (4 samples, 0.12%)</title><rect x="124.7" y="963.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="127.7" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.06%)</title><rect x="124.7" y="947.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="127.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="124.7" y="931.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="127.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="124.7" y="915.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="127.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="124.7" y="899.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="127.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="124.7" y="883.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="127.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="124.7" y="867.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="127.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="125.1" y="851.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="128.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="125.1" y="835.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="128.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="125.1" y="819.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="128.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="125.1" y="803.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="128.1" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="125.4" y="947.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="128.4" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="125.8" y="947.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="128.8" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,060 samples, 64.17%)</title><rect x="126.2" y="1075.0" width="757.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.2" y="1086.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,060 samples, 64.17%)</title><rect x="126.2" y="1059.0" width="757.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.2" y="1070.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,060 samples, 64.17%)</title><rect x="126.2" y="1043.0" width="757.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.2" y="1054.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (455 samples, 14.17%)</title><rect x="128.4" y="1027.0" width="167.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.4" y="1038.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (449 samples, 13.99%)</title><rect x="130.6" y="1011.0" width="165.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.6" y="1022.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (390 samples, 12.15%)</title><rect x="131.3" y="995.0" width="143.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.3" y="1006.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (27 samples, 0.84%)</title><rect x="132.0" y="979.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27 samples, 0.84%)</title><rect x="132.0" y="963.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.09%)</title><rect x="140.1" y="947.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.09%)</title><rect x="140.1" y="931.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.06%)</title><rect x="141.2" y="947.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (361 samples, 11.25%)</title><rect x="142.0" y="979.0" width="132.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.0" y="990.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (360 samples, 11.21%)</title><rect x="142.3" y="963.0" width="132.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.3" y="974.0">jdk/internal/mis..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (7 samples, 0.22%)</title><rect x="142.7" y="947.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="145.7" y="958.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (6 samples, 0.19%)</title><rect x="145.3" y="947.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="148.3" y="958.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (5 samples, 0.16%)</title><rect x="147.5" y="947.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="150.5" y="958.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="149.3" y="947.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="152.3" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (6 samples, 0.19%)</title><rect x="149.7" y="947.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="152.7" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (118 samples, 3.68%)</title><rect x="151.9" y="947.0" width="43.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="154.9" y="958.0">Unsa..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.06%)</title><rect x="154.1" y="931.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="157.1" y="942.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.09%)</title><rect x="154.8" y="931.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="157.8" y="942.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (6 samples, 0.19%)</title><rect x="155.9" y="931.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="158.9" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.06%)</title><rect x="157.4" y="915.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="160.4" y="926.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (6 samples, 0.19%)</title><rect x="158.1" y="931.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="161.1" y="942.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.06%)</title><rect x="160.3" y="931.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="163.3" y="942.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (25 samples, 0.78%)</title><rect x="161.1" y="931.0" width="9.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="164.1" y="942.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.06%)</title><rect x="166.2" y="915.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="169.2" y="926.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="167.0" y="915.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="170.0" y="926.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (8 samples, 0.25%)</title><rect x="167.3" y="915.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="170.3" y="926.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (5 samples, 0.16%)</title><rect x="170.3" y="931.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="173.3" y="942.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="172.1" y="931.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="175.1" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (2 samples, 0.06%)</title><rect x="172.8" y="931.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="175.8" y="942.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (26 samples, 0.81%)</title><rect x="173.6" y="931.0" width="9.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="176.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="182.8" y="915.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="185.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="182.8" y="899.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="185.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="182.8" y="883.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="185.8" y="894.0"></text>
</g>
<g>
<title>__kernel_vsyscall (9 samples, 0.28%)</title><rect x="183.1" y="931.0" width="3.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="186.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.22%)</title><rect x="183.9" y="915.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="186.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.22%)</title><rect x="183.9" y="899.0" width="2.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="186.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.22%)</title><rect x="183.9" y="883.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="186.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.19%)</title><rect x="184.2" y="867.0" width="2.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="187.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="184.6" y="851.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="187.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="185.7" y="835.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="188.7" y="846.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="186.4" y="931.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="189.4" y="942.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.06%)</title><rect x="186.8" y="931.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="189.8" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (7 samples, 0.22%)</title><rect x="187.6" y="931.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="190.6" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.06%)</title><rect x="190.1" y="931.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="193.1" y="942.0"></text>
</g>
<g>
<title>pthread_cond_wait (10 samples, 0.31%)</title><rect x="190.9" y="931.0" width="3.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="193.9" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.06%)</title><rect x="194.5" y="931.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="197.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (216 samples, 6.73%)</title><rect x="195.3" y="947.0" width="79.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="198.3" y="958.0">[unknown]</text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="195.3" y="931.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="198.3" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.16%)</title><rect x="195.3" y="915.0" width="1.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="198.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="195.3" y="899.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="198.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="195.3" y="883.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="198.3" y="894.0"></text>
</g>
<g>
<title>__kernel_vsyscall (197 samples, 6.14%)</title><rect x="197.1" y="931.0" width="72.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="200.1" y="942.0">__kernel..</text>
</g>
<g>
<title>[unknown] (195 samples, 6.07%)</title><rect x="197.8" y="915.0" width="71.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="200.8" y="926.0">[unknown]</text>
</g>
<g>
<title>[unknown] (195 samples, 6.07%)</title><rect x="197.8" y="899.0" width="71.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="200.8" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (195 samples, 6.07%)</title><rect x="197.8" y="883.0" width="71.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="200.8" y="894.0">[unknown]</text>
</g>
<g>
<title>[unknown] (193 samples, 6.01%)</title><rect x="198.6" y="867.0" width="70.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="201.6" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (191 samples, 5.95%)</title><rect x="199.3" y="851.0" width="70.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="202.3" y="862.0">[unknown]</text>
</g>
<g>
<title>[unknown] (190 samples, 5.92%)</title><rect x="199.7" y="835.0" width="69.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="202.7" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (172 samples, 5.36%)</title><rect x="206.3" y="819.0" width="63.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="209.3" y="830.0">[unknown]</text>
</g>
<g>
<title>[unknown] (164 samples, 5.11%)</title><rect x="209.2" y="803.0" width="60.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="212.2" y="814.0">[unkno..</text>
</g>
<g>
<title>[unknown] (158 samples, 4.92%)</title><rect x="211.4" y="787.0" width="58.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="214.4" y="798.0">[unkno..</text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.06%)</title><rect x="269.5" y="931.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="272.5" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.22%)</title><rect x="270.3" y="931.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="273.3" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="272.8" y="931.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="275.8" y="942.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="273.2" y="931.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="276.2" y="942.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.06%)</title><rect x="273.6" y="931.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="276.6" y="942.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.di (1 samples, 0.03%)</title><rect x="274.3" y="931.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="277.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (57 samples, 1.78%)</title><rect x="274.7" y="995.0" width="20.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (57 samples, 1.78%)</title><rect x="274.7" y="979.0" width="20.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (57 samples, 1.78%)</title><rect x="274.7" y="963.0" width="20.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (57 samples, 1.78%)</title><rect x="274.7" y="947.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (52 samples, 1.62%)</title><rect x="276.5" y="931.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.5" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (1 samples, 0.03%)</title><rect x="276.5" y="915.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="279.5" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="276.9" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="279.9" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.22%)</title><rect x="277.2" y="915.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="280.2" y="926.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.03%)</title><rect x="277.2" y="899.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="280.2" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="277.6" y="899.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="280.6" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.09%)</title><rect x="278.0" y="899.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="281.0" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="279.1" y="899.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="282.1" y="910.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="279.5" y="899.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="282.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.34%)</title><rect x="279.8" y="915.0" width="15.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="282.8" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (43 samples, 1.34%)</title><rect x="279.8" y="899.0" width="15.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="282.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.34%)</title><rect x="279.8" y="883.0" width="15.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="282.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.34%)</title><rect x="279.8" y="867.0" width="15.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="282.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.34%)</title><rect x="279.8" y="851.0" width="15.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="282.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.34%)</title><rect x="279.8" y="835.0" width="15.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="282.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.34%)</title><rect x="279.8" y="819.0" width="15.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="282.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.31%)</title><rect x="280.2" y="803.0" width="15.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="283.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.31%)</title><rect x="280.2" y="787.0" width="15.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="283.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.31%)</title><rect x="280.2" y="771.0" width="15.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="283.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$67/3551101.run (1,599 samples, 49.81%)</title><rect x="295.6" y="1027.0" width="587.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.6" y="1038.0">ru/mail/polis/service/dogm/ServiceImpl$$Lambda$67/3551101.run</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$5 (1,599 samples, 49.81%)</title><rect x="295.6" y="1011.0" width="587.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.6" y="1022.0">ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$5</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (719 samples, 22.40%)</title><rect x="296.4" y="995.0" width="264.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="299.4" y="1006.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="298.2" y="979.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="301.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="298.2" y="963.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="301.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="298.2" y="947.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="301.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (59 samples, 1.84%)</title><rect x="298.6" y="979.0" width="21.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.6" y="990.0">j..</text>
</g>
<g>
<title>java/lang/String.regionMatches (59 samples, 1.84%)</title><rect x="298.6" y="963.0" width="21.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.6" y="974.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (59 samples, 1.84%)</title><rect x="298.6" y="947.0" width="21.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="301.6" y="958.0">j..</text>
</g>
<g>
<title>__vdso_gettimeofday (13 samples, 0.40%)</title><rect x="300.0" y="931.0" width="4.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="303.0" y="942.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (42 samples, 1.31%)</title><rect x="304.8" y="931.0" width="15.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="307.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="305.2" y="915.0" width="1.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="308.2" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.12%)</title><rect x="305.2" y="899.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="308.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="305.2" y="883.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="308.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="305.2" y="867.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="308.2" y="878.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="306.7" y="915.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="309.7" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (26 samples, 0.81%)</title><rect x="307.4" y="915.0" width="9.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="310.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.75%)</title><rect x="308.1" y="899.0" width="8.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="311.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.75%)</title><rect x="308.1" y="883.0" width="8.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="311.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.72%)</title><rect x="308.5" y="867.0" width="8.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="311.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.40%)</title><rect x="312.2" y="851.0" width="4.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="315.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.34%)</title><rect x="312.9" y="835.0" width="4.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="315.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.19%)</title><rect x="314.7" y="819.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="317.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="315.1" y="803.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="318.1" y="814.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (9 samples, 0.28%)</title><rect x="316.9" y="915.0" width="3.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="319.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (650 samples, 20.25%)</title><rect x="320.3" y="979.0" width="238.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.3" y="990.0">one/nio/http/HttpSession.writeRe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.47%)</title><rect x="321.0" y="963.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.0" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.25%)</title><rect x="323.6" y="947.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.6" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.25%)</title><rect x="323.6" y="931.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.25%)</title><rect x="323.6" y="915.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (633 samples, 19.72%)</title><rect x="326.5" y="963.0" width="232.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="329.5" y="974.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (633 samples, 19.72%)</title><rect x="326.5" y="947.0" width="232.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.5" y="958.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (629 samples, 19.60%)</title><rect x="328.0" y="931.0" width="231.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.0" y="942.0">one/nio/net/Session$ArrayQueueI..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (629 samples, 19.60%)</title><rect x="328.0" y="915.0" width="231.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.0" y="926.0">one/nio/net/JavaSocket.write</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.19%)</title><rect x="328.0" y="899.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.0" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.19%)</title><rect x="328.0" y="883.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.0" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.19%)</title><rect x="328.0" y="867.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.0" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.19%)</title><rect x="328.0" y="851.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.0" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.19%)</title><rect x="328.0" y="835.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="329.8" y="819.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="332.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="329.8" y="803.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="332.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="329.8" y="787.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="332.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (623 samples, 19.41%)</title><rect x="330.2" y="899.0" width="229.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.2" y="910.0">sun/nio/ch/SocketChannelImpl.w..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="330.2" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="330.2" y="867.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.12%)</title><rect x="330.5" y="883.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.12%)</title><rect x="330.5" y="867.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.12%)</title><rect x="330.5" y="851.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.12%)</title><rect x="330.5" y="835.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (615 samples, 19.16%)</title><rect x="332.0" y="883.0" width="226.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.0" y="894.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (615 samples, 19.16%)</title><rect x="332.0" y="867.0" width="226.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="335.0" y="878.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (615 samples, 19.16%)</title><rect x="332.0" y="851.0" width="226.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.0" y="862.0">sun/nio/ch/IOUtil.writeFromNat..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (9 samples, 0.28%)</title><rect x="332.0" y="835.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (606 samples, 18.88%)</title><rect x="335.3" y="835.0" width="222.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.3" y="846.0">sun/nio/ch/SocketDispatcher.w..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="337.2" y="819.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="340.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="337.2" y="803.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="340.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="337.2" y="787.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="340.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (599 samples, 18.66%)</title><rect x="337.9" y="819.0" width="220.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.9" y="830.0">sun/nio/ch/FileDispatcherImpl..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.03%)</title><rect x="339.4" y="803.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="342.4" y="814.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (3 samples, 0.09%)</title><rect x="339.7" y="803.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="342.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="340.5" y="787.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="343.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="340.5" y="771.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="343.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="340.5" y="755.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="343.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="340.8" y="803.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="343.8" y="814.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="340.8" y="787.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="343.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="340.8" y="771.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="343.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="340.8" y="755.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="343.8" y="766.0"></text>
</g>
<g>
<title>__kernel_vsyscall (584 samples, 18.19%)</title><rect x="341.2" y="803.0" width="214.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="344.2" y="814.0">__kernel_vsyscall</text>
</g>
<g>
<title>[unknown] (581 samples, 18.10%)</title><rect x="342.3" y="787.0" width="213.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="345.3" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (581 samples, 18.10%)</title><rect x="342.3" y="771.0" width="213.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="345.3" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (581 samples, 18.10%)</title><rect x="342.3" y="755.0" width="213.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="345.3" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (578 samples, 18.01%)</title><rect x="343.4" y="739.0" width="212.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="346.4" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (561 samples, 17.48%)</title><rect x="349.7" y="723.0" width="206.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="352.7" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (547 samples, 17.04%)</title><rect x="354.8" y="707.0" width="201.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="357.8" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (507 samples, 15.79%)</title><rect x="369.5" y="691.0" width="186.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="372.5" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (505 samples, 15.73%)</title><rect x="370.2" y="675.0" width="185.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="373.2" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (501 samples, 15.61%)</title><rect x="371.7" y="659.0" width="184.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="374.7" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (494 samples, 15.39%)</title><rect x="374.3" y="643.0" width="181.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="377.3" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (487 samples, 15.17%)</title><rect x="376.9" y="627.0" width="179.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="379.9" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (476 samples, 14.83%)</title><rect x="380.9" y="611.0" width="175.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="383.9" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (458 samples, 14.27%)</title><rect x="387.5" y="595.0" width="168.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="390.5" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (437 samples, 13.61%)</title><rect x="395.2" y="579.0" width="160.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="398.2" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (426 samples, 13.27%)</title><rect x="399.3" y="563.0" width="156.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="402.3" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (398 samples, 12.40%)</title><rect x="409.6" y="547.0" width="146.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="412.6" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (390 samples, 12.15%)</title><rect x="412.5" y="531.0" width="143.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="415.5" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (386 samples, 12.02%)</title><rect x="414.0" y="515.0" width="141.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="417.0" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (385 samples, 11.99%)</title><rect x="414.4" y="499.0" width="141.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="417.4" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (382 samples, 11.90%)</title><rect x="415.5" y="483.0" width="140.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="418.5" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (372 samples, 11.59%)</title><rect x="419.1" y="467.0" width="136.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="422.1" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (371 samples, 11.56%)</title><rect x="419.5" y="451.0" width="136.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="422.5" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (368 samples, 11.46%)</title><rect x="420.6" y="435.0" width="135.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="423.6" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (361 samples, 11.25%)</title><rect x="423.2" y="419.0" width="132.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="426.2" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (357 samples, 11.12%)</title><rect x="424.7" y="403.0" width="131.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="427.7" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (350 samples, 10.90%)</title><rect x="427.2" y="387.0" width="128.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="430.2" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (343 samples, 10.69%)</title><rect x="429.8" y="371.0" width="126.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="432.8" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (339 samples, 10.56%)</title><rect x="431.3" y="355.0" width="124.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="434.3" y="366.0">[unknown]</text>
</g>
<g>
<title>[unknown] (339 samples, 10.56%)</title><rect x="431.3" y="339.0" width="124.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="434.3" y="350.0">[unknown]</text>
</g>
<g>
<title>[unknown] (338 samples, 10.53%)</title><rect x="431.6" y="323.0" width="124.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="434.6" y="334.0">[unknown]</text>
</g>
<g>
<title>[unknown] (334 samples, 10.40%)</title><rect x="433.1" y="307.0" width="122.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="436.1" y="318.0">[unknown]</text>
</g>
<g>
<title>[unknown] (334 samples, 10.40%)</title><rect x="433.1" y="291.0" width="122.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="436.1" y="302.0">[unknown]</text>
</g>
<g>
<title>[unknown] (334 samples, 10.40%)</title><rect x="433.1" y="275.0" width="122.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="436.1" y="286.0">[unknown]</text>
</g>
<g>
<title>[unknown] (331 samples, 10.31%)</title><rect x="434.2" y="259.0" width="121.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="437.2" y="270.0">[unknown]</text>
</g>
<g>
<title>[unknown] (325 samples, 10.12%)</title><rect x="436.4" y="243.0" width="119.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="439.4" y="254.0">[unknown]</text>
</g>
<g>
<title>[unknown] (318 samples, 9.91%)</title><rect x="439.0" y="227.0" width="116.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="442.0" y="238.0">[unknown]</text>
</g>
<g>
<title>[unknown] (310 samples, 9.66%)</title><rect x="441.9" y="211.0" width="114.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="444.9" y="222.0">[unknown]</text>
</g>
<g>
<title>[unknown] (297 samples, 9.25%)</title><rect x="446.7" y="195.0" width="109.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="449.7" y="206.0">[unknown]</text>
</g>
<g>
<title>[unknown] (285 samples, 8.88%)</title><rect x="451.1" y="179.0" width="104.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="454.1" y="190.0">[unknown]</text>
</g>
<g>
<title>[unknown] (282 samples, 8.79%)</title><rect x="452.2" y="163.0" width="103.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="455.2" y="174.0">[unknown]</text>
</g>
<g>
<title>[unknown] (277 samples, 8.63%)</title><rect x="454.1" y="147.0" width="101.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="457.1" y="158.0">[unknown]</text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="554.8" y="131.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="557.8" y="142.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="555.2" y="115.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="558.2" y="126.0"></text>
</g>
<g>
<title>__write (3 samples, 0.09%)</title><rect x="555.9" y="803.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="558.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="556.6" y="787.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="559.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="556.6" y="771.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="559.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="556.6" y="755.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="559.6" y="766.0"></text>
</g>
<g>
<title>convertReturnVal (2 samples, 0.06%)</title><rect x="557.0" y="803.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="560.0" y="814.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="557.7" y="803.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="560.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (3 samples, 0.09%)</title><rect x="558.1" y="883.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.12%)</title><rect x="559.2" y="979.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.12%)</title><rect x="559.2" y="963.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.12%)</title><rect x="559.2" y="947.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="560.3" y="931.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="563.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="560.3" y="915.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="563.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="560.3" y="899.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="563.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$66/11409370.act (631 samples, 19.66%)</title><rect x="560.7" y="995.0" width="231.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="563.7" y="1006.0">ru/mail/polis/service/dogm/Serv..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$0 (631 samples, 19.66%)</title><rect x="560.7" y="979.0" width="231.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.7" y="990.0">ru/mail/polis/service/dogm/Serv..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.proxy (631 samples, 19.66%)</title><rect x="560.7" y="963.0" width="231.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.7" y="974.0">ru/mail/polis/service/dogm/Serv..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Bridges.sendRequestTo (631 samples, 19.66%)</title><rect x="560.7" y="947.0" width="231.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.7" y="958.0">ru/mail/polis/service/dogm/Brid..</text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.09%)</title><rect x="560.7" y="931.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.09%)</title><rect x="560.7" y="915.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (628 samples, 19.56%)</title><rect x="561.8" y="931.0" width="230.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.8" y="942.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (628 samples, 19.56%)</title><rect x="561.8" y="915.0" width="230.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.8" y="926.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.16%)</title><rect x="562.5" y="899.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.16%)</title><rect x="562.5" y="883.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.16%)</title><rect x="562.5" y="867.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (125 samples, 3.89%)</title><rect x="564.3" y="899.0" width="46.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.3" y="910.0">one/..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="568.8" y="883.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="571.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="568.8" y="867.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="571.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="568.8" y="851.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="571.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (112 samples, 3.49%)</title><rect x="569.1" y="883.0" width="41.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.1" y="894.0">one..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (112 samples, 3.49%)</title><rect x="569.1" y="867.0" width="41.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.1" y="878.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (97 samples, 3.02%)</title><rect x="570.6" y="851.0" width="35.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.6" y="862.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (97 samples, 3.02%)</title><rect x="570.6" y="835.0" width="35.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.6" y="846.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.09%)</title><rect x="570.6" y="819.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.6" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.09%)</title><rect x="570.6" y="803.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.09%)</title><rect x="570.6" y="787.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.09%)</title><rect x="570.6" y="771.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.09%)</title><rect x="570.6" y="755.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (3 samples, 0.09%)</title><rect x="570.6" y="739.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (3 samples, 0.09%)</title><rect x="570.6" y="723.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="571.3" y="707.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="574.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="571.3" y="691.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="574.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="571.3" y="675.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="574.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="571.3" y="659.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="574.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="571.3" y="643.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="574.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="571.3" y="627.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="574.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="571.3" y="611.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="574.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="571.3" y="595.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="574.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="571.3" y="579.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="574.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (94 samples, 2.93%)</title><rect x="571.7" y="819.0" width="34.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.7" y="830.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (94 samples, 2.93%)</title><rect x="571.7" y="803.0" width="34.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.7" y="814.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (87 samples, 2.71%)</title><rect x="574.3" y="787.0" width="31.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.3" y="798.0">su..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.03%)</title><rect x="575.0" y="771.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="578.0" y="782.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.03%)</title><rect x="575.4" y="771.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="578.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="575.7" y="771.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="578.7" y="782.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="575.7" y="755.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="578.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="575.7" y="739.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="578.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="575.7" y="723.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="578.7" y="734.0"></text>
</g>
<g>
<title>__kernel_vsyscall (79 samples, 2.46%)</title><rect x="576.1" y="771.0" width="29.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="579.1" y="782.0">__..</text>
</g>
<g>
<title>[unknown] (79 samples, 2.46%)</title><rect x="576.1" y="755.0" width="29.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="579.1" y="766.0">[u..</text>
</g>
<g>
<title>[unknown] (79 samples, 2.46%)</title><rect x="576.1" y="739.0" width="29.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="579.1" y="750.0">[u..</text>
</g>
<g>
<title>[unknown] (79 samples, 2.46%)</title><rect x="576.1" y="723.0" width="29.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="579.1" y="734.0">[u..</text>
</g>
<g>
<title>[unknown] (76 samples, 2.37%)</title><rect x="577.2" y="707.0" width="27.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="580.2" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (72 samples, 2.24%)</title><rect x="578.7" y="691.0" width="26.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="581.7" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (70 samples, 2.18%)</title><rect x="579.4" y="675.0" width="25.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="582.4" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (68 samples, 2.12%)</title><rect x="580.1" y="659.0" width="25.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="583.1" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (65 samples, 2.02%)</title><rect x="581.3" y="643.0" width="23.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="584.3" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (63 samples, 1.96%)</title><rect x="582.0" y="627.0" width="23.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="585.0" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (60 samples, 1.87%)</title><rect x="583.1" y="611.0" width="22.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="586.1" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (55 samples, 1.71%)</title><rect x="584.9" y="595.0" width="20.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="587.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.65%)</title><rect x="585.7" y="579.0" width="19.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="588.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 1.62%)</title><rect x="586.0" y="563.0" width="19.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="589.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.46%)</title><rect x="587.9" y="547.0" width="17.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="590.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 1.43%)</title><rect x="588.2" y="531.0" width="16.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="591.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 1.37%)</title><rect x="589.0" y="515.0" width="16.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="592.0" y="526.0"></text>
</g>
<g>
<title>read (3 samples, 0.09%)</title><rect x="605.1" y="771.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="608.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (6 samples, 0.19%)</title><rect x="606.2" y="851.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="608.1" y="835.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.1" y="846.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.03%)</title><rect x="608.1" y="819.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="611.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endRead (5 samples, 0.16%)</title><rect x="608.5" y="851.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.5" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.09%)</title><rect x="609.2" y="835.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.2" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="609.9" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.9" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="609.9" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="609.9" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (32 samples, 1.00%)</title><rect x="610.3" y="899.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (11 samples, 0.34%)</title><rect x="615.1" y="883.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.25%)</title><rect x="619.1" y="883.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.25%)</title><rect x="619.1" y="867.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.25%)</title><rect x="619.1" y="851.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (4 samples, 0.12%)</title><rect x="622.1" y="899.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.1" y="910.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.06%)</title><rect x="622.8" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.06%)</title><rect x="622.8" y="867.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.06%)</title><rect x="622.8" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.03%)</title><rect x="623.5" y="899.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="626.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="623.5" y="883.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="623.5" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (457 samples, 14.24%)</title><rect x="623.9" y="899.0" width="168.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.9" y="910.0">one/nio/net/JavaSocke..</text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (331 samples, 10.31%)</title><rect x="623.9" y="883.0" width="121.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.9" y="894.0">java/nio/channe..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="624.6" y="867.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="627.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="624.6" y="851.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="627.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="624.6" y="835.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="627.6" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (328 samples, 10.22%)</title><rect x="625.0" y="867.0" width="120.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.0" y="878.0">java/nio/channe..</text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (328 samples, 10.22%)</title><rect x="625.0" y="851.0" width="120.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.0" y="862.0">java/nio/channe..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="625.7" y="835.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="628.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="625.7" y="819.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="628.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="625.7" y="803.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="628.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (324 samples, 10.09%)</title><rect x="626.5" y="835.0" width="119.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.5" y="846.0">sun/nio/ch/Sock..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (309 samples, 9.63%)</title><rect x="626.5" y="819.0" width="113.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.5" y="830.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (309 samples, 9.63%)</title><rect x="626.5" y="803.0" width="113.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.5" y="814.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (309 samples, 9.63%)</title><rect x="626.5" y="787.0" width="113.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.5" y="798.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (4 samples, 0.12%)</title><rect x="626.5" y="771.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (305 samples, 9.50%)</title><rect x="627.9" y="771.0" width="112.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.9" y="782.0">sun/nio/ch/Soc..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="628.7" y="755.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="631.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="628.7" y="739.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="631.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="628.7" y="723.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="631.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (300 samples, 9.35%)</title><rect x="629.8" y="755.0" width="110.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.8" y="766.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.06%)</title><rect x="630.1" y="739.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="633.1" y="750.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (2 samples, 0.06%)</title><rect x="630.9" y="739.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="633.9" y="750.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="631.2" y="723.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="634.2" y="734.0"></text>
</g>
<g>
<title>__kernel_vsyscall (293 samples, 9.13%)</title><rect x="631.6" y="739.0" width="107.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="634.6" y="750.0">__kernel_vsys..</text>
</g>
<g>
<title>[unknown] (291 samples, 9.07%)</title><rect x="632.3" y="723.0" width="107.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="635.3" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (291 samples, 9.07%)</title><rect x="632.3" y="707.0" width="107.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="635.3" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (289 samples, 9.00%)</title><rect x="633.1" y="691.0" width="106.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="636.1" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (286 samples, 8.91%)</title><rect x="634.2" y="675.0" width="105.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="637.2" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (273 samples, 8.50%)</title><rect x="639.0" y="659.0" width="100.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="642.0" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (268 samples, 8.35%)</title><rect x="640.8" y="643.0" width="98.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="643.8" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (238 samples, 7.41%)</title><rect x="651.8" y="627.0" width="87.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="654.8" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (237 samples, 7.38%)</title><rect x="652.2" y="611.0" width="87.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="655.2" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (235 samples, 7.32%)</title><rect x="652.9" y="595.0" width="86.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="655.9" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (234 samples, 7.29%)</title><rect x="653.3" y="579.0" width="86.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="656.3" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (234 samples, 7.29%)</title><rect x="653.3" y="563.0" width="86.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="656.3" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (227 samples, 7.07%)</title><rect x="655.9" y="547.0" width="83.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="658.9" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (221 samples, 6.88%)</title><rect x="658.1" y="531.0" width="81.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="661.1" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (218 samples, 6.79%)</title><rect x="659.2" y="515.0" width="80.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="662.2" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (211 samples, 6.57%)</title><rect x="661.8" y="499.0" width="77.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="664.8" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (194 samples, 6.04%)</title><rect x="668.0" y="483.0" width="71.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="671.0" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (187 samples, 5.83%)</title><rect x="670.6" y="467.0" width="68.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="673.6" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (185 samples, 5.76%)</title><rect x="671.3" y="451.0" width="68.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="674.3" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (184 samples, 5.73%)</title><rect x="671.7" y="435.0" width="67.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="674.7" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (182 samples, 5.67%)</title><rect x="672.4" y="419.0" width="66.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="675.4" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (176 samples, 5.48%)</title><rect x="674.6" y="403.0" width="64.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="677.6" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (176 samples, 5.48%)</title><rect x="674.6" y="387.0" width="64.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="677.6" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (173 samples, 5.39%)</title><rect x="675.7" y="371.0" width="63.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="678.7" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (169 samples, 5.26%)</title><rect x="677.2" y="355.0" width="62.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="680.2" y="366.0">[unkno..</text>
</g>
<g>
<title>[unknown] (167 samples, 5.20%)</title><rect x="677.9" y="339.0" width="61.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="680.9" y="350.0">[unkno..</text>
</g>
<g>
<title>[unknown] (166 samples, 5.17%)</title><rect x="678.3" y="323.0" width="61.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="681.3" y="334.0">[unkno..</text>
</g>
<g>
<title>[unknown] (163 samples, 5.08%)</title><rect x="679.4" y="307.0" width="59.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="682.4" y="318.0">[unkno..</text>
</g>
<g>
<title>[unknown] (160 samples, 4.98%)</title><rect x="680.5" y="291.0" width="58.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="683.5" y="302.0">[unkno..</text>
</g>
<g>
<title>[unknown] (160 samples, 4.98%)</title><rect x="680.5" y="275.0" width="58.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="683.5" y="286.0">[unkno..</text>
</g>
<g>
<title>[unknown] (156 samples, 4.86%)</title><rect x="682.0" y="259.0" width="57.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="685.0" y="270.0">[unkno..</text>
</g>
<g>
<title>[unknown] (155 samples, 4.83%)</title><rect x="682.3" y="243.0" width="57.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="685.3" y="254.0">[unkno..</text>
</g>
<g>
<title>[unknown] (152 samples, 4.74%)</title><rect x="683.4" y="227.0" width="55.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="686.4" y="238.0">[unkn..</text>
</g>
<g>
<title>[unknown] (152 samples, 4.74%)</title><rect x="683.4" y="211.0" width="55.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="686.4" y="222.0">[unkn..</text>
</g>
<g>
<title>[unknown] (152 samples, 4.74%)</title><rect x="683.4" y="195.0" width="55.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="686.4" y="206.0">[unkn..</text>
</g>
<g>
<title>[unknown] (145 samples, 4.52%)</title><rect x="686.0" y="179.0" width="53.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="689.0" y="190.0">[unkn..</text>
</g>
<g>
<title>[unknown] (140 samples, 4.36%)</title><rect x="687.9" y="163.0" width="51.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="690.9" y="174.0">[unkn..</text>
</g>
<g>
<title>[unknown] (131 samples, 4.08%)</title><rect x="691.2" y="147.0" width="48.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="694.2" y="158.0">[unk..</text>
</g>
<g>
<title>[unknown] (123 samples, 3.83%)</title><rect x="694.1" y="131.0" width="45.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="697.1" y="142.0">[unk..</text>
</g>
<g>
<title>[unknown] (116 samples, 3.61%)</title><rect x="696.7" y="115.0" width="42.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="699.7" y="126.0">[unk..</text>
</g>
<g>
<title>[unknown] (108 samples, 3.36%)</title><rect x="699.6" y="99.0" width="39.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="702.6" y="110.0">[un..</text>
</g>
<g>
<title>[unknown] (101 samples, 3.15%)</title><rect x="702.2" y="83.0" width="37.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="705.2" y="94.0">[un..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="737.9" y="67.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="740.9" y="78.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="737.9" y="51.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="740.9" y="62.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="739.0" y="35.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="742.0" y="46.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="739.3" y="739.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="742.3" y="750.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="739.7" y="739.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="742.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="739.7" y="723.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="742.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="739.7" y="707.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="742.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="739.7" y="691.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="742.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (8 samples, 0.25%)</title><rect x="740.1" y="819.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.1" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="740.8" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.16%)</title><rect x="741.2" y="803.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.2" y="814.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.03%)</title><rect x="741.5" y="787.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="744.5" y="798.0"></text>
</g>
<g>
<title>pthread_self (3 samples, 0.09%)</title><rect x="741.9" y="787.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="744.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="742.3" y="771.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="745.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="742.3" y="755.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="745.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="742.3" y="739.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="745.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endWrite (7 samples, 0.22%)</title><rect x="743.0" y="819.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.0" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.16%)</title><rect x="743.7" y="803.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.7" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.06%)</title><rect x="744.8" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.8" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="745.2" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="745.2" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (126 samples, 3.93%)</title><rect x="745.6" y="883.0" width="46.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="748.6" y="894.0">sun/..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (118 samples, 3.68%)</title><rect x="748.5" y="867.0" width="43.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.5" y="878.0">java..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="748.9" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.9" y="862.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (10 samples, 0.31%)</title><rect x="749.2" y="851.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="752.2" y="862.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedExceptionAction_2 (101 samples, 3.15%)</title><rect x="752.9" y="851.0" width="37.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="755.9" y="862.0">Jav..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="754.4" y="835.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="757.4" y="846.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="754.8" y="835.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="757.8" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.09%)</title><rect x="755.1" y="835.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="758.1" y="846.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="756.2" y="835.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="759.2" y="846.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (86 samples, 2.68%)</title><rect x="756.6" y="835.0" width="31.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="759.6" y="846.0">JV..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;5292116ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)0, 5292116ull&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.03%)</title><rect x="757.0" y="819.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="760.0" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.09%)</title><rect x="757.3" y="819.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="760.3" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.224] (3 samples, 0.09%)</title><rect x="757.3" y="803.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="760.3" y="814.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.06%)</title><rect x="758.4" y="819.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="761.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="758.4" y="803.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="761.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="758.4" y="787.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="761.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="758.4" y="771.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="761.4" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (26 samples, 0.81%)</title><rect x="759.2" y="819.0" width="9.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="762.2" y="830.0"></text>
</g>
<g>
<title>.L409 (12 samples, 0.37%)</title><rect x="759.2" y="803.0" width="4.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="762.2" y="814.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.06%)</title><rect x="760.3" y="787.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="763.3" y="798.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.16%)</title><rect x="761.0" y="787.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="764.0" y="798.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.06%)</title><rect x="761.4" y="771.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="764.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="762.1" y="771.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="765.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="762.1" y="755.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="765.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="762.1" y="739.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="765.1" y="750.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="762.5" y="771.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="765.5" y="782.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.03%)</title><rect x="762.8" y="787.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="765.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="763.2" y="787.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="766.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="763.2" y="771.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="766.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="763.2" y="755.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="766.2" y="766.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="763.6" y="803.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="766.6" y="814.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="764.0" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="767.0" y="814.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.03%)</title><rect x="764.3" y="803.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="767.3" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.25%)</title><rect x="764.7" y="803.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="767.7" y="814.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.06%)</title><rect x="765.8" y="787.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="768.8" y="798.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.06%)</title><rect x="766.5" y="787.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="769.5" y="798.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.03%)</title><rect x="767.3" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="770.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="767.6" y="803.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="770.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="767.6" y="787.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="770.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="767.6" y="771.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="770.6" y="782.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.06%)</title><rect x="768.0" y="803.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="771.0" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.06%)</title><rect x="768.7" y="819.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="771.7" y="830.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="769.5" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="772.5" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="769.8" y="819.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="772.8" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.03%)</title><rect x="770.2" y="819.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="773.2" y="830.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="770.6" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="773.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="770.9" y="819.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="773.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="770.9" y="803.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="773.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="770.9" y="787.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="773.9" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="771.7" y="819.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="774.7" y="830.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="772.0" y="819.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="775.0" y="830.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.03%)</title><rect x="772.4" y="819.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="775.4" y="830.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.03%)</title><rect x="772.8" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="775.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="772.8" y="803.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="775.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="772.8" y="787.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="775.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="772.8" y="771.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="775.8" y="782.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.03%)</title><rect x="773.1" y="819.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="776.1" y="830.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (21 samples, 0.65%)</title><rect x="773.5" y="819.0" width="7.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="776.5" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="773.5" y="803.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="776.5" y="814.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.06%)</title><rect x="773.9" y="803.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="776.9" y="814.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (16 samples, 0.50%)</title><rect x="774.6" y="803.0" width="5.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="777.6" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.22%)</title><rect x="775.7" y="787.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="778.7" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.06%)</title><rect x="777.6" y="771.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="780.6" y="782.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.06%)</title><rect x="778.3" y="787.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="781.3" y="798.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (4 samples, 0.12%)</title><rect x="779.0" y="787.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="782.0" y="798.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="780.5" y="803.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="783.5" y="814.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.03%)</title><rect x="780.9" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="783.9" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (19 samples, 0.59%)</title><rect x="781.2" y="819.0" width="7.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="784.2" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.12%)</title><rect x="784.9" y="803.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="787.9" y="814.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.06%)</title><rect x="785.6" y="787.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="788.6" y="798.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.03%)</title><rect x="786.4" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="789.4" y="814.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.12%)</title><rect x="786.7" y="803.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="789.7" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="786.7" y="787.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="789.7" y="798.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (3 samples, 0.09%)</title><rect x="787.1" y="787.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="790.1" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="787.5" y="771.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="790.5" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.06%)</title><rect x="787.5" y="755.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="790.5" y="766.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.03%)</title><rect x="788.2" y="835.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="791.2" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.09%)</title><rect x="788.6" y="835.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="791.6" y="846.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.03%)</title><rect x="789.7" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="792.7" y="846.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.06%)</title><rect x="790.0" y="851.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="793.0" y="862.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.06%)</title><rect x="790.8" y="851.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="793.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (1 samples, 0.03%)</title><rect x="791.5" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (1 samples, 0.03%)</title><rect x="791.5" y="835.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.5" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.newOutputStream (1 samples, 0.03%)</title><rect x="791.5" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.5" y="830.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.03%)</title><rect x="791.9" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.9" y="910.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.03%)</title><rect x="792.3" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$70/21972713.act (247 samples, 7.69%)</title><rect x="792.6" y="995.0" width="90.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="795.6" y="1006.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$1 (247 samples, 7.69%)</title><rect x="792.6" y="979.0" width="90.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.6" y="990.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.get (247 samples, 7.69%)</title><rect x="792.6" y="963.0" width="90.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.6" y="974.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="792.6" y="947.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.6" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="793.0" y="931.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.0" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="793.0" y="915.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.0" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="793.0" y="899.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.get (245 samples, 7.63%)</title><rect x="793.4" y="947.0" width="90.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.4" y="958.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="793.7" y="931.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.7" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/25386054.invoke (1 samples, 0.03%)</title><rect x="793.7" y="915.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.7" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/29095294.invoke (1 samples, 0.03%)</title><rect x="793.7" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.7" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="793.7" y="883.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.7" y="894.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="793.7" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="793.7" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="793.7" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.12%)</title><rect x="794.1" y="931.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.1" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.12%)</title><rect x="794.1" y="915.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.1" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="794.8" y="899.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.8" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="794.8" y="883.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.8" y="894.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="794.8" y="867.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="794.8" y="851.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="797.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="794.8" y="835.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="797.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="794.8" y="819.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="797.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="795.2" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.2" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="795.2" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.2" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="795.2" y="819.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.2" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (237 samples, 7.38%)</title><rect x="795.6" y="931.0" width="87.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.6" y="942.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (237 samples, 7.38%)</title><rect x="795.6" y="915.0" width="87.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.6" y="926.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (215 samples, 6.70%)</title><rect x="796.3" y="899.0" width="79.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="799.3" y="910.0">Java_org_..</text>
</g>
<g>
<title>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.03%)</title><rect x="797.4" y="883.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="800.4" y="894.0"></text>
</g>
<g>
<title>free (1 samples, 0.03%)</title><rect x="797.8" y="883.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="800.8" y="894.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.09%)</title><rect x="798.1" y="883.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="801.1" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="799.2" y="883.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="802.2" y="894.0"></text>
</g>
<g>
<title>malloc (7 samples, 0.22%)</title><rect x="799.6" y="883.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="802.6" y="894.0"></text>
</g>
<g>
<title>operator delete[](void*) (2 samples, 0.06%)</title><rect x="802.2" y="883.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="805.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="802.2" y="867.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="805.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="802.2" y="851.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="805.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="802.2" y="835.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="805.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="802.5" y="819.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="805.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="802.5" y="803.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="805.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="802.5" y="787.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="805.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="802.5" y="771.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="805.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="802.5" y="755.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="805.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="802.5" y="739.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="805.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="802.5" y="723.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="805.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="802.5" y="707.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="805.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="802.5" y="691.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="805.5" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned int) (3 samples, 0.09%)</title><rect x="802.9" y="883.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="805.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.06%)</title><rect x="804.0" y="883.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="807.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned int) (1 samples, 0.03%)</title><rect x="804.8" y="883.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="807.8" y="894.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (184 samples, 5.73%)</title><rect x="805.1" y="883.0" width="67.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="808.1" y="894.0">rocksdb..</text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="807.3" y="867.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="810.3" y="878.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="807.7" y="867.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="810.7" y="878.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.37%)</title><rect x="808.1" y="867.0" width="4.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="811.1" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="808.4" y="851.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="811.4" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="808.8" y="851.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="811.8" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="809.2" y="851.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="812.2" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.158] (3 samples, 0.09%)</title><rect x="809.9" y="851.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="812.9" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.09%)</title><rect x="811.0" y="851.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="814.0" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="811.7" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="814.7" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned int) (1 samples, 0.03%)</title><rect x="812.1" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="815.1" y="862.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.03%)</title><rect x="812.5" y="867.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="815.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (147 samples, 4.58%)</title><rect x="812.8" y="867.0" width="54.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="815.8" y="878.0">rocks..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (4 samples, 0.12%)</title><rect x="812.8" y="851.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="815.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.03%)</title><rect x="814.3" y="851.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="817.3" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (141 samples, 4.39%)</title><rect x="814.7" y="851.0" width="51.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="817.7" y="862.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (139 samples, 4.33%)</title><rect x="815.4" y="835.0" width="51.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="818.4" y="846.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="815.4" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="818.4" y="830.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="815.8" y="819.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="818.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.06%)</title><rect x="816.1" y="819.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="819.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (3 samples, 0.09%)</title><rect x="816.9" y="819.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="819.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (127 samples, 3.96%)</title><rect x="818.0" y="819.0" width="46.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="821.0" y="830.0">rock..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (3 samples, 0.09%)</title><rect x="820.6" y="803.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="823.6" y="814.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.06%)</title><rect x="821.7" y="803.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="824.7" y="814.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (2 samples, 0.06%)</title><rect x="822.4" y="803.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="825.4" y="814.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.06%)</title><rect x="823.1" y="803.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="826.1" y="814.0"></text>
</g>
<g>
<title>___tls_get_addr (5 samples, 0.16%)</title><rect x="823.9" y="803.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="826.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (5 samples, 0.16%)</title><rect x="825.7" y="803.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="828.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (13 samples, 0.40%)</title><rect x="827.5" y="803.0" width="4.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="830.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (9 samples, 0.28%)</title><rect x="827.9" y="787.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="830.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.06%)</title><rect x="828.6" y="771.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="831.6" y="782.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.03%)</title><rect x="829.4" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="832.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (4 samples, 0.12%)</title><rect x="829.8" y="771.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="832.8" y="782.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="830.1" y="755.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="833.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.03%)</title><rect x="830.5" y="755.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="833.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.03%)</title><rect x="830.9" y="755.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="833.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (3 samples, 0.09%)</title><rect x="831.2" y="787.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="834.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.09%)</title><rect x="832.3" y="803.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="835.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.06%)</title><rect x="832.3" y="787.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="835.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.03%)</title><rect x="832.7" y="771.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="835.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.03%)</title><rect x="832.7" y="755.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="835.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="832.7" y="739.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="835.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="832.7" y="723.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="835.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="832.7" y="707.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="835.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.03%)</title><rect x="833.1" y="787.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="836.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (5 samples, 0.16%)</title><rect x="833.4" y="803.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="836.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long long) (2 samples, 0.06%)</title><rect x="835.3" y="803.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="838.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (72 samples, 2.24%)</title><rect x="836.0" y="803.0" width="26.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="839.0" y="814.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (68 samples, 2.12%)</title><rect x="837.1" y="787.0" width="25.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="840.1" y="798.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (8 samples, 0.25%)</title><rect x="837.5" y="771.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="840.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="839.7" y="755.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="842.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="839.7" y="739.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="842.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="839.7" y="723.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="842.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (51 samples, 1.59%)</title><rect x="840.4" y="771.0" width="18.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="843.4" y="782.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (1 samples, 0.03%)</title><rect x="849.6" y="755.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="852.6" y="766.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (1 samples, 0.03%)</title><rect x="850.0" y="755.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="853.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="850.3" y="755.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="853.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="850.3" y="739.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="853.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="850.3" y="723.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="853.3" y="734.0"></text>
</g>
<g>
<title>_init (2 samples, 0.06%)</title><rect x="851.1" y="755.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="854.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="851.4" y="739.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="854.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="851.4" y="723.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="854.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="851.4" y="707.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="854.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (20 samples, 0.62%)</title><rect x="851.8" y="755.0" width="7.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="854.8" y="766.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (1 samples, 0.03%)</title><rect x="853.3" y="739.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="856.3" y="750.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (8 samples, 0.25%)</title><rect x="853.6" y="739.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="856.6" y="750.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (3 samples, 0.09%)</title><rect x="856.6" y="739.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="859.6" y="750.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="857.7" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="860.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="858.1" y="739.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="861.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="858.1" y="723.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="861.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="858.1" y="707.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="861.1" y="718.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="858.8" y="739.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="861.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="858.8" y="723.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="861.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="858.8" y="707.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="861.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="858.8" y="691.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="861.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.06%)</title><rect x="859.2" y="771.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="862.2" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTableRep::KeyComparator::decode_key(char const*) const (1 samples, 0.03%)</title><rect x="859.9" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="862.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long long, unsigned long long*, rocksdb::ValueType*) (2 samples, 0.06%)</title><rect x="860.3" y="771.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="863.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="860.6" y="755.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="863.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="860.6" y="739.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="863.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="860.6" y="723.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="863.6" y="734.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned int, unsigned int, char const*, unsigned int) (2 samples, 0.06%)</title><rect x="861.0" y="771.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="864.0" y="782.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned int) (1 samples, 0.03%)</title><rect x="861.7" y="771.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="864.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long long) (1 samples, 0.03%)</title><rect x="862.1" y="787.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="865.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long long) (3 samples, 0.09%)</title><rect x="862.5" y="803.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="865.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="863.2" y="787.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="866.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="863.2" y="771.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="866.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="863.2" y="755.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="866.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long long, rocksdb::ValueType) (1 samples, 0.03%)</title><rect x="863.6" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="866.6" y="814.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.06%)</title><rect x="863.9" y="803.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="866.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.06%)</title><rect x="864.7" y="819.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="867.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (3 samples, 0.09%)</title><rect x="865.4" y="819.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="868.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="866.1" y="803.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="869.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="866.1" y="787.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="869.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="866.1" y="771.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="869.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.03%)</title><rect x="866.5" y="851.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="869.5" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.06%)</title><rect x="866.9" y="867.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="869.9" y="878.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned int) (12 samples, 0.37%)</title><rect x="867.6" y="867.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="870.6" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.158] (1 samples, 0.03%)</title><rect x="867.6" y="851.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="870.6" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="868.0" y="851.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="871.0" y="862.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="868.3" y="851.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="871.3" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="868.3" y="835.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="871.3" y="846.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 0.22%)</title><rect x="868.7" y="851.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="871.7" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.06%)</title><rect x="869.1" y="835.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="872.1" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="869.8" y="835.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="872.8" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.09%)</title><rect x="870.2" y="835.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="873.2" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.06%)</title><rect x="870.2" y="819.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="873.2" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="870.2" y="803.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="873.2" y="814.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="870.2" y="787.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="873.2" y="798.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="870.6" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="873.6" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="870.9" y="819.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="873.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="870.9" y="803.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="873.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="870.9" y="787.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="873.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="870.9" y="771.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="873.9" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.06%)</title><rect x="871.3" y="851.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="874.3" y="862.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned int) (2 samples, 0.06%)</title><rect x="872.0" y="867.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="875.0" y="878.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (4 samples, 0.12%)</title><rect x="872.8" y="883.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="875.8" y="894.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_dispose(std::allocator&lt;char&gt; const&amp;) (3 samples, 0.09%)</title><rect x="874.2" y="883.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="877.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="875.0" y="867.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="878.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="875.0" y="851.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="878.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="875.0" y="835.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="878.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.28%)</title><rect x="875.3" y="899.0" width="3.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="878.3" y="910.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.09%)</title><rect x="875.3" y="883.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="878.3" y="894.0"></text>
</g>
<g>
<title>malloc (6 samples, 0.19%)</title><rect x="876.4" y="883.0" width="2.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="879.4" y="894.0"></text>
</g>
<g>
<title>_init (2 samples, 0.06%)</title><rect x="878.6" y="899.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="881.6" y="910.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.03%)</title><rect x="879.4" y="899.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="882.4" y="910.0"></text>
</g>
<g>
<title>operator new(unsigned int) (1 samples, 0.03%)</title><rect x="879.7" y="899.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="882.7" y="910.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (3 samples, 0.09%)</title><rect x="880.1" y="899.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="883.1" y="910.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned int, unsigned int, unsigned int) (1 samples, 0.03%)</title><rect x="881.2" y="899.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="884.2" y="910.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;) (3 samples, 0.09%)</title><rect x="881.6" y="899.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="884.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.restoreByteArray (2 samples, 0.06%)</title><rect x="882.7" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="885.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.getByteArray (2 samples, 0.06%)</title><rect x="882.7" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="882.7" y="899.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.7" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="882.7" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.7" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.03%)</title><rect x="882.7" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.7" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="883.1" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.1" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="883.1" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="886.1" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="883.1" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="886.1" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="883.1" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="886.1" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="883.1" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.1" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="883.1" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="886.1" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="883.1" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.03%)</title><rect x="883.4" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.03%)</title><rect x="883.4" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="886.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.03%)</title><rect x="883.4" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="886.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="883.4" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.4" y="1038.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="883.4" y="1011.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="886.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.03%)</title><rect x="883.8" y="1075.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.8" y="1086.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="883.8" y="1059.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="886.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (2 samples, 0.06%)</title><rect x="884.2" y="1075.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.2" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.03%)</title><rect x="884.2" y="1059.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.2" y="1070.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="884.2" y="1043.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="887.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.03%)</title><rect x="884.5" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="884.5" y="1043.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.5" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="884.5" y="1027.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.5" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="884.5" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="887.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="884.5" y="995.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="887.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="884.5" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.5" y="990.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="884.5" y="963.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="887.5" y="974.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.03%)</title><rect x="884.9" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (1 samples, 0.03%)</title><rect x="884.9" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/server/Server.getSmallestSelector (1 samples, 0.03%)</title><rect x="884.9" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.size (1 samples, 0.03%)</title><rect x="884.9" y="1027.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="887.9" y="1038.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (1 samples, 0.03%)</title><rect x="884.9" y="1011.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$CollectionView.size (1 samples, 0.03%)</title><rect x="884.9" y="995.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="887.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (820 samples, 25.55%)</title><rect x="885.3" y="1075.0" width="301.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="888.3" y="1086.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.06%)</title><rect x="886.7" y="1059.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="889.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (298 samples, 9.28%)</title><rect x="887.5" y="1059.0" width="109.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.5" y="1070.0">one/nio/net/J..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (32 samples, 1.00%)</title><rect x="887.5" y="1043.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.5" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (31 samples, 0.97%)</title><rect x="887.8" y="1027.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.8" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (31 samples, 0.97%)</title><rect x="887.8" y="1011.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (31 samples, 0.97%)</title><rect x="887.8" y="995.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.8" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (31 samples, 0.97%)</title><rect x="887.8" y="979.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (31 samples, 0.97%)</title><rect x="887.8" y="963.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.8" y="974.0"></text>
</g>
<g>
<title>__clock_gettime (27 samples, 0.84%)</title><rect x="889.3" y="947.0" width="9.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="892.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="889.3" y="931.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="892.3" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.16%)</title><rect x="889.3" y="915.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="892.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="889.3" y="899.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="892.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="889.3" y="883.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="892.3" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="891.1" y="931.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="894.1" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (19 samples, 0.59%)</title><rect x="891.5" y="931.0" width="7.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="894.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.56%)</title><rect x="891.9" y="915.0" width="6.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="894.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.56%)</title><rect x="891.9" y="899.0" width="6.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="894.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.50%)</title><rect x="892.6" y="883.0" width="5.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="895.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.28%)</title><rect x="895.2" y="867.0" width="3.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="898.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.19%)</title><rect x="896.3" y="851.0" width="2.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="899.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="897.0" y="835.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="900.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="897.4" y="819.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="900.4" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.06%)</title><rect x="898.5" y="931.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="901.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (2 samples, 0.06%)</title><rect x="899.2" y="1043.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (2 samples, 0.06%)</title><rect x="899.2" y="1027.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.2" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (264 samples, 8.22%)</title><rect x="900.0" y="1043.0" width="97.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.0" y="1054.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (264 samples, 8.22%)</title><rect x="900.0" y="1027.0" width="97.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.0" y="1038.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (258 samples, 8.04%)</title><rect x="902.2" y="1011.0" width="94.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.2" y="1022.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (226 samples, 7.04%)</title><rect x="904.4" y="995.0" width="83.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.4" y="1006.0">sun/nio/c..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.12%)</title><rect x="906.6" y="979.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="909.6" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (212 samples, 6.60%)</title><rect x="908.0" y="979.0" width="78.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="911.0" y="990.0">__kernel_..</text>
</g>
<g>
<title>[unknown] (208 samples, 6.48%)</title><rect x="909.5" y="963.0" width="76.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="912.5" y="974.0">[unknown]</text>
</g>
<g>
<title>[unknown] (208 samples, 6.48%)</title><rect x="909.5" y="947.0" width="76.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="912.5" y="958.0">[unknown]</text>
</g>
<g>
<title>[unknown] (207 samples, 6.45%)</title><rect x="909.9" y="931.0" width="76.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="912.9" y="942.0">[unknown]</text>
</g>
<g>
<title>[unknown] (201 samples, 6.26%)</title><rect x="912.1" y="915.0" width="73.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="915.1" y="926.0">[unknown]</text>
</g>
<g>
<title>[unknown] (199 samples, 6.20%)</title><rect x="912.8" y="899.0" width="73.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="915.8" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (190 samples, 5.92%)</title><rect x="916.1" y="883.0" width="69.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="919.1" y="894.0">[unknown]</text>
</g>
<g>
<title>[unknown] (178 samples, 5.55%)</title><rect x="920.5" y="867.0" width="65.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="923.5" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (175 samples, 5.45%)</title><rect x="921.7" y="851.0" width="64.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="924.7" y="862.0">[unknown]</text>
</g>
<g>
<title>[unknown] (166 samples, 5.17%)</title><rect x="925.0" y="835.0" width="61.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="928.0" y="846.0">[unkno..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="985.6" y="819.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="988.6" y="830.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.12%)</title><rect x="986.0" y="979.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="989.0" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (13 samples, 0.40%)</title><rect x="987.5" y="995.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="990.5" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.16%)</title><rect x="988.6" y="979.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="991.6" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.12%)</title><rect x="988.6" y="963.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="991.6" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="990.0" y="963.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="993.0" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.16%)</title><rect x="990.4" y="979.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="993.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.06%)</title><rect x="990.8" y="963.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="993.8" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.06%)</title><rect x="990.8" y="947.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.8" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.06%)</title><rect x="990.8" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="993.8" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.06%)</title><rect x="990.8" y="915.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="993.8" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (2 samples, 0.06%)</title><rect x="991.5" y="963.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (3 samples, 0.09%)</title><rect x="992.2" y="995.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="995.2" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.03%)</title><rect x="993.0" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="996.0" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.03%)</title><rect x="993.0" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="996.0" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (4 samples, 0.12%)</title><rect x="993.3" y="995.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (4 samples, 0.12%)</title><rect x="993.3" y="979.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.3" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.09%)</title><rect x="993.3" y="963.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="996.3" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="994.4" y="963.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="997.4" y="974.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="994.4" y="947.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="997.4" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="994.4" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.4" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (3 samples, 0.09%)</title><rect x="994.8" y="995.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (3 samples, 0.09%)</title><rect x="994.8" y="979.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="997.8" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.09%)</title><rect x="994.8" y="963.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.8" y="974.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.09%)</title><rect x="994.8" y="947.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.8" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.09%)</title><rect x="994.8" y="931.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.09%)</title><rect x="995.9" y="995.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="998.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancelledKeys (1 samples, 0.03%)</title><rect x="996.6" y="979.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="999.6" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (503 samples, 15.67%)</title><rect x="997.0" y="1059.0" width="184.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1000.0" y="1070.0">one/nio/net/Session.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (500 samples, 15.58%)</title><rect x="998.1" y="1043.0" width="183.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.1" y="1054.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (353 samples, 11.00%)</title><rect x="998.5" y="1027.0" width="129.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.5" y="1038.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (320 samples, 9.97%)</title><rect x="1003.3" y="1011.0" width="117.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1006.3" y="1022.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (320 samples, 9.97%)</title><rect x="1003.3" y="995.0" width="117.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.3" y="1006.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (313 samples, 9.75%)</title><rect x="1003.3" y="979.0" width="115.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1006.3" y="990.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.22%)</title><rect x="1003.3" y="963.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.3" y="974.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.09%)</title><rect x="1004.7" y="947.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (306 samples, 9.53%)</title><rect x="1005.8" y="963.0" width="112.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1008.8" y="974.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.executeAsync (306 samples, 9.53%)</title><rect x="1005.8" y="947.0" width="112.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1008.8" y="958.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (306 samples, 9.53%)</title><rect x="1005.8" y="931.0" width="112.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1008.8" y="942.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (295 samples, 9.19%)</title><rect x="1009.9" y="915.0" width="108.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.9" y="926.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (287 samples, 8.94%)</title><rect x="1009.9" y="899.0" width="105.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1012.9" y="910.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.19%)</title><rect x="1009.9" y="883.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1012.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.19%)</title><rect x="1009.9" y="867.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1012.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.19%)</title><rect x="1009.9" y="851.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (281 samples, 8.75%)</title><rect x="1012.1" y="883.0" width="103.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.1" y="894.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (281 samples, 8.75%)</title><rect x="1012.1" y="867.0" width="103.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1015.1" y="878.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (281 samples, 8.75%)</title><rect x="1012.1" y="851.0" width="103.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1015.1" y="862.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (281 samples, 8.75%)</title><rect x="1012.1" y="835.0" width="103.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1015.1" y="846.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (281 samples, 8.75%)</title><rect x="1012.1" y="819.0" width="103.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1015.1" y="830.0">jdk/internal..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="1012.1" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1015.1" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (3 samples, 0.09%)</title><rect x="1012.4" y="803.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1015.4" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.06%)</title><rect x="1013.6" y="803.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1016.6" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.06%)</title><rect x="1014.3" y="803.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1017.3" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.09%)</title><rect x="1015.0" y="803.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1018.0" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (33 samples, 1.03%)</title><rect x="1016.1" y="803.0" width="12.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1019.1" y="814.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.06%)</title><rect x="1017.6" y="787.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1020.6" y="798.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="1018.3" y="787.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1021.3" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (2 samples, 0.06%)</title><rect x="1018.7" y="787.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1021.7" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.12%)</title><rect x="1019.4" y="787.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1022.4" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.12%)</title><rect x="1020.9" y="787.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1023.9" y="798.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.06%)</title><rect x="1021.6" y="771.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1024.6" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (3 samples, 0.09%)</title><rect x="1022.4" y="787.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1025.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1023.1" y="771.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1026.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1023.1" y="755.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1026.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1023.1" y="739.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1026.1" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.09%)</title><rect x="1023.5" y="787.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1026.5" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="1024.6" y="787.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1027.6" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="1024.9" y="787.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1027.9" y="798.0"></text>
</g>
<g>
<title>pthread_cond_signal (2 samples, 0.06%)</title><rect x="1025.3" y="787.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1028.3" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.12%)</title><rect x="1026.0" y="787.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1029.0" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.06%)</title><rect x="1027.5" y="787.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1030.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (235 samples, 7.32%)</title><rect x="1028.3" y="803.0" width="86.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1031.3" y="814.0">[unknown]</text>
</g>
<g>
<title>__kernel_vsyscall (230 samples, 7.17%)</title><rect x="1028.3" y="787.0" width="84.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1031.3" y="798.0">__kernel_v..</text>
</g>
<g>
<title>[unknown] (229 samples, 7.13%)</title><rect x="1028.6" y="771.0" width="84.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1031.6" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (229 samples, 7.13%)</title><rect x="1028.6" y="755.0" width="84.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1031.6" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (229 samples, 7.13%)</title><rect x="1028.6" y="739.0" width="84.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1031.6" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (229 samples, 7.13%)</title><rect x="1028.6" y="723.0" width="84.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1031.6" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (227 samples, 7.07%)</title><rect x="1029.4" y="707.0" width="83.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1032.4" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (224 samples, 6.98%)</title><rect x="1030.5" y="691.0" width="82.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1033.5" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (219 samples, 6.82%)</title><rect x="1032.3" y="675.0" width="80.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1035.3" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (218 samples, 6.79%)</title><rect x="1032.7" y="659.0" width="80.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1035.7" y="670.0">[unknown]</text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.16%)</title><rect x="1112.8" y="787.0" width="1.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1115.8" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="1114.6" y="803.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1117.6" y="814.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="1115.0" y="803.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1118.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.25%)</title><rect x="1115.4" y="899.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.25%)</title><rect x="1115.4" y="883.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.25%)</title><rect x="1115.4" y="867.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.25%)</title><rect x="1115.4" y="851.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.22%)</title><rect x="1118.3" y="979.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.3" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.22%)</title><rect x="1118.3" y="963.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.22%)</title><rect x="1118.3" y="947.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.3" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.22%)</title><rect x="1120.9" y="1011.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.22%)</title><rect x="1120.9" y="995.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.22%)</title><rect x="1120.9" y="979.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1123.9" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.12%)</title><rect x="1123.5" y="1011.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.12%)</title><rect x="1123.5" y="995.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1126.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.12%)</title><rect x="1123.5" y="979.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.28%)</title><rect x="1124.9" y="1011.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.28%)</title><rect x="1124.9" y="995.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (146 samples, 4.55%)</title><rect x="1128.2" y="1027.0" width="53.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.2" y="1038.0">one/n..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (139 samples, 4.33%)</title><rect x="1130.8" y="1011.0" width="51.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.8" y="1022.0">one/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (139 samples, 4.33%)</title><rect x="1130.8" y="995.0" width="51.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.8" y="1006.0">sun/n..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="1130.8" y="979.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="1130.8" y="963.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="1130.8" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="1130.8" y="931.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (129 samples, 4.02%)</title><rect x="1131.2" y="979.0" width="47.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1134.2" y="990.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (129 samples, 4.02%)</title><rect x="1131.2" y="963.0" width="47.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.2" y="974.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (129 samples, 4.02%)</title><rect x="1131.2" y="947.0" width="47.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.2" y="958.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (129 samples, 4.02%)</title><rect x="1131.2" y="931.0" width="47.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.2" y="942.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (122 samples, 3.80%)</title><rect x="1133.8" y="915.0" width="44.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.8" y="926.0">sun/..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.06%)</title><rect x="1134.9" y="899.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1137.9" y="910.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (4 samples, 0.12%)</title><rect x="1135.6" y="899.0" width="1.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1138.6" y="910.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.06%)</title><rect x="1136.3" y="883.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1139.3" y="894.0"></text>
</g>
<g>
<title>__kernel_vsyscall (107 samples, 3.33%)</title><rect x="1137.1" y="899.0" width="39.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1140.1" y="910.0">__k..</text>
</g>
<g>
<title>[unknown] (102 samples, 3.18%)</title><rect x="1138.9" y="883.0" width="37.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1141.9" y="894.0">[un..</text>
</g>
<g>
<title>[unknown] (102 samples, 3.18%)</title><rect x="1138.9" y="867.0" width="37.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1141.9" y="878.0">[un..</text>
</g>
<g>
<title>[unknown] (101 samples, 3.15%)</title><rect x="1139.3" y="851.0" width="37.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1142.3" y="862.0">[un..</text>
</g>
<g>
<title>[unknown] (97 samples, 3.02%)</title><rect x="1140.7" y="835.0" width="35.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1143.7" y="846.0">[un..</text>
</g>
<g>
<title>[unknown] (93 samples, 2.90%)</title><rect x="1142.2" y="819.0" width="34.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1145.2" y="830.0">[u..</text>
</g>
<g>
<title>[unknown] (88 samples, 2.74%)</title><rect x="1144.0" y="803.0" width="32.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1147.0" y="814.0">[u..</text>
</g>
<g>
<title>[unknown] (71 samples, 2.21%)</title><rect x="1150.3" y="787.0" width="26.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1153.3" y="798.0">[..</text>
</g>
<g>
<title>[unknown] (67 samples, 2.09%)</title><rect x="1151.8" y="771.0" width="24.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1154.8" y="782.0">[..</text>
</g>
<g>
<title>[unknown] (60 samples, 1.87%)</title><rect x="1154.3" y="755.0" width="22.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1157.3" y="766.0">[..</text>
</g>
<g>
<title>[unknown] (53 samples, 1.65%)</title><rect x="1156.9" y="739.0" width="19.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1159.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.18%)</title><rect x="1162.4" y="723.0" width="14.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1165.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.00%)</title><rect x="1164.6" y="707.0" width="11.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1167.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.62%)</title><rect x="1169.0" y="691.0" width="7.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1172.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.31%)</title><rect x="1172.7" y="675.0" width="3.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1175.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1176.0" y="659.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1179.0" y="670.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.09%)</title><rect x="1176.4" y="899.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1179.4" y="910.0"></text>
</g>
<g>
<title>read (3 samples, 0.09%)</title><rect x="1177.5" y="899.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1180.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (5 samples, 0.16%)</title><rect x="1178.6" y="979.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.6" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endRead (4 samples, 0.12%)</title><rect x="1180.4" y="979.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.4" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.12%)</title><rect x="1180.4" y="963.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.4" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (13 samples, 0.40%)</title><rect x="1181.9" y="1059.0" width="4.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1181.9" y="1043.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1184.9" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.06%)</title><rect x="1181.9" y="1027.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1184.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1181.9" y="1011.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1184.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1181.9" y="995.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1184.9" y="1006.0"></text>
</g>
<g>
<title>__kernel_vsyscall (11 samples, 0.34%)</title><rect x="1182.6" y="1043.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1185.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.28%)</title><rect x="1183.4" y="1027.0" width="3.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1186.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.28%)</title><rect x="1183.4" y="1011.0" width="3.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1186.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.25%)</title><rect x="1183.8" y="995.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1186.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.19%)</title><rect x="1184.5" y="979.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1187.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="1184.9" y="963.0" width="1.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1187.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.12%)</title><rect x="1185.2" y="947.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1188.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="1186.0" y="931.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1189.0" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (3 samples, 0.09%)</title><rect x="1186.7" y="1075.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1189.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.06%)</title><rect x="1186.7" y="1059.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="1186.7" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="1186.7" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="1186.7" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="1186.7" y="995.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.7" y="1006.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.03%)</title><rect x="1186.7" y="979.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="1187.1" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1190.1" y="1054.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="1187.1" y="1027.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1190.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.executeAsync (1 samples, 0.03%)</title><rect x="1187.4" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="1187.4" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1190.4" y="1054.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.03%)</title><rect x="1187.4" y="1027.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.03%)</title><rect x="1187.8" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.03%)</title><rect x="1187.8" y="1059.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1190.8" y="1070.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.03%)</title><rect x="1187.8" y="1043.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 0.12%)</title><rect x="1188.2" y="1075.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.2" y="1086.0"></text>
</g>
<g>
<title>Thread::current() (3 samples, 0.09%)</title><rect x="1188.2" y="1059.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.2" y="1070.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="1189.3" y="1059.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1192.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.03%)</title><rect x="1189.6" y="1075.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="1189.6" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="1189.6" y="1043.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.6" y="1054.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="1189.6" y="1027.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1192.6" y="1038.0"></text>
</g>
</g>
</svg>
