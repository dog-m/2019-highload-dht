<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1093"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1093"> </text>
<g id="frames">
<g>
<title>all (4,384 samples, 100.00%)</title><rect x="10.0" y="1059.0" width="1180.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="1070.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.02%)</title><rect x="10.0" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.02%)</title><rect x="10.3" y="1043.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.3" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (76 samples, 1.73%)</title><rect x="10.5" y="1043.0" width="20.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.5" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="12.2" y="1027.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.2" y="1038.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (14 samples, 0.32%)</title><rect x="12.7" y="1027.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.7" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="12.7" y="1011.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.7" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (13 samples, 0.30%)</title><rect x="13.0" y="1011.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.0" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (11 samples, 0.25%)</title><rect x="13.2" y="995.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.2" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.25%)</title><rect x="13.2" y="979.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="16.2" y="990.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (1 samples, 0.02%)</title><rect x="13.2" y="963.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.2" y="974.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="13.2" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.2" y="958.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned int, Thread*) (2 samples, 0.05%)</title><rect x="13.5" y="963.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.5" y="974.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="13.8" y="947.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="16.8" y="958.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (1 samples, 0.02%)</title><rect x="14.0" y="963.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="17.0" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (1 samples, 0.02%)</title><rect x="14.3" y="963.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.3" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (2 samples, 0.05%)</title><rect x="14.6" y="963.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.6" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (2 samples, 0.05%)</title><rect x="14.6" y="947.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.6" y="958.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.02%)</title><rect x="14.6" y="931.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="17.6" y="942.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.02%)</title><rect x="14.8" y="931.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="17.8" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.07%)</title><rect x="15.1" y="963.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="18.1" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (3 samples, 0.07%)</title><rect x="15.1" y="947.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.1" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (3 samples, 0.07%)</title><rect x="15.1" y="931.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.1" y="942.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (2 samples, 0.05%)</title><rect x="15.1" y="915.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.1" y="926.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="15.7" y="915.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.7" y="926.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="15.9" y="963.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="18.9" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.02%)</title><rect x="16.2" y="995.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="19.2" y="1006.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (54 samples, 1.23%)</title><rect x="16.5" y="1027.0" width="14.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.5" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="17.0" y="1011.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="20.0" y="1022.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (51 samples, 1.16%)</title><rect x="17.3" y="1011.0" width="13.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="20.3" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (47 samples, 1.07%)</title><rect x="17.3" y="995.0" width="12.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="20.3" y="1006.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (2 samples, 0.05%)</title><rect x="17.3" y="979.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="20.3" y="990.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned int, Thread*) (1 samples, 0.02%)</title><rect x="17.8" y="979.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.8" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (1 samples, 0.02%)</title><rect x="18.1" y="979.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.1" y="990.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="18.3" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="21.3" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (42 samples, 0.96%)</title><rect x="18.6" y="979.0" width="11.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.6" y="990.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned int, Thread*) (1 samples, 0.02%)</title><rect x="19.2" y="963.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.2" y="974.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="19.2" y="947.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="22.2" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (1 samples, 0.02%)</title><rect x="19.4" y="963.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="22.4" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (13 samples, 0.30%)</title><rect x="19.7" y="963.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="22.7" y="974.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (2 samples, 0.05%)</title><rect x="19.7" y="947.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="22.7" y="958.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (2 samples, 0.05%)</title><rect x="20.2" y="947.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="23.2" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (9 samples, 0.21%)</title><rect x="20.8" y="947.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="23.8" y="958.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.02%)</title><rect x="21.8" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="24.8" y="942.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="21.8" y="915.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="24.8" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="21.8" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="24.8" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="21.8" y="883.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="24.8" y="894.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (3 samples, 0.07%)</title><rect x="22.1" y="931.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="25.1" y="942.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (2 samples, 0.05%)</title><rect x="22.4" y="915.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="25.4" y="926.0"></text>
</g>
<g>
<title>GCId::peek() (1 samples, 0.02%)</title><rect x="22.9" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="25.9" y="942.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned int, Thread*) (1 samples, 0.02%)</title><rect x="23.2" y="963.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="26.2" y="974.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="23.5" y="963.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="26.5" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (7 samples, 0.16%)</title><rect x="23.7" y="963.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="26.7" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (1 samples, 0.02%)</title><rect x="24.3" y="947.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="27.3" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (1 samples, 0.02%)</title><rect x="24.3" y="931.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="27.3" y="942.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.02%)</title><rect x="24.3" y="915.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="27.3" y="926.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="24.5" y="947.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="27.5" y="958.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (3 samples, 0.07%)</title><rect x="24.8" y="947.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="27.8" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (3 samples, 0.07%)</title><rect x="24.8" y="931.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="27.8" y="942.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.05%)</title><rect x="24.8" y="915.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="27.8" y="926.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="25.3" y="915.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="28.3" y="926.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (15 samples, 0.34%)</title><rect x="25.6" y="963.0" width="4.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="28.6" y="974.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="29.6" y="963.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="32.6" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="29.6" y="947.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="32.6" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="29.6" y="931.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.6" y="942.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="29.6" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="32.6" y="926.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="29.6" y="899.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="32.6" y="910.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="29.6" y="883.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="32.6" y="894.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="29.6" y="867.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="32.6" y="878.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="29.6" y="851.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="32.6" y="862.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="29.6" y="835.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="32.6" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="29.6" y="819.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="32.6" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.09%)</title><rect x="29.9" y="995.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="32.9" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (12 samples, 0.27%)</title><rect x="31.0" y="1043.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="34.0" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="31.0" y="1027.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="34.0" y="1038.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (11 samples, 0.25%)</title><rect x="31.3" y="1027.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="34.3" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.25%)</title><rect x="31.3" y="1011.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="34.3" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (11 samples, 0.25%)</title><rect x="31.3" y="995.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="34.3" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.25%)</title><rect x="31.3" y="979.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="34.3" y="990.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (1 samples, 0.02%)</title><rect x="31.8" y="963.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="34.8" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="32.1" y="963.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="35.1" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (7 samples, 0.16%)</title><rect x="32.3" y="963.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="35.3" y="974.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (1 samples, 0.02%)</title><rect x="32.6" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="35.6" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (3 samples, 0.07%)</title><rect x="32.9" y="947.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="35.9" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (3 samples, 0.07%)</title><rect x="32.9" y="931.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="35.9" y="942.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (1 samples, 0.02%)</title><rect x="33.4" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="36.4" y="926.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.05%)</title><rect x="33.7" y="947.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="36.7" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="33.7" y="931.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="36.7" y="942.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.02%)</title><rect x="33.7" y="915.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="36.7" y="926.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="34.0" y="931.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="37.0" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (32 samples, 0.73%)</title><rect x="34.2" y="1043.0" width="8.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="37.2" y="1054.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.05%)</title><rect x="34.8" y="1027.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="37.8" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (25 samples, 0.57%)</title><rect x="35.3" y="1027.0" width="6.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="38.3" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (23 samples, 0.52%)</title><rect x="35.6" y="1011.0" width="6.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="38.6" y="1022.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (2 samples, 0.05%)</title><rect x="35.6" y="995.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="38.6" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="36.1" y="995.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="39.1" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (20 samples, 0.46%)</title><rect x="36.4" y="995.0" width="5.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="39.4" y="1006.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (3 samples, 0.07%)</title><rect x="36.6" y="979.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="39.6" y="990.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (2 samples, 0.05%)</title><rect x="36.9" y="963.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="39.9" y="974.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="37.2" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="40.2" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="37.2" y="931.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="40.2" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="37.2" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="40.2" y="926.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (3 samples, 0.07%)</title><rect x="37.5" y="979.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="40.5" y="990.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="38.0" y="963.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="41.0" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="38.0" y="947.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="41.0" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="38.0" y="931.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="41.0" y="942.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="38.3" y="979.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="41.3" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (9 samples, 0.21%)</title><rect x="38.5" y="979.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="41.5" y="990.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (1 samples, 0.02%)</title><rect x="38.8" y="963.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="41.8" y="974.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (1 samples, 0.02%)</title><rect x="39.1" y="963.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="42.1" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (4 samples, 0.09%)</title><rect x="39.3" y="963.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="42.3" y="974.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (1 samples, 0.02%)</title><rect x="39.3" y="947.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="42.3" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (3 samples, 0.07%)</title><rect x="39.6" y="947.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="42.6" y="958.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (2 samples, 0.05%)</title><rect x="39.6" y="931.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="42.6" y="942.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.02%)</title><rect x="40.1" y="931.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="43.1" y="942.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.05%)</title><rect x="40.4" y="963.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="43.4" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (2 samples, 0.05%)</title><rect x="40.4" y="947.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="43.4" y="958.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.05%)</title><rect x="40.4" y="931.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="43.4" y="942.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="41.0" y="979.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="44.0" y="990.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="41.2" y="979.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="44.2" y="990.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="41.2" y="963.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="44.2" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="41.2" y="947.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="44.2" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="41.2" y="931.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="44.2" y="942.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="41.2" y="915.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="44.2" y="926.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="41.2" y="899.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="44.2" y="910.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="41.2" y="883.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="44.2" y="894.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="41.2" y="867.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="44.2" y="878.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.02%)</title><rect x="41.2" y="851.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="44.2" y="862.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.02%)</title><rect x="41.2" y="835.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="44.2" y="846.0"></text>
</g>
<g>
<title>security_task_free (1 samples, 0.02%)</title><rect x="41.2" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="44.2" y="830.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="41.2" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="44.2" y="814.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="41.2" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="44.2" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.02%)</title><rect x="41.5" y="979.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="44.5" y="990.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="41.8" y="1011.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="44.8" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="41.8" y="995.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="44.8" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="41.8" y="979.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="44.8" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (2 samples, 0.05%)</title><rect x="42.0" y="1027.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="45.0" y="1038.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.02%)</title><rect x="42.3" y="1011.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="45.3" y="1022.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="42.6" y="1027.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="45.6" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="42.6" y="1011.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="45.6" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="42.6" y="995.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="45.6" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.34%)</title><rect x="42.8" y="1043.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="45.8" y="1054.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="42.8" y="1027.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="45.8" y="1038.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (14 samples, 0.32%)</title><rect x="43.1" y="1027.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="46.1" y="1038.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.09%)</title><rect x="43.1" y="1011.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="46.1" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.63] (4 samples, 0.09%)</title><rect x="43.1" y="995.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="46.1" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.85] (10 samples, 0.23%)</title><rect x="44.2" y="1011.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="47.2" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (10 samples, 0.23%)</title><rect x="44.2" y="995.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="47.2" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.63] (4 samples, 0.09%)</title><rect x="44.2" y="979.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="47.2" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.11%)</title><rect x="45.3" y="979.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="48.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.11%)</title><rect x="45.3" y="963.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="48.3" y="974.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.11%)</title><rect x="45.3" y="947.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="48.3" y="958.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.11%)</title><rect x="45.3" y="931.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="48.3" y="942.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.09%)</title><rect x="45.3" y="915.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="48.3" y="926.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.09%)</title><rect x="45.3" y="899.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="48.3" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.09%)</title><rect x="45.3" y="883.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="48.3" y="894.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.09%)</title><rect x="45.3" y="867.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="48.3" y="878.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.09%)</title><rect x="45.3" y="851.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="48.3" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.09%)</title><rect x="45.3" y="835.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="48.3" y="846.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="46.3" y="915.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="49.3" y="926.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long long) (1 samples, 0.02%)</title><rect x="46.6" y="979.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="49.6" y="990.0"></text>
</g>
<g>
<title>[not_walkable] (4 samples, 0.09%)</title><rect x="46.9" y="1043.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="49.9" y="1054.0"></text>
</g>
<g>
<title>[not_walkable_Java] (28 samples, 0.64%)</title><rect x="48.0" y="1043.0" width="7.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="51.0" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.16%)</title><rect x="48.0" y="1027.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="51.0" y="1038.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (3 samples, 0.07%)</title><rect x="48.5" y="1011.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="51.5" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.05%)</title><rect x="49.3" y="1011.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="52.3" y="1022.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="49.6" y="995.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="52.6" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (15 samples, 0.34%)</title><rect x="49.8" y="1027.0" width="4.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="52.8" y="1038.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="49.8" y="1011.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="52.8" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (13 samples, 0.30%)</title><rect x="50.1" y="1011.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="53.1" y="1022.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="50.1" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="53.1" y="1006.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.07%)</title><rect x="50.4" y="995.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="53.4" y="1006.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="50.4" y="979.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="53.4" y="990.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="50.6" y="979.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="53.6" y="990.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (9 samples, 0.21%)</title><rect x="51.2" y="995.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="54.2" y="1006.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.02%)</title><rect x="51.5" y="979.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="54.5" y="990.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (5 samples, 0.11%)</title><rect x="51.7" y="979.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="54.7" y="990.0"></text>
</g>
<g>
<title>CodeBlob::oop_map_for_return_address(unsigned char*) (3 samples, 0.07%)</title><rect x="52.3" y="963.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="55.3" y="974.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (3 samples, 0.07%)</title><rect x="52.3" y="947.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="55.3" y="958.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (2 samples, 0.05%)</title><rect x="53.1" y="979.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="56.1" y="990.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="53.1" y="963.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="56.1" y="974.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="53.1" y="947.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="56.1" y="958.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="53.6" y="1011.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="56.6" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.09%)</title><rect x="53.9" y="1027.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="56.9" y="1038.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="54.1" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="57.1" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.05%)</title><rect x="54.4" y="1011.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="57.4" y="1022.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="54.4" y="995.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="57.4" y="1006.0"></text>
</g>
<g>
<title>CardTableRS::is_in_young(oopDesc*) const (1 samples, 0.02%)</title><rect x="54.7" y="995.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="57.7" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.05%)</title><rect x="54.9" y="1027.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="57.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.14%)</title><rect x="55.5" y="1043.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="58.5" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-i386/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="55.5" y="1027.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="58.5" y="1038.0"></text>
</g>
<g>
<title>__vsnprintf_chk (1 samples, 0.02%)</title><rect x="55.5" y="1011.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="58.5" y="1022.0"></text>
</g>
<g>
<title>__printf_fp (1 samples, 0.02%)</title><rect x="55.5" y="995.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="58.5" y="1006.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="55.5" y="979.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="58.5" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.09%)</title><rect x="55.8" y="1027.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="58.8" y="1038.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.09%)</title><rect x="55.8" y="1011.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="58.8" y="1022.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.09%)</title><rect x="55.8" y="995.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="58.8" y="1006.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.09%)</title><rect x="55.8" y="979.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="58.8" y="990.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.09%)</title><rect x="55.8" y="963.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="58.8" y="974.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="55.8" y="947.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="58.8" y="958.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="55.8" y="931.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="58.8" y="942.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="55.8" y="915.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="58.8" y="926.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="55.8" y="899.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="58.8" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="55.8" y="883.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.8" y="894.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="56.0" y="947.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="59.0" y="958.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.07%)</title><rect x="56.0" y="931.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="59.0" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.07%)</title><rect x="56.0" y="915.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="59.0" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.07%)</title><rect x="56.0" y="899.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="59.0" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="56.8" y="1027.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="59.8" y="1038.0"></text>
</g>
<g>
<title>[unknown_Java] (138 samples, 3.15%)</title><rect x="57.1" y="1043.0" width="37.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="60.1" y="1054.0">[un..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="88.1" y="1027.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="91.1" y="1038.0"></text>
</g>
<g>
<title>Thread::current() (5 samples, 0.11%)</title><rect x="88.3" y="1027.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="91.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.23%)</title><rect x="89.7" y="1027.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="92.7" y="1038.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (2 samples, 0.05%)</title><rect x="89.7" y="1011.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="92.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="89.7" y="995.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="92.7" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="89.7" y="979.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="92.7" y="990.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="90.2" y="1011.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="93.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="90.5" y="1011.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="93.5" y="1022.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.05%)</title><rect x="90.5" y="995.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="93.5" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.11%)</title><rect x="91.0" y="1011.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="94.0" y="1022.0"></text>
</g>
<g>
<title>__kernel_rt_sigreturn (1 samples, 0.02%)</title><rect x="92.4" y="1027.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="95.4" y="1038.0"></text>
</g>
<g>
<title>signalHandler(int, siginfo_t*, void*) (1 samples, 0.02%)</title><rect x="92.4" y="1011.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="95.4" y="1022.0"></text>
</g>
<g>
<title>JNI_FastGetField::find_slowcase_pc(unsigned char*) (1 samples, 0.02%)</title><rect x="92.4" y="995.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="95.4" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="92.6" y="1027.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="95.6" y="1038.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="93.2" y="1027.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="96.2" y="1038.0"></text>
</g>
<g>
<title>resume_userspace (3 samples, 0.07%)</title><rect x="93.4" y="1027.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="96.4" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.07%)</title><rect x="93.4" y="1011.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="96.4" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="93.4" y="995.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="96.4" y="1006.0"></text>
</g>
<g>
<title>clone (61 samples, 1.39%)</title><rect x="94.2" y="1043.0" width="16.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="97.2" y="1054.0"></text>
</g>
<g>
<title>start_thread (61 samples, 1.39%)</title><rect x="94.2" y="1027.0" width="16.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="97.2" y="1038.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (61 samples, 1.39%)</title><rect x="94.2" y="1011.0" width="16.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="97.2" y="1022.0"></text>
</g>
<g>
<title>Thread::call_run() (61 samples, 1.39%)</title><rect x="94.2" y="995.0" width="16.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="97.2" y="1006.0"></text>
</g>
<g>
<title>JavaThread::run() (13 samples, 0.30%)</title><rect x="94.2" y="979.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="97.2" y="990.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (13 samples, 0.30%)</title><rect x="94.2" y="963.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="97.2" y="974.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.02%)</title><rect x="94.2" y="947.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="97.2" y="958.0"></text>
</g>
<g>
<title>load_agent(AttachOperation*, outputStream*) (1 samples, 0.02%)</title><rect x="94.2" y="931.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="97.2" y="942.0"></text>
</g>
<g>
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (1 samples, 0.02%)</title><rect x="94.2" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="97.2" y="926.0"></text>
</g>
<g>
<title>Agent_OnAttach (1 samples, 0.02%)</title><rect x="94.2" y="899.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="97.2" y="910.0"></text>
</g>
<g>
<title>Profiler::run(Arguments&amp;) (1 samples, 0.02%)</title><rect x="94.2" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="97.2" y="894.0"></text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::ostream&amp;) (1 samples, 0.02%)</title><rect x="94.2" y="867.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="97.2" y="878.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="94.2" y="851.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="97.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="94.2" y="835.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="97.2" y="846.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="94.2" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="97.2" y="830.0"></text>
</g>
<g>
<title>sys_ioctl (1 samples, 0.02%)</title><rect x="94.2" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="97.2" y="814.0"></text>
</g>
<g>
<title>do_vfs_ioctl (1 samples, 0.02%)</title><rect x="94.2" y="787.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="97.2" y="798.0"></text>
</g>
<g>
<title>perf_ioctl (1 samples, 0.02%)</title><rect x="94.2" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="97.2" y="782.0"></text>
</g>
<g>
<title>perf_event_for_each_child (1 samples, 0.02%)</title><rect x="94.2" y="755.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="97.2" y="766.0"></text>
</g>
<g>
<title>_perf_event_disable (1 samples, 0.02%)</title><rect x="94.2" y="739.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="97.2" y="750.0"></text>
</g>
<g>
<title>event_function_call (1 samples, 0.02%)</title><rect x="94.2" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="97.2" y="734.0"></text>
</g>
<g>
<title>task_function_call (1 samples, 0.02%)</title><rect x="94.2" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="97.2" y="718.0"></text>
</g>
<g>
<title>smp_call_function_single (1 samples, 0.02%)</title><rect x="94.2" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="97.2" y="702.0"></text>
</g>
<g>
<title>compiler_thread_entry(JavaThread*, Thread*) (12 samples, 0.27%)</title><rect x="94.5" y="947.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="97.5" y="958.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (12 samples, 0.27%)</title><rect x="94.5" y="931.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="97.5" y="942.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (12 samples, 0.27%)</title><rect x="94.5" y="915.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="97.5" y="926.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (12 samples, 0.27%)</title><rect x="94.5" y="899.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="97.5" y="910.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (12 samples, 0.27%)</title><rect x="94.5" y="883.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="97.5" y="894.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (7 samples, 0.16%)</title><rect x="94.5" y="867.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="97.5" y="878.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.02%)</title><rect x="94.5" y="851.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="97.5" y="862.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.02%)</title><rect x="94.5" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="97.5" y="846.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.02%)</title><rect x="94.5" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="97.5" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.02%)</title><rect x="94.8" y="851.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="97.8" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.02%)</title><rect x="94.8" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="97.8" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.02%)</title><rect x="94.8" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="97.8" y="830.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.02%)</title><rect x="94.8" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="97.8" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (5 samples, 0.11%)</title><rect x="95.1" y="851.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="98.1" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (4 samples, 0.09%)</title><rect x="95.1" y="835.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="98.1" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.02%)</title><rect x="95.3" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="98.3" y="830.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.02%)</title><rect x="95.3" y="803.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="98.3" y="814.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.02%)</title><rect x="95.3" y="787.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="98.3" y="798.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.02%)</title><rect x="95.3" y="771.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="98.3" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.02%)</title><rect x="95.6" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="98.6" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="95.6" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="98.6" y="814.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="95.6" y="787.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="98.6" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="95.6" y="771.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="98.6" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="95.6" y="755.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="98.6" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.02%)</title><rect x="95.9" y="819.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="98.9" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.02%)</title><rect x="96.1" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="99.1" y="846.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.09%)</title><rect x="96.4" y="867.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="99.4" y="878.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.02%)</title><rect x="96.7" y="851.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="99.7" y="862.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.02%)</title><rect x="96.7" y="835.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="99.7" y="846.0"></text>
</g>
<g>
<title>.L1546 (1 samples, 0.02%)</title><rect x="96.7" y="819.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="99.7" y="830.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="96.7" y="803.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.7" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="96.7" y="787.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="99.7" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="96.7" y="771.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="99.7" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&amp;, bool, bool, bool) (2 samples, 0.05%)</title><rect x="96.9" y="851.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="99.9" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (2 samples, 0.05%)</title><rect x="96.9" y="835.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="99.9" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 0.05%)</title><rect x="96.9" y="819.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="99.9" y="830.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.02%)</title><rect x="96.9" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="99.9" y="814.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="96.9" y="787.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="99.9" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="96.9" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="99.9" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="96.9" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="99.9" y="766.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="97.2" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="100.2" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="97.2" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="100.2" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="97.2" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="100.2" y="782.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.02%)</title><rect x="97.5" y="867.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="100.5" y="878.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.02%)</title><rect x="97.7" y="979.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="100.7" y="990.0"></text>
</g>
<g>
<title>VMThread::run() (39 samples, 0.89%)</title><rect x="98.0" y="979.0" width="10.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="101.0" y="990.0"></text>
</g>
<g>
<title>VMThread::loop() (39 samples, 0.89%)</title><rect x="98.0" y="963.0" width="10.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="101.0" y="974.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="98.0" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="101.0" y="958.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.09%)</title><rect x="98.3" y="947.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="101.3" y="958.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (4 samples, 0.09%)</title><rect x="98.3" y="931.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="101.3" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.09%)</title><rect x="98.3" y="915.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="101.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.09%)</title><rect x="98.3" y="899.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.3" y="910.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.09%)</title><rect x="98.3" y="883.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="101.3" y="894.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.09%)</title><rect x="98.3" y="867.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="101.3" y="878.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.09%)</title><rect x="98.3" y="851.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="101.3" y="862.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.09%)</title><rect x="98.3" y="835.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="101.3" y="846.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.02%)</title><rect x="98.6" y="819.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="101.6" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="98.8" y="819.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="101.8" y="830.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.05%)</title><rect x="98.8" y="803.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="101.8" y="814.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (13 samples, 0.30%)</title><rect x="99.4" y="947.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="102.4" y="958.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (2 samples, 0.05%)</title><rect x="99.4" y="931.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="102.4" y="942.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="99.4" y="915.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="102.4" y="926.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.05%)</title><rect x="99.4" y="899.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="102.4" y="910.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (1 samples, 0.02%)</title><rect x="99.6" y="883.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="102.6" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::deflate_thread_local_monitors(Thread*, DeflateMonitorCounters*) (1 samples, 0.02%)</title><rect x="99.6" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="102.6" y="878.0"></text>
</g>
<g>
<title>__kernel_vsyscall (11 samples, 0.25%)</title><rect x="99.9" y="931.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="102.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (11 samples, 0.25%)</title><rect x="99.9" y="915.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="102.9" y="926.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (11 samples, 0.25%)</title><rect x="99.9" y="899.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="102.9" y="910.0"></text>
</g>
<g>
<title>sys_mprotect (11 samples, 0.25%)</title><rect x="99.9" y="883.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="102.9" y="894.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.02%)</title><rect x="99.9" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="102.9" y="878.0"></text>
</g>
<g>
<title>vmacache_find (1 samples, 0.02%)</title><rect x="99.9" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="102.9" y="862.0"></text>
</g>
<g>
<title>mprotect_fixup (10 samples, 0.23%)</title><rect x="100.2" y="867.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="103.2" y="878.0"></text>
</g>
<g>
<title>change_protection (10 samples, 0.23%)</title><rect x="100.2" y="851.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="103.2" y="862.0"></text>
</g>
<g>
<title>change_protection_range (10 samples, 0.23%)</title><rect x="100.2" y="835.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="103.2" y="846.0"></text>
</g>
<g>
<title>__ptep_modify_prot_commit (1 samples, 0.02%)</title><rect x="100.2" y="819.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="103.2" y="830.0"></text>
</g>
<g>
<title>native_set_pte_at (1 samples, 0.02%)</title><rect x="100.2" y="803.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="103.2" y="814.0"></text>
</g>
<g>
<title>atomic64_xchg_cx8 (2 samples, 0.05%)</title><rect x="100.4" y="819.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.4" y="830.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (7 samples, 0.16%)</title><rect x="101.0" y="819.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="104.0" y="830.0"></text>
</g>
<g>
<title>native_flush_tlb_others (5 samples, 0.11%)</title><rect x="101.5" y="803.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="104.5" y="814.0"></text>
</g>
<g>
<title>smp_call_function_many (5 samples, 0.11%)</title><rect x="101.5" y="787.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="104.5" y="798.0"></text>
</g>
<g>
<title>smp_call_function_single (5 samples, 0.11%)</title><rect x="101.5" y="771.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="104.5" y="782.0"></text>
</g>
<g>
<title>generic_exec_single (2 samples, 0.05%)</title><rect x="102.3" y="755.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.3" y="766.0"></text>
</g>
<g>
<title>native_send_call_func_single_ipi (2 samples, 0.05%)</title><rect x="102.3" y="739.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="105.3" y="750.0"></text>
</g>
<g>
<title>default_send_IPI_single (2 samples, 0.05%)</title><rect x="102.3" y="723.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.3" y="734.0"></text>
</g>
<g>
<title>default_send_IPI_mask_logical (2 samples, 0.05%)</title><rect x="102.3" y="707.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="105.3" y="718.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (5 samples, 0.11%)</title><rect x="102.9" y="947.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="105.9" y="958.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.11%)</title><rect x="102.9" y="931.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="105.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.11%)</title><rect x="102.9" y="915.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="105.9" y="926.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.11%)</title><rect x="102.9" y="899.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="105.9" y="910.0"></text>
</g>
<g>
<title>sys_mprotect (5 samples, 0.11%)</title><rect x="102.9" y="883.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="105.9" y="894.0"></text>
</g>
<g>
<title>mprotect_fixup (5 samples, 0.11%)</title><rect x="102.9" y="867.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="105.9" y="878.0"></text>
</g>
<g>
<title>change_protection (5 samples, 0.11%)</title><rect x="102.9" y="851.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="105.9" y="862.0"></text>
</g>
<g>
<title>change_protection_range (5 samples, 0.11%)</title><rect x="102.9" y="835.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="105.9" y="846.0"></text>
</g>
<g>
<title>__ptep_modify_prot_commit (1 samples, 0.02%)</title><rect x="102.9" y="819.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="105.9" y="830.0"></text>
</g>
<g>
<title>native_set_pte_at (1 samples, 0.02%)</title><rect x="102.9" y="803.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="105.9" y="814.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (4 samples, 0.09%)</title><rect x="103.1" y="819.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="106.1" y="830.0"></text>
</g>
<g>
<title>native_flush_tlb_others (4 samples, 0.09%)</title><rect x="103.1" y="803.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="106.1" y="814.0"></text>
</g>
<g>
<title>smp_call_function_many (4 samples, 0.09%)</title><rect x="103.1" y="787.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="106.1" y="798.0"></text>
</g>
<g>
<title>smp_call_function_single (4 samples, 0.09%)</title><rect x="103.1" y="771.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="106.1" y="782.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.61] (16 samples, 0.36%)</title><rect x="104.2" y="947.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="107.2" y="958.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (16 samples, 0.36%)</title><rect x="104.2" y="931.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="107.2" y="942.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (16 samples, 0.36%)</title><rect x="104.2" y="915.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="107.2" y="926.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned int, bool) (16 samples, 0.36%)</title><rect x="104.2" y="899.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="107.2" y="910.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned int, bool, GenCollectedHeap::GenerationType) (16 samples, 0.36%)</title><rect x="104.2" y="883.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="107.2" y="894.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned int, bool, bool, bool, bool) (15 samples, 0.34%)</title><rect x="104.2" y="867.0" width="4.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="107.2" y="878.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned int, bool) (15 samples, 0.34%)</title><rect x="104.2" y="851.0" width="4.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="107.2" y="862.0"></text>
</g>
<g>
<title>AgeTable::print_age_table(unsigned int) (1 samples, 0.02%)</title><rect x="104.2" y="835.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="107.2" y="846.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (11 samples, 0.25%)</title><rect x="104.5" y="835.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="107.5" y="846.0"></text>
</g>
<g>
<title>CardGeneration::younger_refs_iterate(OopsInGenClosure*, unsigned int) (2 samples, 0.05%)</title><rect x="104.5" y="819.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="107.5" y="830.0"></text>
</g>
<g>
<title>CardTableRS::younger_refs_in_space_iterate(Space*, OopsInGenClosure*, unsigned int) (2 samples, 0.05%)</title><rect x="104.5" y="803.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="107.5" y="814.0"></text>
</g>
<g>
<title>ClearNoncleanCardWrapper::do_MemRegion(MemRegion) (2 samples, 0.05%)</title><rect x="104.5" y="787.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="107.5" y="798.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (2 samples, 0.05%)</title><rect x="104.5" y="771.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="107.5" y="782.0"></text>
</g>
<g>
<title>BlockOffsetArrayContigSpace::block_start_unsafe(void const*) const (1 samples, 0.02%)</title><rect x="104.5" y="755.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="107.5" y="766.0"></text>
</g>
<g>
<title>ContiguousSpace::block_size(HeapWord const*) const (1 samples, 0.02%)</title><rect x="104.5" y="739.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="107.5" y="750.0"></text>
</g>
<g>
<title>FilteringDCTOC::walk_mem_region(MemRegion, HeapWord*, HeapWord*) (1 samples, 0.02%)</title><rect x="104.7" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="107.7" y="766.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, oopDesc*&gt;(FilteringClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="104.7" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="107.7" y="750.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(oopDesc**) (1 samples, 0.02%)</title><rect x="105.0" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="108.0" y="830.0"></text>
</g>
<g>
<title>StringTable::oops_do(OopClosure*) (3 samples, 0.07%)</title><rect x="105.3" y="819.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="108.3" y="830.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(oopDesc**) (3 samples, 0.07%)</title><rect x="105.3" y="803.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="108.3" y="814.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (5 samples, 0.11%)</title><rect x="106.1" y="819.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="109.1" y="830.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (5 samples, 0.11%)</title><rect x="106.1" y="803.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="109.1" y="814.0"></text>
</g>
<g>
<title>StackFrameStream::StackFrameStream(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="106.1" y="787.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="109.1" y="798.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="106.1" y="771.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="109.1" y="782.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="106.1" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="109.1" y="766.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (4 samples, 0.09%)</title><rect x="106.4" y="787.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="109.4" y="798.0"></text>
</g>
<g>
<title>Bytecode_member_ref::signature() const (1 samples, 0.02%)</title><rect x="106.4" y="771.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="109.4" y="782.0"></text>
</g>
<g>
<title>ConstantPool::impl_signature_ref_at(int, bool) (1 samples, 0.02%)</title><rect x="106.4" y="755.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="109.4" y="766.0"></text>
</g>
<g>
<title>InterpreterOopMap::iterate_oop(OffsetClosure*) const (1 samples, 0.02%)</title><rect x="106.6" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.6" y="782.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (1 samples, 0.02%)</title><rect x="106.9" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="109.9" y="782.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (1 samples, 0.02%)</title><rect x="107.2" y="771.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="110.2" y="782.0"></text>
</g>
<g>
<title>ReferenceProcessorPhaseTimes::print_all_references(unsigned int, bool) const (1 samples, 0.02%)</title><rect x="107.4" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="110.4" y="846.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (2 samples, 0.05%)</title><rect x="107.7" y="835.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="110.7" y="846.0"></text>
</g>
<g>
<title>JvmtiExport::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.02%)</title><rect x="108.0" y="819.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="111.0" y="830.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.02%)</title><rect x="108.0" y="803.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="111.0" y="814.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (1 samples, 0.02%)</title><rect x="108.0" y="787.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="111.0" y="798.0"></text>
</g>
<g>
<title>ReferenceProcessor::enable_discovery(bool) (1 samples, 0.02%)</title><rect x="108.2" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="111.2" y="878.0"></text>
</g>
<g>
<title>WatcherThread::run() (8 samples, 0.18%)</title><rect x="108.5" y="979.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="111.5" y="990.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.02%)</title><rect x="108.5" y="963.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="111.5" y="974.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.02%)</title><rect x="108.5" y="947.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="111.5" y="958.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (7 samples, 0.16%)</title><rect x="108.8" y="963.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="111.8" y="974.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (7 samples, 0.16%)</title><rect x="108.8" y="947.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="111.8" y="958.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (7 samples, 0.16%)</title><rect x="108.8" y="931.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="111.8" y="942.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="108.8" y="915.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="111.8" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.14%)</title><rect x="109.1" y="915.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="112.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (6 samples, 0.14%)</title><rect x="109.1" y="899.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.1" y="910.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (6 samples, 0.14%)</title><rect x="109.1" y="883.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="112.1" y="894.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.14%)</title><rect x="109.1" y="867.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="112.1" y="878.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.14%)</title><rect x="109.1" y="851.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="112.1" y="862.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.14%)</title><rect x="109.1" y="835.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="112.1" y="846.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.14%)</title><rect x="109.1" y="819.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="112.1" y="830.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.14%)</title><rect x="109.1" y="803.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="112.1" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.11%)</title><rect x="109.3" y="787.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="112.3" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.11%)</title><rect x="109.3" y="771.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="112.3" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,112 samples, 70.99%)</title><rect x="110.7" y="1043.0" width="837.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.7" y="1054.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,112 samples, 70.99%)</title><rect x="110.7" y="1027.0" width="837.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.7" y="1038.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,112 samples, 70.99%)</title><rect x="110.7" y="1011.0" width="837.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.7" y="1022.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (424 samples, 9.67%)</title><rect x="111.2" y="995.0" width="114.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.2" y="1006.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (410 samples, 9.35%)</title><rect x="115.0" y="979.0" width="110.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.0" y="990.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (351 samples, 8.01%)</title><rect x="116.0" y="963.0" width="94.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.0" y="974.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (26 samples, 0.59%)</title><rect x="117.1" y="947.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (26 samples, 0.59%)</title><rect x="117.1" y="931.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="123.3" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="123.3" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="123.6" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.6" y="926.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="123.9" y="915.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="126.9" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="123.9" y="899.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="126.9" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="123.9" y="883.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="126.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.05%)</title><rect x="124.1" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.05%)</title><rect x="124.1" y="931.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (319 samples, 7.28%)</title><rect x="124.7" y="947.0" width="85.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.7" y="958.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (315 samples, 7.19%)</title><rect x="125.7" y="931.0" width="84.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.7" y="942.0">jdk/intern..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.07%)</title><rect x="126.8" y="915.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="129.8" y="926.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (9 samples, 0.21%)</title><rect x="127.6" y="915.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="130.6" y="926.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (3 samples, 0.07%)</title><rect x="130.0" y="915.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="133.0" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="130.9" y="915.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="133.9" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (5 samples, 0.11%)</title><rect x="131.1" y="915.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="134.1" y="926.0"></text>
</g>
<g>
<title>Unsafe_Park (90 samples, 2.05%)</title><rect x="132.5" y="915.0" width="24.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="135.5" y="926.0">U..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.05%)</title><rect x="134.9" y="899.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="137.9" y="910.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (6 samples, 0.14%)</title><rect x="135.4" y="899.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="138.4" y="910.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (10 samples, 0.23%)</title><rect x="137.0" y="899.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="140.0" y="910.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.05%)</title><rect x="138.7" y="883.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="141.7" y="894.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="139.2" y="883.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="142.2" y="894.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="139.5" y="883.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="142.5" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="139.5" y="867.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="142.5" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="139.5" y="851.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="142.5" y="862.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (7 samples, 0.16%)</title><rect x="139.7" y="899.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="142.7" y="910.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="141.6" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="144.6" y="910.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="141.6" y="883.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="144.6" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="141.6" y="867.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="144.6" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="141.6" y="851.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="144.6" y="862.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="141.6" y="835.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="144.6" y="846.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="141.6" y="819.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="144.6" y="830.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="141.6" y="803.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="144.6" y="814.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="141.6" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="144.6" y="798.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="141.6" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="144.6" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="141.6" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="144.6" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="141.6" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="144.6" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (11 samples, 0.25%)</title><rect x="141.9" y="899.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="144.9" y="910.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.05%)</title><rect x="143.2" y="883.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="146.2" y="894.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (4 samples, 0.09%)</title><rect x="143.8" y="883.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="146.8" y="894.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.05%)</title><rect x="144.8" y="899.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="147.8" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (9 samples, 0.21%)</title><rect x="145.4" y="899.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="148.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="147.8" y="899.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="150.8" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.09%)</title><rect x="147.8" y="883.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="150.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.09%)</title><rect x="147.8" y="867.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="150.8" y="878.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="147.8" y="851.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="150.8" y="862.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.07%)</title><rect x="148.1" y="851.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="151.1" y="862.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (8 samples, 0.18%)</title><rect x="148.9" y="899.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="151.9" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.11%)</title><rect x="151.0" y="899.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="154.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.07%)</title><rect x="151.6" y="883.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="154.6" y="894.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.07%)</title><rect x="151.6" y="867.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="154.6" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="151.6" y="851.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="154.6" y="862.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.07%)</title><rect x="151.6" y="835.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="154.6" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.07%)</title><rect x="151.6" y="819.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="154.6" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="151.8" y="803.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="154.8" y="814.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="152.4" y="899.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="155.4" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="152.7" y="899.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="155.7" y="910.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (3 samples, 0.07%)</title><rect x="152.9" y="899.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="155.9" y="910.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.05%)</title><rect x="153.7" y="899.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="156.7" y="910.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.05%)</title><rect x="154.3" y="899.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="157.3" y="910.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="154.8" y="899.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="157.8" y="910.0"></text>
</g>
<g>
<title>pthread_cond_wait (3 samples, 0.07%)</title><rect x="155.3" y="899.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="158.3" y="910.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="156.2" y="899.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="159.2" y="910.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="156.4" y="883.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="159.4" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="156.4" y="867.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="159.4" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="156.4" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="159.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (199 samples, 4.54%)</title><rect x="156.7" y="915.0" width="53.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="159.7" y="926.0">[unkn..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="156.7" y="899.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="159.7" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.05%)</title><rect x="156.7" y="883.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="159.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.05%)</title><rect x="156.7" y="867.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="159.7" y="878.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.05%)</title><rect x="156.7" y="851.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="159.7" y="862.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.02%)</title><rect x="157.2" y="899.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="160.2" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (188 samples, 4.29%)</title><rect x="157.5" y="899.0" width="50.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="160.5" y="910.0">__ker..</text>
</g>
<g>
<title>entry_SYSENTER_32 (187 samples, 4.27%)</title><rect x="157.8" y="883.0" width="50.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="160.8" y="894.0">entry..</text>
</g>
<g>
<title>do_fast_syscall_32 (187 samples, 4.27%)</title><rect x="157.8" y="867.0" width="50.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="160.8" y="878.0">do_fa..</text>
</g>
<g>
<title>sys_futex (186 samples, 4.24%)</title><rect x="158.0" y="851.0" width="50.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="161.0" y="862.0">sys_f..</text>
</g>
<g>
<title>do_futex (182 samples, 4.15%)</title><rect x="158.0" y="835.0" width="49.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="161.0" y="846.0">do_f..</text>
</g>
<g>
<title>futex_wait (180 samples, 4.11%)</title><rect x="158.3" y="819.0" width="48.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="161.3" y="830.0">fute..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="159.1" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="162.1" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (170 samples, 3.88%)</title><rect x="159.4" y="803.0" width="45.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="162.4" y="814.0">fute..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="159.4" y="787.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="162.4" y="798.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="159.4" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="162.4" y="782.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="159.7" y="787.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="162.7" y="798.0"></text>
</g>
<g>
<title>schedule (168 samples, 3.83%)</title><rect x="159.9" y="787.0" width="45.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="162.9" y="798.0">sche..</text>
</g>
<g>
<title>__sched_text_start (168 samples, 3.83%)</title><rect x="159.9" y="771.0" width="45.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="162.9" y="782.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (168 samples, 3.83%)</title><rect x="159.9" y="755.0" width="45.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="162.9" y="766.0">fini..</text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.09%)</title><rect x="205.1" y="803.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="208.1" y="814.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.10 (1 samples, 0.02%)</title><rect x="205.7" y="787.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="208.7" y="798.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="205.9" y="787.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="208.9" y="798.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.05%)</title><rect x="206.2" y="803.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="209.2" y="814.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="206.8" y="819.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="209.8" y="830.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.09%)</title><rect x="207.0" y="835.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="210.0" y="846.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="208.1" y="899.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="211.1" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.11%)</title><rect x="208.4" y="899.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="211.4" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="209.7" y="899.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="212.7" y="910.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="210.0" y="899.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="213.0" y="910.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="210.3" y="915.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="213.3" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="210.3" y="899.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="213.3" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="210.3" y="883.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="213.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.11%)</title><rect x="210.5" y="963.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.11%)</title><rect x="210.5" y="947.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.11%)</title><rect x="210.5" y="931.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (49 samples, 1.12%)</title><rect x="211.9" y="963.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="214.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (49 samples, 1.12%)</title><rect x="211.9" y="947.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (49 samples, 1.12%)</title><rect x="211.9" y="931.0" width="13.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 1.12%)</title><rect x="211.9" y="915.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (49 samples, 1.12%)</title><rect x="211.9" y="899.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.9" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.14%)</title><rect x="212.1" y="883.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="215.1" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (2 samples, 0.05%)</title><rect x="212.7" y="867.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="215.7" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="213.2" y="867.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="216.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.96%)</title><rect x="213.8" y="883.0" width="11.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="216.8" y="894.0"></text>
</g>
<g>
<title>__kernel_vsyscall (40 samples, 0.91%)</title><rect x="213.8" y="867.0" width="10.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="216.8" y="878.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (40 samples, 0.91%)</title><rect x="213.8" y="851.0" width="10.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="216.8" y="862.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (40 samples, 0.91%)</title><rect x="213.8" y="835.0" width="10.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.8" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="213.8" y="819.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="216.8" y="830.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="213.8" y="803.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="216.8" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="213.8" y="787.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="216.8" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="213.8" y="771.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="216.8" y="782.0"></text>
</g>
<g>
<title>sys_futex (39 samples, 0.89%)</title><rect x="214.0" y="819.0" width="10.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="217.0" y="830.0"></text>
</g>
<g>
<title>do_futex (39 samples, 0.89%)</title><rect x="214.0" y="803.0" width="10.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="217.0" y="814.0"></text>
</g>
<g>
<title>futex_wake (39 samples, 0.89%)</title><rect x="214.0" y="787.0" width="10.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="217.0" y="798.0"></text>
</g>
<g>
<title>wake_up_q (38 samples, 0.87%)</title><rect x="214.3" y="771.0" width="10.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="217.3" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (38 samples, 0.87%)</title><rect x="214.3" y="755.0" width="10.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="217.3" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (38 samples, 0.87%)</title><rect x="214.3" y="739.0" width="10.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="217.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="224.5" y="867.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="227.5" y="878.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="225.1" y="963.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="228.1" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="225.1" y="947.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="228.1" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="225.1" y="931.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="228.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$68/16487378.run (2,686 samples, 61.27%)</title><rect x="225.3" y="995.0" width="723.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.3" y="1006.0">ru/mail/polis/service/dogm/ServiceImpl$$Lambda$68/16487378.run</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$5 (2,686 samples, 61.27%)</title><rect x="225.3" y="979.0" width="723.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.3" y="990.0">ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$5</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,034 samples, 23.59%)</title><rect x="226.4" y="963.0" width="278.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="229.4" y="974.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="227.2" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="227.2" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.2" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="227.2" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (961 samples, 21.92%)</title><rect x="227.5" y="947.0" width="258.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.5" y="958.0">one/nio/http/HttpSession.writeResp..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (18 samples, 0.41%)</title><rect x="227.5" y="931.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.5" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.16%)</title><rect x="230.2" y="915.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.2" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.16%)</title><rect x="230.2" y="899.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.16%)</title><rect x="230.2" y="883.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.2" y="894.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="231.8" y="867.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="234.8" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="231.8" y="851.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="234.8" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="231.8" y="835.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="234.8" y="846.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="232.1" y="915.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="235.1" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="232.1" y="899.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="235.1" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="232.1" y="883.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="235.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (943 samples, 21.51%)</title><rect x="232.3" y="931.0" width="253.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.3" y="942.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (943 samples, 21.51%)</title><rect x="232.3" y="915.0" width="253.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.3" y="926.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (941 samples, 21.46%)</title><rect x="232.9" y="899.0" width="253.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.9" y="910.0">one/nio/net/Session$ArrayQueueItem..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (936 samples, 21.35%)</title><rect x="234.2" y="883.0" width="251.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.2" y="894.0">one/nio/net/JavaSocket.write</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="234.7" y="867.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.7" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="234.7" y="851.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="234.7" y="835.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.7" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="234.7" y="819.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="235.6" y="803.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (930 samples, 21.21%)</title><rect x="235.8" y="867.0" width="250.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.8" y="878.0">sun/nio/ch/SocketChannelImpl.write</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="235.8" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="235.8" y="835.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.07%)</title><rect x="236.1" y="851.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.07%)</title><rect x="236.1" y="835.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.07%)</title><rect x="236.1" y="819.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.07%)</title><rect x="236.1" y="803.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (919 samples, 20.96%)</title><rect x="236.9" y="851.0" width="247.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.9" y="862.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (918 samples, 20.94%)</title><rect x="237.2" y="835.0" width="247.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.2" y="846.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (918 samples, 20.94%)</title><rect x="237.2" y="819.0" width="247.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.2" y="830.0">sun/nio/ch/IOUtil.writeFromNative..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (16 samples, 0.36%)</title><rect x="237.2" y="803.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (902 samples, 20.57%)</title><rect x="241.5" y="803.0" width="242.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.5" y="814.0">sun/nio/ch/SocketDispatcher.write</text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="244.2" y="787.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="247.2" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="244.2" y="771.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="247.2" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="244.2" y="755.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="247.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (891 samples, 20.32%)</title><rect x="244.4" y="787.0" width="239.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.4" y="798.0">sun/nio/ch/FileDispatcherImpl.wr..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.05%)</title><rect x="247.4" y="771.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="250.4" y="782.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="247.7" y="755.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="250.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="247.7" y="739.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="250.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="247.7" y="723.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="250.7" y="734.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (4 samples, 0.09%)</title><rect x="247.9" y="771.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="250.9" y="782.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="248.7" y="755.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="251.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="249.0" y="771.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="252.0" y="782.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.09%)</title><rect x="249.0" y="755.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="252.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.09%)</title><rect x="249.0" y="739.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="252.0" y="750.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.09%)</title><rect x="249.0" y="723.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="252.0" y="734.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="249.8" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="252.8" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="249.8" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="252.8" y="702.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="249.8" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="252.8" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="249.8" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="252.8" y="670.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="249.8" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="252.8" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="249.8" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="252.8" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="249.8" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="252.8" y="622.0"></text>
</g>
<g>
<title>__kernel_vsyscall (866 samples, 19.75%)</title><rect x="250.1" y="771.0" width="233.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="253.1" y="782.0">__kernel_vsyscall</text>
</g>
<g>
<title>entry_SYSENTER_32 (861 samples, 19.64%)</title><rect x="251.4" y="755.0" width="231.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="254.4" y="766.0">entry_SYSENTER_32</text>
</g>
<g>
<title>do_fast_syscall_32 (861 samples, 19.64%)</title><rect x="251.4" y="739.0" width="231.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="254.4" y="750.0">do_fast_syscall_32</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.05%)</title><rect x="251.7" y="723.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="254.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (61 samples, 1.39%)</title><rect x="252.2" y="723.0" width="16.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="255.2" y="734.0"></text>
</g>
<g>
<title>schedule (58 samples, 1.32%)</title><rect x="253.1" y="707.0" width="15.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="256.1" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (58 samples, 1.32%)</title><rect x="253.1" y="691.0" width="15.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="256.1" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (58 samples, 1.32%)</title><rect x="253.1" y="675.0" width="15.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="256.1" y="686.0"></text>
</g>
<g>
<title>fput (2 samples, 0.05%)</title><rect x="268.7" y="723.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="271.7" y="734.0"></text>
</g>
<g>
<title>sys_write (793 samples, 18.09%)</title><rect x="269.2" y="723.0" width="213.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="272.2" y="734.0">sys_write</text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.16%)</title><rect x="269.7" y="707.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="272.7" y="718.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.16%)</title><rect x="269.7" y="691.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="272.7" y="702.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.16%)</title><rect x="269.7" y="675.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="272.7" y="686.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="271.6" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="274.6" y="718.0"></text>
</g>
<g>
<title>vfs_write (783 samples, 17.86%)</title><rect x="271.9" y="707.0" width="210.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="274.9" y="718.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (762 samples, 17.38%)</title><rect x="273.8" y="691.0" width="205.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="276.8" y="702.0">__vfs_write</text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.05%)</title><rect x="274.6" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="277.6" y="686.0"></text>
</g>
<g>
<title>new_sync_write (757 samples, 17.27%)</title><rect x="275.1" y="675.0" width="203.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.1" y="686.0">new_sync_write</text>
</g>
<g>
<title>sock_write_iter (752 samples, 17.15%)</title><rect x="276.5" y="659.0" width="202.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="279.5" y="670.0">sock_write_iter</text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.05%)</title><rect x="277.0" y="643.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="280.0" y="654.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.02%)</title><rect x="277.5" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="280.5" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (747 samples, 17.04%)</title><rect x="277.8" y="643.0" width="201.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="280.8" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (742 samples, 16.93%)</title><rect x="278.1" y="627.0" width="199.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="281.1" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="278.6" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="281.6" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (739 samples, 16.86%)</title><rect x="278.9" y="611.0" width="198.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="281.9" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="280.0" y="595.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="283.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="280.2" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="283.2" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.07%)</title><rect x="280.5" y="595.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="283.5" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="280.5" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="283.5" y="590.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="280.8" y="579.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="283.8" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="280.8" y="563.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="283.8" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="280.8" y="547.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="283.8" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="281.0" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="284.0" y="590.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.02%)</title><rect x="281.3" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="284.3" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="281.6" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="284.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (727 samples, 16.58%)</title><rect x="281.9" y="595.0" width="195.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="284.9" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="285.1" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="288.1" y="590.0"></text>
</g>
<g>
<title>page_address (1 samples, 0.02%)</title><rect x="285.4" y="563.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="288.4" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="285.6" y="579.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="288.6" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.11%)</title><rect x="286.2" y="579.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="289.2" y="590.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.05%)</title><rect x="286.4" y="563.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="289.4" y="574.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.05%)</title><rect x="286.4" y="547.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="289.4" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.05%)</title><rect x="287.0" y="563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.0" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="287.5" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="290.5" y="590.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="287.8" y="579.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="290.8" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (34 samples, 0.78%)</title><rect x="288.0" y="579.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="291.0" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (31 samples, 0.71%)</title><rect x="288.6" y="563.0" width="8.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="291.6" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (11 samples, 0.25%)</title><rect x="289.9" y="547.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="292.9" y="558.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (7 samples, 0.16%)</title><rect x="289.9" y="531.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="292.9" y="542.0"></text>
</g>
<g>
<title>__slab_alloc.constprop.83 (2 samples, 0.05%)</title><rect x="291.3" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="294.3" y="526.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="291.8" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="294.8" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.07%)</title><rect x="292.1" y="531.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="295.1" y="542.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.05%)</title><rect x="292.9" y="547.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="295.9" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc (7 samples, 0.16%)</title><rect x="293.4" y="547.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="296.4" y="558.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.14%)</title><rect x="295.3" y="547.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="298.3" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (1 samples, 0.02%)</title><rect x="296.9" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="299.9" y="574.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="297.2" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="300.2" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="297.5" y="579.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="300.5" y="590.0"></text>
</g>
<g>
<title>tcp_push (651 samples, 14.85%)</title><rect x="297.7" y="579.0" width="175.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="300.7" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (649 samples, 14.80%)</title><rect x="298.0" y="563.0" width="174.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="301.0" y="574.0">__tcp_push_pending_fra..</text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.05%)</title><rect x="298.0" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="301.0" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="298.5" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="301.5" y="558.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.28 (1 samples, 0.02%)</title><rect x="298.8" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="301.8" y="558.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="299.1" y="547.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="302.1" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (644 samples, 14.69%)</title><rect x="299.3" y="547.0" width="173.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="302.3" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (613 samples, 13.98%)</title><rect x="301.0" y="531.0" width="165.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="304.0" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="303.1" y="515.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="306.1" y="526.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="303.7" y="515.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="306.7" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.05%)</title><rect x="303.9" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="306.9" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (594 samples, 13.55%)</title><rect x="304.5" y="515.0" width="159.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="307.5" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="305.8" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="308.8" y="510.0"></text>
</g>
<g>
<title>ip_local_out (583 samples, 13.30%)</title><rect x="306.1" y="499.0" width="156.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="309.1" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.05%)</title><rect x="306.1" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="309.1" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="306.6" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="309.6" y="494.0"></text>
</g>
<g>
<title>ip_output (580 samples, 13.23%)</title><rect x="306.9" y="483.0" width="156.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="309.9" y="494.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="307.2" y="467.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="310.2" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="307.4" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="310.4" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (576 samples, 13.14%)</title><rect x="307.7" y="467.0" width="155.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="310.7" y="478.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.07%)</title><rect x="307.7" y="451.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="310.7" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="308.5" y="451.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="311.5" y="462.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="308.8" y="451.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="311.8" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (570 samples, 13.00%)</title><rect x="309.0" y="451.0" width="153.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="312.0" y="462.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (521 samples, 11.88%)</title><rect x="310.4" y="435.0" width="140.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="313.4" y="446.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.15 (521 samples, 11.88%)</title><rect x="310.4" y="419.0" width="140.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="313.4" y="430.0">do_softirq.part.15</text>
</g>
<g>
<title>do_softirq_own_stack (520 samples, 11.86%)</title><rect x="310.7" y="403.0" width="139.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="313.7" y="414.0">do_softirq_own_st..</text>
</g>
<g>
<title>call_on_stack (520 samples, 11.86%)</title><rect x="310.7" y="387.0" width="139.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="313.7" y="398.0">call_on_stack</text>
</g>
<g>
<title>__do_softirq (518 samples, 11.82%)</title><rect x="310.7" y="371.0" width="139.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.7" y="382.0">__do_softirq</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="312.3" y="355.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="315.3" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_ecx (1 samples, 0.02%)</title><rect x="312.5" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="315.5" y="366.0"></text>
</g>
<g>
<title>net_rx_action (509 samples, 11.61%)</title><rect x="312.8" y="355.0" width="137.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="315.8" y="366.0">net_rx_action</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="313.1" y="339.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="316.1" y="350.0"></text>
</g>
<g>
<title>process_backlog (507 samples, 11.56%)</title><rect x="313.3" y="339.0" width="136.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="316.3" y="350.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (500 samples, 11.41%)</title><rect x="315.2" y="323.0" width="134.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="318.2" y="334.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_core (497 samples, 11.34%)</title><rect x="315.5" y="307.0" width="133.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="318.5" y="318.0">__netif_receive_s..</text>
</g>
<g>
<title>ip_rcv (492 samples, 11.22%)</title><rect x="316.6" y="291.0" width="132.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="319.6" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (487 samples, 11.11%)</title><rect x="317.9" y="275.0" width="131.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="320.9" y="286.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (484 samples, 11.04%)</title><rect x="318.7" y="259.0" width="130.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="321.7" y="270.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (483 samples, 11.02%)</title><rect x="318.7" y="243.0" width="130.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="321.7" y="254.0">ip_local_deliver..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="319.0" y="227.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="322.0" y="238.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="319.5" y="227.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="322.5" y="238.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.34 (2 samples, 0.05%)</title><rect x="319.8" y="227.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="322.8" y="238.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="320.3" y="227.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="323.3" y="238.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.05%)</title><rect x="320.6" y="227.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="323.6" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (474 samples, 10.81%)</title><rect x="321.1" y="227.0" width="127.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="324.1" y="238.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.14%)</title><rect x="323.8" y="211.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="326.8" y="222.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="325.2" y="195.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="328.2" y="206.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (2 samples, 0.05%)</title><rect x="325.5" y="211.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="328.5" y="222.0"></text>
</g>
<g>
<title>__pv_queued_spin_unlock (2 samples, 0.05%)</title><rect x="325.5" y="195.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="328.5" y="206.0"></text>
</g>
<g>
<title>__pv_queued_spin_unlock_slowpath (1 samples, 0.02%)</title><rect x="325.7" y="179.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="328.7" y="190.0"></text>
</g>
<g>
<title>kvm_kick_cpu (1 samples, 0.02%)</title><rect x="325.7" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="328.7" y="174.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.34 (2 samples, 0.05%)</title><rect x="326.0" y="211.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="329.0" y="222.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="326.5" y="211.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="329.5" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.11%)</title><rect x="326.8" y="211.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="329.8" y="222.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="327.1" y="195.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="330.1" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.05%)</title><rect x="327.3" y="195.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="330.3" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="327.9" y="195.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="330.9" y="206.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="328.1" y="211.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="331.1" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="328.4" y="211.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="331.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (442 samples, 10.08%)</title><rect x="328.7" y="211.0" width="119.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="331.7" y="222.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="329.2" y="195.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="332.2" y="206.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.05%)</title><rect x="329.5" y="195.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="332.5" y="206.0"></text>
</g>
<g>
<title>tcp_data_queue (3 samples, 0.07%)</title><rect x="330.0" y="195.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="333.0" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (431 samples, 9.83%)</title><rect x="330.8" y="195.0" width="116.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="333.8" y="206.0">tcp_rcv_establ..</text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.21%)</title><rect x="333.3" y="179.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="336.3" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (9 samples, 0.21%)</title><rect x="333.3" y="163.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="336.3" y="174.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="333.5" y="147.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="336.5" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.16%)</title><rect x="333.8" y="147.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="336.8" y="158.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.16%)</title><rect x="333.8" y="131.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="336.8" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.16%)</title><rect x="333.8" y="115.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="336.8" y="126.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="335.7" y="179.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="338.7" y="190.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.05%)</title><rect x="336.2" y="179.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="339.2" y="190.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.05%)</title><rect x="336.2" y="163.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="339.2" y="174.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (2 samples, 0.05%)</title><rect x="336.2" y="147.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="339.2" y="158.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="336.5" y="131.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="339.5" y="142.0"></text>
</g>
<g>
<title>tcp_ack (42 samples, 0.96%)</title><rect x="336.8" y="179.0" width="11.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="339.8" y="190.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.05%)</title><rect x="339.2" y="163.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="342.2" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="339.7" y="163.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="342.7" y="174.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.05%)</title><rect x="340.0" y="163.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="343.0" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (26 samples, 0.59%)</title><rect x="340.5" y="163.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="343.5" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.23%)</title><rect x="342.7" y="147.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="345.7" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.11%)</title><rect x="342.7" y="131.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="345.7" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.09%)</title><rect x="343.0" y="115.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="346.0" y="126.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.11%)</title><rect x="344.0" y="131.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="347.0" y="142.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="344.0" y="115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.0" y="126.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.09%)</title><rect x="344.3" y="115.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="347.3" y="126.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.09%)</title><rect x="344.3" y="99.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.3" y="110.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.09%)</title><rect x="344.3" y="83.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="347.3" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="345.1" y="67.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="348.1" y="78.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.05%)</title><rect x="345.4" y="147.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="348.4" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (3 samples, 0.07%)</title><rect x="345.9" y="147.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="348.9" y="158.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.02%)</title><rect x="346.5" y="131.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="349.5" y="142.0"></text>
</g>
<g>
<title>minmax_subwin_update (1 samples, 0.02%)</title><rect x="346.5" y="115.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="349.5" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="346.7" y="147.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="349.7" y="158.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.05%)</title><rect x="347.0" y="147.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="350.0" y="158.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="347.5" y="163.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="350.5" y="174.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="347.8" y="163.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="350.8" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.05%)</title><rect x="348.1" y="179.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="351.1" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.05%)</title><rect x="348.6" y="179.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="351.6" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (358 samples, 8.17%)</title><rect x="349.1" y="179.0" width="96.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="352.1" y="190.0">tcp_data_qu..</text>
</g>
<g>
<title>sock_def_readable (352 samples, 8.03%)</title><rect x="349.9" y="163.0" width="94.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="352.9" y="174.0">sock_def_re..</text>
</g>
<g>
<title>__wake_up_sync_key (348 samples, 7.94%)</title><rect x="351.0" y="147.0" width="93.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="354.0" y="158.0">__wake_up_s..</text>
</g>
<g>
<title>__wake_up_common_lock (348 samples, 7.94%)</title><rect x="351.0" y="131.0" width="93.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="354.0" y="142.0">__wake_up_c..</text>
</g>
<g>
<title>__lock_text_start (347 samples, 7.92%)</title><rect x="351.3" y="115.0" width="93.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.3" y="126.0">__lock_text..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.05%)</title><rect x="444.7" y="163.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="447.7" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="445.2" y="163.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="448.2" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="445.5" y="179.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="448.5" y="190.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="445.8" y="179.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="448.8" y="190.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="446.0" y="179.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="449.0" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.05%)</title><rect x="446.3" y="179.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="449.3" y="190.0"></text>
</g>
<g>
<title>tcp_urg (3 samples, 0.07%)</title><rect x="446.8" y="195.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="449.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.07%)</title><rect x="447.7" y="211.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="450.7" y="222.0"></text>
</g>
<g>
<title>memmove (1 samples, 0.02%)</title><rect x="448.2" y="195.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="451.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="448.5" y="211.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="451.5" y="222.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="448.5" y="195.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.5" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="448.7" y="243.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="451.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="449.0" y="291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="452.0" y="302.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="449.3" y="307.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="452.3" y="318.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="449.8" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="452.8" y="366.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="449.8" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="452.8" y="350.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="449.8" y="323.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="452.8" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="449.8" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="452.8" y="318.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="450.1" y="371.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="453.1" y="382.0"></text>
</g>
<g>
<title>rcu_bh_qs (1 samples, 0.02%)</title><rect x="450.3" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="453.3" y="382.0"></text>
</g>
<g>
<title>common_interrupt (1 samples, 0.02%)</title><rect x="450.6" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="453.6" y="446.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="450.6" y="419.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="453.6" y="430.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="450.6" y="403.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="453.6" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="450.6" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="453.6" y="398.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="450.6" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="453.6" y="382.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="450.6" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="453.6" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (43 samples, 0.98%)</title><rect x="450.9" y="435.0" width="11.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="453.9" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (42 samples, 0.96%)</title><rect x="450.9" y="419.0" width="11.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="453.9" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="453.8" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="456.8" y="414.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_ecx (1 samples, 0.02%)</title><rect x="454.1" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="457.1" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (15 samples, 0.34%)</title><rect x="454.4" y="403.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="457.4" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="455.2" y="387.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="458.2" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (11 samples, 0.25%)</title><rect x="455.5" y="387.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="458.5" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="455.5" y="371.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="458.5" y="382.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.11%)</title><rect x="455.7" y="371.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.7" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.11%)</title><rect x="455.7" y="355.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="458.7" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.11%)</title><rect x="455.7" y="339.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="458.7" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="457.1" y="371.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="460.1" y="382.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.05%)</title><rect x="457.3" y="371.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="460.3" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.05%)</title><rect x="457.9" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="460.9" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="458.4" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="461.4" y="414.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="458.7" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="461.7" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="459.0" y="403.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="462.0" y="414.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (3 samples, 0.07%)</title><rect x="459.2" y="403.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="462.2" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.16%)</title><rect x="460.0" y="403.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="463.0" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (7 samples, 0.16%)</title><rect x="460.0" y="387.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="463.0" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="461.9" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="464.9" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="462.2" y="419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="465.2" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="462.5" y="451.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="465.5" y="462.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="462.7" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.7" y="478.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.07%)</title><rect x="463.0" y="499.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="466.0" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="463.8" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="466.8" y="510.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.09%)</title><rect x="464.3" y="515.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="467.3" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="464.3" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="467.3" y="510.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.07%)</title><rect x="464.6" y="499.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="467.6" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.05%)</title><rect x="464.9" y="483.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="467.9" y="494.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="465.4" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="468.4" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="465.7" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="468.7" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="465.7" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="468.7" y="510.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="466.0" y="531.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.0" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="466.0" y="515.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="469.0" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="466.0" y="499.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="469.0" y="510.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="466.0" y="483.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="469.0" y="494.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="466.0" y="467.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.0" y="478.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="466.0" y="451.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="469.0" y="462.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="466.0" y="435.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="469.0" y="446.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="466.0" y="419.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.0" y="430.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="466.0" y="403.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="469.0" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="466.0" y="387.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="469.0" y="398.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="466.2" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="469.2" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="466.5" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="469.5" y="542.0"></text>
</g>
<g>
<title>sched_clock_cpu (8 samples, 0.18%)</title><rect x="466.8" y="531.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="469.8" y="542.0"></text>
</g>
<g>
<title>sched_clock (8 samples, 0.18%)</title><rect x="466.8" y="515.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="469.8" y="526.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (7 samples, 0.16%)</title><rect x="466.8" y="499.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="469.8" y="510.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (7 samples, 0.16%)</title><rect x="466.8" y="483.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="469.8" y="494.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="468.6" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="471.6" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="468.9" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="471.9" y="542.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="469.2" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="472.2" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.21%)</title><rect x="469.5" y="531.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="472.5" y="542.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="469.5" y="515.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="472.5" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (2 samples, 0.05%)</title><rect x="469.7" y="515.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="472.7" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.14%)</title><rect x="470.3" y="515.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="473.3" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (6 samples, 0.14%)</title><rect x="470.3" y="499.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.3" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.11%)</title><rect x="470.5" y="483.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="473.5" y="494.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.11%)</title><rect x="470.5" y="467.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="473.5" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.09%)</title><rect x="470.8" y="451.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="473.8" y="462.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="471.9" y="531.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="474.9" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="472.1" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="475.1" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="472.4" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="475.4" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="472.7" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="475.7" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (16 samples, 0.36%)</title><rect x="473.0" y="579.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="476.0" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="473.0" y="563.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="476.0" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (14 samples, 0.32%)</title><rect x="473.2" y="563.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="476.2" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="474.8" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="477.8" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (6 samples, 0.14%)</title><rect x="475.1" y="547.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="478.1" y="558.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="475.9" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="478.9" y="542.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (2 samples, 0.05%)</title><rect x="476.2" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="479.2" y="542.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.05%)</title><rect x="476.2" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="479.2" y="526.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="476.7" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="479.7" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="477.0" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="480.0" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="477.3" y="579.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="480.3" y="590.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="477.5" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="480.5" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.09%)</title><rect x="477.8" y="627.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="480.8" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.05%)</title><rect x="477.8" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="480.8" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.05%)</title><rect x="478.3" y="611.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="481.3" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.05%)</title><rect x="478.3" y="595.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="481.3" y="606.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.09%)</title><rect x="478.9" y="691.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="481.9" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (10 samples, 0.23%)</title><rect x="480.0" y="691.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="483.0" y="702.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.14%)</title><rect x="481.0" y="675.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="484.0" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.09%)</title><rect x="481.6" y="659.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="484.6" y="670.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.09%)</title><rect x="481.6" y="643.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="484.6" y="654.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.05%)</title><rect x="482.1" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="485.1" y="638.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.05%)</title><rect x="482.6" y="723.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="485.6" y="734.0"></text>
</g>
<g>
<title>__write (2 samples, 0.05%)</title><rect x="483.2" y="771.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="486.2" y="782.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="483.7" y="771.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="486.7" y="782.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="484.0" y="771.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="487.0" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="484.0" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="487.0" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="484.0" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="487.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (7 samples, 0.16%)</title><rect x="484.3" y="851.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (64 samples, 1.46%)</title><rect x="486.1" y="947.0" width="17.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="489.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="486.1" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="489.1" y="942.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="486.4" y="915.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="489.4" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="486.4" y="899.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="489.4" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="486.4" y="883.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="489.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.32%)</title><rect x="486.7" y="931.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="489.7" y="942.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="486.7" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="486.7" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.7" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="486.7" y="883.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="489.7" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="486.7" y="867.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="489.7" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.72] (1 samples, 0.02%)</title><rect x="486.7" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="489.7" y="862.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="486.7" y="835.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="489.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.30%)</title><rect x="487.0" y="915.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (8 samples, 0.18%)</title><rect x="487.5" y="899.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.5" y="910.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.14%)</title><rect x="488.0" y="883.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.0" y="894.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (4 samples, 0.09%)</title><rect x="488.6" y="867.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.07%)</title><rect x="489.6" y="899.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.6" y="910.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.07%)</title><rect x="489.6" y="883.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 1.09%)</title><rect x="490.5" y="931.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.5" y="942.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (9 samples, 0.21%)</title><rect x="490.5" y="915.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="493.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="492.9" y="915.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.9" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (37 samples, 0.84%)</title><rect x="493.4" y="915.0" width="10.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="496.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="493.4" y="899.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="496.4" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.09%)</title><rect x="493.4" y="883.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="496.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.09%)</title><rect x="493.4" y="867.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.4" y="878.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.09%)</title><rect x="493.4" y="851.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="496.4" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (30 samples, 0.68%)</title><rect x="494.5" y="899.0" width="8.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="497.5" y="910.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (28 samples, 0.64%)</title><rect x="495.0" y="883.0" width="7.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="498.0" y="894.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="495.0" y="867.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="498.0" y="878.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (26 samples, 0.59%)</title><rect x="495.3" y="867.0" width="7.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="498.3" y="878.0"></text>
</g>
<g>
<title>_copy_to_user (4 samples, 0.09%)</title><rect x="495.6" y="851.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.6" y="862.0"></text>
</g>
<g>
<title>do_gettimeofday (1 samples, 0.02%)</title><rect x="496.6" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="499.6" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="496.9" y="851.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="499.9" y="862.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="496.9" y="835.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="499.9" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="496.9" y="819.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="499.9" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="496.9" y="803.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="499.9" y="814.0"></text>
</g>
<g>
<title>sys_gettimeofday (18 samples, 0.41%)</title><rect x="497.4" y="851.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="500.4" y="862.0"></text>
</g>
<g>
<title>__getnstimeofday64 (3 samples, 0.07%)</title><rect x="497.4" y="835.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="500.4" y="846.0"></text>
</g>
<g>
<title>_copy_to_user (3 samples, 0.07%)</title><rect x="498.3" y="835.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.3" y="846.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.05%)</title><rect x="498.5" y="819.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="501.5" y="830.0"></text>
</g>
<g>
<title>do_gettimeofday (12 samples, 0.27%)</title><rect x="499.1" y="835.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="502.1" y="846.0"></text>
</g>
<g>
<title>__getnstimeofday64 (8 samples, 0.18%)</title><rect x="499.1" y="819.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="502.1" y="830.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (3 samples, 0.07%)</title><rect x="500.4" y="803.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="503.4" y="814.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.05%)</title><rect x="500.7" y="787.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.7" y="798.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (4 samples, 0.09%)</title><rect x="501.2" y="819.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="504.2" y="830.0"></text>
</g>
<g>
<title>sys_gettimeofday (1 samples, 0.02%)</title><rect x="502.3" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="505.3" y="878.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (3 samples, 0.07%)</title><rect x="502.6" y="899.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="505.6" y="910.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (5 samples, 0.11%)</title><rect x="503.4" y="947.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (5 samples, 0.11%)</title><rect x="503.4" y="931.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndAddLong (5 samples, 0.11%)</title><rect x="503.4" y="915.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$69/31033530.act (691 samples, 15.76%)</title><rect x="504.7" y="963.0" width="186.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.7" y="974.0">ru/mail/polis/service/do..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$0 (691 samples, 15.76%)</title><rect x="504.7" y="947.0" width="186.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.7" y="958.0">ru/mail/polis/service/do..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.proxy (691 samples, 15.76%)</title><rect x="504.7" y="931.0" width="186.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.7" y="942.0">ru/mail/polis/service/do..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Bridges.sendRequestTo (691 samples, 15.76%)</title><rect x="504.7" y="915.0" width="186.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.7" y="926.0">ru/mail/polis/service/do..</text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.09%)</title><rect x="504.7" y="899.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.7" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.09%)</title><rect x="504.7" y="883.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (687 samples, 15.67%)</title><rect x="505.8" y="899.0" width="184.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.8" y="910.0">one/nio/http/HttpClient...</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (687 samples, 15.67%)</title><rect x="505.8" y="883.0" width="184.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.8" y="894.0">one/nio/http/HttpClient...</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.09%)</title><rect x="506.3" y="867.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.09%)</title><rect x="506.3" y="851.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.3" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.09%)</title><rect x="506.3" y="835.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.09%)</title><rect x="506.3" y="819.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.09%)</title><rect x="506.3" y="803.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.3" y="814.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.05%)</title><rect x="506.9" y="787.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="509.9" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="506.9" y="771.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="509.9" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="506.9" y="755.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="509.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (135 samples, 3.08%)</title><rect x="507.4" y="867.0" width="36.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.4" y="878.0">one..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (120 samples, 2.74%)</title><rect x="511.4" y="851.0" width="32.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.4" y="862.0">on..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (120 samples, 2.74%)</title><rect x="511.4" y="835.0" width="32.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.4" y="846.0">su..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.05%)</title><rect x="512.5" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="512.5" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="512.5" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="512.5" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.5" y="782.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="513.1" y="819.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="516.1" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="513.1" y="803.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="516.1" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="513.1" y="787.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="516.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (108 samples, 2.46%)</title><rect x="513.3" y="819.0" width="29.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.3" y="830.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (108 samples, 2.46%)</title><rect x="513.3" y="803.0" width="29.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.3" y="814.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (108 samples, 2.46%)</title><rect x="513.3" y="787.0" width="29.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.3" y="798.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (108 samples, 2.46%)</title><rect x="513.3" y="771.0" width="29.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.3" y="782.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (101 samples, 2.30%)</title><rect x="515.2" y="755.0" width="27.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.2" y="766.0">s..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="516.3" y="739.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="519.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="516.6" y="739.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="519.6" y="750.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="516.6" y="723.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="519.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="516.6" y="707.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="519.6" y="718.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="516.6" y="691.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="519.6" y="702.0"></text>
</g>
<g>
<title>__kernel_vsyscall (95 samples, 2.17%)</title><rect x="516.8" y="739.0" width="25.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="519.8" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSENTER_32 (95 samples, 2.17%)</title><rect x="516.8" y="723.0" width="25.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="519.8" y="734.0">e..</text>
</g>
<g>
<title>do_fast_syscall_32 (95 samples, 2.17%)</title><rect x="516.8" y="707.0" width="25.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="519.8" y="718.0">d..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="516.8" y="691.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="519.8" y="702.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="516.8" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="519.8" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="516.8" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="519.8" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="516.8" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="519.8" y="654.0"></text>
</g>
<g>
<title>sys_read (94 samples, 2.14%)</title><rect x="517.1" y="691.0" width="25.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="520.1" y="702.0">s..</text>
</g>
<g>
<title>__vfs_read (1 samples, 0.02%)</title><rect x="517.1" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="520.1" y="686.0"></text>
</g>
<g>
<title>vfs_read (93 samples, 2.12%)</title><rect x="517.4" y="675.0" width="25.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="520.4" y="686.0">v..</text>
</g>
<g>
<title>__vfs_read (88 samples, 2.01%)</title><rect x="517.6" y="659.0" width="23.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="520.6" y="670.0">_..</text>
</g>
<g>
<title>new_sync_read (88 samples, 2.01%)</title><rect x="517.6" y="643.0" width="23.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="520.6" y="654.0">n..</text>
</g>
<g>
<title>sock_read_iter (87 samples, 1.98%)</title><rect x="517.9" y="627.0" width="23.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="520.9" y="638.0">s..</text>
</g>
<g>
<title>__x86_indirect_thunk_edi (2 samples, 0.05%)</title><rect x="517.9" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="520.9" y="622.0"></text>
</g>
<g>
<title>sock_recvmsg (85 samples, 1.94%)</title><rect x="518.4" y="611.0" width="22.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="521.4" y="622.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="518.4" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="521.4" y="606.0"></text>
</g>
<g>
<title>inet_recvmsg (84 samples, 1.92%)</title><rect x="518.7" y="595.0" width="22.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="521.7" y="606.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (84 samples, 1.92%)</title><rect x="518.7" y="579.0" width="22.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="521.7" y="590.0">t..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="520.3" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.3" y="574.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="520.3" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="523.3" y="558.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="520.3" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="523.3" y="542.0"></text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.02%)</title><rect x="520.6" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="523.6" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="520.9" y="563.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="523.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="520.9" y="547.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="523.9" y="558.0"></text>
</g>
<g>
<title>sk_wait_data (72 samples, 1.64%)</title><rect x="521.1" y="563.0" width="19.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="524.1" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.07%)</title><rect x="521.1" y="547.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="524.1" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="521.1" y="531.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="524.1" y="542.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (3 samples, 0.07%)</title><rect x="521.1" y="515.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="524.1" y="526.0"></text>
</g>
<g>
<title>wait_woken (69 samples, 1.57%)</title><rect x="521.9" y="547.0" width="18.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="524.9" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="521.9" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="524.9" y="542.0"></text>
</g>
<g>
<title>schedule_timeout (68 samples, 1.55%)</title><rect x="522.2" y="531.0" width="18.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="525.2" y="542.0"></text>
</g>
<g>
<title>schedule (68 samples, 1.55%)</title><rect x="522.2" y="515.0" width="18.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="525.2" y="526.0"></text>
</g>
<g>
<title>__sched_text_start (67 samples, 1.53%)</title><rect x="522.5" y="499.0" width="18.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="525.5" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (67 samples, 1.53%)</title><rect x="522.5" y="483.0" width="18.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.5" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.05%)</title><rect x="540.5" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="543.5" y="574.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="540.8" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="543.8" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="541.1" y="563.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="544.1" y="574.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.05%)</title><rect x="541.3" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.3" y="670.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="541.9" y="659.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="544.9" y="670.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.05%)</title><rect x="541.9" y="643.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="544.9" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="541.9" y="627.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="544.9" y="638.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.05%)</title><rect x="541.9" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="544.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (3 samples, 0.07%)</title><rect x="542.4" y="819.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endRead (2 samples, 0.05%)</title><rect x="543.2" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.2" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.05%)</title><rect x="543.2" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (26 samples, 0.59%)</title><rect x="543.7" y="867.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="546.2" y="851.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="549.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="546.2" y="835.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.2" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="546.2" y="819.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="549.2" y="830.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="546.2" y="803.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="549.2" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="546.2" y="787.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="549.2" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="546.2" y="771.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="549.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (13 samples, 0.30%)</title><rect x="546.4" y="851.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.4" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.11%)</title><rect x="548.6" y="835.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="551.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.11%)</title><rect x="548.6" y="819.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.07%)</title><rect x="549.9" y="851.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.07%)</title><rect x="549.9" y="835.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.9" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="549.9" y="819.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (7 samples, 0.16%)</title><rect x="550.7" y="867.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.05%)</title><rect x="552.1" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.05%)</title><rect x="552.1" y="835.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="552.1" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.09%)</title><rect x="552.6" y="867.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.09%)</title><rect x="552.6" y="851.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.09%)</title><rect x="552.6" y="835.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="555.6" y="846.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="553.4" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="556.4" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="553.4" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="556.4" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="553.4" y="787.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="556.4" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.setTimeout (1 samples, 0.02%)</title><rect x="553.7" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.7" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.socket (1 samples, 0.02%)</title><rect x="553.7" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="556.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (502 samples, 11.45%)</title><rect x="554.0" y="867.0" width="135.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.0" y="878.0">one/nio/net/JavaS..</text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (336 samples, 7.66%)</title><rect x="554.0" y="851.0" width="90.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.0" y="862.0">java/nio/c..</text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (334 samples, 7.62%)</title><rect x="554.5" y="835.0" width="89.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.5" y="846.0">java/nio/c..</text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (332 samples, 7.57%)</title><rect x="555.1" y="819.0" width="89.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.1" y="830.0">java/nio/c..</text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="555.6" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="558.6" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="555.6" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="558.6" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="555.6" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="558.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (329 samples, 7.50%)</title><rect x="555.9" y="803.0" width="88.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.9" y="814.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (316 samples, 7.21%)</title><rect x="555.9" y="787.0" width="85.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.9" y="798.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (316 samples, 7.21%)</title><rect x="555.9" y="771.0" width="85.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.9" y="782.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (316 samples, 7.21%)</title><rect x="555.9" y="755.0" width="85.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.9" y="766.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (4 samples, 0.09%)</title><rect x="555.9" y="739.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="558.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (312 samples, 7.12%)</title><rect x="556.9" y="739.0" width="84.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.9" y="750.0">sun/nio/c..</text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="559.1" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="562.1" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="559.1" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="562.1" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="559.1" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="562.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (303 samples, 6.91%)</title><rect x="559.4" y="723.0" width="81.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.4" y="734.0">sun/nio/c..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="559.4" y="707.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="562.4" y="718.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.02%)</title><rect x="559.6" y="707.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="562.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="559.9" y="707.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="562.9" y="718.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.07%)</title><rect x="559.9" y="691.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="562.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.05%)</title><rect x="560.2" y="675.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="563.2" y="686.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.05%)</title><rect x="560.2" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="563.2" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="560.4" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="563.4" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="560.4" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="563.4" y="638.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="560.4" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="563.4" y="622.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="560.4" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="563.4" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="560.4" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="563.4" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="560.4" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="563.4" y="574.0"></text>
</g>
<g>
<title>__kernel_vsyscall (296 samples, 6.75%)</title><rect x="560.7" y="707.0" width="79.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="563.7" y="718.0">__kernel_..</text>
</g>
<g>
<title>entry_SYSENTER_32 (294 samples, 6.71%)</title><rect x="561.2" y="691.0" width="79.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="564.2" y="702.0">entry_SYS..</text>
</g>
<g>
<title>do_fast_syscall_32 (292 samples, 6.66%)</title><rect x="561.2" y="675.0" width="78.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="564.2" y="686.0">do_fast_s..</text>
</g>
<g>
<title>exit_to_usermode_loop (36 samples, 0.82%)</title><rect x="561.2" y="659.0" width="9.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="564.2" y="670.0"></text>
</g>
<g>
<title>schedule (36 samples, 0.82%)</title><rect x="561.2" y="643.0" width="9.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="564.2" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (36 samples, 0.82%)</title><rect x="561.2" y="627.0" width="9.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="564.2" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (36 samples, 0.82%)</title><rect x="561.2" y="611.0" width="9.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="564.2" y="622.0"></text>
</g>
<g>
<title>sys_write (256 samples, 5.84%)</title><rect x="570.9" y="659.0" width="68.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="573.9" y="670.0">sys_write</text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.09%)</title><rect x="571.2" y="643.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="574.2" y="654.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="571.2" y="627.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="574.2" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="571.7" y="611.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="574.7" y="622.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="572.3" y="643.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="575.3" y="654.0"></text>
</g>
<g>
<title>vfs_write (250 samples, 5.70%)</title><rect x="572.5" y="643.0" width="67.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="575.5" y="654.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (243 samples, 5.54%)</title><rect x="573.4" y="627.0" width="65.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="576.4" y="638.0">__vfs_w..</text>
</g>
<g>
<title>__x86_indirect_thunk_ecx (1 samples, 0.02%)</title><rect x="573.4" y="611.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.4" y="622.0"></text>
</g>
<g>
<title>new_sync_write (242 samples, 5.52%)</title><rect x="573.6" y="611.0" width="65.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="576.6" y="622.0">new_syn..</text>
</g>
<g>
<title>sock_write_iter (242 samples, 5.52%)</title><rect x="573.6" y="595.0" width="65.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="576.6" y="606.0">sock_wr..</text>
</g>
<g>
<title>sock_sendmsg (241 samples, 5.50%)</title><rect x="573.9" y="579.0" width="64.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="576.9" y="590.0">sock_se..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="573.9" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="576.9" y="574.0"></text>
</g>
<g>
<title>inet_sendmsg (234 samples, 5.34%)</title><rect x="574.2" y="563.0" width="62.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="577.2" y="574.0">inet_s..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="574.2" y="547.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="577.2" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (233 samples, 5.31%)</title><rect x="574.4" y="547.0" width="62.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="577.4" y="558.0">tcp_se..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="574.4" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="577.4" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.05%)</title><rect x="574.7" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="577.7" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="574.7" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="577.7" y="526.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="575.2" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="578.2" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="575.2" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="578.2" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="575.2" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.2" y="510.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="575.5" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="578.5" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="575.8" y="531.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="578.8" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (226 samples, 5.16%)</title><rect x="576.0" y="531.0" width="60.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="579.0" y="542.0">tcp_se..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="577.1" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="580.1" y="526.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="577.4" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="580.4" y="526.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="577.7" y="499.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="580.7" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.16%)</title><rect x="577.9" y="515.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="580.9" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.16%)</title><rect x="577.9" y="499.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="580.9" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (2 samples, 0.05%)</title><rect x="578.5" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="581.5" y="494.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (2 samples, 0.05%)</title><rect x="578.5" y="467.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="581.5" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="579.0" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="582.0" y="494.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="579.0" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="582.0" y="478.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="579.0" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="582.0" y="462.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="579.0" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="582.0" y="446.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.05%)</title><rect x="579.3" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="582.3" y="494.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="579.5" y="467.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="582.5" y="478.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="579.5" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="582.5" y="462.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="579.5" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="582.5" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="579.5" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="582.5" y="430.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="579.5" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="582.5" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="579.5" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="582.5" y="398.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="579.5" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="582.5" y="382.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="579.5" y="355.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="582.5" y="366.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="579.5" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="582.5" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="579.5" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="582.5" y="334.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="579.8" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="582.8" y="526.0"></text>
</g>
<g>
<title>skb_put (1 samples, 0.02%)</title><rect x="580.1" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="583.1" y="526.0"></text>
</g>
<g>
<title>tcp_push (205 samples, 4.68%)</title><rect x="580.4" y="515.0" width="55.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="583.4" y="526.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (204 samples, 4.65%)</title><rect x="580.4" y="499.0" width="54.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="583.4" y="510.0">__tcp..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.28 (1 samples, 0.02%)</title><rect x="580.4" y="483.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="583.4" y="494.0"></text>
</g>
<g>
<title>tcp_write_xmit (203 samples, 4.63%)</title><rect x="580.6" y="483.0" width="54.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="583.6" y="494.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (192 samples, 4.38%)</title><rect x="581.7" y="467.0" width="51.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="584.7" y="478.0">__tcp..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="582.8" y="451.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.8" y="462.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="583.0" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="586.0" y="462.0"></text>
</g>
<g>
<title>ip_queue_xmit (185 samples, 4.22%)</title><rect x="583.3" y="451.0" width="49.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="586.3" y="462.0">ip_qu..</text>
</g>
<g>
<title>ip_local_out (185 samples, 4.22%)</title><rect x="583.3" y="435.0" width="49.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="586.3" y="446.0">ip_lo..</text>
</g>
<g>
<title>ip_output (185 samples, 4.22%)</title><rect x="583.3" y="419.0" width="49.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="586.3" y="430.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="583.3" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="586.3" y="414.0"></text>
</g>
<g>
<title>ip_finish_output (184 samples, 4.20%)</title><rect x="583.6" y="403.0" width="49.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="586.6" y="414.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="583.9" y="387.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="586.9" y="398.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="584.1" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="587.1" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (181 samples, 4.13%)</title><rect x="584.4" y="387.0" width="48.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="587.4" y="398.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (167 samples, 3.81%)</title><rect x="585.2" y="371.0" width="44.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="588.2" y="382.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.15 (167 samples, 3.81%)</title><rect x="585.2" y="355.0" width="44.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="588.2" y="366.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (167 samples, 3.81%)</title><rect x="585.2" y="339.0" width="44.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="588.2" y="350.0">do_s..</text>
</g>
<g>
<title>call_on_stack (167 samples, 3.81%)</title><rect x="585.2" y="323.0" width="44.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="588.2" y="334.0">call..</text>
</g>
<g>
<title>__do_softirq (167 samples, 3.81%)</title><rect x="585.2" y="307.0" width="44.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="588.2" y="318.0">__do..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="585.7" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="588.7" y="302.0"></text>
</g>
<g>
<title>net_rx_action (164 samples, 3.74%)</title><rect x="586.0" y="291.0" width="44.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.0" y="302.0">net_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="586.3" y="275.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="589.3" y="286.0"></text>
</g>
<g>
<title>process_backlog (162 samples, 3.70%)</title><rect x="586.5" y="275.0" width="43.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="589.5" y="286.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (160 samples, 3.65%)</title><rect x="587.1" y="259.0" width="43.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="590.1" y="270.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (159 samples, 3.63%)</title><rect x="587.1" y="243.0" width="42.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="590.1" y="254.0">__ne..</text>
</g>
<g>
<title>ip_rcv (156 samples, 3.56%)</title><rect x="587.9" y="227.0" width="42.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="590.9" y="238.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (155 samples, 3.54%)</title><rect x="588.2" y="211.0" width="41.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="591.2" y="222.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (154 samples, 3.51%)</title><rect x="588.4" y="195.0" width="41.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="591.4" y="206.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (154 samples, 3.51%)</title><rect x="588.4" y="179.0" width="41.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="591.4" y="190.0">ip_..</text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="588.4" y="163.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="591.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="588.7" y="163.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="591.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (152 samples, 3.47%)</title><rect x="589.0" y="163.0" width="40.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="592.0" y="174.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="589.5" y="147.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.5" y="158.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.34 (1 samples, 0.02%)</title><rect x="590.0" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="593.0" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="590.3" y="147.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="593.3" y="158.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="590.3" y="131.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="593.3" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (145 samples, 3.31%)</title><rect x="590.6" y="147.0" width="39.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="593.6" y="158.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="590.6" y="131.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="593.6" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (143 samples, 3.26%)</title><rect x="590.8" y="131.0" width="38.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="593.8" y="142.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.07%)</title><rect x="591.1" y="115.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="594.1" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.07%)</title><rect x="591.1" y="99.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="594.1" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="591.1" y="83.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="594.1" y="94.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="591.1" y="67.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="594.1" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="591.4" y="51.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="594.4" y="62.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="591.9" y="115.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="594.9" y="126.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="591.9" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="594.9" y="110.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.02%)</title><rect x="591.9" y="83.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="594.9" y="94.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="591.9" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="594.9" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.09%)</title><rect x="592.2" y="115.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="595.2" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.07%)</title><rect x="592.5" y="99.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="595.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.07%)</title><rect x="592.5" y="83.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="595.5" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.07%)</title><rect x="592.5" y="67.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="595.5" y="78.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.32%)</title><rect x="593.3" y="115.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="596.3" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (1 samples, 0.02%)</title><rect x="593.8" y="99.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="596.8" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 0.21%)</title><rect x="594.1" y="99.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="597.1" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.11%)</title><rect x="594.6" y="83.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="597.6" y="94.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.07%)</title><rect x="594.6" y="67.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="597.6" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="594.6" y="51.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="597.6" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="595.4" y="67.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="598.4" y="78.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="595.4" y="51.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="598.4" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="595.7" y="35.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="598.7" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (1 samples, 0.02%)</title><rect x="596.0" y="83.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="599.0" y="94.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="596.2" y="83.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="599.2" y="94.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.05%)</title><rect x="596.5" y="99.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="599.5" y="110.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.05%)</title><rect x="597.0" y="115.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.0" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (117 samples, 2.67%)</title><rect x="597.6" y="115.0" width="31.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="600.6" y="126.0">tc..</text>
</g>
<g>
<title>sock_def_readable (115 samples, 2.62%)</title><rect x="597.6" y="99.0" width="30.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.6" y="110.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (113 samples, 2.58%)</title><rect x="598.1" y="83.0" width="30.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="601.1" y="94.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (113 samples, 2.58%)</title><rect x="598.1" y="67.0" width="30.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="601.1" y="78.0">__..</text>
</g>
<g>
<title>__lock_text_start (113 samples, 2.58%)</title><rect x="598.1" y="51.0" width="30.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="601.1" y="62.0">__..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.05%)</title><rect x="628.5" y="99.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="631.5" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="629.1" y="115.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="632.1" y="126.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.02%)</title><rect x="629.3" y="131.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="632.3" y="142.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="629.6" y="147.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="632.6" y="158.0"></text>
</g>
<g>
<title>memmove (1 samples, 0.02%)</title><rect x="629.6" y="131.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="632.6" y="142.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_ebx (1 samples, 0.02%)</title><rect x="629.9" y="243.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="632.9" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (11 samples, 0.25%)</title><rect x="630.1" y="371.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="633.1" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.25%)</title><rect x="630.1" y="355.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="633.1" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.11%)</title><rect x="630.7" y="339.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="633.7" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="630.7" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="633.7" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.05%)</title><rect x="631.0" y="323.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="634.0" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="631.2" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="634.2" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="631.5" y="323.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="634.5" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="631.8" y="323.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="634.8" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="632.0" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="635.0" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.07%)</title><rect x="632.3" y="339.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="635.3" y="350.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.07%)</title><rect x="632.3" y="323.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="635.3" y="334.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="633.1" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="636.1" y="462.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="633.1" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="636.1" y="446.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="633.4" y="467.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.4" y="478.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="633.6" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="636.6" y="478.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="633.6" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="636.6" y="462.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="633.6" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="636.6" y="446.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.07%)</title><rect x="633.9" y="467.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="636.9" y="478.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="633.9" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="636.9" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="634.2" y="451.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="637.2" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (2 samples, 0.05%)</title><rect x="634.2" y="435.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="637.2" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="634.2" y="419.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="637.2" y="430.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="634.2" y="403.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="637.2" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="634.2" y="387.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="637.2" y="398.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="634.7" y="467.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="637.7" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="635.0" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="638.0" y="478.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="635.3" y="499.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="638.3" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.11%)</title><rect x="635.5" y="515.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="638.5" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.09%)</title><rect x="635.5" y="499.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="638.5" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="636.3" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="639.3" y="494.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="636.3" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="639.3" y="478.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="636.3" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="639.3" y="462.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="636.6" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="639.6" y="510.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="636.9" y="531.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="639.9" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.11%)</title><rect x="637.1" y="563.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="640.1" y="574.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.09%)</title><rect x="637.4" y="547.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="640.4" y="558.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.09%)</title><rect x="637.4" y="531.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="640.4" y="542.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="638.2" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.2" y="526.0"></text>
</g>
<g>
<title>aa_label_sk_perm (1 samples, 0.02%)</title><rect x="638.2" y="499.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.2" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="638.5" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="641.5" y="574.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.05%)</title><rect x="638.8" y="627.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="641.8" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="639.3" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="642.3" y="638.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="639.6" y="611.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="642.6" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="639.6" y="595.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="642.6" y="606.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="639.6" y="579.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="642.6" y="590.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="639.6" y="563.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="642.6" y="574.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.05%)</title><rect x="639.8" y="675.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="642.8" y="686.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="640.4" y="707.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="643.4" y="718.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.02%)</title><rect x="640.6" y="707.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="643.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (10 samples, 0.23%)</title><rect x="640.9" y="787.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.14%)</title><rect x="642.0" y="771.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.0" y="782.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.02%)</title><rect x="642.3" y="755.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="645.3" y="766.0"></text>
</g>
<g>
<title>pthread_self (3 samples, 0.07%)</title><rect x="642.5" y="755.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="645.5" y="766.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="643.3" y="755.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="646.3" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="643.3" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="646.3" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="643.3" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="646.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endWrite (3 samples, 0.07%)</title><rect x="643.6" y="787.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.6" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.05%)</title><rect x="643.9" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.9" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="644.4" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.02%)</title><rect x="644.4" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="644.4" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="647.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="644.4" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.4" y="814.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="644.4" y="787.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="647.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (165 samples, 3.76%)</title><rect x="644.7" y="851.0" width="44.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.7" y="862.0">sun/..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (161 samples, 3.67%)</title><rect x="645.8" y="835.0" width="43.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.8" y="846.0">java..</text>
</g>
<g>
<title>JVM_DoPrivileged (6 samples, 0.14%)</title><rect x="646.0" y="819.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="649.0" y="830.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedExceptionAction_2 (151 samples, 3.44%)</title><rect x="647.6" y="819.0" width="40.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="650.6" y="830.0">Jav..</text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (3 samples, 0.07%)</title><rect x="649.3" y="803.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="652.3" y="814.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (4 samples, 0.09%)</title><rect x="650.1" y="803.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="653.1" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="651.1" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="654.1" y="814.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="651.4" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="654.4" y="814.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="651.4" y="787.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="654.4" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="651.4" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="654.4" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="651.4" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="654.4" y="766.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (121 samples, 2.76%)</title><rect x="651.7" y="803.0" width="32.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="654.7" y="814.0">JV..</text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (2 samples, 0.05%)</title><rect x="653.3" y="787.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="656.3" y="798.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="653.8" y="787.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="656.8" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="654.1" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="657.1" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (4 samples, 0.09%)</title><rect x="654.4" y="787.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="657.4" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.224] (2 samples, 0.05%)</title><rect x="654.9" y="771.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="657.9" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (38 samples, 0.87%)</title><rect x="655.4" y="787.0" width="10.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="658.4" y="798.0"></text>
</g>
<g>
<title>.L409 (16 samples, 0.36%)</title><rect x="655.4" y="771.0" width="4.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="658.4" y="782.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.05%)</title><rect x="655.7" y="755.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="658.7" y="766.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.05%)</title><rect x="656.3" y="755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="659.3" y="766.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (8 samples, 0.18%)</title><rect x="656.8" y="755.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="659.8" y="766.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.05%)</title><rect x="657.9" y="739.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="660.9" y="750.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.05%)</title><rect x="658.4" y="739.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="661.4" y="750.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (3 samples, 0.07%)</title><rect x="658.9" y="755.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="661.9" y="766.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (4 samples, 0.09%)</title><rect x="659.8" y="771.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="662.8" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="660.6" y="755.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="663.6" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="660.6" y="739.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="663.6" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="660.6" y="723.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="663.6" y="734.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="660.6" y="707.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="663.6" y="718.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="660.6" y="691.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="663.6" y="702.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="660.6" y="675.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="663.6" y="686.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="660.6" y="659.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="663.6" y="670.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="660.6" y="643.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="663.6" y="654.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="660.6" y="627.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="663.6" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="660.6" y="611.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="663.6" y="622.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.02%)</title><rect x="660.8" y="771.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="663.8" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (10 samples, 0.23%)</title><rect x="661.1" y="771.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="664.1" y="782.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="662.7" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="665.7" y="766.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="663.0" y="755.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="666.0" y="766.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.05%)</title><rect x="663.3" y="755.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="666.3" y="766.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="663.5" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="666.5" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="663.5" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="666.5" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="663.5" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="666.5" y="718.0"></text>
</g>
<g>
<title>Method::is_empty_method() const (1 samples, 0.02%)</title><rect x="663.8" y="771.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="666.8" y="782.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (4 samples, 0.09%)</title><rect x="664.1" y="771.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="667.1" y="782.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.05%)</title><rect x="665.1" y="771.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="668.1" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="665.7" y="787.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="668.7" y="798.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.05%)</title><rect x="665.9" y="787.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="668.9" y="798.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="666.5" y="787.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="669.5" y="798.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.09%)</title><rect x="666.8" y="787.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="669.8" y="798.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.05%)</title><rect x="667.8" y="787.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="670.8" y="798.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (3 samples, 0.07%)</title><rect x="668.4" y="787.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="671.4" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (2 samples, 0.05%)</title><rect x="669.2" y="787.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="672.2" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.05%)</title><rect x="669.7" y="787.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="672.7" y="798.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="670.3" y="787.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="673.3" y="798.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="670.5" y="787.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="673.5" y="798.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="670.5" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="673.5" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="670.5" y="755.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="673.5" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="670.5" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="673.5" y="750.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (2 samples, 0.05%)</title><rect x="670.8" y="787.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="673.8" y="798.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="671.1" y="771.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="674.1" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="671.1" y="755.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="674.1" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="671.1" y="739.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="674.1" y="750.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="671.3" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="674.3" y="798.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (23 samples, 0.52%)</title><rect x="671.6" y="787.0" width="6.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="674.6" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="673.2" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="676.2" y="782.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (13 samples, 0.30%)</title><rect x="673.5" y="771.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="676.5" y="782.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.07%)</title><rect x="674.6" y="755.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="677.6" y="766.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="674.8" y="739.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="677.8" y="750.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.07%)</title><rect x="675.4" y="755.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="678.4" y="766.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (3 samples, 0.07%)</title><rect x="676.2" y="755.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="679.2" y="766.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="677.0" y="771.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="680.0" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="677.0" y="755.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="680.0" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="677.0" y="739.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="680.0" y="750.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="677.0" y="723.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="680.0" y="734.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="677.0" y="707.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="680.0" y="718.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="677.0" y="691.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.0" y="702.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.05%)</title><rect x="677.2" y="771.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="680.2" y="782.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (24 samples, 0.55%)</title><rect x="677.8" y="787.0" width="6.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="680.8" y="798.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (8 samples, 0.18%)</title><rect x="679.4" y="771.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="682.4" y="782.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.05%)</title><rect x="680.7" y="755.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="683.7" y="766.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="681.3" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="684.3" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="681.3" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="684.3" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="681.3" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="684.3" y="734.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="681.3" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="684.3" y="718.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="681.3" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="684.3" y="702.0"></text>
</g>
<g>
<title>rcu_bh_qs (1 samples, 0.02%)</title><rect x="681.3" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.3" y="686.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.02%)</title><rect x="681.6" y="771.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="684.6" y="782.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (1 samples, 0.02%)</title><rect x="681.8" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="684.8" y="782.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.18%)</title><rect x="682.1" y="771.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="685.1" y="782.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (2 samples, 0.05%)</title><rect x="682.6" y="755.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="685.6" y="766.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (4 samples, 0.09%)</title><rect x="683.2" y="755.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="686.2" y="766.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="683.4" y="739.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="686.4" y="750.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="683.4" y="723.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="686.4" y="734.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="684.0" y="739.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="687.0" y="750.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.05%)</title><rect x="684.2" y="803.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="687.2" y="814.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (3 samples, 0.07%)</title><rect x="684.8" y="803.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="687.8" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.186] (4 samples, 0.09%)</title><rect x="685.6" y="803.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="688.6" y="814.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="686.7" y="803.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="689.7" y="814.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.02%)</title><rect x="686.9" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="689.9" y="814.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="687.2" y="803.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="690.2" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.07%)</title><rect x="687.5" y="803.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="690.5" y="814.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="688.3" y="819.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="691.3" y="830.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="688.6" y="819.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="691.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (1 samples, 0.02%)</title><rect x="688.8" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (1 samples, 0.02%)</title><rect x="688.8" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.8" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.newOutputStream (1 samples, 0.02%)</title><rect x="688.8" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.8" y="798.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.11%)</title><rect x="689.1" y="867.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.1" y="878.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.02%)</title><rect x="690.4" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$70/18151396.act (957 samples, 21.83%)</title><rect x="690.7" y="963.0" width="257.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.7" y="974.0">ru/mail/polis/service/dogm/Service..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$2 (957 samples, 21.83%)</title><rect x="690.7" y="947.0" width="257.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.7" y="958.0">ru/mail/polis/service/dogm/Service..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.put (957 samples, 21.83%)</title><rect x="690.7" y="931.0" width="257.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.7" y="942.0">ru/mail/polis/service/dogm/Service..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.07%)</title><rect x="690.7" y="915.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.7" y="926.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.07%)</title><rect x="690.7" y="899.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.7" y="910.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.07%)</title><rect x="690.7" y="883.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.7" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="690.7" y="867.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.7" y="878.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="691.2" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="694.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (954 samples, 21.76%)</title><rect x="691.5" y="915.0" width="256.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.5" y="926.0">ru/mail/polis/dao/RocksDAO.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (948 samples, 21.62%)</title><rect x="691.5" y="899.0" width="255.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.5" y="910.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (947 samples, 21.60%)</title><rect x="691.8" y="883.0" width="254.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.8" y="894.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (16 samples, 0.36%)</title><rect x="692.3" y="867.0" width="4.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="695.3" y="878.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="696.4" y="851.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="699.4" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="696.4" y="835.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="699.4" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="696.4" y="819.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="699.4" y="830.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6408886059666723122.so (13 samples, 0.30%)</title><rect x="696.6" y="867.0" width="3.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="699.6" y="878.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.05%)</title><rect x="699.6" y="851.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="702.6" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="699.6" y="835.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="702.6" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="699.6" y="819.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="702.6" y="830.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (902 samples, 20.57%)</title><rect x="700.1" y="867.0" width="242.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="703.1" y="878.0">Java_org_rocksdb_RocksDB_put__J_..</text>
</g>
<g>
<title>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.02%)</title><rect x="700.7" y="851.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="703.7" y="862.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="700.9" y="851.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="703.9" y="862.0"></text>
</g>
<g>
<title>free (1 samples, 0.02%)</title><rect x="701.2" y="851.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="704.2" y="862.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.07%)</title><rect x="701.5" y="851.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="704.5" y="862.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="702.3" y="851.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="705.3" y="862.0"></text>
</g>
<g>
<title>malloc (10 samples, 0.23%)</title><rect x="702.8" y="851.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="705.8" y="862.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="705.5" y="851.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="708.5" y="862.0"></text>
</g>
<g>
<title>operator new(unsigned int) (4 samples, 0.09%)</title><rect x="705.8" y="851.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="708.8" y="862.0"></text>
</g>
<g>
<title>operator new[](unsigned int) (5 samples, 0.11%)</title><rect x="706.9" y="851.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="709.9" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="708.2" y="851.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="711.2" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (871 samples, 19.87%)</title><rect x="708.5" y="851.0" width="234.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="711.5" y="862.0">rocksdb_put_helper(JNIEnv_*, ro..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="708.5" y="835.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="711.5" y="846.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.05%)</title><rect x="708.7" y="835.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="711.7" y="846.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="709.0" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="712.0" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="709.0" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="712.0" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="709.0" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="712.0" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.158] (2 samples, 0.05%)</title><rect x="709.3" y="835.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="712.3" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.05%)</title><rect x="709.8" y="835.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="712.8" y="846.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.11%)</title><rect x="710.4" y="835.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="713.4" y="846.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.02%)</title><rect x="710.6" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="713.6" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="710.9" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="713.9" y="830.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.05%)</title><rect x="711.2" y="819.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="714.2" y="830.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (19 samples, 0.43%)</title><rect x="711.7" y="835.0" width="5.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="714.7" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="712.2" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="715.2" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.09%)</title><rect x="712.5" y="819.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="715.5" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="713.3" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="716.3" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="713.3" y="787.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="716.3" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="713.3" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="716.3" y="782.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="713.3" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="716.3" y="766.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="713.3" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="716.3" y="750.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="713.3" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="716.3" y="734.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="713.3" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="716.3" y="718.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="713.3" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="716.3" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="713.3" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.3" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="713.3" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="716.3" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="713.6" y="819.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="716.6" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.158] (4 samples, 0.09%)</title><rect x="713.9" y="819.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="716.9" y="830.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="714.9" y="819.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="717.9" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.07%)</title><rect x="715.2" y="819.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="718.2" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="715.7" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="718.7" y="814.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned int) (3 samples, 0.07%)</title><rect x="716.0" y="819.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="719.0" y="830.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="716.5" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="719.5" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="716.5" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="719.5" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="716.5" y="771.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="719.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (828 samples, 18.89%)</title><rect x="716.8" y="835.0" width="222.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="719.8" y="846.0">rocksdb::DB::Put(rocksdb::Wri..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="716.8" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="719.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (827 samples, 18.86%)</title><rect x="717.1" y="819.0" width="222.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="720.1" y="830.0">rocksdb::DBImpl::Put(rocksdb:..</text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="717.4" y="803.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="720.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (817 samples, 18.64%)</title><rect x="717.6" y="803.0" width="219.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="720.6" y="814.0">rocksdb::DB::Put(rocksdb::Wri..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="717.6" y="787.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="720.6" y="798.0"></text>
</g>
<g>
<title>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.02%)</title><rect x="717.9" y="787.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="720.9" y="798.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="718.2" y="787.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="721.2" y="798.0"></text>
</g>
<g>
<title>free (1 samples, 0.02%)</title><rect x="718.4" y="787.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="721.4" y="798.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.05%)</title><rect x="718.7" y="787.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="721.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (745 samples, 16.99%)</title><rect x="719.2" y="787.0" width="200.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="722.2" y="798.0">rocksdb::DBImpl::Write(roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (6 samples, 0.14%)</title><rect x="719.2" y="771.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="722.2" y="782.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.05%)</title><rect x="720.3" y="755.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="723.3" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="720.3" y="739.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="723.3" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="720.3" y="723.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="723.3" y="734.0"></text>
</g>
<g>
<title>_init (3 samples, 0.07%)</title><rect x="720.9" y="771.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="723.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (5 samples, 0.11%)</title><rect x="721.7" y="771.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="724.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.02%)</title><rect x="723.0" y="771.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="726.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (704 samples, 16.06%)</title><rect x="723.3" y="771.0" width="189.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="726.3" y="782.0">rocksdb::DBImpl::WriteImp..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (2 samples, 0.05%)</title><rect x="730.5" y="755.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="733.5" y="766.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6408886059666723122.so (2 samples, 0.05%)</title><rect x="731.1" y="755.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="734.1" y="766.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="731.6" y="755.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="734.6" y="766.0"></text>
</g>
<g>
<title>___tls_get_addr (5 samples, 0.11%)</title><rect x="732.2" y="755.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="735.2" y="766.0"></text>
</g>
<g>
<title>_init (3 samples, 0.07%)</title><rect x="733.5" y="755.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="736.5" y="766.0"></text>
</g>
<g>
<title>resume_userspace (3 samples, 0.07%)</title><rect x="734.3" y="755.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="737.3" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.07%)</title><rect x="734.3" y="739.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="737.3" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="734.3" y="723.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="737.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned int*, rocksdb::WriteBatch**) (4 samples, 0.09%)</title><rect x="735.1" y="755.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="738.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (12 samples, 0.27%)</title><rect x="736.2" y="755.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="739.2" y="766.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="739.2" y="739.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="742.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="739.2" y="723.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="742.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="739.2" y="707.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="742.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (6 samples, 0.14%)</title><rect x="739.4" y="755.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="742.4" y="766.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="739.7" y="739.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="742.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (3 samples, 0.07%)</title><rect x="740.0" y="739.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="743.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.02%)</title><rect x="740.8" y="739.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="743.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.02%)</title><rect x="741.0" y="755.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="744.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (1 samples, 0.02%)</title><rect x="741.3" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="744.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (421 samples, 9.60%)</title><rect x="741.6" y="755.0" width="113.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="744.6" y="766.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned int*, rocksdb::WriteBatch**) (1 samples, 0.02%)</title><rect x="742.7" y="739.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="745.7" y="750.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="742.7" y="723.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="745.7" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="742.7" y="707.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="745.7" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="742.7" y="691.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="745.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (411 samples, 9.38%)</title><rect x="742.9" y="739.0" width="110.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="745.9" y="750.0">rocksdb::DBIm..</text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="744.3" y="723.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="747.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="744.3" y="707.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="747.3" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="744.3" y="691.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="747.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (404 samples, 9.22%)</title><rect x="744.5" y="723.0" width="108.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="747.5" y="734.0">rocksdb::log:..</text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="745.9" y="707.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="748.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (7 samples, 0.16%)</title><rect x="746.4" y="707.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="749.4" y="718.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="748.0" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="751.0" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="748.0" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="751.0" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="748.0" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="751.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.02%)</title><rect x="748.3" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="751.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned int) (389 samples, 8.87%)</title><rect x="748.6" y="707.0" width="104.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="751.6" y="718.0">rocksdb::log..</text>
</g>
<g>
<title>/tmp/librocksdbjni6408886059666723122.so (1 samples, 0.02%)</title><rect x="749.1" y="691.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="752.1" y="702.0"></text>
</g>
<g>
<title>___tls_get_addr (2 samples, 0.05%)</title><rect x="749.4" y="691.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="752.4" y="702.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="749.9" y="691.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="752.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (5 samples, 0.11%)</title><rect x="750.5" y="691.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="753.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned int, unsigned int) (3 samples, 0.07%)</title><rect x="751.8" y="691.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="754.8" y="702.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="752.3" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="755.3" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="752.3" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="752.3" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="755.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (7 samples, 0.16%)</title><rect x="752.6" y="691.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="755.6" y="702.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="753.4" y="675.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="756.4" y="686.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="753.7" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="756.7" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="753.7" y="659.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="756.7" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="753.7" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="756.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned int, unsigned int) (2 samples, 0.05%)</title><rect x="754.0" y="675.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="757.0" y="686.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="754.2" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="757.2" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="754.2" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="757.2" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="754.2" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="757.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (364 samples, 8.30%)</title><rect x="754.5" y="691.0" width="98.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="757.5" y="702.0">rocksdb::Wr..</text>
</g>
<g>
<title>_init (4 samples, 0.09%)</title><rect x="755.3" y="675.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="758.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.02%)</title><rect x="756.4" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="759.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.02%)</title><rect x="756.7" y="675.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="759.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned int) (355 samples, 8.10%)</title><rect x="756.9" y="675.0" width="95.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="759.9" y="686.0">rocksdb::Wr..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.09%)</title><rect x="758.0" y="659.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="761.0" y="670.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="758.8" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="761.8" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="758.8" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="761.8" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="758.8" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="761.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="759.1" y="659.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="762.1" y="670.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.05%)</title><rect x="759.1" y="643.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="762.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.05%)</title><rect x="759.1" y="627.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="762.1" y="638.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.05%)</title><rect x="759.1" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="762.1" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="759.3" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="762.3" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="759.3" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="762.3" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="759.3" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="762.3" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="759.3" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="762.3" y="558.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="759.3" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="762.3" y="542.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="759.3" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="762.3" y="526.0"></text>
</g>
<g>
<title>__kernel_vsyscall (342 samples, 7.80%)</title><rect x="759.6" y="659.0" width="92.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="762.6" y="670.0">__kernel_vs..</text>
</g>
<g>
<title>entry_SYSENTER_32 (341 samples, 7.78%)</title><rect x="759.9" y="643.0" width="91.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="762.9" y="654.0">entry_SYSEN..</text>
</g>
<g>
<title>do_fast_syscall_32 (341 samples, 7.78%)</title><rect x="759.9" y="627.0" width="91.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="762.9" y="638.0">do_fast_sys..</text>
</g>
<g>
<title>__f_unlock_pos (1 samples, 0.02%)</title><rect x="760.2" y="611.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="763.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="760.4" y="611.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="763.4" y="622.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="760.4" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="763.4" y="606.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="760.4" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="763.4" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="760.4" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="763.4" y="574.0"></text>
</g>
<g>
<title>sys_write (337 samples, 7.69%)</title><rect x="761.0" y="611.0" width="90.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="764.0" y="622.0">sys_write</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.11%)</title><rect x="761.0" y="595.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="764.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="761.2" y="579.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="764.2" y="590.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="761.8" y="563.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="764.8" y="574.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="762.3" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="765.3" y="606.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="762.6" y="595.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="765.6" y="606.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.02%)</title><rect x="762.8" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="765.8" y="606.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="763.1" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="766.1" y="606.0"></text>
</g>
<g>
<title>vfs_write (328 samples, 7.48%)</title><rect x="763.4" y="595.0" width="88.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="766.4" y="606.0">vfs_write</text>
</g>
<g>
<title>__sb_start_write (4 samples, 0.09%)</title><rect x="764.2" y="579.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="767.2" y="590.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="765.0" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="768.0" y="574.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="765.0" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="768.0" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="765.0" y="531.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="768.0" y="542.0"></text>
</g>
<g>
<title>__vfs_write (304 samples, 6.93%)</title><rect x="765.3" y="579.0" width="81.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="768.3" y="590.0">__vfs_write</text>
</g>
<g>
<title>ext4_file_write_iter (3 samples, 0.07%)</title><rect x="765.5" y="563.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="768.5" y="574.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="766.3" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="769.3" y="574.0"></text>
</g>
<g>
<title>new_sync_write (299 samples, 6.82%)</title><rect x="766.6" y="563.0" width="80.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="769.6" y="574.0">new_sync_..</text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.02%)</title><rect x="766.9" y="547.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="769.9" y="558.0"></text>
</g>
<g>
<title>down_write_trylock (1 samples, 0.02%)</title><rect x="767.1" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="770.1" y="558.0"></text>
</g>
<g>
<title>ext4_file_write_iter (293 samples, 6.68%)</title><rect x="767.4" y="547.0" width="78.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="770.4" y="558.0">ext4_file..</text>
</g>
<g>
<title>__generic_file_write_iter (279 samples, 6.36%)</title><rect x="769.6" y="531.0" width="75.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="772.6" y="542.0">__generi..</text>
</g>
<g>
<title>__mnt_drop_write_file (1 samples, 0.02%)</title><rect x="770.4" y="515.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="773.4" y="526.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.02%)</title><rect x="770.6" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="773.6" y="526.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.02%)</title><rect x="770.9" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="773.9" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.07%)</title><rect x="771.2" y="515.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="774.2" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="772.0" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="775.0" y="526.0"></text>
</g>
<g>
<title>file_remove_privs (2 samples, 0.05%)</title><rect x="772.3" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="775.3" y="526.0"></text>
</g>
<g>
<title>file_update_time (88 samples, 2.01%)</title><rect x="772.8" y="515.0" width="23.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="775.8" y="526.0">f..</text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.07%)</title><rect x="773.9" y="499.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="776.9" y="510.0"></text>
</g>
<g>
<title>__mnt_is_readonly.part.13 (1 samples, 0.02%)</title><rect x="774.7" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="777.7" y="510.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.02%)</title><rect x="775.0" y="499.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="778.0" y="510.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.02%)</title><rect x="775.2" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="778.2" y="510.0"></text>
</g>
<g>
<title>current_kernel_time64 (1 samples, 0.02%)</title><rect x="775.2" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="778.2" y="494.0"></text>
</g>
<g>
<title>generic_update_time (78 samples, 1.78%)</title><rect x="775.5" y="499.0" width="21.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="778.5" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (78 samples, 1.78%)</title><rect x="775.5" y="483.0" width="21.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="778.5" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.05%)</title><rect x="775.8" y="467.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="778.8" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (74 samples, 1.69%)</title><rect x="776.3" y="467.0" width="19.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="779.3" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (14 samples, 0.32%)</title><rect x="776.3" y="451.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="779.3" y="462.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.02%)</title><rect x="776.3" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.3" y="446.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="776.3" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="779.3" y="430.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="776.3" y="403.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="779.3" y="414.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="776.3" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="779.3" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (10 samples, 0.23%)</title><rect x="776.6" y="435.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="779.6" y="446.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.05%)</title><rect x="777.4" y="419.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="780.4" y="430.0"></text>
</g>
<g>
<title>start_this_handle (5 samples, 0.11%)</title><rect x="777.9" y="419.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="780.9" y="430.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="779.3" y="435.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="782.3" y="446.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.05%)</title><rect x="779.5" y="435.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="782.5" y="446.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.11%)</title><rect x="780.1" y="451.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="783.1" y="462.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.02%)</title><rect x="780.1" y="435.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="783.1" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_stop (4 samples, 0.09%)</title><rect x="780.3" y="435.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="783.3" y="446.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.05%)</title><rect x="780.6" y="419.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="783.6" y="430.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="780.6" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="783.6" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="780.6" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="783.6" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="780.9" y="403.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="783.9" y="414.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="781.1" y="419.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="784.1" y="430.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.02%)</title><rect x="781.4" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="784.4" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (54 samples, 1.23%)</title><rect x="781.7" y="451.0" width="14.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="784.7" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="782.0" y="435.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="785.0" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (22 samples, 0.50%)</title><rect x="782.2" y="435.0" width="5.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="785.2" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (20 samples, 0.46%)</title><rect x="782.5" y="419.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.5" y="430.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.05%)</title><rect x="784.1" y="403.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="787.1" y="414.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="784.1" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="787.1" y="398.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="784.1" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="787.1" y="382.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="784.1" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="787.1" y="366.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.02%)</title><rect x="784.4" y="387.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="787.4" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (12 samples, 0.27%)</title><rect x="784.6" y="403.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="787.6" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.52 (12 samples, 0.27%)</title><rect x="784.6" y="387.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="787.6" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (11 samples, 0.25%)</title><rect x="784.9" y="371.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="787.9" y="382.0"></text>
</g>
<g>
<title>chksum_update (10 samples, 0.23%)</title><rect x="785.2" y="355.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="788.2" y="366.0"></text>
</g>
<g>
<title>__crc32c_le (10 samples, 0.23%)</title><rect x="785.2" y="339.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="788.2" y="350.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.02%)</title><rect x="787.9" y="419.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="790.9" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (30 samples, 0.68%)</title><rect x="788.1" y="435.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="791.1" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (23 samples, 0.52%)</title><rect x="788.1" y="419.0" width="6.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="791.1" y="430.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.05%)</title><rect x="789.5" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="792.5" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (10 samples, 0.23%)</title><rect x="790.0" y="403.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="793.0" y="414.0"></text>
</g>
<g>
<title>__find_get_block (9 samples, 0.21%)</title><rect x="790.0" y="387.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="793.0" y="398.0"></text>
</g>
<g>
<title>lookup_page_ext (1 samples, 0.02%)</title><rect x="791.1" y="371.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="794.1" y="382.0"></text>
</g>
<g>
<title>mark_page_accessed (4 samples, 0.09%)</title><rect x="791.4" y="371.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="794.4" y="382.0"></text>
</g>
<g>
<title>lookup_page_ext (1 samples, 0.02%)</title><rect x="792.2" y="355.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="795.2" y="366.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="792.4" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="795.4" y="398.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="792.4" y="371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="795.4" y="382.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="792.4" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="795.4" y="366.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.07%)</title><rect x="792.7" y="403.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="795.7" y="414.0"></text>
</g>
<g>
<title>ext4_inode_table (3 samples, 0.07%)</title><rect x="793.5" y="403.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.5" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (2 samples, 0.05%)</title><rect x="794.3" y="419.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="797.3" y="430.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="794.3" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="797.3" y="414.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="794.3" y="387.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="797.3" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="794.6" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="797.6" y="414.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.8 (1 samples, 0.02%)</title><rect x="794.6" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="797.6" y="398.0"></text>
</g>
<g>
<title>ext4_inode_table (3 samples, 0.07%)</title><rect x="794.9" y="419.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="797.9" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (2 samples, 0.05%)</title><rect x="795.7" y="419.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="798.7" y="430.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="796.2" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="799.2" y="478.0"></text>
</g>
<g>
<title>generic_perform_write (176 samples, 4.01%)</title><rect x="796.5" y="515.0" width="47.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="799.5" y="526.0">gene..</text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="797.0" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="800.0" y="510.0"></text>
</g>
<g>
<title>__kunmap_atomic (1 samples, 0.02%)</title><rect x="797.3" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="800.3" y="510.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.05%)</title><rect x="797.6" y="499.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="800.6" y="510.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="798.1" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="801.1" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_begin (52 samples, 1.19%)</title><rect x="798.4" y="499.0" width="14.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="801.4" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (10 samples, 0.23%)</title><rect x="800.3" y="483.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="803.3" y="494.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.02%)</title><rect x="800.5" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="803.5" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (7 samples, 0.16%)</title><rect x="800.8" y="467.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="803.8" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="801.3" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="804.3" y="462.0"></text>
</g>
<g>
<title>memset (1 samples, 0.02%)</title><rect x="801.3" y="435.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="804.3" y="446.0"></text>
</g>
<g>
<title>start_this_handle (4 samples, 0.09%)</title><rect x="801.6" y="451.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="804.6" y="462.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.02%)</title><rect x="802.7" y="467.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="805.7" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (5 samples, 0.11%)</title><rect x="802.9" y="483.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="805.9" y="494.0"></text>
</g>
<g>
<title>ext4_nonda_switch (6 samples, 0.14%)</title><rect x="804.3" y="483.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="807.3" y="494.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (17 samples, 0.39%)</title><rect x="805.9" y="483.0" width="4.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="808.9" y="494.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.09%)</title><rect x="805.9" y="467.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="808.9" y="478.0"></text>
</g>
<g>
<title>pagecache_get_page (12 samples, 0.27%)</title><rect x="807.0" y="467.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="810.0" y="478.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (1 samples, 0.02%)</title><rect x="807.0" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="810.0" y="462.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (1 samples, 0.02%)</title><rect x="807.0" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="810.0" y="446.0"></text>
</g>
<g>
<title>find_get_entry (10 samples, 0.23%)</title><rect x="807.3" y="451.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="810.3" y="462.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (8 samples, 0.18%)</title><rect x="807.8" y="435.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="810.8" y="446.0"></text>
</g>
<g>
<title>__radix_tree_lookup (8 samples, 0.18%)</title><rect x="807.8" y="419.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="810.8" y="430.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.02%)</title><rect x="809.9" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="812.9" y="462.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.02%)</title><rect x="810.2" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="813.2" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.02%)</title><rect x="810.5" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="813.5" y="494.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="810.8" y="483.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="813.8" y="494.0"></text>
</g>
<g>
<title>wait_for_stable_page (5 samples, 0.11%)</title><rect x="811.0" y="483.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="814.0" y="494.0"></text>
</g>
<g>
<title>common_interrupt (1 samples, 0.02%)</title><rect x="812.1" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="815.1" y="478.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="812.1" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="815.1" y="462.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="812.1" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="815.1" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="812.1" y="419.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="815.1" y="430.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="812.1" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="815.1" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="812.1" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="815.1" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_end (105 samples, 2.40%)</title><rect x="812.4" y="499.0" width="28.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="815.4" y="510.0">ex..</text>
</g>
<g>
<title>__ext4_journal_stop (9 samples, 0.21%)</title><rect x="815.1" y="483.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="818.1" y="494.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.02%)</title><rect x="815.1" y="467.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="818.1" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_stop (7 samples, 0.16%)</title><rect x="815.3" y="467.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="818.3" y="478.0"></text>
</g>
<g>
<title>__wake_up (4 samples, 0.09%)</title><rect x="815.9" y="451.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.9" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.09%)</title><rect x="815.9" y="435.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="818.9" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.09%)</title><rect x="815.9" y="419.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="818.9" y="430.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="816.9" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="819.9" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="817.2" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="820.2" y="478.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.07%)</title><rect x="817.5" y="483.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="820.5" y="494.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.02%)</title><rect x="818.3" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="821.3" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="818.6" y="483.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="821.6" y="494.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="818.6" y="467.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="821.6" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="818.6" y="451.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="821.6" y="462.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.8 (1 samples, 0.02%)</title><rect x="818.6" y="435.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="821.6" y="446.0"></text>
</g>
<g>
<title>generic_write_end (81 samples, 1.85%)</title><rect x="818.8" y="483.0" width="21.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="821.8" y="494.0">g..</text>
</g>
<g>
<title>__block_commit_write.isra.27 (1 samples, 0.02%)</title><rect x="820.2" y="467.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="823.2" y="478.0"></text>
</g>
<g>
<title>__mark_inode_dirty (71 samples, 1.62%)</title><rect x="820.4" y="467.0" width="19.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="823.4" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (70 samples, 1.60%)</title><rect x="820.7" y="451.0" width="18.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="823.7" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="820.7" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="823.7" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="820.7" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="823.7" y="430.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (69 samples, 1.57%)</title><rect x="821.0" y="435.0" width="18.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="824.0" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="821.2" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="824.2" y="430.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (49 samples, 1.12%)</title><rect x="821.5" y="419.0" width="13.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="824.5" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (47 samples, 1.07%)</title><rect x="821.8" y="403.0" width="12.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="824.8" y="414.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (4 samples, 0.09%)</title><rect x="823.1" y="387.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="826.1" y="398.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.05%)</title><rect x="823.1" y="371.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="826.1" y="382.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="823.4" y="355.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="826.4" y="366.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="823.4" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="826.4" y="350.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (2 samples, 0.05%)</title><rect x="823.7" y="371.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="826.7" y="382.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="824.2" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="827.2" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (30 samples, 0.68%)</title><rect x="824.5" y="387.0" width="8.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="827.5" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.52 (29 samples, 0.66%)</title><rect x="824.7" y="371.0" width="7.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="827.7" y="382.0"></text>
</g>
<g>
<title>chksum_update (3 samples, 0.07%)</title><rect x="825.0" y="355.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="828.0" y="366.0"></text>
</g>
<g>
<title>crypto_shash_update (24 samples, 0.55%)</title><rect x="825.8" y="355.0" width="6.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="828.8" y="366.0"></text>
</g>
<g>
<title>chksum_update (17 samples, 0.39%)</title><rect x="826.6" y="339.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="829.6" y="350.0"></text>
</g>
<g>
<title>__crc32c_le (17 samples, 0.39%)</title><rect x="826.6" y="323.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="829.6" y="334.0"></text>
</g>
<g>
<title>memcpy (3 samples, 0.07%)</title><rect x="831.2" y="339.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="834.2" y="350.0"></text>
</g>
<g>
<title>memset (1 samples, 0.02%)</title><rect x="832.0" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="835.0" y="350.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.02%)</title><rect x="832.3" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="835.3" y="366.0"></text>
</g>
<g>
<title>from_kgid (1 samples, 0.02%)</title><rect x="832.6" y="387.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="835.6" y="398.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.02%)</title><rect x="832.6" y="371.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="835.6" y="382.0"></text>
</g>
<g>
<title>from_kprojid (1 samples, 0.02%)</title><rect x="832.8" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="835.8" y="398.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.02%)</title><rect x="832.8" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="835.8" y="382.0"></text>
</g>
<g>
<title>from_kuid (2 samples, 0.05%)</title><rect x="833.1" y="387.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="836.1" y="398.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.05%)</title><rect x="833.1" y="371.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="836.1" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (2 samples, 0.05%)</title><rect x="833.6" y="387.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="836.6" y="398.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.02%)</title><rect x="834.2" y="387.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="837.2" y="398.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.02%)</title><rect x="834.4" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="837.4" y="414.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (18 samples, 0.41%)</title><rect x="834.7" y="419.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="837.7" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (12 samples, 0.27%)</title><rect x="834.7" y="403.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="837.7" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (5 samples, 0.11%)</title><rect x="835.8" y="387.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="838.8" y="398.0"></text>
</g>
<g>
<title>__find_get_block (5 samples, 0.11%)</title><rect x="835.8" y="371.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="838.8" y="382.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="836.3" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="839.3" y="366.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="836.3" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="839.3" y="350.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="836.3" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="839.3" y="334.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="836.3" y="307.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="839.3" y="318.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="836.3" y="291.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="839.3" y="302.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="836.3" y="275.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="839.3" y="286.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="836.3" y="259.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="839.3" y="270.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="836.3" y="243.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="839.3" y="254.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="836.3" y="227.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="839.3" y="238.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="836.3" y="211.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="839.3" y="222.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.05%)</title><rect x="836.6" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="839.6" y="366.0"></text>
</g>
<g>
<title>ext4_get_group_desc (2 samples, 0.05%)</title><rect x="837.1" y="387.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="840.1" y="398.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.02%)</title><rect x="837.7" y="387.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="840.7" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (4 samples, 0.09%)</title><rect x="837.9" y="403.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="840.9" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (3 samples, 0.07%)</title><rect x="838.2" y="387.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="841.2" y="398.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.8 (2 samples, 0.05%)</title><rect x="838.5" y="371.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="841.5" y="382.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.02%)</title><rect x="839.0" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="842.0" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="839.3" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="842.3" y="414.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.02%)</title><rect x="839.6" y="467.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.6" y="478.0"></text>
</g>
<g>
<title>__block_commit_write.isra.27 (1 samples, 0.02%)</title><rect x="839.6" y="451.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="842.6" y="462.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.02%)</title><rect x="839.6" y="435.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="842.6" y="446.0"></text>
</g>
<g>
<title>__set_page_dirty (1 samples, 0.02%)</title><rect x="839.6" y="419.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="842.6" y="430.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="839.6" y="403.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="842.6" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.07%)</title><rect x="839.8" y="467.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.8" y="478.0"></text>
</g>
<g>
<title>common_interrupt (1 samples, 0.02%)</title><rect x="840.4" y="451.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="843.4" y="462.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="840.4" y="435.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="843.4" y="446.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="840.4" y="419.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="843.4" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="840.4" y="403.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="843.4" y="414.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="840.4" y="387.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="843.4" y="398.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="840.4" y="371.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="843.4" y="382.0"></text>
</g>
<g>
<title>ext4_nonda_switch (2 samples, 0.05%)</title><rect x="840.6" y="499.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="843.6" y="510.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="841.2" y="499.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="844.2" y="510.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (8 samples, 0.18%)</title><rect x="841.4" y="499.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="844.4" y="510.0"></text>
</g>
<g>
<title>__copy_user_ll (1 samples, 0.02%)</title><rect x="841.7" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="844.7" y="494.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.11%)</title><rect x="842.0" y="483.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="845.0" y="494.0"></text>
</g>
<g>
<title>__copy_user_ll (4 samples, 0.09%)</title><rect x="842.2" y="467.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="845.2" y="478.0"></text>
</g>
<g>
<title>kmap_atomic (1 samples, 0.02%)</title><rect x="843.3" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="846.3" y="494.0"></text>
</g>
<g>
<title>kmap_atomic_prot (1 samples, 0.02%)</title><rect x="843.3" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="846.3" y="478.0"></text>
</g>
<g>
<title>page_address (1 samples, 0.02%)</title><rect x="843.3" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="846.3" y="462.0"></text>
</g>
<g>
<title>kmap_atomic (1 samples, 0.02%)</title><rect x="843.6" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="846.6" y="510.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (3 samples, 0.07%)</title><rect x="843.9" y="515.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="846.9" y="526.0"></text>
</g>
<g>
<title>ext4_write_checks (5 samples, 0.11%)</title><rect x="844.7" y="531.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="847.7" y="542.0"></text>
</g>
<g>
<title>generic_write_checks (4 samples, 0.09%)</title><rect x="844.9" y="515.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="847.9" y="526.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.02%)</title><rect x="846.0" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="849.0" y="542.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.05%)</title><rect x="846.3" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="849.3" y="558.0"></text>
</g>
<g>
<title>up_write (1 samples, 0.02%)</title><rect x="846.8" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="849.8" y="558.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="847.1" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="850.1" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (15 samples, 0.34%)</title><rect x="847.4" y="579.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="850.4" y="590.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_ecx (1 samples, 0.02%)</title><rect x="849.2" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="852.2" y="574.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="849.5" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="852.5" y="574.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.14%)</title><rect x="849.8" y="563.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="852.8" y="574.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.14%)</title><rect x="849.8" y="547.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="852.8" y="558.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.14%)</title><rect x="849.8" y="531.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="852.8" y="542.0"></text>
</g>
<g>
<title>aa_file_perm (5 samples, 0.11%)</title><rect x="850.1" y="515.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="853.1" y="526.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="851.4" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="854.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (3 samples, 0.07%)</title><rect x="851.7" y="659.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="854.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned int) (3 samples, 0.07%)</title><rect x="852.5" y="691.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="855.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned int) (1 samples, 0.02%)</title><rect x="853.3" y="723.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="856.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (2 samples, 0.05%)</title><rect x="853.5" y="739.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="856.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.07%)</title><rect x="854.1" y="739.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="857.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (9 samples, 0.21%)</title><rect x="854.9" y="755.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="857.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (7 samples, 0.16%)</title><rect x="857.3" y="755.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="860.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (3 samples, 0.07%)</title><rect x="857.9" y="739.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="860.9" y="750.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.05%)</title><rect x="857.9" y="723.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="860.9" y="734.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="858.4" y="723.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="861.4" y="734.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="858.4" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="861.4" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="858.4" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="861.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="858.4" y="675.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="861.4" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="858.4" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="861.4" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="858.4" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="861.4" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="858.4" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="861.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.05%)</title><rect x="858.7" y="739.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="861.7" y="750.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="858.9" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="861.9" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="858.9" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="861.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="858.9" y="691.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="861.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (2 samples, 0.05%)</title><rect x="859.2" y="755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="862.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (2 samples, 0.05%)</title><rect x="859.7" y="755.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="862.7" y="766.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="860.0" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="863.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="860.0" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="863.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="860.0" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="863.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.05%)</title><rect x="860.3" y="755.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="863.3" y="766.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="860.5" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="863.5" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="860.5" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="863.5" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="860.5" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="863.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.05%)</title><rect x="860.8" y="755.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="863.8" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (153 samples, 3.49%)</title><rect x="861.4" y="755.0" width="41.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="864.4" y="766.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.11%)</title><rect x="862.2" y="739.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="865.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (145 samples, 3.31%)</title><rect x="863.5" y="739.0" width="39.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="866.5" y="750.0">roc..</text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="865.1" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="868.1" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="865.1" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="868.1" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="865.1" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="868.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::GetLengthPrefixedSlice(rocksdb::Slice*, rocksdb::Slice*) (4 samples, 0.09%)</title><rect x="865.4" y="723.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="868.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (127 samples, 2.90%)</title><rect x="866.5" y="723.0" width="34.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="869.5" y="734.0">ro..</text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="867.0" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="870.0" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="867.0" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="870.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="867.0" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="870.0" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="867.0" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="870.0" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="867.0" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="870.0" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="867.0" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="870.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.02%)</title><rect x="867.3" y="707.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="870.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.02%)</title><rect x="867.5" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="870.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.02%)</title><rect x="867.8" y="707.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="870.8" y="718.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="867.8" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="870.8" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="867.8" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.8" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="867.8" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="870.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (121 samples, 2.76%)</title><rect x="868.1" y="707.0" width="32.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="871.1" y="718.0">ro..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.05%)</title><rect x="868.9" y="691.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="871.9" y="702.0"></text>
</g>
<g>
<title>common_exception (1 samples, 0.02%)</title><rect x="869.2" y="675.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="872.2" y="686.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="869.2" y="659.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="872.2" y="670.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="869.2" y="643.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="872.2" y="654.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="869.2" y="627.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="872.2" y="638.0"></text>
</g>
<g>
<title>native_set_pte_at (1 samples, 0.02%)</title><rect x="869.2" y="611.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="872.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.05%)</title><rect x="869.4" y="691.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="872.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.07%)</title><rect x="870.0" y="691.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="873.0" y="702.0"></text>
</g>
<g>
<title>common_exception (2 samples, 0.05%)</title><rect x="870.2" y="675.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.2" y="686.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.05%)</title><rect x="870.2" y="659.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="873.2" y="670.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.05%)</title><rect x="870.2" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.2" y="654.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.05%)</title><rect x="870.2" y="627.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="873.2" y="638.0"></text>
</g>
<g>
<title>native_set_pte_at (2 samples, 0.05%)</title><rect x="870.2" y="611.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="873.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (108 samples, 2.46%)</title><rect x="870.8" y="691.0" width="29.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="873.8" y="702.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni6408886059666723122.so (87 samples, 1.98%)</title><rect x="873.5" y="675.0" width="23.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="876.5" y="686.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni6408886059666723122.so (8 samples, 0.18%)</title><rect x="873.7" y="659.0" width="2.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="876.7" y="670.0"></text>
</g>
<g>
<title>common_exception (2 samples, 0.05%)</title><rect x="874.8" y="643.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="877.8" y="654.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.05%)</title><rect x="874.8" y="627.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="877.8" y="638.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.05%)</title><rect x="874.8" y="611.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="877.8" y="622.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.02%)</title><rect x="874.8" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="877.8" y="606.0"></text>
</g>
<g>
<title>vmacache_find (1 samples, 0.02%)</title><rect x="874.8" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="877.8" y="590.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="875.1" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="878.1" y="606.0"></text>
</g>
<g>
<title>native_set_pte_at (1 samples, 0.02%)</title><rect x="875.1" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="878.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned int, unsigned int, rocksdb::Logger*) (2 samples, 0.05%)</title><rect x="875.4" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="878.4" y="654.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (75 samples, 1.71%)</title><rect x="875.9" y="659.0" width="20.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="878.9" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6408886059666723122.so (53 samples, 1.21%)</title><rect x="878.3" y="643.0" width="14.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="881.3" y="654.0"></text>
</g>
<g>
<title>___tls_get_addr (5 samples, 0.11%)</title><rect x="886.1" y="627.0" width="1.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="889.1" y="638.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="887.5" y="627.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="890.5" y="638.0"></text>
</g>
<g>
<title>common_interrupt (1 samples, 0.02%)</title><rect x="887.7" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="890.7" y="638.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="887.7" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="890.7" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="887.7" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="890.7" y="606.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="887.7" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="890.7" y="590.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="887.7" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="890.7" y="574.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="887.7" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="890.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (17 samples, 0.39%)</title><rect x="888.0" y="627.0" width="4.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="891.0" y="638.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (3 samples, 0.07%)</title><rect x="889.3" y="611.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="892.3" y="622.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (5 samples, 0.11%)</title><rect x="890.2" y="611.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="893.2" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6408886059666723122.so (1 samples, 0.02%)</title><rect x="891.5" y="611.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="894.5" y="622.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.07%)</title><rect x="891.8" y="611.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="894.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.07%)</title><rect x="892.6" y="643.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="895.6" y="654.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="892.6" y="627.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="895.6" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6408886059666723122.so (1 samples, 0.02%)</title><rect x="892.8" y="627.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="895.8" y="638.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="893.1" y="627.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="896.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.23%)</title><rect x="893.4" y="643.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="896.4" y="654.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (8 samples, 0.18%)</title><rect x="893.9" y="627.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="896.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableRep::KeyComparator::decode_key(char const*) const (3 samples, 0.07%)</title><rect x="896.1" y="659.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="899.1" y="670.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.07%)</title><rect x="896.9" y="675.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="899.9" y="686.0"></text>
</g>
<g>
<title>common_exception (4 samples, 0.09%)</title><rect x="897.7" y="675.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="900.7" y="686.0"></text>
</g>
<g>
<title>do_page_fault (4 samples, 0.09%)</title><rect x="897.7" y="659.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="900.7" y="670.0"></text>
</g>
<g>
<title>__do_page_fault (4 samples, 0.09%)</title><rect x="897.7" y="643.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="900.7" y="654.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.02%)</title><rect x="897.7" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.7" y="638.0"></text>
</g>
<g>
<title>vmacache_find (1 samples, 0.02%)</title><rect x="897.7" y="611.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="900.7" y="622.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.07%)</title><rect x="898.0" y="627.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="901.0" y="638.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="898.2" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="901.2" y="622.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="898.2" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="901.2" y="606.0"></text>
</g>
<g>
<title>mem_cgroup_from_task (1 samples, 0.02%)</title><rect x="898.5" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="901.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.05%)</title><rect x="898.8" y="675.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="901.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.05%)</title><rect x="899.3" y="675.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="902.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.05%)</title><rect x="899.3" y="659.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="902.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long long, rocksdb::ValueType) (3 samples, 0.07%)</title><rect x="899.8" y="691.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="902.8" y="702.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="900.4" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="903.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="900.4" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="903.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="900.4" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="903.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.07%)</title><rect x="900.7" y="723.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="903.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (4 samples, 0.09%)</title><rect x="901.5" y="723.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="904.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long long) (4 samples, 0.09%)</title><rect x="902.5" y="755.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="905.5" y="766.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="903.3" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="906.3" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="903.3" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="906.3" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="903.3" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="906.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (4 samples, 0.09%)</title><rect x="903.6" y="755.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="906.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (3 samples, 0.07%)</title><rect x="904.7" y="755.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="907.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (3 samples, 0.07%)</title><rect x="905.5" y="755.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="908.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.05%)</title><rect x="906.3" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="909.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (16 samples, 0.36%)</title><rect x="906.8" y="755.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="909.8" y="766.0"></text>
</g>
<g>
<title>__clock_gettime (11 samples, 0.25%)</title><rect x="906.8" y="739.0" width="3.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="909.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="906.8" y="723.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="909.8" y="734.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.07%)</title><rect x="906.8" y="707.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="909.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.07%)</title><rect x="906.8" y="691.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="909.8" y="702.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.07%)</title><rect x="906.8" y="675.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="909.8" y="686.0"></text>
</g>
<g>
<title>__kernel_vsyscall (8 samples, 0.18%)</title><rect x="907.7" y="723.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="910.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.11%)</title><rect x="908.5" y="707.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="911.5" y="718.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.11%)</title><rect x="908.5" y="691.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="911.5" y="702.0"></text>
</g>
<g>
<title>sys_clock_gettime (4 samples, 0.09%)</title><rect x="908.7" y="675.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="911.7" y="686.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (2 samples, 0.05%)</title><rect x="908.7" y="659.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="911.7" y="670.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.05%)</title><rect x="908.7" y="643.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="911.7" y="654.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.02%)</title><rect x="909.0" y="627.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="912.0" y="638.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="909.0" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="912.0" y="622.0"></text>
</g>
<g>
<title>put_timespec64 (2 samples, 0.05%)</title><rect x="909.3" y="659.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="912.3" y="670.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.05%)</title><rect x="909.3" y="643.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="912.3" y="654.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.05%)</title><rect x="909.3" y="627.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="912.3" y="638.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="909.8" y="739.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="912.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.05%)</title><rect x="910.3" y="739.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="913.3" y="750.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (1 samples, 0.02%)</title><rect x="910.9" y="739.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="913.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.07%)</title><rect x="911.1" y="755.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="914.1" y="766.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="911.7" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="914.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="911.7" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="914.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="911.7" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="914.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.05%)</title><rect x="912.0" y="755.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="915.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (1 samples, 0.02%)</title><rect x="912.5" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="915.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.05%)</title><rect x="912.8" y="771.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="915.8" y="782.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="913.0" y="755.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="916.0" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="913.0" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="916.0" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="913.0" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (2 samples, 0.05%)</title><rect x="913.3" y="771.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="916.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.05%)</title><rect x="913.8" y="771.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="916.8" y="782.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="914.1" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="917.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="914.1" y="739.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="917.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="914.1" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="917.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (4 samples, 0.09%)</title><rect x="914.4" y="771.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="917.4" y="782.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="915.2" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="918.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="915.2" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="918.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="915.2" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="918.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (3 samples, 0.07%)</title><rect x="915.5" y="771.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="918.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned int, unsigned int) (4 samples, 0.09%)</title><rect x="916.3" y="771.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="919.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (4 samples, 0.09%)</title><rect x="917.3" y="771.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="920.3" y="782.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="918.1" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="921.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="918.1" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="921.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="918.1" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="921.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.05%)</title><rect x="918.4" y="771.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="921.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.05%)</title><rect x="919.0" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="922.0" y="782.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="919.2" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="922.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="919.2" y="739.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="922.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="919.2" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="922.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.02%)</title><rect x="919.5" y="771.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="922.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (2 samples, 0.05%)</title><rect x="919.8" y="787.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="922.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (7 samples, 0.16%)</title><rect x="920.3" y="787.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="923.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (31 samples, 0.71%)</title><rect x="922.2" y="787.0" width="8.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="925.2" y="798.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="922.2" y="771.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="925.2" y="782.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (3 samples, 0.07%)</title><rect x="922.5" y="771.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="925.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (7 samples, 0.16%)</title><rect x="923.3" y="771.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="926.3" y="782.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="924.9" y="755.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="927.9" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="924.9" y="739.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.9" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="924.9" y="723.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="927.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (4 samples, 0.09%)</title><rect x="925.1" y="771.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="928.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.02%)</title><rect x="925.4" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="928.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.05%)</title><rect x="925.7" y="755.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="928.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (5 samples, 0.11%)</title><rect x="926.2" y="771.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="929.2" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.18%)</title><rect x="927.6" y="771.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="930.6" y="782.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.05%)</title><rect x="928.4" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="931.4" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="928.4" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="931.4" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="928.4" y="723.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="931.4" y="734.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (3 samples, 0.07%)</title><rect x="928.9" y="755.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="931.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (1 samples, 0.02%)</title><rect x="929.7" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="932.7" y="782.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned int) (2 samples, 0.05%)</title><rect x="930.0" y="771.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="933.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned int, unsigned int) (5 samples, 0.11%)</title><rect x="930.5" y="787.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="933.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="931.9" y="787.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="934.9" y="798.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="932.1" y="771.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="935.1" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="932.1" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.1" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="932.1" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="935.1" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="932.4" y="787.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="935.4" y="798.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (3 samples, 0.07%)</title><rect x="932.7" y="787.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="935.7" y="798.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.05%)</title><rect x="933.5" y="787.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="936.5" y="798.0"></text>
</g>
<g>
<title>std::string::append(unsigned int, char) (3 samples, 0.07%)</title><rect x="934.0" y="787.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="937.0" y="798.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned int) (6 samples, 0.14%)</title><rect x="934.8" y="787.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="937.8" y="798.0"></text>
</g>
<g>
<title>std::string::resize(unsigned int, char) (4 samples, 0.09%)</title><rect x="936.5" y="787.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="939.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.02%)</title><rect x="937.5" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="940.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="937.8" y="803.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="940.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned int, unsigned int) (5 samples, 0.11%)</title><rect x="938.1" y="803.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="941.1" y="814.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="939.1" y="787.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="942.1" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="939.1" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="942.1" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="939.1" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="942.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.02%)</title><rect x="939.4" y="803.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="942.4" y="814.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="939.4" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="942.4" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="939.4" y="771.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="942.4" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="939.4" y="755.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="942.4" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="939.4" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="942.4" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="939.4" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="942.4" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="939.4" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="942.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (7 samples, 0.16%)</title><rect x="939.7" y="835.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="942.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="941.6" y="835.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="944.6" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned int) (3 samples, 0.07%)</title><rect x="942.1" y="835.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="945.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.18%)</title><rect x="942.9" y="867.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="945.9" y="878.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6408886059666723122.so (1 samples, 0.02%)</title><rect x="942.9" y="851.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="945.9" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.07%)</title><rect x="943.2" y="851.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="946.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.07%)</title><rect x="943.2" y="835.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="946.2" y="846.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.07%)</title><rect x="943.2" y="819.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="946.2" y="830.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.07%)</title><rect x="943.2" y="803.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="946.2" y="814.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="943.2" y="787.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="946.2" y="798.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="943.2" y="771.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="946.2" y="782.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="943.2" y="755.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="946.2" y="766.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="943.2" y="739.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.2" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="943.4" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="946.4" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="943.4" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="946.4" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="943.4" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.4" y="718.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="943.7" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="946.7" y="782.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="943.7" y="755.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="946.7" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="943.7" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="946.7" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="943.7" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="946.7" y="734.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.09%)</title><rect x="944.0" y="851.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="947.0" y="862.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="945.1" y="867.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="948.1" y="878.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.02%)</title><rect x="945.3" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="948.3" y="878.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned int) (3 samples, 0.07%)</title><rect x="945.6" y="867.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="948.6" y="878.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="946.1" y="851.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="949.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="946.1" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="949.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="946.1" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="949.1" y="830.0"></text>
</g>
<g>
<title>std::string::append(unsigned int, char) (1 samples, 0.02%)</title><rect x="946.4" y="867.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="949.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.getByteArray (4 samples, 0.09%)</title><rect x="946.7" y="899.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.7" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.09%)</title><rect x="946.7" y="883.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="949.7" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="946.7" y="867.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.7" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="946.7" y="851.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.7" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="946.7" y="835.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="949.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.09%)</title><rect x="946.7" y="819.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="949.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.09%)</title><rect x="946.7" y="803.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="949.7" y="814.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="947.5" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="950.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="947.5" y="771.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="950.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="947.5" y="755.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="950.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.restoreByteArray (2 samples, 0.05%)</title><rect x="947.8" y="899.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="950.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.getByteArray (2 samples, 0.05%)</title><rect x="947.8" y="883.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.8" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.05%)</title><rect x="947.8" y="867.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="950.8" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="947.8" y="851.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="947.8" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.8" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="947.8" y="819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="947.8" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.02%)</title><rect x="948.3" y="1043.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.3" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.02%)</title><rect x="948.3" y="1027.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="951.3" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.02%)</title><rect x="948.3" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.3" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.02%)</title><rect x="948.3" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="951.3" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.02%)</title><rect x="948.3" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.3" y="990.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="948.3" y="963.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="951.3" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="948.3" y="947.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="951.3" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="948.3" y="931.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="951.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1 samples, 0.02%)</title><rect x="948.6" y="1043.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.02%)</title><rect x="948.6" y="1027.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.02%)</title><rect x="948.6" y="1011.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.6" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.02%)</title><rect x="948.6" y="995.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.6" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="948.6" y="979.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.6" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="948.6" y="963.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.6" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="948.6" y="947.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="951.6" y="958.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="948.6" y="931.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="951.6" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (885 samples, 20.19%)</title><rect x="948.8" y="1043.0" width="238.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.8" y="1054.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.05%)</title><rect x="949.9" y="1027.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="952.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (335 samples, 7.64%)</title><rect x="950.4" y="1027.0" width="90.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.4" y="1038.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (26 samples, 0.59%)</title><rect x="950.4" y="1011.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.4" y="1022.0"></text>
</g>
<g>
<title>__clock_gettime (20 samples, 0.46%)</title><rect x="951.5" y="995.0" width="5.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="954.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="951.5" y="979.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="954.5" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.07%)</title><rect x="951.5" y="963.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="954.5" y="974.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.07%)</title><rect x="951.5" y="947.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="954.5" y="958.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.07%)</title><rect x="951.5" y="931.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="954.5" y="942.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="952.3" y="979.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="955.3" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (14 samples, 0.32%)</title><rect x="952.9" y="979.0" width="3.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="955.9" y="990.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (14 samples, 0.32%)</title><rect x="952.9" y="963.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="955.9" y="974.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (14 samples, 0.32%)</title><rect x="952.9" y="947.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="955.9" y="958.0"></text>
</g>
<g>
<title>clockid_to_kclock.part.3 (3 samples, 0.07%)</title><rect x="952.9" y="931.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="955.9" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="953.7" y="931.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="956.7" y="942.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="953.7" y="915.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="956.7" y="926.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="953.7" y="899.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="956.7" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="953.7" y="883.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="956.7" y="894.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (1 samples, 0.02%)</title><rect x="954.2" y="931.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="957.2" y="942.0"></text>
</g>
<g>
<title>put_timespec64 (2 samples, 0.05%)</title><rect x="954.5" y="931.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="957.5" y="942.0"></text>
</g>
<g>
<title>sys_clock_gettime (6 samples, 0.14%)</title><rect x="955.0" y="931.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="958.0" y="942.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (2 samples, 0.05%)</title><rect x="955.6" y="915.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="958.6" y="926.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.02%)</title><rect x="955.6" y="899.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="958.6" y="910.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.02%)</title><rect x="955.8" y="899.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="958.8" y="910.0"></text>
</g>
<g>
<title>put_timespec64 (2 samples, 0.05%)</title><rect x="956.1" y="915.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="959.1" y="926.0"></text>
</g>
<g>
<title>__copy_user_ll (1 samples, 0.02%)</title><rect x="956.4" y="899.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="959.4" y="910.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="956.6" y="979.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="959.6" y="990.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.05%)</title><rect x="956.9" y="995.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="959.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (8 samples, 0.18%)</title><rect x="957.4" y="1011.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (8 samples, 0.18%)</title><rect x="957.4" y="995.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="959.3" y="979.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="962.3" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="959.3" y="963.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="962.3" y="974.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="959.3" y="947.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="962.3" y="958.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="959.3" y="931.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="962.3" y="942.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="959.3" y="915.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="962.3" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="959.3" y="899.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.3" y="910.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="959.3" y="883.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="962.3" y="894.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="959.3" y="867.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="962.3" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="959.3" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="962.3" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="959.3" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="962.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (301 samples, 6.87%)</title><rect x="959.6" y="1011.0" width="81.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="962.6" y="1022.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (301 samples, 6.87%)</title><rect x="959.6" y="995.0" width="81.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="962.6" y="1006.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (293 samples, 6.68%)</title><rect x="961.8" y="979.0" width="78.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="964.8" y="990.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (253 samples, 5.77%)</title><rect x="963.1" y="963.0" width="68.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.1" y="974.0">sun/nio..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.09%)</title><rect x="965.0" y="947.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="968.0" y="958.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (3 samples, 0.07%)</title><rect x="966.1" y="947.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="969.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="966.9" y="947.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="969.9" y="958.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.05%)</title><rect x="966.9" y="931.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="969.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.05%)</title><rect x="966.9" y="915.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="969.9" y="926.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="966.9" y="899.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="969.9" y="910.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="967.1" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="970.1" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (234 samples, 5.34%)</title><rect x="967.4" y="947.0" width="63.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="970.4" y="958.0">__kern..</text>
</g>
<g>
<title>entry_SYSENTER_32 (232 samples, 5.29%)</title><rect x="967.9" y="931.0" width="62.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="970.9" y="942.0">entry_..</text>
</g>
<g>
<title>do_fast_syscall_32 (231 samples, 5.27%)</title><rect x="967.9" y="915.0" width="62.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="970.9" y="926.0">do_fas..</text>
</g>
<g>
<title>sys_epoll_wait (231 samples, 5.27%)</title><rect x="967.9" y="899.0" width="62.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="970.9" y="910.0">sys_ep..</text>
</g>
<g>
<title>ep_poll (228 samples, 5.20%)</title><rect x="967.9" y="883.0" width="61.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="970.9" y="894.0">ep_poll</text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.05%)</title><rect x="968.8" y="867.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="971.8" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.16 (24 samples, 0.55%)</title><rect x="969.3" y="867.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="972.3" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.09%)</title><rect x="969.3" y="851.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="972.3" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.41%)</title><rect x="970.4" y="851.0" width="4.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="973.4" y="862.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_ecx (1 samples, 0.02%)</title><rect x="970.9" y="835.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="973.9" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (13 samples, 0.30%)</title><rect x="971.2" y="835.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="974.2" y="846.0"></text>
</g>
<g>
<title>sock_poll (13 samples, 0.30%)</title><rect x="971.2" y="819.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="974.2" y="830.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.18%)</title><rect x="972.0" y="803.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="975.0" y="814.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="973.9" y="787.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="976.9" y="798.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="974.1" y="803.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="977.1" y="814.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.05%)</title><rect x="974.7" y="835.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="977.7" y="846.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="975.2" y="851.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="978.2" y="862.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="975.5" y="835.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="978.5" y="846.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="975.5" y="819.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="978.5" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (199 samples, 4.54%)</title><rect x="975.7" y="867.0" width="53.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="978.7" y="878.0">sched..</text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="975.7" y="851.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="978.7" y="862.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (197 samples, 4.49%)</title><rect x="976.3" y="851.0" width="53.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="979.3" y="862.0">sched..</text>
</g>
<g>
<title>schedule (197 samples, 4.49%)</title><rect x="976.3" y="835.0" width="53.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="979.3" y="846.0">sched..</text>
</g>
<g>
<title>__sched_text_start (196 samples, 4.47%)</title><rect x="976.6" y="819.0" width="52.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="979.6" y="830.0">__sch..</text>
</g>
<g>
<title>finish_task_switch (193 samples, 4.40%)</title><rect x="977.4" y="803.0" width="51.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="980.4" y="814.0">finis..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.16 (1 samples, 0.02%)</title><rect x="1029.3" y="883.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1032.3" y="894.0"></text>
</g>
<g>
<title>fput (2 samples, 0.05%)</title><rect x="1029.6" y="883.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1032.6" y="894.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.02%)</title><rect x="1030.1" y="915.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1033.1" y="926.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.07%)</title><rect x="1030.4" y="947.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1033.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (16 samples, 0.36%)</title><rect x="1031.2" y="963.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.2" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.09%)</title><rect x="1032.0" y="947.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.09%)</title><rect x="1032.0" y="931.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.0" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (1 samples, 0.02%)</title><rect x="1032.8" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.8" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.getEvent (1 samples, 0.02%)</title><rect x="1033.1" y="947.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1036.1" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.18%)</title><rect x="1033.3" y="947.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1036.3" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.14%)</title><rect x="1033.3" y="931.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1036.3" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.14%)</title><rect x="1033.3" y="915.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1036.3" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.14%)</title><rect x="1033.3" y="899.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.3" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.05%)</title><rect x="1034.2" y="883.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1037.2" y="894.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="1034.7" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1037.7" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1034.7" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1037.7" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1034.7" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1037.7" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (2 samples, 0.05%)</title><rect x="1035.0" y="931.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1038.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (3 samples, 0.07%)</title><rect x="1035.5" y="963.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1038.5" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.02%)</title><rect x="1036.0" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.0" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.02%)</title><rect x="1036.0" y="931.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (4 samples, 0.09%)</title><rect x="1036.3" y="963.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.3" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (4 samples, 0.09%)</title><rect x="1036.3" y="947.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1039.3" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.09%)</title><rect x="1036.3" y="931.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1039.3" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (5 samples, 0.11%)</title><rect x="1037.4" y="963.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1040.4" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (5 samples, 0.11%)</title><rect x="1037.4" y="947.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1040.4" y="958.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.11%)</title><rect x="1037.4" y="931.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.4" y="942.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.02%)</title><rect x="1038.5" y="915.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.5" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="1038.5" y="899.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1041.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (7 samples, 0.16%)</title><rect x="1038.7" y="963.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1041.7" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (535 samples, 12.20%)</title><rect x="1040.6" y="1027.0" width="144.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.6" y="1038.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (532 samples, 12.14%)</title><rect x="1041.4" y="1011.0" width="143.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.4" y="1022.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (390 samples, 8.90%)</title><rect x="1041.7" y="995.0" width="105.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.7" y="1006.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (348 samples, 7.94%)</title><rect x="1052.7" y="979.0" width="93.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.7" y="990.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (348 samples, 7.94%)</title><rect x="1052.7" y="963.0" width="93.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.7" y="974.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (323 samples, 7.37%)</title><rect x="1053.0" y="947.0" width="86.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1056.0" y="958.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.16%)</title><rect x="1053.0" y="931.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.0" y="942.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.09%)</title><rect x="1053.8" y="915.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1054.6" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1057.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1054.6" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (316 samples, 7.21%)</title><rect x="1054.9" y="931.0" width="85.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.9" y="942.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.executeAsync (316 samples, 7.21%)</title><rect x="1054.9" y="915.0" width="85.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.9" y="926.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (316 samples, 7.21%)</title><rect x="1054.9" y="899.0" width="85.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1057.9" y="910.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (300 samples, 6.84%)</title><rect x="1059.2" y="883.0" width="80.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.2" y="894.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (289 samples, 6.59%)</title><rect x="1059.2" y="867.0" width="77.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.2" y="878.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.14%)</title><rect x="1059.2" y="851.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.14%)</title><rect x="1059.2" y="835.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.14%)</title><rect x="1059.2" y="819.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (283 samples, 6.46%)</title><rect x="1060.8" y="851.0" width="76.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1063.8" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (283 samples, 6.46%)</title><rect x="1060.8" y="835.0" width="76.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1063.8" y="846.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (283 samples, 6.46%)</title><rect x="1060.8" y="819.0" width="76.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.8" y="830.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (283 samples, 6.46%)</title><rect x="1060.8" y="803.0" width="76.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.8" y="814.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (279 samples, 6.36%)</title><rect x="1061.9" y="787.0" width="75.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.9" y="798.0">jdk/inte..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="1062.4" y="771.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1065.4" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="1063.0" y="771.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1066.0" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="1063.2" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1066.2" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (34 samples, 0.78%)</title><rect x="1063.5" y="771.0" width="9.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1066.5" y="782.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.07%)</title><rect x="1064.6" y="755.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1067.6" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1065.4" y="755.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1068.4" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="1065.6" y="755.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1068.6" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.18%)</title><rect x="1066.2" y="755.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1069.2" y="766.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.05%)</title><rect x="1067.8" y="739.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1070.8" y="750.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (4 samples, 0.09%)</title><rect x="1068.3" y="755.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1071.3" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.05%)</title><rect x="1069.4" y="755.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1072.4" y="766.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.05%)</title><rect x="1070.0" y="755.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1073.0" y="766.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.02%)</title><rect x="1070.5" y="755.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1073.5" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.11%)</title><rect x="1070.8" y="755.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1073.8" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="1072.1" y="755.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1075.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (237 samples, 5.41%)</title><rect x="1072.6" y="771.0" width="63.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1075.6" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1072.6" y="755.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1075.6" y="766.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.05%)</title><rect x="1072.6" y="739.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1075.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.05%)</title><rect x="1072.6" y="723.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1075.6" y="734.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.05%)</title><rect x="1072.6" y="707.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1075.6" y="718.0"></text>
</g>
<g>
<title>__kernel_vsyscall (232 samples, 5.29%)</title><rect x="1073.2" y="755.0" width="62.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1076.2" y="766.0">__kern..</text>
</g>
<g>
<title>entry_SYSENTER_32 (230 samples, 5.25%)</title><rect x="1073.7" y="739.0" width="61.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1076.7" y="750.0">entry_..</text>
</g>
<g>
<title>do_fast_syscall_32 (230 samples, 5.25%)</title><rect x="1073.7" y="723.0" width="61.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1076.7" y="734.0">do_fas..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1074.0" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1077.0" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1074.0" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1077.0" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1074.0" y="675.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1077.0" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1074.0" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1077.0" y="670.0"></text>
</g>
<g>
<title>sys_futex (228 samples, 5.20%)</title><rect x="1074.3" y="707.0" width="61.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1077.3" y="718.0">sys_fu..</text>
</g>
<g>
<title>do_futex (227 samples, 5.18%)</title><rect x="1074.3" y="691.0" width="61.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1077.3" y="702.0">do_futex</text>
</g>
<g>
<title>futex_wake (227 samples, 5.18%)</title><rect x="1074.3" y="675.0" width="61.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1077.3" y="686.0">futex_..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1075.9" y="659.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1078.9" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.21%)</title><rect x="1076.1" y="659.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1079.1" y="670.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.05%)</title><rect x="1077.0" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1080.0" y="654.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.02%)</title><rect x="1077.2" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1080.2" y="638.0"></text>
</g>
<g>
<title>wake_q_add (4 samples, 0.09%)</title><rect x="1077.5" y="643.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1080.5" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1078.6" y="659.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1081.6" y="670.0"></text>
</g>
<g>
<title>wake_up_q (210 samples, 4.79%)</title><rect x="1078.8" y="659.0" width="56.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1081.8" y="670.0">wake_u..</text>
</g>
<g>
<title>try_to_wake_up (210 samples, 4.79%)</title><rect x="1078.8" y="643.0" width="56.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1081.8" y="654.0">try_to..</text>
</g>
<g>
<title>__lock_text_start (210 samples, 4.79%)</title><rect x="1078.8" y="627.0" width="56.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1081.8" y="638.0">__lock..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1135.1" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1138.1" y="622.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1135.1" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1138.1" y="606.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1135.1" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1138.1" y="590.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1135.1" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1138.1" y="574.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="1135.1" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1138.1" y="558.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="1135.1" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1138.1" y="542.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1135.4" y="691.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1138.4" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.07%)</title><rect x="1135.6" y="755.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1138.6" y="766.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.05%)</title><rect x="1136.4" y="771.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1139.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="1137.0" y="867.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="1137.0" y="851.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="1137.0" y="835.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.0" y="846.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="1137.0" y="819.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1140.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="1137.2" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="1137.2" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="1137.2" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.21%)</title><rect x="1137.5" y="867.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.21%)</title><rect x="1137.5" y="851.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.21%)</title><rect x="1137.5" y="835.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.21%)</title><rect x="1137.5" y="819.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1140.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (24 samples, 0.55%)</title><rect x="1139.9" y="947.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.9" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (24 samples, 0.55%)</title><rect x="1139.9" y="931.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.9" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (24 samples, 0.55%)</title><rect x="1139.9" y="915.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="1146.4" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="1146.4" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="1146.4" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (141 samples, 3.22%)</title><rect x="1146.7" y="995.0" width="37.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.7" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (129 samples, 2.94%)</title><rect x="1149.9" y="979.0" width="34.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1152.9" y="990.0">on..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (129 samples, 2.94%)</title><rect x="1149.9" y="963.0" width="34.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1152.9" y="974.0">su..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.05%)</title><rect x="1149.9" y="947.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1152.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="1149.9" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1152.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="1149.9" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="1149.9" y="899.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1152.9" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (119 samples, 2.71%)</title><rect x="1150.4" y="947.0" width="32.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.4" y="958.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (119 samples, 2.71%)</title><rect x="1150.4" y="931.0" width="32.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1153.4" y="942.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.07%)</title><rect x="1150.4" y="915.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1153.4" y="926.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.07%)</title><rect x="1150.4" y="899.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.07%)</title><rect x="1150.4" y="883.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.07%)</title><rect x="1150.4" y="867.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1153.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.07%)</title><rect x="1150.4" y="851.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1153.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (3 samples, 0.07%)</title><rect x="1150.4" y="835.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (3 samples, 0.07%)</title><rect x="1150.4" y="819.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1153.4" y="830.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="1151.0" y="803.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1154.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (115 samples, 2.62%)</title><rect x="1151.2" y="915.0" width="31.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.2" y="926.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (115 samples, 2.62%)</title><rect x="1151.2" y="899.0" width="31.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.2" y="910.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (106 samples, 2.42%)</title><rect x="1153.7" y="883.0" width="28.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.7" y="894.0">su..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.05%)</title><rect x="1155.3" y="867.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1158.3" y="878.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="1155.5" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1158.5" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1155.5" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1158.5" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1155.5" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1158.5" y="830.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1155.5" y="803.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1158.5" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1155.5" y="787.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1158.5" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1155.5" y="771.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1158.5" y="782.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.02%)</title><rect x="1155.8" y="867.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1158.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1156.1" y="867.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1159.1" y="878.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="1156.1" y="851.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1159.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="1156.1" y="835.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1159.1" y="846.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="1156.1" y="819.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1159.1" y="830.0"></text>
</g>
<g>
<title>__kernel_vsyscall (92 samples, 2.10%)</title><rect x="1156.4" y="867.0" width="24.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1159.4" y="878.0">_..</text>
</g>
<g>
<title>entry_SYSENTER_32 (92 samples, 2.10%)</title><rect x="1156.4" y="851.0" width="24.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1159.4" y="862.0">e..</text>
</g>
<g>
<title>do_fast_syscall_32 (92 samples, 2.10%)</title><rect x="1156.4" y="835.0" width="24.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1159.4" y="846.0">d..</text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="1156.4" y="819.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1159.4" y="830.0"></text>
</g>
<g>
<title>sys_read (91 samples, 2.08%)</title><rect x="1156.6" y="819.0" width="24.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1159.6" y="830.0">s..</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.11%)</title><rect x="1156.6" y="803.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1159.6" y="814.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.11%)</title><rect x="1156.6" y="787.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1159.6" y="798.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.11%)</title><rect x="1156.6" y="771.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1159.6" y="782.0"></text>
</g>
<g>
<title>vfs_read (86 samples, 1.96%)</title><rect x="1158.0" y="803.0" width="23.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1161.0" y="814.0">v..</text>
</g>
<g>
<title>__vfs_read (62 samples, 1.41%)</title><rect x="1158.5" y="787.0" width="16.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1161.5" y="798.0"></text>
</g>
<g>
<title>new_sync_read (61 samples, 1.39%)</title><rect x="1158.5" y="771.0" width="16.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1161.5" y="782.0"></text>
</g>
<g>
<title>sock_read_iter (61 samples, 1.39%)</title><rect x="1158.5" y="755.0" width="16.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1161.5" y="766.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.02%)</title><rect x="1158.5" y="739.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1161.5" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1158.8" y="739.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1161.8" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (59 samples, 1.35%)</title><rect x="1159.0" y="739.0" width="15.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1162.0" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1159.3" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.3" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (56 samples, 1.28%)</title><rect x="1159.6" y="723.0" width="15.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1162.6" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1159.9" y="707.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1162.9" y="718.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="1160.1" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.1" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="1160.4" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1163.4" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (52 samples, 1.19%)</title><rect x="1160.7" y="707.0" width="14.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.7" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="1161.7" y="691.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1164.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="1161.7" y="675.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1164.7" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1161.7" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1164.7" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1162.0" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1165.0" y="670.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="1162.0" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1165.0" y="654.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="1162.3" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1165.3" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="1162.8" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1165.8" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1163.1" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1166.1" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.14%)</title><rect x="1163.4" y="691.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1166.4" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="1163.4" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1166.4" y="686.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1163.9" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1166.9" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1163.9" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1166.9" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="1164.2" y="675.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1167.2" y="686.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (2 samples, 0.05%)</title><rect x="1164.4" y="659.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1167.4" y="670.0"></text>
</g>
<g>
<title>kvm_wait (1 samples, 0.02%)</title><rect x="1164.7" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1167.7" y="654.0"></text>
</g>
<g>
<title>native_safe_halt (1 samples, 0.02%)</title><rect x="1164.7" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1167.7" y="638.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="1165.0" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1168.0" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.05%)</title><rect x="1165.0" y="675.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1168.0" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1165.0" y="659.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.0" y="670.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="1165.2" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1168.2" y="670.0"></text>
</g>
<g>
<title>__pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="1165.2" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1168.2" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (22 samples, 0.50%)</title><rect x="1165.5" y="691.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1168.5" y="702.0"></text>
</g>
<g>
<title>__check_object_size (10 samples, 0.23%)</title><rect x="1166.0" y="675.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1169.0" y="686.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.07%)</title><rect x="1167.1" y="659.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1170.1" y="670.0"></text>
</g>
<g>
<title>page_address (1 samples, 0.02%)</title><rect x="1167.7" y="643.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1170.7" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="1167.9" y="659.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1170.9" y="670.0"></text>
</g>
<g>
<title>page_address (1 samples, 0.02%)</title><rect x="1168.5" y="659.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1171.5" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1168.7" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1171.7" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.21%)</title><rect x="1169.0" y="675.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1172.0" y="686.0"></text>
</g>
<g>
<title>copyout (8 samples, 0.18%)</title><rect x="1169.3" y="659.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1172.3" y="670.0"></text>
</g>
<g>
<title>__copy_user_ll (8 samples, 0.18%)</title><rect x="1169.3" y="643.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1172.3" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.09%)</title><rect x="1171.4" y="691.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1174.4" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (8 samples, 0.18%)</title><rect x="1172.5" y="691.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1175.5" y="702.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="1173.3" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1176.3" y="686.0"></text>
</g>
<g>
<title>sched_clock_cpu (4 samples, 0.09%)</title><rect x="1173.6" y="675.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1176.6" y="686.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.07%)</title><rect x="1173.9" y="659.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1176.9" y="670.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (3 samples, 0.07%)</title><rect x="1173.9" y="643.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1176.9" y="654.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (3 samples, 0.07%)</title><rect x="1173.9" y="627.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1176.9" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1174.7" y="723.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.7" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1174.7" y="707.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.7" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1174.7" y="691.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.7" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1174.7" y="675.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1177.7" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm (1 samples, 0.02%)</title><rect x="1174.7" y="659.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1177.7" y="670.0"></text>
</g>
<g>
<title>sock_read_iter (1 samples, 0.02%)</title><rect x="1174.9" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1177.9" y="782.0"></text>
</g>
<g>
<title>rw_verify_area (22 samples, 0.50%)</title><rect x="1175.2" y="787.0" width="5.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1178.2" y="798.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="1175.7" y="771.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1178.7" y="782.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.05%)</title><rect x="1176.3" y="771.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1179.3" y="782.0"></text>
</g>
<g>
<title>security_file_permission (16 samples, 0.36%)</title><rect x="1176.8" y="771.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1179.8" y="782.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.09%)</title><rect x="1178.4" y="755.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.4" y="766.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.09%)</title><rect x="1178.4" y="739.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1181.4" y="750.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.05%)</title><rect x="1179.0" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1182.0" y="734.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="1179.5" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1182.5" y="766.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.11%)</title><rect x="1179.8" y="755.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1182.8" y="766.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (4 samples, 0.09%)</title><rect x="1181.1" y="867.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1184.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="1182.2" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1185.2" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="1182.2" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.2" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="1182.2" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (3 samples, 0.07%)</title><rect x="1182.5" y="947.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1185.5" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endRead (5 samples, 0.11%)</title><rect x="1183.3" y="947.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.3" y="958.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.11%)</title><rect x="1183.3" y="931.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1186.3" y="942.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.21%)</title><rect x="1184.6" y="1027.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.6" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (7 samples, 0.16%)</title><rect x="1184.6" y="1011.0" width="1.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1187.6" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (7 samples, 0.16%)</title><rect x="1184.6" y="995.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1187.6" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (7 samples, 0.16%)</title><rect x="1184.6" y="979.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1187.6" y="990.0"></text>
</g>
<g>
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="1184.6" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1187.6" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="1184.9" y="963.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1187.9" y="974.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="1184.9" y="947.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1187.9" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="1184.9" y="931.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1187.9" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="1184.9" y="915.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1187.9" y="926.0"></text>
</g>
<g>
<title>sys_gettimeofday (4 samples, 0.09%)</title><rect x="1185.4" y="963.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1188.4" y="974.0"></text>
</g>
<g>
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="1185.7" y="947.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1188.7" y="958.0"></text>
</g>
<g>
<title>__copy_user_ll (1 samples, 0.02%)</title><rect x="1185.7" y="931.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1188.7" y="942.0"></text>
</g>
<g>
<title>do_gettimeofday (2 samples, 0.05%)</title><rect x="1186.0" y="947.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1189.0" y="958.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.05%)</title><rect x="1186.0" y="931.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1189.0" y="942.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.05%)</title><rect x="1186.0" y="915.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1189.0" y="926.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.05%)</title><rect x="1186.0" y="899.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1189.0" y="910.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.05%)</title><rect x="1186.5" y="1011.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1189.5" y="1022.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.02%)</title><rect x="1187.0" y="1043.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.0" y="1054.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (2 samples, 0.05%)</title><rect x="1187.3" y="1043.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.3" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (4 samples, 0.09%)</title><rect x="1187.8" y="1043.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (4 samples, 0.09%)</title><rect x="1187.8" y="1027.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1190.8" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 0.09%)</title><rect x="1187.8" y="1011.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.8" y="1022.0"></text>
</g>
<g>
<title>Thread::current() (3 samples, 0.07%)</title><rect x="1187.8" y="995.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="1006.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="1188.7" y="995.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1191.7" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (4 samples, 0.09%)</title><rect x="1188.9" y="1043.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="1188.9" y="1027.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.07%)</title><rect x="1188.9" y="1011.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.9" y="1022.0"></text>
</g>
<g>
<title>Thread::current() (3 samples, 0.07%)</title><rect x="1188.9" y="995.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.02%)</title><rect x="1189.7" y="1027.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.7" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.02%)</title><rect x="1189.7" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.7" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.02%)</title><rect x="1189.7" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.7" y="1006.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="1189.7" y="979.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="990.0"></text>
</g>
</g>
</svg>
