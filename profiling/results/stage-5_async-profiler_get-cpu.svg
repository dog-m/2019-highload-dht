<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1173"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1173"> </text>
<g id="frames">
<g>
<title>all (4,595 samples, 100.00%)</title><rect x="10.0" y="1139.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1150.0">all</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.04%)</title><rect x="10.0" y="1123.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="10.5" y="1123.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (3 samples, 0.07%)</title><rect x="11.0" y="1123.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.0" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (142 samples, 3.09%)</title><rect x="11.8" y="1123.0" width="36.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.8" y="1134.0">Opt..</text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.09%)</title><rect x="14.4" y="1107.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="17.4" y="1118.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="15.4" y="1107.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.4" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.04%)</title><rect x="15.4" y="1091.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="18.4" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="15.4" y="1075.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="18.4" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="15.4" y="1059.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="18.4" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="15.4" y="1043.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="18.4" y="1054.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="15.4" y="1027.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="18.4" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="15.4" y="1011.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.4" y="1022.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="15.4" y="995.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.4" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.02%)</title><rect x="15.6" y="1075.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.6" y="1086.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (126 samples, 2.74%)</title><rect x="15.9" y="1107.0" width="32.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.9" y="1118.0">oo..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="16.2" y="1091.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.2" y="1102.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (123 samples, 2.68%)</title><rect x="16.7" y="1091.0" width="31.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="19.7" y="1102.0">Ty..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (116 samples, 2.52%)</title><rect x="17.4" y="1075.0" width="29.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="20.4" y="1086.0">Co..</text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (1 samples, 0.02%)</title><rect x="17.7" y="1059.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.7" y="1070.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned int, Thread*) (4 samples, 0.09%)</title><rect x="18.0" y="1059.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.0" y="1070.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (6 samples, 0.13%)</title><rect x="19.0" y="1059.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.0" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (102 samples, 2.22%)</title><rect x="20.5" y="1059.0" width="26.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="23.5" y="1070.0">M..</text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (2 samples, 0.04%)</title><rect x="22.3" y="1043.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.3" y="1054.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="22.3" y="1027.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="25.3" y="1038.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.02%)</title><rect x="22.6" y="1027.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="25.6" y="1038.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned int, Thread*) (5 samples, 0.11%)</title><rect x="22.8" y="1043.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="25.8" y="1054.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (2 samples, 0.04%)</title><rect x="23.6" y="1027.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="26.6" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (1 samples, 0.02%)</title><rect x="24.1" y="1043.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="27.1" y="1054.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (22 samples, 0.48%)</title><rect x="24.4" y="1043.0" width="5.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="27.4" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (3 samples, 0.07%)</title><rect x="24.4" y="1027.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.4" y="1038.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (4 samples, 0.09%)</title><rect x="25.2" y="1027.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="28.2" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (14 samples, 0.30%)</title><rect x="26.2" y="1027.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="29.2" y="1038.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.02%)</title><rect x="28.0" y="1011.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="31.0" y="1022.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (4 samples, 0.09%)</title><rect x="28.2" y="1011.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="31.2" y="1022.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (2 samples, 0.04%)</title><rect x="28.7" y="995.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="31.7" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (1 samples, 0.02%)</title><rect x="29.3" y="1011.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.3" y="1022.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.02%)</title><rect x="29.5" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="32.5" y="1022.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="29.8" y="1027.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.8" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (3 samples, 0.07%)</title><rect x="30.0" y="1043.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="33.0" y="1054.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="30.8" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="33.8" y="1054.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned int, Thread*) (3 samples, 0.07%)</title><rect x="31.1" y="1043.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="34.1" y="1054.0"></text>
</g>
<g>
<title>JfrAllocationTracer::~JfrAllocationTracer() (2 samples, 0.04%)</title><rect x="31.8" y="1043.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="34.8" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="32.3" y="1043.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="35.3" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (18 samples, 0.39%)</title><rect x="32.6" y="1043.0" width="4.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="35.6" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (1 samples, 0.02%)</title><rect x="33.4" y="1027.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="36.4" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (4 samples, 0.09%)</title><rect x="33.6" y="1027.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="36.6" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (4 samples, 0.09%)</title><rect x="33.6" y="1011.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="36.6" y="1022.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (2 samples, 0.04%)</title><rect x="33.9" y="995.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="36.9" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (1 samples, 0.02%)</title><rect x="34.4" y="995.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="37.4" y="1006.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.02%)</title><rect x="34.4" y="979.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="37.4" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (3 samples, 0.07%)</title><rect x="34.7" y="1027.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="37.7" y="1038.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="35.2" y="1011.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="38.2" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="35.2" y="995.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="38.2" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="35.2" y="979.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="38.2" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (2 samples, 0.04%)</title><rect x="35.4" y="1027.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="38.4" y="1038.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (3 samples, 0.07%)</title><rect x="35.9" y="1027.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="38.9" y="1038.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="36.7" y="1027.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="39.7" y="1038.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="37.0" y="1027.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="40.0" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="37.0" y="1011.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="40.0" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="37.0" y="995.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="40.0" y="1006.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (33 samples, 0.72%)</title><rect x="37.2" y="1043.0" width="8.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="40.2" y="1054.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.04%)</title><rect x="45.7" y="1043.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="48.7" y="1054.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned int) (1 samples, 0.02%)</title><rect x="46.2" y="1043.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="49.2" y="1054.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.02%)</title><rect x="46.5" y="1043.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="49.5" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="46.7" y="1059.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="49.7" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.09%)</title><rect x="47.2" y="1075.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="50.2" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.11%)</title><rect x="48.3" y="1123.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="51.3" y="1134.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (5 samples, 0.11%)</title><rect x="48.3" y="1107.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="51.3" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="48.5" y="1091.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="51.5" y="1102.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.07%)</title><rect x="48.8" y="1091.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="51.8" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.07%)</title><rect x="48.8" y="1075.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="51.8" y="1086.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned int, Thread*) (1 samples, 0.02%)</title><rect x="48.8" y="1059.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="51.8" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="49.0" y="1059.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="52.0" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="49.0" y="1043.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="52.0" y="1054.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (1 samples, 0.02%)</title><rect x="49.0" y="1027.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="52.0" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (1 samples, 0.02%)</title><rect x="49.0" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="52.0" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="49.3" y="1027.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="52.3" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="49.3" y="1011.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="52.3" y="1022.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.02%)</title><rect x="49.3" y="995.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="52.3" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (35 samples, 0.76%)</title><rect x="49.5" y="1123.0" width="9.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="52.5" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="50.3" y="1107.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="53.3" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (28 samples, 0.61%)</title><rect x="50.8" y="1107.0" width="7.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="53.8" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (27 samples, 0.59%)</title><rect x="50.8" y="1091.0" width="7.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="53.8" y="1102.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (2 samples, 0.04%)</title><rect x="50.8" y="1075.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="53.8" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (24 samples, 0.52%)</title><rect x="51.3" y="1075.0" width="6.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="54.3" y="1086.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (1 samples, 0.02%)</title><rect x="52.1" y="1059.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="55.1" y="1070.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.02%)</title><rect x="52.1" y="1043.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="55.1" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (4 samples, 0.09%)</title><rect x="52.4" y="1059.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="55.4" y="1070.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned int, Thread*) (1 samples, 0.02%)</title><rect x="53.4" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="56.4" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="53.7" y="1059.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="56.7" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (10 samples, 0.22%)</title><rect x="53.9" y="1059.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="56.9" y="1070.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (2 samples, 0.04%)</title><rect x="54.4" y="1043.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="57.4" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (1 samples, 0.02%)</title><rect x="54.9" y="1043.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="57.9" y="1054.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (4 samples, 0.09%)</title><rect x="55.2" y="1043.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="58.2" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (1 samples, 0.02%)</title><rect x="55.2" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="58.2" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (3 samples, 0.07%)</title><rect x="55.5" y="1027.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="58.5" y="1038.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.02%)</title><rect x="55.5" y="1011.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="58.5" y="1022.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (1 samples, 0.02%)</title><rect x="55.7" y="1011.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="58.7" y="1022.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="56.0" y="1011.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="59.0" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="56.2" y="1043.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="59.2" y="1054.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (3 samples, 0.07%)</title><rect x="56.5" y="1059.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="59.5" y="1070.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="57.3" y="1059.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="60.3" y="1070.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="57.5" y="1075.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="60.5" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="57.8" y="1091.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="60.8" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (2 samples, 0.04%)</title><rect x="58.0" y="1107.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="61.0" y="1118.0"></text>
</g>
<g>
<title>Klass::class_loader() const (2 samples, 0.04%)</title><rect x="58.0" y="1091.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="61.0" y="1102.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="58.5" y="1123.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="61.5" y="1134.0"></text>
</g>
<g>
<title>[not_walkable_Java] (31 samples, 0.67%)</title><rect x="58.8" y="1123.0" width="8.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="61.8" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.11%)</title><rect x="58.8" y="1107.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="61.8" y="1118.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (3 samples, 0.07%)</title><rect x="58.8" y="1091.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="61.8" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.04%)</title><rect x="59.6" y="1091.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="62.6" y="1102.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="59.6" y="1075.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="62.6" y="1086.0"></text>
</g>
<g>
<title>GenCollectedHeap::is_in_young(oopDesc*) (1 samples, 0.02%)</title><rect x="59.8" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="62.8" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.17%)</title><rect x="60.1" y="1107.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="63.1" y="1118.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="60.3" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="63.3" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (6 samples, 0.13%)</title><rect x="60.6" y="1091.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="63.6" y="1102.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="60.6" y="1075.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="63.6" y="1086.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="60.8" y="1075.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="63.8" y="1086.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.09%)</title><rect x="61.1" y="1075.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="64.1" y="1086.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (3 samples, 0.07%)</title><rect x="61.1" y="1059.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="64.1" y="1070.0"></text>
</g>
<g>
<title>CodeBlob::oop_map_for_return_address(unsigned char*) (1 samples, 0.02%)</title><rect x="61.4" y="1043.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="64.4" y="1054.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.02%)</title><rect x="61.4" y="1027.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="64.4" y="1038.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.02%)</title><rect x="61.6" y="1043.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="64.6" y="1054.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (1 samples, 0.02%)</title><rect x="61.9" y="1059.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="64.9" y="1070.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="61.9" y="1043.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="64.9" y="1054.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="61.9" y="1027.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="64.9" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (13 samples, 0.28%)</title><rect x="62.1" y="1107.0" width="3.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="65.1" y="1118.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (2 samples, 0.04%)</title><rect x="62.1" y="1091.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="65.1" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (11 samples, 0.24%)</title><rect x="62.6" y="1091.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="65.6" y="1102.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="62.9" y="1075.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="65.9" y="1086.0"></text>
</g>
<g>
<title>CardTableRS::is_in_young(oopDesc*) const (5 samples, 0.11%)</title><rect x="63.2" y="1075.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="66.2" y="1086.0"></text>
</g>
<g>
<title>GenCollectedHeap::is_in_young(oopDesc*) (4 samples, 0.09%)</title><rect x="64.4" y="1075.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="67.4" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (1 samples, 0.02%)</title><rect x="65.5" y="1107.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="68.5" y="1118.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="65.5" y="1091.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="68.5" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.07%)</title><rect x="65.7" y="1107.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="68.7" y="1118.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="66.5" y="1107.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="69.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.52%)</title><rect x="66.8" y="1123.0" width="6.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="69.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="66.8" y="1107.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="69.8" y="1118.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="66.8" y="1091.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="69.8" y="1102.0"></text>
</g>
<g>
<title>__vsnprintf_chk (1 samples, 0.02%)</title><rect x="67.0" y="1091.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="70.0" y="1102.0"></text>
</g>
<g>
<title>_IO_padn (1 samples, 0.02%)</title><rect x="67.0" y="1075.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="70.0" y="1086.0"></text>
</g>
<g>
<title>__kernel_vsyscall (19 samples, 0.41%)</title><rect x="67.3" y="1107.0" width="4.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="70.3" y="1118.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (19 samples, 0.41%)</title><rect x="67.3" y="1091.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="70.3" y="1102.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (19 samples, 0.41%)</title><rect x="67.3" y="1075.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="70.3" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="67.3" y="1059.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="70.3" y="1070.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="67.3" y="1043.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="70.3" y="1054.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="67.3" y="1027.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="70.3" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="67.3" y="1011.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.3" y="1022.0"></text>
</g>
<g>
<title>sys_futex (17 samples, 0.37%)</title><rect x="67.8" y="1059.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="70.8" y="1070.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.37%)</title><rect x="67.8" y="1043.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.8" y="1054.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="67.8" y="1027.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.8" y="1038.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="67.8" y="1011.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="70.8" y="1022.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="67.8" y="995.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="70.8" y="1006.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="67.8" y="979.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="70.8" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="67.8" y="963.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="70.8" y="974.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.33%)</title><rect x="68.3" y="1027.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="71.3" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.30%)</title><rect x="68.6" y="1011.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="71.6" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.30%)</title><rect x="68.6" y="995.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="71.6" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.30%)</title><rect x="68.6" y="979.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="71.6" y="990.0"></text>
</g>
<g>
<title>__vsnprintf_chk (2 samples, 0.04%)</title><rect x="72.1" y="1107.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="75.1" y="1118.0"></text>
</g>
<g>
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="72.1" y="1091.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="75.1" y="1102.0"></text>
</g>
<g>
<title>__printf_fp (1 samples, 0.02%)</title><rect x="72.4" y="1091.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="75.4" y="1102.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="72.4" y="1075.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="75.4" y="1086.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.02%)</title><rect x="72.7" y="1107.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="75.7" y="1118.0"></text>
</g>
<g>
<title>[unknown_Java] (158 samples, 3.44%)</title><rect x="72.9" y="1123.0" width="40.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="75.9" y="1134.0">[un..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="106.3" y="1107.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="109.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.57%)</title><rect x="106.6" y="1107.0" width="6.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="109.6" y="1118.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (2 samples, 0.04%)</title><rect x="106.6" y="1091.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="109.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="106.6" y="1075.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="109.6" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="106.6" y="1059.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="109.6" y="1070.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="106.8" y="1059.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="109.8" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="107.1" y="1091.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="110.1" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (1 samples, 0.02%)</title><rect x="107.3" y="1091.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="110.3" y="1102.0"></text>
</g>
<g>
<title>Thread::current() (5 samples, 0.11%)</title><rect x="107.6" y="1091.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="110.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="108.9" y="1091.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="111.9" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (13 samples, 0.28%)</title><rect x="108.9" y="1075.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="111.9" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (4 samples, 0.09%)</title><rect x="112.2" y="1091.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="115.2" y="1102.0"></text>
</g>
<g>
<title>common_interrupt (1 samples, 0.02%)</title><rect x="113.2" y="1107.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="116.2" y="1118.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="113.2" y="1091.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="116.2" y="1102.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="113.2" y="1075.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="116.2" y="1086.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="113.2" y="1059.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="116.2" y="1070.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="113.2" y="1043.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="116.2" y="1054.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="113.2" y="1027.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="116.2" y="1038.0"></text>
</g>
<g>
<title>blk_done_softirq (1 samples, 0.02%)</title><rect x="113.2" y="1011.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="116.2" y="1022.0"></text>
</g>
<g>
<title>scsi_softirq_done (1 samples, 0.02%)</title><rect x="113.2" y="995.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="116.2" y="1006.0"></text>
</g>
<g>
<title>scsi_finish_command (1 samples, 0.02%)</title><rect x="113.2" y="979.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="116.2" y="990.0"></text>
</g>
<g>
<title>scsi_io_completion (1 samples, 0.02%)</title><rect x="113.2" y="963.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="116.2" y="974.0"></text>
</g>
<g>
<title>scsi_end_request (1 samples, 0.02%)</title><rect x="113.2" y="947.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="116.2" y="958.0"></text>
</g>
<g>
<title>blk_update_request (1 samples, 0.02%)</title><rect x="113.2" y="931.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="116.2" y="942.0"></text>
</g>
<g>
<title>bio_endio (1 samples, 0.02%)</title><rect x="113.2" y="915.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="116.2" y="926.0"></text>
</g>
<g>
<title>end_swap_bio_read (1 samples, 0.02%)</title><rect x="113.2" y="899.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.2" y="910.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.02%)</title><rect x="113.2" y="883.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="116.2" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="113.2" y="867.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="116.2" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="113.2" y="851.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="116.2" y="862.0"></text>
</g>
<g>
<title>clone (117 samples, 2.55%)</title><rect x="113.5" y="1123.0" width="30.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="116.5" y="1134.0">cl..</text>
</g>
<g>
<title>start_thread (117 samples, 2.55%)</title><rect x="113.5" y="1107.0" width="30.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="116.5" y="1118.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (117 samples, 2.55%)</title><rect x="113.5" y="1091.0" width="30.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="116.5" y="1102.0">th..</text>
</g>
<g>
<title>Thread::call_run() (117 samples, 2.55%)</title><rect x="113.5" y="1075.0" width="30.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="116.5" y="1086.0">Th..</text>
</g>
<g>
<title>JavaThread::run() (30 samples, 0.65%)</title><rect x="113.5" y="1059.0" width="7.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="116.5" y="1070.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (30 samples, 0.65%)</title><rect x="113.5" y="1043.0" width="7.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="116.5" y="1054.0"></text>
</g>
<g>
<title>compiler_thread_entry(JavaThread*, Thread*) (30 samples, 0.65%)</title><rect x="113.5" y="1027.0" width="7.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="116.5" y="1038.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (30 samples, 0.65%)</title><rect x="113.5" y="1011.0" width="7.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="116.5" y="1022.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (28 samples, 0.61%)</title><rect x="113.5" y="995.0" width="7.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="116.5" y="1006.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (28 samples, 0.61%)</title><rect x="113.5" y="979.0" width="7.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="116.5" y="990.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (28 samples, 0.61%)</title><rect x="113.5" y="963.0" width="7.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="116.5" y="974.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (14 samples, 0.30%)</title><rect x="113.5" y="947.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="116.5" y="958.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.02%)</title><rect x="113.5" y="931.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="116.5" y="942.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.02%)</title><rect x="113.5" y="915.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="116.5" y="926.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.02%)</title><rect x="113.5" y="899.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="116.5" y="910.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.02%)</title><rect x="113.5" y="883.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="116.5" y="894.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.02%)</title><rect x="113.7" y="931.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="116.7" y="942.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.02%)</title><rect x="113.7" y="915.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="116.7" y="926.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.02%)</title><rect x="113.7" y="899.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="116.7" y="910.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.02%)</title><rect x="113.7" y="883.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="116.7" y="894.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.07%)</title><rect x="114.0" y="931.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="117.0" y="942.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.07%)</title><rect x="114.0" y="915.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="117.0" y="926.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="114.0" y="899.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="117.0" y="910.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, int*) (2 samples, 0.04%)</title><rect x="114.3" y="899.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="117.3" y="910.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (2 samples, 0.04%)</title><rect x="114.3" y="883.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="117.3" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (8 samples, 0.17%)</title><rect x="114.8" y="931.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="117.8" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.04%)</title><rect x="114.8" y="915.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="117.8" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.07%)</title><rect x="115.3" y="915.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="118.3" y="926.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="115.3" y="899.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="118.3" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.04%)</title><rect x="115.5" y="899.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="118.5" y="910.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="115.5" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="118.5" y="894.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="115.8" y="883.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="118.8" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.02%)</title><rect x="116.1" y="915.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="119.1" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.02%)</title><rect x="116.1" y="899.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="119.1" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) [clone .part.40] (1 samples, 0.02%)</title><rect x="116.1" y="883.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="119.1" y="894.0"></text>
</g>
<g>
<title>Node::disconnect_inputs(Node*, Compile*) (1 samples, 0.02%)</title><rect x="116.1" y="867.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="119.1" y="878.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.02%)</title><rect x="116.3" y="915.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="119.3" y="926.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="116.3" y="899.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="119.3" y="910.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.02%)</title><rect x="116.6" y="915.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="119.6" y="926.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (1 samples, 0.02%)</title><rect x="116.8" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="119.8" y="942.0"></text>
</g>
<g>
<title>Compile::Optimize() (12 samples, 0.26%)</title><rect x="117.1" y="947.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="120.1" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&amp;, bool, bool, bool) (7 samples, 0.15%)</title><rect x="117.1" y="931.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="120.1" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (7 samples, 0.15%)</title><rect x="117.1" y="915.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="120.1" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.02%)</title><rect x="117.1" y="899.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="120.1" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="117.3" y="899.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="120.3" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.09%)</title><rect x="117.6" y="899.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="120.6" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (3 samples, 0.07%)</title><rect x="117.6" y="883.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="120.6" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.02%)</title><rect x="117.6" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="120.6" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.04%)</title><rect x="117.9" y="867.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="120.9" y="878.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.02%)</title><rect x="118.1" y="851.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="121.1" y="862.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="118.4" y="883.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="121.4" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="118.4" y="867.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="121.4" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="118.4" y="851.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="121.4" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.02%)</title><rect x="118.6" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="121.6" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.02%)</title><rect x="118.6" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="121.6" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.02%)</title><rect x="118.6" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="121.6" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="118.6" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="121.6" y="862.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.02%)</title><rect x="118.6" y="835.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="121.6" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.07%)</title><rect x="118.9" y="931.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="121.9" y="942.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.07%)</title><rect x="118.9" y="915.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="121.9" y="926.0"></text>
</g>
<g>
<title>LShiftINode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="119.1" y="899.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="122.1" y="910.0"></text>
</g>
<g>
<title>Type::cleanup_speculative() const (1 samples, 0.02%)</title><rect x="119.4" y="899.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="122.4" y="910.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.04%)</title><rect x="119.7" y="931.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="122.7" y="942.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.04%)</title><rect x="119.7" y="915.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="122.7" y="926.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="119.7" y="899.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="122.7" y="910.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="119.9" y="899.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="122.9" y="910.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.02%)</title><rect x="119.9" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="122.9" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="120.2" y="947.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="123.2" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="120.2" y="931.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="123.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="120.2" y="915.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="123.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="120.2" y="899.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="123.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="120.2" y="883.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="123.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="120.2" y="867.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="123.2" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="120.2" y="851.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="123.2" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="120.2" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="123.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="120.2" y="819.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="123.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="120.2" y="803.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="123.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="120.2" y="787.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="123.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="120.2" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="123.2" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="120.2" y="755.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="123.2" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="120.2" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="123.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="120.2" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="123.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="120.2" y="707.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="123.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="120.2" y="691.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="123.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="120.2" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="123.2" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="120.2" y="659.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="123.2" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="120.2" y="643.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="123.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="120.2" y="627.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="123.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="120.2" y="611.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="123.2" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="120.2" y="595.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="123.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="120.2" y="579.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="123.2" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="120.2" y="563.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="123.2" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="120.2" y="547.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="123.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="120.2" y="531.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="123.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="120.2" y="515.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="123.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="120.2" y="499.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="123.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="120.2" y="483.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="123.2" y="494.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.02%)</title><rect x="120.2" y="467.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="123.2" y="478.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.02%)</title><rect x="120.2" y="451.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="123.2" y="462.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.02%)</title><rect x="120.2" y="435.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="123.2" y="446.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="120.2" y="419.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="123.2" y="430.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="120.2" y="403.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="123.2" y="414.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="120.2" y="387.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="123.2" y="398.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="120.2" y="371.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="123.2" y="382.0"></text>
</g>
<g>
<title>TypeInstPtr::eq(Type const*) const (1 samples, 0.02%)</title><rect x="120.2" y="355.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="123.2" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="120.4" y="467.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="123.4" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="120.4" y="451.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="123.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="120.4" y="435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="123.4" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="120.4" y="419.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="123.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="120.4" y="403.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="123.4" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="120.4" y="387.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="123.4" y="398.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="120.4" y="371.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="123.4" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="120.4" y="355.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="123.4" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="120.4" y="339.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="123.4" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="120.4" y="323.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="123.4" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="120.4" y="307.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="123.4" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="120.4" y="291.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="123.4" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="120.4" y="275.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="123.4" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="120.4" y="259.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="123.4" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="120.4" y="243.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="123.4" y="254.0"></text>
</g>
<g>
<title>Parse::init_blocks() (1 samples, 0.02%)</title><rect x="120.4" y="227.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="123.4" y="238.0"></text>
</g>
<g>
<title>CompileQueue::get() (2 samples, 0.04%)</title><rect x="120.7" y="995.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="123.7" y="1006.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.04%)</title><rect x="120.7" y="979.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="123.7" y="990.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (2 samples, 0.04%)</title><rect x="120.7" y="963.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="123.7" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="120.7" y="947.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="123.7" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="120.9" y="947.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="123.9" y="958.0"></text>
</g>
<g>
<title>VMThread::run() (80 samples, 1.74%)</title><rect x="121.2" y="1059.0" width="20.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="124.2" y="1070.0"></text>
</g>
<g>
<title>VMThread::loop() (80 samples, 1.74%)</title><rect x="121.2" y="1043.0" width="20.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="124.2" y="1054.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.09%)</title><rect x="121.2" y="1027.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="124.2" y="1038.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (4 samples, 0.09%)</title><rect x="121.2" y="1011.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="124.2" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.09%)</title><rect x="121.2" y="995.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="124.2" y="1006.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.07%)</title><rect x="121.5" y="979.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="124.5" y="990.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.07%)</title><rect x="121.5" y="963.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="124.5" y="974.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.07%)</title><rect x="121.5" y="947.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="124.5" y="958.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="121.5" y="931.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="124.5" y="942.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="121.5" y="915.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="124.5" y="926.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="121.5" y="899.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="124.5" y="910.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="121.5" y="883.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="124.5" y="894.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.11 (1 samples, 0.02%)</title><rect x="121.5" y="867.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="124.5" y="878.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="121.7" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="124.7" y="910.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.02%)</title><rect x="122.0" y="915.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="125.0" y="926.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (35 samples, 0.76%)</title><rect x="122.2" y="1027.0" width="9.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="125.2" y="1038.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="123.5" y="1011.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="126.5" y="1022.0"></text>
</g>
<g>
<title>RuntimeService::record_safepoint_begin() (1 samples, 0.02%)</title><rect x="123.8" y="1011.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="126.8" y="1022.0"></text>
</g>
<g>
<title>TimeStamp::update() (1 samples, 0.02%)</title><rect x="123.8" y="995.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="126.8" y="1006.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="123.8" y="979.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="126.8" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="123.8" y="963.0" width="0.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="126.8" y="974.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="123.8" y="947.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="126.8" y="958.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="123.8" y="931.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.8" y="942.0"></text>
</g>
<g>
<title>sys_clock_gettime (1 samples, 0.02%)</title><rect x="123.8" y="915.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="126.8" y="926.0"></text>
</g>
<g>
<title>put_timespec64 (1 samples, 0.02%)</title><rect x="123.8" y="899.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="126.8" y="910.0"></text>
</g>
<g>
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="123.8" y="883.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="126.8" y="894.0"></text>
</g>
<g>
<title>__copy_user_ll (1 samples, 0.02%)</title><rect x="123.8" y="867.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="126.8" y="878.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (8 samples, 0.17%)</title><rect x="124.0" y="1011.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="127.0" y="1022.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (6 samples, 0.13%)</title><rect x="124.0" y="995.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="127.0" y="1006.0"></text>
</g>
<g>
<title>Dictionary::does_any_dictionary_needs_resizing() (1 samples, 0.02%)</title><rect x="124.0" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="127.0" y="990.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (5 samples, 0.11%)</title><rect x="124.3" y="979.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="127.3" y="990.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.62] (5 samples, 0.11%)</title><rect x="124.3" y="963.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="127.3" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.11%)</title><rect x="124.3" y="947.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="127.3" y="958.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (4 samples, 0.09%)</title><rect x="124.5" y="931.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="127.5" y="942.0"></text>
</g>
<g>
<title>CodeBlob::oop_map_for_return_address(unsigned char*) (4 samples, 0.09%)</title><rect x="124.5" y="915.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="127.5" y="926.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (4 samples, 0.09%)</title><rect x="124.5" y="899.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="127.5" y="910.0"></text>
</g>
<g>
<title>SubTasksDone::SubTasksDone(unsigned int) (1 samples, 0.02%)</title><rect x="125.6" y="995.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="128.6" y="1006.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned int, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="125.6" y="979.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="128.6" y="990.0"></text>
</g>
<g>
<title>MallocTracker::record_malloc(void*, unsigned int, MemoryType, NativeCallStack const&amp;, NMT_TrackingLevel) (1 samples, 0.02%)</title><rect x="125.6" y="963.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="128.6" y="974.0"></text>
</g>
<g>
<title>free (1 samples, 0.02%)</title><rect x="125.8" y="995.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="128.8" y="1006.0"></text>
</g>
<g>
<title>SubTasksDone::SubTasksDone(unsigned int) (1 samples, 0.02%)</title><rect x="126.1" y="1011.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="129.1" y="1022.0"></text>
</g>
<g>
<title>ThreadSafepointState::examine_state_of_thread() (1 samples, 0.02%)</title><rect x="126.3" y="1011.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="129.3" y="1022.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="126.3" y="995.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="129.3" y="1006.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="126.3" y="979.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="129.3" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (18 samples, 0.39%)</title><rect x="126.6" y="1011.0" width="4.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="129.6" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (18 samples, 0.39%)</title><rect x="126.6" y="995.0" width="4.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="129.6" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (18 samples, 0.39%)</title><rect x="126.6" y="979.0" width="4.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="129.6" y="990.0"></text>
</g>
<g>
<title>sys_mprotect (15 samples, 0.33%)</title><rect x="126.6" y="963.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="129.6" y="974.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.02%)</title><rect x="126.8" y="947.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="129.8" y="958.0"></text>
</g>
<g>
<title>vmacache_find (1 samples, 0.02%)</title><rect x="126.8" y="931.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="129.8" y="942.0"></text>
</g>
<g>
<title>mprotect_fixup (13 samples, 0.28%)</title><rect x="127.1" y="947.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="130.1" y="958.0"></text>
</g>
<g>
<title>change_protection (13 samples, 0.28%)</title><rect x="127.1" y="931.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="130.1" y="942.0"></text>
</g>
<g>
<title>change_protection_range (13 samples, 0.28%)</title><rect x="127.1" y="915.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="130.1" y="926.0"></text>
</g>
<g>
<title>__ptep_modify_prot_commit (1 samples, 0.02%)</title><rect x="127.1" y="899.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="130.1" y="910.0"></text>
</g>
<g>
<title>native_set_pte_at (1 samples, 0.02%)</title><rect x="127.1" y="883.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="130.1" y="894.0"></text>
</g>
<g>
<title>atomic64_xchg_cx8 (3 samples, 0.07%)</title><rect x="127.4" y="899.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="130.4" y="910.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (9 samples, 0.20%)</title><rect x="128.1" y="899.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="131.1" y="910.0"></text>
</g>
<g>
<title>native_flush_tlb_others (8 samples, 0.17%)</title><rect x="128.4" y="883.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="131.4" y="894.0"></text>
</g>
<g>
<title>smp_call_function_many (8 samples, 0.17%)</title><rect x="128.4" y="867.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="131.4" y="878.0"></text>
</g>
<g>
<title>smp_call_function_single (8 samples, 0.17%)</title><rect x="128.4" y="851.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="131.4" y="862.0"></text>
</g>
<g>
<title>generic_exec_single (3 samples, 0.07%)</title><rect x="129.7" y="835.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="132.7" y="846.0"></text>
</g>
<g>
<title>native_send_call_func_single_ipi (3 samples, 0.07%)</title><rect x="129.7" y="819.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="132.7" y="830.0"></text>
</g>
<g>
<title>default_send_IPI_single (3 samples, 0.07%)</title><rect x="129.7" y="803.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="132.7" y="814.0"></text>
</g>
<g>
<title>default_send_IPI_mask_logical (3 samples, 0.07%)</title><rect x="129.7" y="787.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="132.7" y="798.0"></text>
</g>
<g>
<title>sys_sched_yield (3 samples, 0.07%)</title><rect x="130.4" y="963.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="133.4" y="974.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.07%)</title><rect x="130.4" y="947.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="133.4" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.07%)</title><rect x="130.4" y="931.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="133.4" y="942.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (7 samples, 0.15%)</title><rect x="131.2" y="1027.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="134.2" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (7 samples, 0.15%)</title><rect x="131.2" y="1011.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="134.2" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (7 samples, 0.15%)</title><rect x="131.2" y="995.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="134.2" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (7 samples, 0.15%)</title><rect x="131.2" y="979.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="134.2" y="990.0"></text>
</g>
<g>
<title>sys_mprotect (7 samples, 0.15%)</title><rect x="131.2" y="963.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="134.2" y="974.0"></text>
</g>
<g>
<title>mprotect_fixup (7 samples, 0.15%)</title><rect x="131.2" y="947.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="134.2" y="958.0"></text>
</g>
<g>
<title>change_protection (7 samples, 0.15%)</title><rect x="131.2" y="931.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="134.2" y="942.0"></text>
</g>
<g>
<title>change_protection_range (7 samples, 0.15%)</title><rect x="131.2" y="915.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="134.2" y="926.0"></text>
</g>
<g>
<title>atomic64_xchg_cx8 (1 samples, 0.02%)</title><rect x="131.2" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="134.2" y="910.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (6 samples, 0.13%)</title><rect x="131.5" y="899.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="134.5" y="910.0"></text>
</g>
<g>
<title>native_flush_tlb_others (6 samples, 0.13%)</title><rect x="131.5" y="883.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="134.5" y="894.0"></text>
</g>
<g>
<title>smp_call_function_many (6 samples, 0.13%)</title><rect x="131.5" y="867.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="134.5" y="878.0"></text>
</g>
<g>
<title>smp_call_function_single (6 samples, 0.13%)</title><rect x="131.5" y="851.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="134.5" y="862.0"></text>
</g>
<g>
<title>TemplateInterpreter::notice_safepoints() (1 samples, 0.02%)</title><rect x="133.0" y="1027.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="136.0" y="1038.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.61] (33 samples, 0.72%)</title><rect x="133.3" y="1027.0" width="8.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="136.3" y="1038.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (33 samples, 0.72%)</title><rect x="133.3" y="1011.0" width="8.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="136.3" y="1022.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (33 samples, 0.72%)</title><rect x="133.3" y="995.0" width="8.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="136.3" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned int, bool) (33 samples, 0.72%)</title><rect x="133.3" y="979.0" width="8.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="136.3" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned int, bool, GenCollectedHeap::GenerationType) (33 samples, 0.72%)</title><rect x="133.3" y="963.0" width="8.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="136.3" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::print_heap_before_gc() (1 samples, 0.02%)</title><rect x="133.3" y="947.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="136.3" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::print_on(outputStream*) const (1 samples, 0.02%)</title><rect x="133.3" y="931.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="136.3" y="942.0"></text>
</g>
<g>
<title>DefNewGeneration::print_on(outputStream*) const (1 samples, 0.02%)</title><rect x="133.3" y="915.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="136.3" y="926.0"></text>
</g>
<g>
<title>Generation::print_on(outputStream*) const (1 samples, 0.02%)</title><rect x="133.3" y="899.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="136.3" y="910.0"></text>
</g>
<g>
<title>outputStream::print_cr(char const*, ...) (1 samples, 0.02%)</title><rect x="133.3" y="883.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="136.3" y="894.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, char*, bool) (1 samples, 0.02%)</title><rect x="133.3" y="867.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="136.3" y="878.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="133.3" y="851.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="136.3" y="862.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned int, bool, bool, bool, bool) (29 samples, 0.63%)</title><rect x="133.5" y="947.0" width="7.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="136.5" y="958.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned int, bool) (26 samples, 0.57%)</title><rect x="133.5" y="931.0" width="6.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="136.5" y="942.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (20 samples, 0.44%)</title><rect x="133.5" y="915.0" width="5.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="136.5" y="926.0"></text>
</g>
<g>
<title>CardGeneration::younger_refs_iterate(OopsInGenClosure*, unsigned int) (5 samples, 0.11%)</title><rect x="133.5" y="899.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="136.5" y="910.0"></text>
</g>
<g>
<title>CardTableRS::younger_refs_in_space_iterate(Space*, OopsInGenClosure*, unsigned int) (5 samples, 0.11%)</title><rect x="133.5" y="883.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="136.5" y="894.0"></text>
</g>
<g>
<title>ClearNoncleanCardWrapper::do_MemRegion(MemRegion) (5 samples, 0.11%)</title><rect x="133.5" y="867.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="136.5" y="878.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (5 samples, 0.11%)</title><rect x="133.5" y="851.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="136.5" y="862.0"></text>
</g>
<g>
<title>BlockOffsetArrayContigSpace::block_start_unsafe(void const*) const (1 samples, 0.02%)</title><rect x="133.5" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="136.5" y="846.0"></text>
</g>
<g>
<title>ContiguousSpace::block_size(HeapWord const*) const (1 samples, 0.02%)</title><rect x="133.5" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="136.5" y="830.0"></text>
</g>
<g>
<title>FilteringDCTOC::walk_mem_region(MemRegion, HeapWord*, HeapWord*) (4 samples, 0.09%)</title><rect x="133.8" y="835.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="136.8" y="846.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.02%)</title><rect x="133.8" y="819.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="136.8" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, oopDesc*&gt;(FilteringClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.02%)</title><rect x="134.0" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="137.0" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, oopDesc*&gt;(FilteringClosure*, oopDesc*, Klass*) (2 samples, 0.04%)</title><rect x="134.3" y="819.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="137.3" y="830.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.02%)</title><rect x="134.8" y="899.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="137.8" y="910.0"></text>
</g>
<g>
<title>StringTable::oops_do(OopClosure*) (7 samples, 0.15%)</title><rect x="135.1" y="899.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="138.1" y="910.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(oopDesc**) (5 samples, 0.11%)</title><rect x="135.6" y="883.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="138.6" y="894.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (7 samples, 0.15%)</title><rect x="136.9" y="899.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="139.9" y="910.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (7 samples, 0.15%)</title><rect x="136.9" y="883.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="139.9" y="894.0"></text>
</g>
<g>
<title>MarkingCodeBlobClosure::do_code_blob(CodeBlob*) (4 samples, 0.09%)</title><rect x="136.9" y="867.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="139.9" y="878.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (2 samples, 0.04%)</title><rect x="136.9" y="851.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="139.9" y="862.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (2 samples, 0.04%)</title><rect x="137.4" y="851.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="140.4" y="862.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="137.6" y="835.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="140.6" y="846.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (2 samples, 0.04%)</title><rect x="137.9" y="867.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="140.9" y="878.0"></text>
</g>
<g>
<title>ConstantPool::impl_signature_ref_at(int, bool) (1 samples, 0.02%)</title><rect x="137.9" y="851.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="140.9" y="862.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="138.1" y="851.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="141.1" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="138.4" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="141.4" y="878.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, ReferenceProcessorPhaseTimes*) (3 samples, 0.07%)</title><rect x="138.7" y="915.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="141.7" y="926.0"></text>
</g>
<g>
<title>GCTimer::register_gc_phase_start(char const*, TimeInstant&lt;CompositeCounterRepresentation, CompositeElapsedCounterSource&gt; const&amp;) (1 samples, 0.02%)</title><rect x="138.7" y="899.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="141.7" y="910.0"></text>
</g>
<g>
<title>RefProcTotalPhaseTimesTracker::RefProcTotalPhaseTimesTracker(ReferenceProcessor::RefProcPhases, ReferenceProcessorPhaseTimes*, ReferenceProcessor*) (2 samples, 0.04%)</title><rect x="138.9" y="899.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="141.9" y="910.0"></text>
</g>
<g>
<title>CompositeElapsedCounterSource::now() (2 samples, 0.04%)</title><rect x="138.9" y="883.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="141.9" y="894.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.04%)</title><rect x="138.9" y="867.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="141.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="138.9" y="851.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="141.9" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="138.9" y="835.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="141.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="138.9" y="819.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="141.9" y="830.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="138.9" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="141.9" y="814.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="139.2" y="851.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="142.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="139.2" y="835.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="142.2" y="846.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="139.2" y="819.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="142.2" y="830.0"></text>
</g>
<g>
<title>sys_clock_gettime (1 samples, 0.02%)</title><rect x="139.2" y="803.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="142.2" y="814.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (1 samples, 0.02%)</title><rect x="139.2" y="787.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="142.2" y="798.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.02%)</title><rect x="139.2" y="771.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="142.2" y="782.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.02%)</title><rect x="139.2" y="755.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="142.2" y="766.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="139.2" y="739.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="142.2" y="750.0"></text>
</g>
<g>
<title>ReferenceProcessorPhaseTimes::print_all_references(unsigned int, bool) const (1 samples, 0.02%)</title><rect x="139.4" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="142.4" y="926.0"></text>
</g>
<g>
<title>outputStream::print_cr(char const*, ...) (1 samples, 0.02%)</title><rect x="139.4" y="899.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="142.4" y="910.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, char*, bool) (1 samples, 0.02%)</title><rect x="139.4" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="142.4" y="894.0"></text>
</g>
<g>
<title>LogStream::write(char const*, unsigned int) (1 samples, 0.02%)</title><rect x="139.4" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="142.4" y="878.0"></text>
</g>
<g>
<title>LogTargetHandle::print(char const*, ...) (1 samples, 0.02%)</title><rect x="139.4" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="142.4" y="862.0"></text>
</g>
<g>
<title>LogTagSet::vwrite(LogLevel::type, char const*, char*) (1 samples, 0.02%)</title><rect x="139.4" y="835.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="142.4" y="846.0"></text>
</g>
<g>
<title>LogOutputList::increase_readers() (1 samples, 0.02%)</title><rect x="139.4" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="142.4" y="830.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.02%)</title><rect x="139.7" y="915.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="142.7" y="926.0"></text>
</g>
<g>
<title>DefNewGeneration::FastKeepAliveClosure::do_oop(oopDesc**) (1 samples, 0.02%)</title><rect x="139.7" y="899.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="142.7" y="910.0"></text>
</g>
<g>
<title>nmethod::oops_do_marking_epilogue() (1 samples, 0.02%)</title><rect x="139.9" y="915.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="142.9" y="926.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.02%)</title><rect x="140.2" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="143.2" y="942.0"></text>
</g>
<g>
<title>elapsedTimer::start() (1 samples, 0.02%)</title><rect x="140.5" y="931.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="143.5" y="942.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="140.5" y="915.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="143.5" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="140.5" y="899.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="143.5" y="910.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="140.5" y="883.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="143.5" y="894.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="140.5" y="867.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="143.5" y="878.0"></text>
</g>
<g>
<title>sys_clock_gettime (1 samples, 0.02%)</title><rect x="140.5" y="851.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="143.5" y="862.0"></text>
</g>
<g>
<title>put_timespec64 (1 samples, 0.02%)</title><rect x="140.5" y="835.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="143.5" y="846.0"></text>
</g>
<g>
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="140.5" y="819.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="143.5" y="830.0"></text>
</g>
<g>
<title>__copy_user_ll (1 samples, 0.02%)</title><rect x="140.5" y="803.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="143.5" y="814.0"></text>
</g>
<g>
<title>elapsedTimer::stop() (1 samples, 0.02%)</title><rect x="140.7" y="931.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="143.7" y="942.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="140.7" y="915.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="143.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="140.7" y="899.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="143.7" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="140.7" y="883.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="143.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="140.7" y="867.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="143.7" y="878.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="140.7" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="143.7" y="862.0"></text>
</g>
<g>
<title>GenCollectedHeap::gc_epilogue(bool) (1 samples, 0.02%)</title><rect x="141.0" y="947.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="144.0" y="958.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::resize_all_tlabs() (1 samples, 0.02%)</title><rect x="141.0" y="931.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="144.0" y="942.0"></text>
</g>
<g>
<title>GenCollectedHeap::gc_prologue(bool) (2 samples, 0.04%)</title><rect x="141.2" y="947.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="144.2" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::ensure_parsability(bool) (1 samples, 0.02%)</title><rect x="141.2" y="931.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="144.2" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="141.2" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="144.2" y="926.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::accumulate_statistics_before_gc() (1 samples, 0.02%)</title><rect x="141.5" y="931.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="144.5" y="942.0"></text>
</g>
<g>
<title>GlobalTLABStats::publish() (1 samples, 0.02%)</title><rect x="141.5" y="915.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="144.5" y="926.0"></text>
</g>
<g>
<title>common_exception (1 samples, 0.02%)</title><rect x="141.5" y="899.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="144.5" y="910.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="141.5" y="883.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="144.5" y="894.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="141.5" y="867.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="144.5" y="878.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="141.5" y="851.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="144.5" y="862.0"></text>
</g>
<g>
<title>do_wp_page (1 samples, 0.02%)</title><rect x="141.5" y="835.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="144.5" y="846.0"></text>
</g>
<g>
<title>finish_mkwrite_fault (1 samples, 0.02%)</title><rect x="141.5" y="819.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="144.5" y="830.0"></text>
</g>
<g>
<title>native_set_pte (1 samples, 0.02%)</title><rect x="141.5" y="803.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="144.5" y="814.0"></text>
</g>
<g>
<title>WatcherThread::run() (7 samples, 0.15%)</title><rect x="141.7" y="1059.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="144.7" y="1070.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (6 samples, 0.13%)</title><rect x="141.7" y="1043.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="144.7" y="1054.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (6 samples, 0.13%)</title><rect x="141.7" y="1027.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="144.7" y="1038.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (5 samples, 0.11%)</title><rect x="141.7" y="1011.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="144.7" y="1022.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.02%)</title><rect x="141.7" y="995.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="144.7" y="1006.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="142.0" y="995.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="145.0" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="142.3" y="995.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="145.3" y="1006.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="142.5" y="995.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="145.5" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="142.8" y="995.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="145.8" y="1006.0"></text>
</g>
<g>
<title>Thread::muxAcquire(int volatile*, char const*) (1 samples, 0.02%)</title><rect x="143.0" y="1011.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="146.0" y="1022.0"></text>
</g>
<g>
<title>__divdi3 (1 samples, 0.02%)</title><rect x="143.3" y="1043.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="146.3" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (1 samples, 0.02%)</title><rect x="143.5" y="1123.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.02%)</title><rect x="143.5" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.5" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (1 samples, 0.02%)</title><rect x="143.5" y="1091.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.5" y="1102.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="143.5" y="1075.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="146.5" y="1086.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="143.5" y="1059.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="146.5" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="143.5" y="1043.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="146.5" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="143.5" y="1027.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="146.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.02%)</title><rect x="143.8" y="1123.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 0.02%)</title><rect x="143.8" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.8" y="1118.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="143.8" y="1091.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="146.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.02%)</title><rect x="144.1" y="1123.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.02%)</title><rect x="144.1" y="1107.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.02%)</title><rect x="144.1" y="1091.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1 samples, 0.02%)</title><rect x="144.1" y="1075.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.1" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.02%)</title><rect x="144.1" y="1059.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.1" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (1 samples, 0.02%)</title><rect x="144.1" y="1043.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.1" y="1054.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="144.1" y="1027.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="147.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1 samples, 0.02%)</title><rect x="144.3" y="1123.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.3" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.02%)</title><rect x="144.3" y="1107.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.3" y="1118.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="144.3" y="1091.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="147.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1 samples, 0.02%)</title><rect x="144.6" y="1123.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.6" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.02%)</title><rect x="144.6" y="1107.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.6" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (1 samples, 0.02%)</title><rect x="144.6" y="1091.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.6" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.02%)</title><rect x="144.6" y="1075.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.02%)</title><rect x="144.6" y="1059.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,056 samples, 88.27%)</title><rect x="144.8" y="1123.0" width="1041.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.8" y="1134.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.04%)</title><rect x="150.7" y="1107.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="153.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (496 samples, 10.79%)</title><rect x="151.2" y="1107.0" width="127.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.2" y="1118.0">one/nio/net/Java..</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="151.8" y="1091.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="154.8" y="1102.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="151.8" y="1075.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="154.8" y="1086.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="151.8" y="1059.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="154.8" y="1070.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="151.8" y="1043.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="154.8" y="1054.0"></text>
</g>
<g>
<title>sys_clock_gettime (1 samples, 0.02%)</title><rect x="151.8" y="1027.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="154.8" y="1038.0"></text>
</g>
<g>
<title>put_timespec64 (1 samples, 0.02%)</title><rect x="151.8" y="1011.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="154.8" y="1022.0"></text>
</g>
<g>
<title>__copy_user_ll (1 samples, 0.02%)</title><rect x="151.8" y="995.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="154.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/System.nanoTime (2 samples, 0.04%)</title><rect x="152.0" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.0" y="1102.0"></text>
</g>
<g>
<title>JVM_NanoTime (2 samples, 0.04%)</title><rect x="152.0" y="1075.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="155.0" y="1086.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.04%)</title><rect x="152.0" y="1059.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="155.0" y="1070.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.04%)</title><rect x="152.0" y="1043.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="155.0" y="1054.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.04%)</title><rect x="152.0" y="1027.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="155.0" y="1038.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.04%)</title><rect x="152.0" y="1011.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="155.0" y="1022.0"></text>
</g>
<g>
<title>put_timespec64 (2 samples, 0.04%)</title><rect x="152.0" y="995.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="155.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (2 samples, 0.04%)</title><rect x="152.5" y="1091.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.5" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.04%)</title><rect x="152.5" y="1075.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.5" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.04%)</title><rect x="152.5" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (50 samples, 1.09%)</title><rect x="153.0" y="1091.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.0" y="1102.0"></text>
</g>
<g>
<title>__clock_gettime (37 samples, 0.81%)</title><rect x="153.3" y="1075.0" width="9.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="156.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="154.3" y="1059.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="157.3" y="1070.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.09%)</title><rect x="154.3" y="1043.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="157.3" y="1054.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.09%)</title><rect x="154.3" y="1027.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.3" y="1038.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="154.3" y="1011.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="157.3" y="1022.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.07%)</title><rect x="154.6" y="1011.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="157.6" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (27 samples, 0.59%)</title><rect x="155.3" y="1059.0" width="7.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="158.3" y="1070.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (24 samples, 0.52%)</title><rect x="156.1" y="1043.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="159.1" y="1054.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (21 samples, 0.46%)</title><rect x="156.1" y="1027.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="159.1" y="1038.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (1 samples, 0.02%)</title><rect x="156.1" y="1011.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="159.1" y="1022.0"></text>
</g>
<g>
<title>put_timespec64 (2 samples, 0.04%)</title><rect x="156.4" y="1011.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="159.4" y="1022.0"></text>
</g>
<g>
<title>sys_clock_gettime (18 samples, 0.39%)</title><rect x="156.9" y="1011.0" width="4.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.9" y="1022.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.04%)</title><rect x="157.4" y="995.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="160.4" y="1006.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.02%)</title><rect x="157.9" y="995.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="160.9" y="1006.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (9 samples, 0.20%)</title><rect x="158.2" y="995.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="161.2" y="1006.0"></text>
</g>
<g>
<title>ktime_get_ts64 (9 samples, 0.20%)</title><rect x="158.2" y="979.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="161.2" y="990.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (8 samples, 0.17%)</title><rect x="158.4" y="963.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="161.4" y="974.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (7 samples, 0.15%)</title><rect x="158.7" y="947.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="161.7" y="958.0"></text>
</g>
<g>
<title>put_timespec64 (4 samples, 0.09%)</title><rect x="160.5" y="995.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="163.5" y="1006.0"></text>
</g>
<g>
<title>_copy_to_user (3 samples, 0.07%)</title><rect x="160.7" y="979.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="163.7" y="990.0"></text>
</g>
<g>
<title>__copy_user_ll (1 samples, 0.02%)</title><rect x="161.3" y="963.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="164.3" y="974.0"></text>
</g>
<g>
<title>sys_clock_gettime (3 samples, 0.07%)</title><rect x="161.5" y="1027.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="164.5" y="1038.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="162.3" y="1059.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="165.3" y="1070.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="162.8" y="1075.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="165.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (11 samples, 0.24%)</title><rect x="163.1" y="1075.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.updateHead (8 samples, 0.17%)</title><rect x="163.8" y="1059.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="164.3" y="1043.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="164.3" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (4 samples, 0.09%)</title><rect x="164.9" y="1043.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="167.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="165.6" y="1027.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="168.6" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="165.6" y="1011.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="168.6" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="165.6" y="995.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="168.6" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="165.6" y="979.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="168.6" y="990.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="165.6" y="963.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="168.6" y="974.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="165.6" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.6" y="958.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="165.6" y="931.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="168.6" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (439 samples, 9.55%)</title><rect x="165.9" y="1091.0" width="112.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.9" y="1102.0">sun/nio/ch/Sel..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (439 samples, 9.55%)</title><rect x="165.9" y="1075.0" width="112.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.9" y="1086.0">sun/nio/ch/Sel..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (405 samples, 8.81%)</title><rect x="174.6" y="1059.0" width="104.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.6" y="1070.0">sun/nio/ch/E..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (329 samples, 7.16%)</title><rect x="174.9" y="1043.0" width="84.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.9" y="1054.0">sun/nio/ch..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (10 samples, 0.22%)</title><rect x="176.4" y="1027.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="179.4" y="1038.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (1 samples, 0.02%)</title><rect x="179.0" y="1027.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="182.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.17%)</title><rect x="179.2" y="1027.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="182.2" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (8 samples, 0.17%)</title><rect x="179.2" y="1011.0" width="2.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="182.2" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (8 samples, 0.17%)</title><rect x="179.2" y="995.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.2" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (8 samples, 0.17%)</title><rect x="179.2" y="979.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="182.2" y="990.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.04%)</title><rect x="180.8" y="963.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="183.8" y="974.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="180.8" y="947.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="183.8" y="958.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="180.8" y="931.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="183.8" y="942.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="180.8" y="915.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="183.8" y="926.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="180.8" y="899.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="183.8" y="910.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="180.8" y="883.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="183.8" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="180.8" y="867.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="183.8" y="878.0"></text>
</g>
<g>
<title>__kernel_vsyscall (290 samples, 6.31%)</title><rect x="181.3" y="1027.0" width="74.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="184.3" y="1038.0">__kernel..</text>
</g>
<g>
<title>entry_SYSENTER_32 (287 samples, 6.25%)</title><rect x="182.1" y="1011.0" width="73.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="185.1" y="1022.0">entry_SY..</text>
</g>
<g>
<title>do_fast_syscall_32 (283 samples, 6.16%)</title><rect x="182.1" y="995.0" width="72.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="185.1" y="1006.0">do_fast_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="182.1" y="979.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="185.1" y="990.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.04%)</title><rect x="182.6" y="979.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="185.6" y="990.0"></text>
</g>
<g>
<title>sys_epoll_wait (279 samples, 6.07%)</title><rect x="183.1" y="979.0" width="71.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="186.1" y="990.0">sys_epol..</text>
</g>
<g>
<title>__fdget (10 samples, 0.22%)</title><rect x="184.1" y="963.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="187.1" y="974.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.22%)</title><rect x="184.1" y="947.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="187.1" y="958.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.20%)</title><rect x="184.4" y="931.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="187.4" y="942.0"></text>
</g>
<g>
<title>ep_poll (263 samples, 5.72%)</title><rect x="186.7" y="963.0" width="67.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="189.7" y="974.0">ep_poll</text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.13%)</title><rect x="186.9" y="947.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="189.9" y="958.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.16 (71 samples, 1.55%)</title><rect x="188.5" y="947.0" width="18.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.5" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (21 samples, 0.46%)</title><rect x="189.0" y="931.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="192.0" y="942.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="194.4" y="931.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="197.4" y="942.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (1 samples, 0.02%)</title><rect x="194.9" y="931.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="197.9" y="942.0"></text>
</g>
<g>
<title>ep_send_events_proc (38 samples, 0.83%)</title><rect x="195.2" y="931.0" width="9.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="198.2" y="942.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_ecx (2 samples, 0.04%)</title><rect x="196.2" y="915.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="199.2" y="926.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (30 samples, 0.65%)</title><rect x="196.7" y="915.0" width="7.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="199.7" y="926.0"></text>
</g>
<g>
<title>sock_poll (20 samples, 0.44%)</title><rect x="197.7" y="899.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="200.7" y="910.0"></text>
</g>
<g>
<title>tcp_poll (12 samples, 0.26%)</title><rect x="199.0" y="883.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="202.0" y="894.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="201.6" y="867.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="204.6" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="201.6" y="851.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="204.6" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="201.6" y="835.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="204.6" y="846.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="201.6" y="819.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="204.6" y="830.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="201.6" y="803.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="204.6" y="814.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="201.6" y="787.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="204.6" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="201.6" y="771.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="204.6" y="782.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="201.6" y="755.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="204.6" y="766.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="201.6" y="739.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="204.6" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="201.6" y="723.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="204.6" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="201.8" y="867.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="204.8" y="878.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.07%)</title><rect x="202.1" y="883.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="205.1" y="894.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.13%)</title><rect x="202.9" y="899.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="205.9" y="910.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.04%)</title><rect x="204.4" y="915.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="207.4" y="926.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.09%)</title><rect x="204.9" y="931.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="207.9" y="942.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="204.9" y="915.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="207.9" y="926.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="204.9" y="899.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="207.9" y="910.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.07%)</title><rect x="205.2" y="915.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="208.2" y="926.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.07%)</title><rect x="205.9" y="931.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="208.9" y="942.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.04%)</title><rect x="206.7" y="947.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="209.7" y="958.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="207.2" y="947.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="210.2" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (180 samples, 3.92%)</title><rect x="207.5" y="947.0" width="46.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="210.5" y="958.0">sche..</text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="207.5" y="931.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="210.5" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (179 samples, 3.90%)</title><rect x="207.7" y="931.0" width="46.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="210.7" y="942.0">sche..</text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="208.0" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="211.0" y="926.0"></text>
</g>
<g>
<title>schedule (177 samples, 3.85%)</title><rect x="208.3" y="915.0" width="45.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="211.3" y="926.0">sche..</text>
</g>
<g>
<title>__sched_text_start (175 samples, 3.81%)</title><rect x="208.8" y="899.0" width="44.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="211.8" y="910.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (167 samples, 3.63%)</title><rect x="210.8" y="883.0" width="42.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="213.8" y="894.0">fini..</text>
</g>
<g>
<title>common_interrupt (1 samples, 0.02%)</title><rect x="253.4" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="256.4" y="878.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="253.4" y="851.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="256.4" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="253.4" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="256.4" y="846.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="253.4" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="256.4" y="830.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="253.4" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="256.4" y="814.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="253.4" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="256.4" y="798.0"></text>
</g>
<g>
<title>blk_done_softirq (1 samples, 0.02%)</title><rect x="253.4" y="771.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="256.4" y="782.0"></text>
</g>
<g>
<title>scsi_softirq_done (1 samples, 0.02%)</title><rect x="253.4" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="256.4" y="766.0"></text>
</g>
<g>
<title>scsi_finish_command (1 samples, 0.02%)</title><rect x="253.4" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="256.4" y="750.0"></text>
</g>
<g>
<title>scsi_io_completion (1 samples, 0.02%)</title><rect x="253.4" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="256.4" y="734.0"></text>
</g>
<g>
<title>scsi_end_request (1 samples, 0.02%)</title><rect x="253.4" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="256.4" y="718.0"></text>
</g>
<g>
<title>blk_update_request (1 samples, 0.02%)</title><rect x="253.4" y="691.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="256.4" y="702.0"></text>
</g>
<g>
<title>bio_endio (1 samples, 0.02%)</title><rect x="253.4" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="256.4" y="686.0"></text>
</g>
<g>
<title>end_swap_bio_read (1 samples, 0.02%)</title><rect x="253.4" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="256.4" y="670.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.02%)</title><rect x="253.4" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="256.4" y="654.0"></text>
</g>
<g>
<title>wake_up_page_bit (1 samples, 0.02%)</title><rect x="253.4" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="256.4" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="253.4" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="256.4" y="622.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.04%)</title><rect x="253.7" y="947.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="256.7" y="958.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.16 (1 samples, 0.02%)</title><rect x="254.2" y="963.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="257.2" y="974.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="254.5" y="963.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="257.5" y="974.0"></text>
</g>
<g>
<title>sys_epoll_wait (4 samples, 0.09%)</title><rect x="254.7" y="995.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="257.7" y="1006.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 0.30%)</title><rect x="255.8" y="1027.0" width="3.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="258.8" y="1038.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="259.1" y="1011.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="262.1" y="1022.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="259.1" y="995.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="262.1" y="1006.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="259.1" y="979.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="262.1" y="990.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="259.1" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="262.1" y="974.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="259.1" y="947.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="262.1" y="958.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="259.1" y="931.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="262.1" y="942.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="259.1" y="915.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="262.1" y="926.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="259.1" y="899.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="262.1" y="910.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="259.1" y="883.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="262.1" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="259.1" y="867.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="262.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (21 samples, 0.46%)</title><rect x="259.4" y="1043.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.13%)</title><rect x="259.9" y="1027.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.9" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.09%)</title><rect x="259.9" y="1011.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.9" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="260.9" y="1011.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.9" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.getEvent (3 samples, 0.07%)</title><rect x="261.4" y="1027.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (10 samples, 0.22%)</title><rect x="262.2" y="1027.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.2" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.15%)</title><rect x="262.2" y="1011.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="265.2" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.15%)</title><rect x="262.2" y="995.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="265.2" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.15%)</title><rect x="262.2" y="979.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (6 samples, 0.13%)</title><rect x="262.4" y="963.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.4" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.02%)</title><rect x="264.0" y="1011.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.02%)</title><rect x="264.0" y="995.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="264.0" y="979.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.0" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (2 samples, 0.04%)</title><rect x="264.2" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.2" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (1 samples, 0.02%)</title><rect x="264.5" y="995.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="267.5" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (1 samples, 0.02%)</title><rect x="264.5" y="979.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.5" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.isConnected (1 samples, 0.02%)</title><rect x="264.5" y="963.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (22 samples, 0.48%)</title><rect x="264.7" y="1043.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.7" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (3 samples, 0.07%)</title><rect x="269.4" y="1027.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.4" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (2 samples, 0.04%)</title><rect x="269.6" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.6" y="1022.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="270.1" y="1027.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="273.1" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="270.1" y="1011.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="273.1" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="270.1" y="995.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="273.1" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (20 samples, 0.44%)</title><rect x="270.4" y="1043.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.4" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (20 samples, 0.44%)</title><rect x="270.4" y="1027.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (17 samples, 0.37%)</title><rect x="270.4" y="1011.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.4" y="1022.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.07%)</title><rect x="274.8" y="1011.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.07%)</title><rect x="274.8" y="995.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.07%)</title><rect x="274.8" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.8" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (4 samples, 0.09%)</title><rect x="275.5" y="1043.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (4 samples, 0.09%)</title><rect x="275.5" y="1027.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.09%)</title><rect x="275.5" y="1011.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="276.0" y="995.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="276.3" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.3" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (8 samples, 0.17%)</title><rect x="276.6" y="1043.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="279.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,496 samples, 76.08%)</title><rect x="278.6" y="1107.0" width="897.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.6" y="1118.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,496 samples, 76.08%)</title><rect x="278.6" y="1091.0" width="897.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="281.6" y="1102.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,302 samples, 71.86%)</title><rect x="278.9" y="1075.0" width="847.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.9" y="1086.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="290.7" y="1059.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="293.7" y="1070.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="290.7" y="1043.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="293.7" y="1054.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="290.7" y="1027.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="293.7" y="1038.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="290.7" y="1011.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="293.7" y="1022.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="290.7" y="995.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="293.7" y="1006.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="290.7" y="979.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="293.7" y="990.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="290.7" y="963.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="293.7" y="974.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="290.7" y="947.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="293.7" y="958.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="290.7" y="931.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="293.7" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="290.7" y="915.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="293.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,191 samples, 69.45%)</title><rect x="290.9" y="1059.0" width="819.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.9" y="1070.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,191 samples, 69.45%)</title><rect x="290.9" y="1043.0" width="819.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.9" y="1054.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (3,173 samples, 69.05%)</title><rect x="291.5" y="1027.0" width="814.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.5" y="1038.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.39%)</title><rect x="291.7" y="1011.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="294.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.13%)</title><rect x="294.8" y="995.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="296.1" y="979.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="299.1" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="296.1" y="963.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="299.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (3,154 samples, 68.64%)</title><rect x="296.3" y="1011.0" width="810.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.3" y="1022.0">ru/mail/polis/service/dogm/ServiceImpl.entity</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.09%)</title><rect x="300.4" y="995.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.09%)</title><rect x="300.4" y="979.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.4" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.09%)</title><rect x="300.4" y="963.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.4" y="974.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="301.2" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="304.2" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="301.2" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="304.2" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="301.2" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="304.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.04%)</title><rect x="301.5" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Coordinator.request (3,132 samples, 68.16%)</title><rect x="302.0" y="995.0" width="804.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="305.0" y="1006.0">ru/mail/polis/service/dogm/Coordinator.request</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,242 samples, 27.03%)</title><rect x="302.2" y="979.0" width="319.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.2" y="990.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (13 samples, 0.28%)</title><rect x="303.5" y="963.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.28%)</title><rect x="303.5" y="947.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.5" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.28%)</title><rect x="303.5" y="931.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.5" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,215 samples, 26.44%)</title><rect x="306.9" y="963.0" width="312.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.9" y="974.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (25 samples, 0.54%)</title><rect x="306.9" y="947.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.9" y="958.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.24%)</title><rect x="309.9" y="931.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.9" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (11 samples, 0.24%)</title><rect x="309.9" y="915.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="312.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.24%)</title><rect x="309.9" y="899.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="312.9" y="910.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.04%)</title><rect x="312.8" y="931.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="315.8" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="312.8" y="915.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="315.8" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="312.8" y="899.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="315.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,190 samples, 25.90%)</title><rect x="313.3" y="947.0" width="305.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.3" y="958.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,184 samples, 25.77%)</title><rect x="314.6" y="931.0" width="304.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.6" y="942.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,170 samples, 25.46%)</title><rect x="318.2" y="915.0" width="300.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.2" y="926.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1,170 samples, 25.46%)</title><rect x="318.2" y="899.0" width="300.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.2" y="910.0">one/nio/net/JavaSocket.write</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1,170 samples, 25.46%)</title><rect x="318.2" y="883.0" width="300.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.2" y="894.0">sun/nio/ch/SocketChannelImpl.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,051 samples, 22.87%)</title><rect x="318.2" y="867.0" width="269.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.2" y="878.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,050 samples, 22.85%)</title><rect x="318.4" y="851.0" width="269.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.4" y="862.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1,050 samples, 22.85%)</title><rect x="318.4" y="835.0" width="269.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.4" y="846.0">sun/nio/ch/IOUtil.writeFromNativeBuf..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (6 samples, 0.13%)</title><rect x="318.4" y="819.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="321.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1,044 samples, 22.72%)</title><rect x="320.0" y="819.0" width="268.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.0" y="830.0">sun/nio/ch/SocketDispatcher.write</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1,038 samples, 22.59%)</title><rect x="321.5" y="803.0" width="266.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.5" y="814.0">sun/nio/ch/FileDispatcherImpl.write0</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (5 samples, 0.11%)</title><rect x="323.3" y="787.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="326.3" y="798.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (3 samples, 0.07%)</title><rect x="324.6" y="787.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="327.6" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="325.1" y="771.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="328.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="325.4" y="787.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="328.4" y="798.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.11%)</title><rect x="325.4" y="771.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="328.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.11%)</title><rect x="325.4" y="755.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="328.4" y="766.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.11%)</title><rect x="325.4" y="739.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="328.4" y="750.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1,014 samples, 22.07%)</title><rect x="326.6" y="787.0" width="260.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="329.6" y="798.0">__kernel_vsyscall</text>
</g>
<g>
<title>entry_SYSENTER_32 (1,010 samples, 21.98%)</title><rect x="327.7" y="771.0" width="259.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="330.7" y="782.0">entry_SYSENTER_32</text>
</g>
<g>
<title>do_fast_syscall_32 (1,006 samples, 21.89%)</title><rect x="327.7" y="755.0" width="258.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="330.7" y="766.0">do_fast_syscall_32</text>
</g>
<g>
<title>exit_to_usermode_loop (15 samples, 0.33%)</title><rect x="328.2" y="739.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="331.2" y="750.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.28%)</title><rect x="328.7" y="723.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="331.7" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (13 samples, 0.28%)</title><rect x="328.7" y="707.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="331.7" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.28%)</title><rect x="328.7" y="691.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="331.7" y="702.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="332.0" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="335.0" y="750.0"></text>
</g>
<g>
<title>sys_write (988 samples, 21.50%)</title><rect x="332.3" y="739.0" width="253.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="335.3" y="750.0">sys_write</text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.15%)</title><rect x="332.5" y="723.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="335.5" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="332.5" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="335.5" y="718.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.13%)</title><rect x="332.8" y="707.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="335.8" y="718.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="333.6" y="691.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="336.6" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="334.3" y="723.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="337.3" y="734.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.04%)</title><rect x="334.6" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="337.6" y="734.0"></text>
</g>
<g>
<title>vfs_write (977 samples, 21.26%)</title><rect x="335.1" y="723.0" width="250.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="338.1" y="734.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (961 samples, 20.91%)</title><rect x="335.6" y="707.0" width="246.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="338.6" y="718.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (959 samples, 20.87%)</title><rect x="335.9" y="691.0" width="246.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="338.9" y="702.0">new_sync_write</text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="336.4" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="339.4" y="686.0"></text>
</g>
<g>
<title>sock_write_iter (956 samples, 20.81%)</title><rect x="336.7" y="675.0" width="245.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="339.7" y="686.0">sock_write_iter</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="336.7" y="659.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="339.7" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (955 samples, 20.78%)</title><rect x="336.9" y="659.0" width="245.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="339.9" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_esi (1 samples, 0.02%)</title><rect x="336.9" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="339.9" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="337.2" y="643.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="340.2" y="654.0"></text>
</g>
<g>
<title>inet_sendmsg (950 samples, 20.67%)</title><rect x="337.4" y="643.0" width="244.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="340.4" y="654.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (948 samples, 20.63%)</title><rect x="337.9" y="627.0" width="243.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="340.9" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="337.9" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="340.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="338.2" y="611.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="341.2" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="338.4" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="341.4" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="338.4" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="341.4" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="338.4" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="341.4" y="590.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.07%)</title><rect x="338.7" y="611.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="341.7" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="339.0" y="595.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="342.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="339.2" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="342.2" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="339.2" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="342.2" y="590.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.04%)</title><rect x="339.5" y="611.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="342.5" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="340.0" y="611.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="343.0" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (938 samples, 20.41%)</title><rect x="340.2" y="611.0" width="240.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="343.2" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="342.3" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="345.3" y="606.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="342.6" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="345.6" y="606.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="342.8" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="345.8" y="590.0"></text>
</g>
<g>
<title>page_address (1 samples, 0.02%)</title><rect x="342.8" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="345.8" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.09%)</title><rect x="343.1" y="595.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="346.1" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.09%)</title><rect x="344.1" y="595.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="347.1" y="606.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="344.6" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="347.6" y="590.0"></text>
</g>
<g>
<title>__copy_user_ll (1 samples, 0.02%)</title><rect x="344.6" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="347.6" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="344.9" y="579.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="347.9" y="590.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="345.1" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="348.1" y="606.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="345.4" y="595.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="348.4" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (30 samples, 0.65%)</title><rect x="345.6" y="595.0" width="7.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="348.6" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (29 samples, 0.63%)</title><rect x="345.6" y="579.0" width="7.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="348.6" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (10 samples, 0.22%)</title><rect x="347.2" y="563.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="350.2" y="574.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (5 samples, 0.11%)</title><rect x="347.2" y="547.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="350.2" y="558.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.04%)</title><rect x="347.9" y="531.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="350.9" y="542.0"></text>
</g>
<g>
<title>__slab_alloc.constprop.83 (1 samples, 0.02%)</title><rect x="348.5" y="547.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="351.5" y="558.0"></text>
</g>
<g>
<title>kmalloc_slab (4 samples, 0.09%)</title><rect x="348.7" y="547.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="351.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (1 samples, 0.02%)</title><rect x="349.7" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="352.7" y="574.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="350.0" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="353.0" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc (8 samples, 0.17%)</title><rect x="350.3" y="563.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.3" y="574.0"></text>
</g>
<g>
<title>__slab_alloc.constprop.83 (2 samples, 0.04%)</title><rect x="351.5" y="547.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="354.5" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="352.1" y="547.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="355.1" y="558.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="352.1" y="531.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="355.1" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="352.1" y="515.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="355.1" y="526.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.07%)</title><rect x="352.3" y="563.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="355.3" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="353.1" y="579.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="356.1" y="590.0"></text>
</g>
<g>
<title>tcp_push (877 samples, 19.09%)</title><rect x="353.3" y="595.0" width="225.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.3" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (876 samples, 19.06%)</title><rect x="353.3" y="579.0" width="225.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="356.3" y="590.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_init_tso_segs (1 samples, 0.02%)</title><rect x="353.3" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="356.3" y="574.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.28 (1 samples, 0.02%)</title><rect x="353.6" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="356.6" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (874 samples, 19.02%)</title><rect x="353.9" y="563.0" width="224.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="356.9" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (847 samples, 18.43%)</title><rect x="354.6" y="547.0" width="217.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.6" y="558.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="356.9" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="359.9" y="542.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="357.2" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="360.2" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (828 samples, 18.02%)</title><rect x="357.5" y="531.0" width="212.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="360.5" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="359.2" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="362.2" y="526.0"></text>
</g>
<g>
<title>ip_local_out (816 samples, 17.76%)</title><rect x="359.5" y="515.0" width="209.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="362.5" y="526.0">ip_local_out</text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="359.5" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="362.5" y="510.0"></text>
</g>
<g>
<title>ip_output (815 samples, 17.74%)</title><rect x="359.8" y="499.0" width="209.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="362.8" y="510.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.07%)</title><rect x="360.5" y="483.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.5" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (809 samples, 17.61%)</title><rect x="361.3" y="483.0" width="207.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="364.3" y="494.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="361.3" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.3" y="478.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="361.6" y="467.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="364.6" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (807 samples, 17.56%)</title><rect x="361.8" y="467.0" width="207.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="364.8" y="478.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="363.1" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="366.1" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (772 samples, 16.80%)</title><rect x="363.4" y="451.0" width="198.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="366.4" y="462.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.15 (772 samples, 16.80%)</title><rect x="363.4" y="435.0" width="198.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="366.4" y="446.0">do_softirq.part.15</text>
</g>
<g>
<title>do_softirq_own_stack (771 samples, 16.78%)</title><rect x="363.6" y="419.0" width="198.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="366.6" y="430.0">do_softirq_own_stack</text>
</g>
<g>
<title>call_on_stack (771 samples, 16.78%)</title><rect x="363.6" y="403.0" width="198.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="366.6" y="414.0">call_on_stack</text>
</g>
<g>
<title>__do_softirq (771 samples, 16.78%)</title><rect x="363.6" y="387.0" width="198.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="366.6" y="398.0">__do_softirq</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="365.4" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="368.4" y="382.0"></text>
</g>
<g>
<title>net_rx_action (763 samples, 16.61%)</title><rect x="365.7" y="371.0" width="195.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="368.7" y="382.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (761 samples, 16.56%)</title><rect x="366.2" y="355.0" width="195.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="369.2" y="366.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (757 samples, 16.47%)</title><rect x="367.2" y="339.0" width="194.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="370.2" y="350.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_core (755 samples, 16.43%)</title><rect x="367.2" y="323.0" width="193.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="370.2" y="334.0">__netif_receive_skb_core</text>
</g>
<g>
<title>ip_rcv (748 samples, 16.28%)</title><rect x="369.0" y="307.0" width="192.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="372.0" y="318.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (741 samples, 16.13%)</title><rect x="370.8" y="291.0" width="190.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="373.8" y="302.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (740 samples, 16.10%)</title><rect x="371.1" y="275.0" width="190.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="374.1" y="286.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (738 samples, 16.06%)</title><rect x="371.1" y="259.0" width="189.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="374.1" y="270.0">ip_local_deliver_finish</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="371.6" y="243.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.6" y="254.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.04%)</title><rect x="372.1" y="243.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="375.1" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (732 samples, 15.93%)</title><rect x="372.6" y="243.0" width="188.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="375.6" y="254.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.20%)</title><rect x="374.9" y="227.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="377.9" y="238.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.34 (1 samples, 0.02%)</title><rect x="377.2" y="227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="380.2" y="238.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="377.5" y="227.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="380.5" y="238.0"></text>
</g>
<g>
<title>memmove (1 samples, 0.02%)</title><rect x="377.7" y="227.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="380.7" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="378.0" y="227.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="381.0" y="238.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="378.3" y="211.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="381.3" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="378.5" y="227.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="381.5" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (706 samples, 15.36%)</title><rect x="378.8" y="227.0" width="181.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="381.8" y="238.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.04%)</title><rect x="378.8" y="211.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="381.8" y="222.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="379.3" y="211.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="382.3" y="222.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="379.5" y="211.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.5" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (702 samples, 15.28%)</title><rect x="379.8" y="211.0" width="180.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.8" y="222.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (11 samples, 0.24%)</title><rect x="380.8" y="195.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="383.8" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="381.1" y="179.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="384.1" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (9 samples, 0.20%)</title><rect x="381.3" y="179.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="384.3" y="190.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="381.3" y="163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="384.3" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.17%)</title><rect x="381.6" y="163.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="384.6" y="174.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.17%)</title><rect x="381.6" y="147.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="384.6" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.11%)</title><rect x="381.8" y="131.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="384.8" y="142.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.04%)</title><rect x="383.1" y="131.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="386.1" y="142.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.04%)</title><rect x="383.1" y="115.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="386.1" y="126.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="383.6" y="195.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="386.6" y="206.0"></text>
</g>
<g>
<title>get_seconds (2 samples, 0.04%)</title><rect x="383.9" y="195.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="386.9" y="206.0"></text>
</g>
<g>
<title>sched_clock_cpu (3 samples, 0.07%)</title><rect x="384.4" y="195.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.4" y="206.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.07%)</title><rect x="384.4" y="179.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="387.4" y="190.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (2 samples, 0.04%)</title><rect x="384.4" y="163.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.4" y="174.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.04%)</title><rect x="384.4" y="147.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.4" y="158.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="384.9" y="163.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="387.9" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.04%)</title><rect x="385.2" y="195.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="388.2" y="206.0"></text>
</g>
<g>
<title>tcp_ack (54 samples, 1.18%)</title><rect x="385.7" y="195.0" width="13.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="388.7" y="206.0"></text>
</g>
<g>
<title>bictcp_acked (5 samples, 0.11%)</title><rect x="387.8" y="179.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="390.8" y="190.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="389.0" y="179.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="392.0" y="190.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="389.3" y="179.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="392.3" y="190.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (1 samples, 0.02%)</title><rect x="389.6" y="179.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="392.6" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (31 samples, 0.67%)</title><rect x="389.8" y="179.0" width="8.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="392.8" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.22%)</title><rect x="391.6" y="163.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="394.6" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.09%)</title><rect x="391.6" y="147.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="394.6" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="391.9" y="131.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="394.9" y="142.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="392.1" y="115.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="395.1" y="126.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.13%)</title><rect x="392.6" y="147.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="395.6" y="158.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.13%)</title><rect x="392.6" y="131.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="395.6" y="142.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.09%)</title><rect x="393.1" y="115.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="396.1" y="126.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="393.1" y="99.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="396.1" y="110.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.07%)</title><rect x="393.4" y="99.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="396.4" y="110.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="393.7" y="83.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="396.7" y="94.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="394.2" y="163.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="397.2" y="174.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="394.4" y="163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="397.4" y="174.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.04%)</title><rect x="394.7" y="163.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="397.7" y="174.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.02%)</title><rect x="395.2" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="398.2" y="174.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="395.5" y="163.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="398.5" y="174.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.02%)</title><rect x="395.7" y="163.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="398.7" y="174.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (5 samples, 0.11%)</title><rect x="396.0" y="163.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="399.0" y="174.0"></text>
</g>
<g>
<title>minmax_running_min (2 samples, 0.04%)</title><rect x="396.5" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="399.5" y="158.0"></text>
</g>
<g>
<title>minmax_subwin_update (2 samples, 0.04%)</title><rect x="396.5" y="131.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="399.5" y="142.0"></text>
</g>
<g>
<title>minmax_subwin_update (1 samples, 0.02%)</title><rect x="397.0" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="400.0" y="158.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.04%)</title><rect x="397.3" y="163.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="400.3" y="174.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="397.8" y="179.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="400.8" y="190.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.04%)</title><rect x="398.0" y="179.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.0" y="190.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (4 samples, 0.09%)</title><rect x="398.5" y="179.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="401.5" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.11%)</title><rect x="399.6" y="195.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="402.6" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="400.9" y="195.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.9" y="206.0"></text>
</g>
<g>
<title>tcp_data_queue (614 samples, 13.36%)</title><rect x="401.1" y="195.0" width="157.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="404.1" y="206.0">tcp_data_queue</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="401.4" y="179.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="404.4" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (608 samples, 13.23%)</title><rect x="401.6" y="179.0" width="156.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="404.6" y="190.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (601 samples, 13.08%)</title><rect x="403.4" y="163.0" width="154.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.4" y="174.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (601 samples, 13.08%)</title><rect x="403.4" y="147.0" width="154.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.4" y="158.0">__wake_up_common_lock</text>
</g>
<g>
<title>__lock_text_start (601 samples, 13.08%)</title><rect x="403.4" y="131.0" width="154.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.4" y="142.0">__lock_text_start</text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.07%)</title><rect x="557.8" y="179.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="560.8" y="190.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="558.5" y="179.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="561.5" y="190.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="558.8" y="195.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="561.8" y="206.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="559.0" y="195.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="562.0" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.04%)</title><rect x="559.3" y="195.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="562.3" y="206.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="559.8" y="195.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="562.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="560.1" y="227.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="563.1" y="238.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="560.3" y="227.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="563.3" y="238.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="560.3" y="211.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="563.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.04%)</title><rect x="560.6" y="259.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="563.6" y="270.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_ebx (1 samples, 0.02%)</title><rect x="561.1" y="323.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="564.1" y="334.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="561.4" y="323.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="564.4" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (28 samples, 0.61%)</title><rect x="561.6" y="451.0" width="7.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="564.6" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (27 samples, 0.59%)</title><rect x="561.6" y="435.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="564.6" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="563.4" y="419.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="566.4" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (15 samples, 0.33%)</title><rect x="563.7" y="419.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="566.7" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.22%)</title><rect x="564.2" y="403.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="567.2" y="414.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.13%)</title><rect x="564.7" y="387.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="567.7" y="398.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="564.9" y="371.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="567.9" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.07%)</title><rect x="565.5" y="371.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="568.5" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="565.7" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="568.7" y="366.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="566.2" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="569.2" y="398.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="566.5" y="387.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="569.5" y="398.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.07%)</title><rect x="566.7" y="403.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="569.7" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.07%)</title><rect x="567.5" y="419.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="570.5" y="430.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.04%)</title><rect x="567.5" y="403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="570.5" y="414.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="568.0" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="571.0" y="414.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="568.3" y="419.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="571.3" y="430.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="568.5" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="571.5" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.15 (1 samples, 0.02%)</title><rect x="568.8" y="451.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="571.8" y="462.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="569.1" y="515.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="572.1" y="526.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.07%)</title><rect x="569.3" y="515.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="572.3" y="526.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.07%)</title><rect x="570.1" y="531.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="573.1" y="542.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.07%)</title><rect x="570.1" y="515.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="573.1" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="570.6" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="573.6" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.04%)</title><rect x="570.9" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="573.9" y="542.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="571.1" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="574.1" y="526.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="571.1" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="574.1" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.04%)</title><rect x="571.4" y="531.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="574.4" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="571.9" y="531.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="574.9" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="571.9" y="515.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="574.9" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="572.1" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="575.1" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="572.4" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="575.4" y="558.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="572.7" y="547.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="575.7" y="558.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="572.9" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="575.9" y="558.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="573.2" y="547.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="576.2" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="573.4" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.4" y="558.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="573.7" y="547.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="576.7" y="558.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="573.9" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="576.9" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.24%)</title><rect x="574.2" y="547.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="577.2" y="558.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="575.2" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="578.2" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.13%)</title><rect x="575.5" y="531.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="578.5" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (6 samples, 0.13%)</title><rect x="575.5" y="515.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="578.5" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.13%)</title><rect x="575.5" y="499.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="578.5" y="510.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.13%)</title><rect x="575.5" y="483.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="578.5" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.11%)</title><rect x="575.7" y="467.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="578.7" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="577.0" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="580.0" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="577.3" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="580.3" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="577.8" y="547.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="580.8" y="558.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="577.8" y="531.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="580.8" y="542.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="578.0" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="581.0" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="578.3" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="581.3" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="578.6" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="581.6" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.17%)</title><rect x="579.1" y="595.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="582.1" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.17%)</title><rect x="579.1" y="579.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="582.1" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="579.3" y="563.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="582.3" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.09%)</title><rect x="579.8" y="563.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="582.8" y="574.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="580.1" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.1" y="558.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (2 samples, 0.04%)</title><rect x="580.4" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="583.4" y="558.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.04%)</title><rect x="580.4" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="583.4" y="542.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="580.9" y="563.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="583.9" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="581.1" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="584.1" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.07%)</title><rect x="581.4" y="643.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="584.4" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.07%)</title><rect x="581.4" y="627.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="584.4" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.07%)</title><rect x="581.4" y="611.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="584.4" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="581.6" y="595.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="584.6" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm (2 samples, 0.04%)</title><rect x="581.6" y="579.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="584.6" y="590.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.02%)</title><rect x="582.2" y="691.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="585.2" y="702.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.04%)</title><rect x="582.4" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="585.4" y="718.0"></text>
</g>
<g>
<title>rw_verify_area (12 samples, 0.26%)</title><rect x="582.9" y="707.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="585.9" y="718.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_ecx (1 samples, 0.02%)</title><rect x="583.4" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="586.4" y="702.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="583.7" y="691.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="586.7" y="702.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.15%)</title><rect x="584.2" y="691.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="587.2" y="702.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.09%)</title><rect x="584.7" y="675.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="587.7" y="686.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="584.7" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="587.7" y="670.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.07%)</title><rect x="585.0" y="659.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="588.0" y="670.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.07%)</title><rect x="585.0" y="643.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.0" y="654.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="585.7" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="588.7" y="686.0"></text>
</g>
<g>
<title>sys_write (4 samples, 0.09%)</title><rect x="586.0" y="755.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="589.0" y="766.0"></text>
</g>
<g>
<title>__write (3 samples, 0.07%)</title><rect x="587.0" y="787.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="590.0" y="798.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="587.8" y="787.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="590.8" y="798.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="587.8" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.8" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="587.8" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="590.8" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="587.8" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="590.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (118 samples, 2.57%)</title><rect x="588.1" y="867.0" width="30.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.1" y="878.0">su..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (112 samples, 2.44%)</title><rect x="589.6" y="851.0" width="28.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.6" y="862.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (112 samples, 2.44%)</title><rect x="589.6" y="835.0" width="28.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.6" y="846.0">ja..</text>
</g>
<g>
<title>__vdso_gettimeofday (14 samples, 0.30%)</title><rect x="590.6" y="819.0" width="3.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="593.6" y="830.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="594.2" y="819.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="597.2" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (93 samples, 2.02%)</title><rect x="594.5" y="819.0" width="23.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="597.5" y="830.0">o..</text>
</g>
<g>
<title>[unknown] (10 samples, 0.22%)</title><rect x="597.3" y="803.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="600.3" y="814.0"></text>
</g>
<g>
<title>__kernel_vsyscall (10 samples, 0.22%)</title><rect x="597.3" y="787.0" width="2.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="600.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (10 samples, 0.22%)</title><rect x="597.3" y="771.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="600.3" y="782.0"></text>
</g>
<g>
<title>__get_user_4 (2 samples, 0.04%)</title><rect x="597.3" y="755.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.3" y="766.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (8 samples, 0.17%)</title><rect x="597.8" y="755.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="600.8" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="599.9" y="803.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="602.9" y="814.0"></text>
</g>
<g>
<title>__kernel_vsyscall (58 samples, 1.26%)</title><rect x="600.1" y="803.0" width="14.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="603.1" y="814.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (52 samples, 1.13%)</title><rect x="601.7" y="787.0" width="13.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="604.7" y="798.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="601.7" y="771.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="604.7" y="782.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (47 samples, 1.02%)</title><rect x="601.9" y="771.0" width="12.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="604.9" y="782.0"></text>
</g>
<g>
<title>_copy_to_user (9 samples, 0.20%)</title><rect x="603.0" y="755.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="606.0" y="766.0"></text>
</g>
<g>
<title>do_gettimeofday (11 samples, 0.24%)</title><rect x="605.3" y="755.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="608.3" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="608.1" y="755.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="611.1" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="608.1" y="739.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="611.1" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="608.1" y="723.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="611.1" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="608.1" y="707.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="611.1" y="718.0"></text>
</g>
<g>
<title>sys_gettimeofday (22 samples, 0.48%)</title><rect x="608.3" y="755.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="611.3" y="766.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.04%)</title><rect x="608.3" y="739.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="611.3" y="750.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.04%)</title><rect x="608.9" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="611.9" y="750.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.04%)</title><rect x="608.9" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="611.9" y="734.0"></text>
</g>
<g>
<title>do_gettimeofday (18 samples, 0.39%)</title><rect x="609.4" y="739.0" width="4.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="612.4" y="750.0"></text>
</g>
<g>
<title>__getnstimeofday64 (17 samples, 0.37%)</title><rect x="609.4" y="723.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="612.4" y="734.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (5 samples, 0.11%)</title><rect x="612.2" y="707.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="615.2" y="718.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (5 samples, 0.11%)</title><rect x="612.2" y="691.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="615.2" y="702.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="613.5" y="707.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="616.5" y="718.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.02%)</title><rect x="613.7" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="616.7" y="734.0"></text>
</g>
<g>
<title>sys_gettimeofday (4 samples, 0.09%)</title><rect x="614.0" y="771.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="617.0" y="782.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (13 samples, 0.28%)</title><rect x="615.0" y="803.0" width="3.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="618.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endWrite (1 samples, 0.02%)</title><rect x="618.4" y="867.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="621.4" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.02%)</title><rect x="618.4" y="851.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.4" y="862.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="618.6" y="931.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="621.6" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="618.6" y="915.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="621.6" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="618.6" y="899.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="621.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.20%)</title><rect x="618.9" y="963.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.20%)</title><rect x="618.9" y="947.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.9" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.20%)</title><rect x="618.9" y="931.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.9" y="942.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="620.9" y="915.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="623.9" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="620.9" y="899.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="623.9" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="620.9" y="883.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.07%)</title><rect x="621.2" y="979.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.2" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.07%)</title><rect x="621.2" y="963.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.2" y="974.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (3 samples, 0.07%)</title><rect x="621.2" y="947.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.2" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.07%)</title><rect x="621.2" y="931.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.2" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (3 samples, 0.07%)</title><rect x="621.2" y="915.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.2" y="926.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.07%)</title><rect x="621.2" y="899.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="624.2" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.07%)</title><rect x="621.2" y="883.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.2" y="894.0"></text>
</g>
<g>
<title>Thread::current() (3 samples, 0.07%)</title><rect x="621.2" y="867.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="624.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Coordinator.get (1,883 samples, 40.98%)</title><rect x="622.0" y="979.0" width="483.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.0" y="990.0">ru/mail/polis/service/dogm/Coordinator.get</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.17%)</title><rect x="624.0" y="963.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.0" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.17%)</title><rect x="624.0" y="947.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.33%)</title><rect x="626.1" y="963.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.1" y="974.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.09%)</title><rect x="628.9" y="947.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Coordinator.performResponse (1,843 samples, 40.11%)</title><rect x="629.9" y="963.0" width="473.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.9" y="974.0">ru/mail/polis/service/dogm/Coordinator.performResponse</text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.39%)</title><rect x="630.2" y="947.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.2" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.39%)</title><rect x="630.2" y="931.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.2" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.39%)</title><rect x="630.2" y="915.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.2" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.39%)</title><rect x="630.2" y="899.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="633.2" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.39%)</title><rect x="630.2" y="883.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (1,278 samples, 27.81%)</title><rect x="634.8" y="947.0" width="328.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.8" y="958.0">one/nio/http/HttpClient.get</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,278 samples, 27.81%)</title><rect x="634.8" y="931.0" width="328.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.8" y="942.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,265 samples, 27.53%)</title><rect x="638.1" y="915.0" width="324.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.1" y="926.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (12 samples, 0.26%)</title><rect x="638.4" y="899.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="641.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.26%)</title><rect x="638.4" y="883.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="641.4" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.26%)</title><rect x="638.4" y="867.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (344 samples, 7.49%)</title><rect x="641.5" y="899.0" width="88.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.5" y="910.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (344 samples, 7.49%)</title><rect x="641.5" y="883.0" width="88.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.5" y="894.0">one/nio/ne..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (344 samples, 7.49%)</title><rect x="641.5" y="867.0" width="88.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.5" y="878.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (261 samples, 5.68%)</title><rect x="642.8" y="851.0" width="67.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.8" y="862.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (261 samples, 5.68%)</title><rect x="642.8" y="835.0" width="67.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.8" y="846.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (6 samples, 0.13%)</title><rect x="642.8" y="819.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.8" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.13%)</title><rect x="642.8" y="803.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (6 samples, 0.13%)</title><rect x="642.8" y="787.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (6 samples, 0.13%)</title><rect x="642.8" y="771.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.09%)</title><rect x="642.8" y="755.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.02%)</title><rect x="642.8" y="739.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.02%)</title><rect x="642.8" y="723.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.07%)</title><rect x="643.0" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (3 samples, 0.07%)</title><rect x="643.0" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (2 samples, 0.04%)</title><rect x="643.8" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.8" y="766.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.04%)</title><rect x="643.8" y="739.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="646.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (244 samples, 5.31%)</title><rect x="644.3" y="819.0" width="62.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.3" y="830.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (244 samples, 5.31%)</title><rect x="644.3" y="803.0" width="62.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.3" y="814.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (240 samples, 5.22%)</title><rect x="645.3" y="787.0" width="61.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.3" y="798.0">sun/ni..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="646.4" y="771.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="649.4" y="782.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.02%)</title><rect x="646.6" y="771.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="649.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="646.9" y="771.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="649.9" y="782.0"></text>
</g>
<g>
<title>__kernel_vsyscall (11 samples, 0.24%)</title><rect x="646.9" y="755.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="649.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (11 samples, 0.24%)</title><rect x="646.9" y="739.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="649.9" y="750.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (11 samples, 0.24%)</title><rect x="646.9" y="723.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="649.9" y="734.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="649.4" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="652.4" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="649.4" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="652.4" y="702.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="649.4" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="652.4" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="649.4" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.4" y="670.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="649.4" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="652.4" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="649.4" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="652.4" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="649.4" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="652.4" y="622.0"></text>
</g>
<g>
<title>__kernel_vsyscall (218 samples, 4.74%)</title><rect x="649.7" y="771.0" width="56.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="652.7" y="782.0">__ker..</text>
</g>
<g>
<title>entry_SYSENTER_32 (213 samples, 4.64%)</title><rect x="651.0" y="755.0" width="54.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.0" y="766.0">entry..</text>
</g>
<g>
<title>do_fast_syscall_32 (212 samples, 4.61%)</title><rect x="651.0" y="739.0" width="54.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="654.0" y="750.0">do_fa..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="651.0" y="723.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.0" y="734.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="651.0" y="707.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="654.0" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="651.0" y="691.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="654.0" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="651.0" y="675.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.0" y="686.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="651.2" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="654.2" y="734.0"></text>
</g>
<g>
<title>sys_read (210 samples, 4.57%)</title><rect x="651.5" y="723.0" width="53.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="654.5" y="734.0">sys_r..</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.07%)</title><rect x="651.5" y="707.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.5" y="718.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="651.5" y="691.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="654.5" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="652.0" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="655.0" y="686.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="652.3" y="707.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="655.3" y="718.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.02%)</title><rect x="652.5" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="655.5" y="718.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="652.8" y="707.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="655.8" y="718.0"></text>
</g>
<g>
<title>vfs_read (204 samples, 4.44%)</title><rect x="653.0" y="707.0" width="52.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="656.0" y="718.0">vfs_r..</text>
</g>
<g>
<title>__vfs_read (189 samples, 4.11%)</title><rect x="653.8" y="691.0" width="48.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="656.8" y="702.0">__vf..</text>
</g>
<g>
<title>new_sync_read (186 samples, 4.05%)</title><rect x="653.8" y="675.0" width="47.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="656.8" y="686.0">new_..</text>
</g>
<g>
<title>sock_read_iter (183 samples, 3.98%)</title><rect x="654.6" y="659.0" width="47.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="657.6" y="670.0">sock..</text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.02%)</title><rect x="655.1" y="643.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.1" y="654.0"></text>
</g>
<g>
<title>sock_recvmsg (180 samples, 3.92%)</title><rect x="655.3" y="643.0" width="46.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="658.3" y="654.0">sock..</text>
</g>
<g>
<title>inet_recvmsg (174 samples, 3.79%)</title><rect x="655.6" y="627.0" width="44.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="658.6" y="638.0">inet..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="655.9" y="611.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="658.9" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="656.1" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="659.1" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (171 samples, 3.72%)</title><rect x="656.4" y="611.0" width="43.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="659.4" y="622.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="657.4" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="660.4" y="606.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="657.4" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="660.4" y="590.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="657.7" y="579.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="660.7" y="590.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="657.7" y="563.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="660.7" y="574.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="657.7" y="547.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="660.7" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="657.9" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="660.9" y="606.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="658.2" y="595.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="661.2" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="658.4" y="595.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="661.4" y="606.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="658.4" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="661.4" y="590.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="658.4" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="661.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="658.7" y="579.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="661.7" y="590.0"></text>
</g>
<g>
<title>sk_wait_data (148 samples, 3.22%)</title><rect x="658.9" y="595.0" width="38.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.9" y="606.0">sk_..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="659.4" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="662.4" y="590.0"></text>
</g>
<g>
<title>add_wait_queue (4 samples, 0.09%)</title><rect x="659.7" y="579.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="662.7" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.09%)</title><rect x="659.7" y="563.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="662.7" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.11%)</title><rect x="660.7" y="579.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="663.7" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.11%)</title><rect x="660.7" y="563.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="663.7" y="574.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (5 samples, 0.11%)</title><rect x="660.7" y="547.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="663.7" y="558.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="662.0" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="665.0" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.04%)</title><rect x="662.0" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="665.0" y="574.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (2 samples, 0.04%)</title><rect x="662.0" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="665.0" y="558.0"></text>
</g>
<g>
<title>__pv_queued_spin_unlock (2 samples, 0.04%)</title><rect x="662.0" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="665.0" y="542.0"></text>
</g>
<g>
<title>remove_wait_queue (1 samples, 0.02%)</title><rect x="662.5" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="665.5" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="662.5" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="665.5" y="574.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.02%)</title><rect x="662.8" y="579.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="665.8" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="663.0" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="666.0" y="590.0"></text>
</g>
<g>
<title>wait_woken (131 samples, 2.85%)</title><rect x="663.3" y="579.0" width="33.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="666.3" y="590.0">wa..</text>
</g>
<g>
<title>schedule (3 samples, 0.07%)</title><rect x="663.3" y="563.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="666.3" y="574.0"></text>
</g>
<g>
<title>schedule_timeout (128 samples, 2.79%)</title><rect x="664.1" y="563.0" width="32.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="667.1" y="574.0">sc..</text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="664.1" y="547.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="667.1" y="558.0"></text>
</g>
<g>
<title>schedule (127 samples, 2.76%)</title><rect x="664.3" y="547.0" width="32.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="667.3" y="558.0">sc..</text>
</g>
<g>
<title>__sched_text_start (124 samples, 2.70%)</title><rect x="665.1" y="531.0" width="31.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="668.1" y="542.0">__..</text>
</g>
<g>
<title>finish_task_switch (121 samples, 2.63%)</title><rect x="665.9" y="515.0" width="31.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="668.9" y="526.0">fi..</text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.15%)</title><rect x="696.9" y="595.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="699.9" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="696.9" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="699.9" y="590.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.13%)</title><rect x="697.2" y="579.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="700.2" y="590.0"></text>
</g>
<g>
<title>__copy_user_ll (1 samples, 0.02%)</title><rect x="697.2" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="700.2" y="574.0"></text>
</g>
<g>
<title>copyout (5 samples, 0.11%)</title><rect x="697.5" y="563.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="700.5" y="574.0"></text>
</g>
<g>
<title>__copy_user_ll (5 samples, 0.11%)</title><rect x="697.5" y="547.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="700.5" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.09%)</title><rect x="698.7" y="595.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="701.7" y="606.0"></text>
</g>
<g>
<title>wait_woken (2 samples, 0.04%)</title><rect x="699.8" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="702.8" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.09%)</title><rect x="700.3" y="627.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="703.3" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.09%)</title><rect x="700.3" y="611.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="703.3" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.09%)</title><rect x="700.3" y="595.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="703.3" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.09%)</title><rect x="700.3" y="579.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="703.3" y="590.0"></text>
</g>
<g>
<title>aa_label_sk_perm (2 samples, 0.04%)</title><rect x="700.8" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.8" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="701.3" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="704.3" y="638.0"></text>
</g>
<g>
<title>sock_read_iter (3 samples, 0.07%)</title><rect x="701.6" y="675.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="704.6" y="686.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="702.3" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="705.3" y="702.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.04%)</title><rect x="702.6" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="705.6" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.20%)</title><rect x="703.1" y="691.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="706.1" y="702.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.17%)</title><rect x="703.4" y="675.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="706.4" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.07%)</title><rect x="704.4" y="659.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="707.4" y="670.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.07%)</title><rect x="704.4" y="643.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="707.4" y="654.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="704.9" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="707.9" y="638.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="705.2" y="659.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="708.2" y="670.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.02%)</title><rect x="705.4" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="708.4" y="750.0"></text>
</g>
<g>
<title>read (5 samples, 0.11%)</title><rect x="705.7" y="771.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="708.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (11 samples, 0.24%)</title><rect x="707.0" y="819.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (11 samples, 0.24%)</title><rect x="707.0" y="803.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.0" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (11 samples, 0.24%)</title><rect x="707.0" y="787.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.0" y="798.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (11 samples, 0.24%)</title><rect x="707.0" y="771.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (11 samples, 0.24%)</title><rect x="707.0" y="755.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (73 samples, 1.59%)</title><rect x="709.8" y="851.0" width="18.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.8" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="728.0" y="835.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.0" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="728.0" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.0" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="728.0" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="728.0" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endRead (5 samples, 0.11%)</title><rect x="728.5" y="851.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.5" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.11%)</title><rect x="728.5" y="835.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (40 samples, 0.87%)</title><rect x="729.8" y="899.0" width="10.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.8" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (26 samples, 0.57%)</title><rect x="732.1" y="883.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.15%)</title><rect x="737.0" y="867.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.15%)</title><rect x="737.0" y="851.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.11%)</title><rect x="738.8" y="883.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.11%)</title><rect x="738.8" y="867.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.11%)</title><rect x="738.8" y="851.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (17 samples, 0.37%)</title><rect x="740.1" y="899.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.1" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.04%)</title><rect x="744.5" y="899.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="744.5" y="883.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="744.5" y="867.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.setTimeout (1 samples, 0.02%)</title><rect x="745.0" y="899.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.0" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.socket (1 samples, 0.02%)</title><rect x="745.0" y="883.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (844 samples, 18.37%)</title><rect x="745.2" y="899.0" width="216.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.2" y="910.0">one/nio/net/JavaSocket.write..</text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (640 samples, 13.93%)</title><rect x="745.2" y="883.0" width="164.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.2" y="894.0">java/nio/channels/Cha..</text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (632 samples, 13.75%)</title><rect x="747.3" y="867.0" width="162.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="750.3" y="878.0">java/nio/channels/Cha..</text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (630 samples, 13.71%)</title><rect x="747.8" y="851.0" width="161.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.8" y="862.0">java/nio/channels/Cha..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (623 samples, 13.56%)</title><rect x="749.6" y="835.0" width="160.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.6" y="846.0">sun/nio/ch/SocketCha..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (590 samples, 12.84%)</title><rect x="749.8" y="819.0" width="151.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.8" y="830.0">sun/nio/ch/IOUtil.w..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (589 samples, 12.82%)</title><rect x="750.1" y="803.0" width="151.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.1" y="814.0">sun/nio/ch/IOUtil.w..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (589 samples, 12.82%)</title><rect x="750.1" y="787.0" width="151.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.1" y="798.0">sun/nio/ch/IOUtil.w..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (4 samples, 0.09%)</title><rect x="750.1" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (585 samples, 12.73%)</title><rect x="751.1" y="771.0" width="150.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="754.1" y="782.0">sun/nio/ch/SocketDi..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (580 samples, 12.62%)</title><rect x="752.4" y="755.0" width="149.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.4" y="766.0">sun/nio/ch/FileDisp..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.09%)</title><rect x="753.7" y="739.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="756.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="754.7" y="739.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="757.7" y="750.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="754.7" y="723.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="757.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="754.7" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="757.7" y="718.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="754.7" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="757.7" y="702.0"></text>
</g>
<g>
<title>__kernel_vsyscall (567 samples, 12.34%)</title><rect x="755.0" y="739.0" width="145.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="758.0" y="750.0">__kernel_vsyscall</text>
</g>
<g>
<title>entry_SYSENTER_32 (564 samples, 12.27%)</title><rect x="755.7" y="723.0" width="144.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="758.7" y="734.0">entry_SYSENTER_32</text>
</g>
<g>
<title>do_fast_syscall_32 (564 samples, 12.27%)</title><rect x="755.7" y="707.0" width="144.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="758.7" y="718.0">do_fast_syscall_32</text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="755.7" y="691.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="758.7" y="702.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.07%)</title><rect x="755.7" y="675.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="758.7" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.07%)</title><rect x="755.7" y="659.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="758.7" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.07%)</title><rect x="755.7" y="643.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="758.7" y="654.0"></text>
</g>
<g>
<title>sys_write (561 samples, 12.21%)</title><rect x="756.5" y="691.0" width="144.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="759.5" y="702.0">sys_write</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.11%)</title><rect x="757.0" y="675.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="760.0" y="686.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.11%)</title><rect x="757.0" y="659.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="760.0" y="670.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="757.5" y="643.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="760.5" y="654.0"></text>
</g>
<g>
<title>vfs_write (554 samples, 12.06%)</title><rect x="758.3" y="675.0" width="142.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="761.3" y="686.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (538 samples, 11.71%)</title><rect x="760.1" y="659.0" width="138.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="763.1" y="670.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (536 samples, 11.66%)</title><rect x="760.4" y="643.0" width="137.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="763.4" y="654.0">new_sync_write</text>
</g>
<g>
<title>sock_write_iter (535 samples, 11.64%)</title><rect x="760.6" y="627.0" width="137.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="763.6" y="638.0">sock_write_iter</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="761.1" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="764.1" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (532 samples, 11.58%)</title><rect x="761.4" y="611.0" width="136.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="764.4" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (524 samples, 11.40%)</title><rect x="761.7" y="595.0" width="134.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="764.7" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="761.9" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="764.9" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (522 samples, 11.36%)</title><rect x="762.2" y="579.0" width="134.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="765.2" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="762.2" y="563.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="765.2" y="574.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="762.4" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="765.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="762.7" y="547.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="765.7" y="558.0"></text>
</g>
<g>
<title>skb_put (1 samples, 0.02%)</title><rect x="762.9" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="765.9" y="574.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.02%)</title><rect x="763.2" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="766.2" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="763.5" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="766.5" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="764.0" y="563.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="767.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (512 samples, 11.14%)</title><rect x="764.5" y="563.0" width="131.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="767.5" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="765.5" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="768.5" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="765.5" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="768.5" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (9 samples, 0.20%)</title><rect x="765.8" y="547.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="768.8" y="558.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.04%)</title><rect x="766.0" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="769.0" y="542.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.11%)</title><rect x="766.5" y="531.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="769.5" y="542.0"></text>
</g>
<g>
<title>__copy_user_ll (4 samples, 0.09%)</title><rect x="766.8" y="515.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="769.8" y="526.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="767.8" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="770.8" y="542.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="768.1" y="547.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="771.1" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.26%)</title><rect x="768.3" y="547.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="771.3" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.17%)</title><rect x="769.1" y="531.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="772.1" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (2 samples, 0.04%)</title><rect x="769.9" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="772.9" y="526.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (1 samples, 0.02%)</title><rect x="769.9" y="499.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="772.9" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="770.1" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="773.1" y="510.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (1 samples, 0.02%)</title><rect x="770.4" y="515.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="773.4" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.04%)</title><rect x="770.6" y="515.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="773.6" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="771.2" y="531.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="774.2" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="771.4" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="774.4" y="558.0"></text>
</g>
<g>
<title>tcp_push (475 samples, 10.34%)</title><rect x="771.7" y="547.0" width="122.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="774.7" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (474 samples, 10.32%)</title><rect x="771.7" y="531.0" width="121.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="774.7" y="542.0">__tcp_push_pend..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="771.7" y="515.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="774.7" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (473 samples, 10.29%)</title><rect x="771.9" y="515.0" width="121.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="774.9" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="772.7" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="775.7" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (459 samples, 9.99%)</title><rect x="773.0" y="499.0" width="117.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="776.0" y="510.0">__tcp_transmit..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="775.3" y="483.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="778.3" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="775.5" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="778.5" y="494.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="775.8" y="483.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="778.8" y="494.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="776.0" y="483.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="779.0" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (440 samples, 9.58%)</title><rect x="776.3" y="483.0" width="113.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="779.3" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (437 samples, 9.51%)</title><rect x="776.6" y="467.0" width="112.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="779.6" y="478.0">ip_local_out</text>
</g>
<g>
<title>ip_output (437 samples, 9.51%)</title><rect x="776.6" y="451.0" width="112.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="779.6" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (436 samples, 9.49%)</title><rect x="776.8" y="435.0" width="112.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="779.8" y="446.0">ip_finish_out..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.07%)</title><rect x="777.3" y="419.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="780.3" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (431 samples, 9.38%)</title><rect x="778.1" y="419.0" width="110.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.1" y="430.0">ip_finish_out..</text>
</g>
<g>
<title>__local_bh_enable_ip (405 samples, 8.81%)</title><rect x="779.4" y="403.0" width="104.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="782.4" y="414.0">__local_bh_e..</text>
</g>
<g>
<title>do_softirq.part.15 (405 samples, 8.81%)</title><rect x="779.4" y="387.0" width="104.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="782.4" y="398.0">do_softirq.p..</text>
</g>
<g>
<title>do_softirq_own_stack (404 samples, 8.79%)</title><rect x="779.6" y="371.0" width="103.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="782.6" y="382.0">do_softirq_o..</text>
</g>
<g>
<title>call_on_stack (404 samples, 8.79%)</title><rect x="779.6" y="355.0" width="103.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="782.6" y="366.0">call_on_stack</text>
</g>
<g>
<title>__do_softirq (404 samples, 8.79%)</title><rect x="779.6" y="339.0" width="103.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="782.6" y="350.0">__do_softirq</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="781.4" y="323.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="784.4" y="334.0"></text>
</g>
<g>
<title>net_rx_action (395 samples, 8.60%)</title><rect x="781.7" y="323.0" width="101.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="784.7" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (394 samples, 8.57%)</title><rect x="781.9" y="307.0" width="101.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.9" y="318.0">process_back..</text>
</g>
<g>
<title>__netif_receive_skb (389 samples, 8.47%)</title><rect x="783.2" y="291.0" width="99.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="786.2" y="302.0">__netif_rece..</text>
</g>
<g>
<title>__netif_receive_skb_core (389 samples, 8.47%)</title><rect x="783.2" y="275.0" width="99.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="786.2" y="286.0">__netif_rece..</text>
</g>
<g>
<title>ip_rcv (385 samples, 8.38%)</title><rect x="784.0" y="259.0" width="98.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="787.0" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (380 samples, 8.27%)</title><rect x="785.3" y="243.0" width="97.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="788.3" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (378 samples, 8.23%)</title><rect x="785.8" y="227.0" width="97.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="788.8" y="238.0">ip_local_de..</text>
</g>
<g>
<title>ip_local_deliver_finish (376 samples, 8.18%)</title><rect x="786.1" y="211.0" width="96.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="789.1" y="222.0">ip_local_de..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="786.3" y="195.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="789.3" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="786.6" y="195.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="789.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="786.8" y="195.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="789.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (372 samples, 8.10%)</title><rect x="787.1" y="195.0" width="95.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="790.1" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.15%)</title><rect x="788.4" y="179.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="791.4" y="190.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="790.2" y="179.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="793.2" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.09%)</title><rect x="790.4" y="179.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="793.4" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="791.2" y="163.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="794.2" y="174.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="791.4" y="179.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="794.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (351 samples, 7.64%)</title><rect x="791.7" y="179.0" width="90.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="794.7" y="190.0">tcp_v4_do_..</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.04%)</title><rect x="791.7" y="163.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="794.7" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="792.2" y="163.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="795.2" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="792.5" y="163.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="795.5" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (347 samples, 7.55%)</title><rect x="792.7" y="163.0" width="89.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="795.7" y="174.0">tcp_rcv_es..</text>
</g>
<g>
<title>__tcp_ack_snd_check (7 samples, 0.15%)</title><rect x="793.5" y="147.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="796.5" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="793.8" y="131.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="796.8" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.09%)</title><rect x="794.3" y="131.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="797.3" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.09%)</title><rect x="794.3" y="115.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="797.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.09%)</title><rect x="794.3" y="99.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="797.3" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.09%)</title><rect x="794.3" y="83.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="797.3" y="94.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="795.3" y="147.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="798.3" y="158.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.04%)</title><rect x="795.6" y="147.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="798.6" y="158.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.04%)</title><rect x="795.6" y="131.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="798.6" y="142.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (2 samples, 0.04%)</title><rect x="795.6" y="115.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="798.6" y="126.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.04%)</title><rect x="795.6" y="99.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="798.6" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="796.1" y="147.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="799.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack (31 samples, 0.67%)</title><rect x="796.3" y="147.0" width="8.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="799.3" y="158.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="798.4" y="131.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="801.4" y="142.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.02%)</title><rect x="798.6" y="131.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="801.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (18 samples, 0.39%)</title><rect x="798.9" y="131.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="801.9" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.13%)</title><rect x="799.4" y="115.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="802.4" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.07%)</title><rect x="799.4" y="99.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="802.4" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="799.4" y="83.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="802.4" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="799.7" y="67.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="802.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="800.2" y="99.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="803.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="800.2" y="83.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="803.2" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.04%)</title><rect x="800.2" y="67.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="803.2" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="800.4" y="51.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="803.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="800.4" y="35.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="803.4" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="800.7" y="99.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="803.7" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="800.9" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="803.9" y="126.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="801.2" y="115.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="804.2" y="126.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.02%)</title><rect x="801.5" y="115.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="804.5" y="126.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="801.7" y="115.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="804.7" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (6 samples, 0.13%)</title><rect x="802.0" y="115.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="805.0" y="126.0"></text>
</g>
<g>
<title>minmax_running_min (3 samples, 0.07%)</title><rect x="802.5" y="99.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="805.5" y="110.0"></text>
</g>
<g>
<title>minmax_subwin_update (2 samples, 0.04%)</title><rect x="802.7" y="83.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="805.7" y="94.0"></text>
</g>
<g>
<title>minmax_subwin_update (1 samples, 0.02%)</title><rect x="803.3" y="99.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="806.3" y="110.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="803.5" y="131.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="806.5" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="803.8" y="131.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="806.8" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="804.0" y="131.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="807.0" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="804.3" y="147.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="807.3" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="804.5" y="147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="807.5" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (297 samples, 6.46%)</title><rect x="804.8" y="147.0" width="76.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="807.8" y="158.0">tcp_data..</text>
</g>
<g>
<title>sock_def_readable (291 samples, 6.33%)</title><rect x="805.3" y="131.0" width="74.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="808.3" y="142.0">sock_def..</text>
</g>
<g>
<title>__wake_up_sync_key (290 samples, 6.31%)</title><rect x="805.6" y="115.0" width="74.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="808.6" y="126.0">__wake_u..</text>
</g>
<g>
<title>__wake_up_common_lock (290 samples, 6.31%)</title><rect x="805.6" y="99.0" width="74.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="808.6" y="110.0">__wake_u..</text>
</g>
<g>
<title>__lock_text_start (290 samples, 6.31%)</title><rect x="805.6" y="83.0" width="74.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="808.6" y="94.0">__lock_t..</text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.09%)</title><rect x="880.0" y="131.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="883.0" y="142.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.04%)</title><rect x="881.1" y="147.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="884.1" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="881.6" y="147.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="884.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="881.8" y="179.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="884.8" y="190.0"></text>
</g>
<g>
<title>memmove (1 samples, 0.02%)</title><rect x="881.8" y="163.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="884.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.04%)</title><rect x="882.1" y="179.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="885.1" y="190.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.04%)</title><rect x="882.1" y="163.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="885.1" y="174.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="882.6" y="211.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="885.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="882.9" y="259.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="885.9" y="270.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="883.1" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="886.1" y="334.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="883.1" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="886.1" y="318.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="883.1" y="291.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="886.1" y="302.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="883.1" y="275.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="886.1" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (21 samples, 0.46%)</title><rect x="883.4" y="403.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="886.4" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (21 samples, 0.46%)</title><rect x="883.4" y="387.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="886.4" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.15%)</title><rect x="884.9" y="371.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="887.9" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.07%)</title><rect x="885.2" y="355.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="888.2" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="885.4" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="888.4" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="885.7" y="339.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="888.7" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="885.7" y="323.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="888.7" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.04%)</title><rect x="885.9" y="355.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="888.9" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="886.5" y="355.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="889.5" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.11%)</title><rect x="886.7" y="371.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="889.7" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.09%)</title><rect x="887.0" y="355.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="890.0" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (3 samples, 0.07%)</title><rect x="888.0" y="371.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="891.0" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="888.8" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="891.8" y="478.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.09%)</title><rect x="889.3" y="483.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="892.3" y="494.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.09%)</title><rect x="889.3" y="467.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="892.3" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.04%)</title><rect x="889.8" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="892.8" y="462.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.04%)</title><rect x="890.3" y="483.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="893.3" y="494.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="890.8" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="893.8" y="510.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.04%)</title><rect x="891.1" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="894.1" y="510.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="891.3" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="894.3" y="494.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.02%)</title><rect x="891.3" y="467.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="894.3" y="478.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="891.3" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="894.3" y="462.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="891.6" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="894.6" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.09%)</title><rect x="891.9" y="499.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="894.9" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.09%)</title><rect x="891.9" y="483.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="894.9" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (4 samples, 0.09%)</title><rect x="891.9" y="467.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="894.9" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="892.1" y="451.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="895.1" y="462.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="892.1" y="435.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="895.1" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.04%)</title><rect x="892.4" y="419.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="895.4" y="430.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="892.9" y="499.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="895.9" y="510.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="893.1" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="896.1" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="893.4" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="896.4" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.17%)</title><rect x="893.7" y="547.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="896.7" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="893.7" y="531.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="896.7" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.15%)</title><rect x="893.9" y="531.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="896.9" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.07%)</title><rect x="894.9" y="515.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="897.9" y="526.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="895.2" y="499.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="898.2" y="510.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="895.4" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="898.4" y="510.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="895.4" y="483.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="898.4" y="494.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="895.7" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="898.7" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="896.0" y="563.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="899.0" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.13%)</title><rect x="896.2" y="595.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="899.2" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="896.5" y="579.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="899.5" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.09%)</title><rect x="896.7" y="579.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="899.7" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.09%)</title><rect x="896.7" y="563.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="899.7" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.07%)</title><rect x="897.0" y="547.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="900.0" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm (2 samples, 0.04%)</title><rect x="897.2" y="531.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="900.2" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="897.8" y="595.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="900.8" y="606.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.02%)</title><rect x="898.0" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="901.0" y="654.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.07%)</title><rect x="898.3" y="659.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="901.3" y="670.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.13%)</title><rect x="899.0" y="659.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="902.0" y="670.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.07%)</title><rect x="899.8" y="643.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="902.8" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.07%)</title><rect x="899.8" y="627.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="902.8" y="638.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.07%)</title><rect x="899.8" y="611.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="902.8" y="622.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.04%)</title><rect x="900.1" y="595.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="903.1" y="606.0"></text>
</g>
<g>
<title>__write (2 samples, 0.04%)</title><rect x="900.6" y="739.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="903.6" y="750.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.02%)</title><rect x="901.1" y="739.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="904.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (18 samples, 0.39%)</title><rect x="901.4" y="819.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.4" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.09%)</title><rect x="903.9" y="803.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="903.9" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.9" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="904.4" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="907.4" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="904.4" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.4" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="904.4" y="755.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.4" y="766.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="905.0" y="803.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="908.0" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="905.0" y="787.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="908.0" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="905.0" y="771.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="908.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.07%)</title><rect x="905.2" y="803.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.2" y="814.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.02%)</title><rect x="905.7" y="787.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="908.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endWrite (14 samples, 0.30%)</title><rect x="906.0" y="819.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="909.0" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (13 samples, 0.28%)</title><rect x="906.2" y="803.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="909.2" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.15%)</title><rect x="907.8" y="787.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.8" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="909.1" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="912.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="909.1" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.1" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.04%)</title><rect x="909.6" y="883.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.6" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.04%)</title><rect x="909.6" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.6" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (2 samples, 0.04%)</title><rect x="909.6" y="851.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="912.6" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="909.6" y="835.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="912.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="909.6" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="912.6" y="830.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="909.6" y="803.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="912.6" y="814.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="909.8" y="803.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="912.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (201 samples, 4.37%)</title><rect x="910.1" y="883.0" width="51.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.1" y="894.0">sun/n..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (188 samples, 4.09%)</title><rect x="912.9" y="867.0" width="48.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.9" y="878.0">java..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.04%)</title><rect x="913.4" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.4" y="862.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (7 samples, 0.15%)</title><rect x="913.9" y="851.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="916.9" y="862.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedExceptionAction_2 (172 samples, 3.74%)</title><rect x="915.7" y="851.0" width="44.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="918.7" y="862.0">Java..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (3 samples, 0.07%)</title><rect x="916.8" y="835.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="919.8" y="846.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.02%)</title><rect x="917.5" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="920.5" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (7 samples, 0.15%)</title><rect x="917.8" y="835.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="920.8" y="846.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (148 samples, 3.22%)</title><rect x="919.6" y="835.0" width="38.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="922.6" y="846.0">JVM..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;5292116ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)0, 5292116ull&gt;::oop_access_barrier(void*, oopDesc*) (3 samples, 0.07%)</title><rect x="922.9" y="819.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="925.9" y="830.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.02%)</title><rect x="923.7" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="926.7" y="830.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (2 samples, 0.04%)</title><rect x="924.0" y="819.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="927.0" y="830.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="924.5" y="819.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="927.5" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (6 samples, 0.13%)</title><rect x="924.7" y="819.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="927.7" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.224] (5 samples, 0.11%)</title><rect x="925.0" y="803.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="928.0" y="814.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.04%)</title><rect x="926.3" y="819.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="929.3" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;5292116ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)0, 5292116ull&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="926.5" y="803.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="929.5" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (40 samples, 0.87%)</title><rect x="926.8" y="819.0" width="10.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="929.8" y="830.0"></text>
</g>
<g>
<title>.L409 (17 samples, 0.37%)</title><rect x="926.8" y="803.0" width="4.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="929.8" y="814.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="927.0" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="930.0" y="798.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.02%)</title><rect x="927.3" y="787.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="930.3" y="798.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (6 samples, 0.13%)</title><rect x="927.5" y="787.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="930.5" y="798.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.11%)</title><rect x="929.1" y="787.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="932.1" y="798.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.04%)</title><rect x="929.6" y="771.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="932.6" y="782.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.02%)</title><rect x="930.1" y="771.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="933.1" y="782.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (2 samples, 0.04%)</title><rect x="930.4" y="787.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="933.4" y="798.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.02%)</title><rect x="930.9" y="787.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="933.9" y="798.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="931.1" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="934.1" y="814.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.04%)</title><rect x="931.4" y="803.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="934.4" y="814.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.02%)</title><rect x="931.9" y="803.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="934.9" y="814.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.07%)</title><rect x="932.2" y="803.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="935.2" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (13 samples, 0.28%)</title><rect x="932.9" y="803.0" width="3.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="935.9" y="814.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (7 samples, 0.15%)</title><rect x="934.0" y="787.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="937.0" y="798.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.04%)</title><rect x="935.8" y="787.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="938.8" y="798.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="936.0" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="939.0" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="936.0" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="939.0" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="936.0" y="739.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="939.0" y="750.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (3 samples, 0.07%)</title><rect x="936.3" y="803.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="939.3" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="937.1" y="819.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="940.1" y="830.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="937.1" y="803.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="940.1" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="937.1" y="787.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="940.1" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="937.1" y="771.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.1" y="782.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="937.3" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="940.3" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.04%)</title><rect x="937.6" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="940.6" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.04%)</title><rect x="938.1" y="819.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="941.1" y="830.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.02%)</title><rect x="938.6" y="819.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="941.6" y="830.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="938.8" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="941.8" y="830.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (4 samples, 0.09%)</title><rect x="939.1" y="819.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="942.1" y="830.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="940.1" y="819.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="943.1" y="830.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="940.4" y="819.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="943.4" y="830.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.04%)</title><rect x="940.6" y="819.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="943.6" y="830.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="940.9" y="803.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="943.9" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="940.9" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="943.9" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="940.9" y="771.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="943.9" y="782.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.02%)</title><rect x="941.2" y="819.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="944.2" y="830.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="941.4" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="944.4" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="941.4" y="803.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="944.4" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="941.4" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="944.4" y="798.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (26 samples, 0.57%)</title><rect x="941.7" y="819.0" width="6.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="944.7" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="942.7" y="803.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="945.7" y="814.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.04%)</title><rect x="943.2" y="803.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="946.2" y="814.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (14 samples, 0.30%)</title><rect x="943.7" y="803.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="946.7" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.09%)</title><rect x="944.5" y="787.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="947.5" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="945.3" y="771.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="948.3" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.11%)</title><rect x="945.5" y="787.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="948.5" y="798.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.04%)</title><rect x="946.8" y="787.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="949.8" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="947.3" y="803.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="950.3" y="814.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (3 samples, 0.07%)</title><rect x="947.6" y="803.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="950.6" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (36 samples, 0.78%)</title><rect x="948.4" y="819.0" width="9.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="951.4" y="830.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.04%)</title><rect x="950.1" y="803.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="953.1" y="814.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (10 samples, 0.22%)</title><rect x="950.7" y="803.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="953.7" y="814.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (4 samples, 0.09%)</title><rect x="952.2" y="787.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="955.2" y="798.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (4 samples, 0.09%)</title><rect x="953.2" y="803.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="956.2" y="814.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (2 samples, 0.04%)</title><rect x="954.3" y="803.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="957.3" y="814.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (11 samples, 0.24%)</title><rect x="954.8" y="803.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="957.8" y="814.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (3 samples, 0.07%)</title><rect x="955.0" y="787.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="958.0" y="798.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (7 samples, 0.15%)</title><rect x="955.8" y="787.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="958.8" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.13%)</title><rect x="955.8" y="771.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="958.8" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.11%)</title><rect x="956.1" y="755.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="959.1" y="766.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="957.3" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="960.3" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="957.6" y="835.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="960.6" y="846.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.02%)</title><rect x="957.9" y="835.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="960.9" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.186] (3 samples, 0.07%)</title><rect x="958.1" y="835.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="961.1" y="846.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.04%)</title><rect x="958.9" y="835.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="961.9" y="846.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="959.1" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="962.1" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="959.1" y="803.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="962.1" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="959.1" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="962.1" y="798.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.02%)</title><rect x="959.4" y="835.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="962.4" y="846.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.02%)</title><rect x="959.6" y="835.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="962.6" y="846.0"></text>
</g>
<g>
<title>call_stub (4 samples, 0.09%)</title><rect x="959.9" y="851.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="962.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (1 samples, 0.02%)</title><rect x="960.9" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (1 samples, 0.02%)</title><rect x="960.9" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="963.9" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.newOutputStream (1 samples, 0.02%)</title><rect x="960.9" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="963.9" y="830.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.04%)</title><rect x="961.2" y="867.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="964.2" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="961.2" y="851.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="964.2" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="961.2" y="835.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="964.2" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="961.4" y="819.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="964.4" y="830.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="961.4" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="964.4" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="961.4" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="964.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.socket (1 samples, 0.02%)</title><rect x="961.7" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.7" y="894.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.02%)</title><rect x="962.0" y="899.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.0" y="910.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (3 samples, 0.07%)</title><rect x="962.2" y="899.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.2" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (2 samples, 0.04%)</title><rect x="962.5" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.5" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (2 samples, 0.04%)</title><rect x="962.5" y="867.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="965.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/RocksDAO.getWithTimestamp (538 samples, 11.71%)</title><rect x="963.0" y="947.0" width="138.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="966.0" y="958.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (538 samples, 11.71%)</title><rect x="963.0" y="931.0" width="138.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.0" y="942.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (514 samples, 11.19%)</title><rect x="968.9" y="915.0" width="132.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.9" y="926.0">org/rocksdb/Rock..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="969.2" y="899.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="972.2" y="910.0"></text>
</g>
<g>
<title>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.02%)</title><rect x="969.4" y="899.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="972.4" y="910.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (473 samples, 10.29%)</title><rect x="969.7" y="899.0" width="121.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="972.7" y="910.0">Java_org_rocksd..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.04%)</title><rect x="970.9" y="883.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="973.9" y="894.0"></text>
</g>
<g>
<title>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.04%)</title><rect x="971.5" y="883.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="974.5" y="894.0"></text>
</g>
<g>
<title>free (3 samples, 0.07%)</title><rect x="972.0" y="883.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="975.0" y="894.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.11%)</title><rect x="972.7" y="883.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="975.7" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.11%)</title><rect x="974.0" y="883.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="977.0" y="894.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.07%)</title><rect x="975.3" y="883.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="978.3" y="894.0"></text>
</g>
<g>
<title>operator delete(void*) (7 samples, 0.15%)</title><rect x="976.1" y="883.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="979.1" y="894.0"></text>
</g>
<g>
<title>operator new(unsigned int) (2 samples, 0.04%)</title><rect x="977.9" y="883.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="980.9" y="894.0"></text>
</g>
<g>
<title>operator new[](unsigned int) (3 samples, 0.07%)</title><rect x="978.4" y="883.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="981.4" y="894.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (5 samples, 0.11%)</title><rect x="979.2" y="883.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="982.2" y="894.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned int) (2 samples, 0.04%)</title><rect x="980.5" y="883.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="983.5" y="894.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="980.7" y="867.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="983.7" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="980.7" y="851.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="983.7" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="980.7" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="983.7" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="980.7" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="983.7" y="830.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="980.7" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="983.7" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="980.7" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="983.7" y="798.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (425 samples, 9.25%)</title><rect x="981.0" y="883.0" width="109.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="984.0" y="894.0">rocksdb_get_h..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="982.0" y="867.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="985.0" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="982.5" y="867.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="985.5" y="878.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.04%)</title><rect x="983.0" y="867.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="986.0" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="983.5" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="986.5" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.158] (6 samples, 0.13%)</title><rect x="983.8" y="867.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="986.8" y="878.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="985.3" y="867.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="988.3" y="878.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.09%)</title><rect x="985.6" y="867.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="988.6" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.158] (1 samples, 0.02%)</title><rect x="985.6" y="851.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="988.6" y="862.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (3 samples, 0.07%)</title><rect x="985.8" y="851.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="988.8" y="862.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (23 samples, 0.50%)</title><rect x="986.6" y="867.0" width="5.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="989.6" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.07%)</title><rect x="987.1" y="851.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="990.1" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="987.9" y="851.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.9" y="862.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="987.9" y="835.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="990.9" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="987.9" y="819.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="990.9" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="987.9" y="803.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="990.9" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="988.2" y="851.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="991.2" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.158] (1 samples, 0.02%)</title><rect x="988.4" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="991.4" y="862.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="988.7" y="851.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="991.7" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (12 samples, 0.26%)</title><rect x="988.9" y="851.0" width="3.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="991.9" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.11%)</title><rect x="990.7" y="835.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="993.7" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned int) (2 samples, 0.04%)</title><rect x="992.0" y="851.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="995.0" y="862.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="992.5" y="867.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="995.5" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="992.8" y="867.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="995.8" y="878.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="993.0" y="867.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="996.0" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="993.0" y="851.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="996.0" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="993.0" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="996.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (347 samples, 7.55%)</title><rect x="993.3" y="867.0" width="89.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="996.3" y="878.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.04%)</title><rect x="993.3" y="851.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="996.3" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (341 samples, 7.42%)</title><rect x="993.8" y="851.0" width="87.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="996.8" y="862.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (338 samples, 7.36%)</title><rect x="994.1" y="835.0" width="86.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="997.1" y="846.0">rocksdb::D..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.07%)</title><rect x="994.3" y="819.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="997.3" y="830.0"></text>
</g>
<g>
<title>___tls_get_addr (4 samples, 0.09%)</title><rect x="995.1" y="819.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="998.1" y="830.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="995.9" y="803.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="998.9" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="995.9" y="787.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="998.9" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="995.9" y="771.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="998.9" y="782.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="996.1" y="819.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="999.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (3 samples, 0.07%)</title><rect x="996.6" y="819.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="999.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (7 samples, 0.15%)</title><rect x="997.4" y="819.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1000.4" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="998.9" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1001.9" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="998.9" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1001.9" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="998.9" y="771.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1001.9" y="782.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="998.9" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1001.9" y="766.0"></text>
</g>
<g>
<title>call_on_stack (1 samples, 0.02%)</title><rect x="998.9" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1001.9" y="750.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="998.9" y="723.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1001.9" y="734.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="998.9" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1001.9" y="718.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="998.9" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1001.9" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="998.9" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1001.9" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.02%)</title><rect x="998.9" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1001.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (300 samples, 6.53%)</title><rect x="999.2" y="819.0" width="77.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1002.2" y="830.0">rocksdb::..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (9 samples, 0.20%)</title><rect x="1003.6" y="803.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1006.6" y="814.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (6 samples, 0.13%)</title><rect x="1005.9" y="803.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1008.9" y="814.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (7 samples, 0.15%)</title><rect x="1007.4" y="803.0" width="1.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1010.4" y="814.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="1009.2" y="803.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1012.2" y="814.0"></text>
</g>
<g>
<title>___tls_get_addr (6 samples, 0.13%)</title><rect x="1009.7" y="803.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1012.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (5 samples, 0.11%)</title><rect x="1011.3" y="803.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1014.3" y="814.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="1012.3" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1015.3" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1012.3" y="771.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1015.3" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1012.3" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1015.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (8 samples, 0.17%)</title><rect x="1012.6" y="803.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1015.6" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (29 samples, 0.63%)</title><rect x="1014.6" y="803.0" width="7.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1017.6" y="814.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (24 samples, 0.52%)</title><rect x="1014.9" y="787.0" width="6.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1017.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (6 samples, 0.13%)</title><rect x="1015.4" y="771.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1018.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.07%)</title><rect x="1016.9" y="771.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1019.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (13 samples, 0.28%)</title><rect x="1017.7" y="771.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1020.7" y="782.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1017.7" y="755.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1020.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="1017.9" y="755.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1020.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (3 samples, 0.07%)</title><rect x="1018.2" y="755.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1021.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (8 samples, 0.17%)</title><rect x="1019.0" y="755.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1022.0" y="766.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (1 samples, 0.02%)</title><rect x="1020.3" y="739.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1023.3" y="750.0"></text>
</g>
<g>
<title>___tls_get_addr (1 samples, 0.02%)</title><rect x="1020.5" y="739.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1023.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="1020.8" y="739.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1023.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (4 samples, 0.09%)</title><rect x="1021.0" y="787.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1024.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.09%)</title><rect x="1022.1" y="803.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1025.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.07%)</title><rect x="1022.1" y="787.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1025.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.02%)</title><rect x="1022.3" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1025.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.02%)</title><rect x="1022.3" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1025.3" y="766.0"></text>
</g>
<g>
<title>___tls_get_addr (1 samples, 0.02%)</title><rect x="1022.3" y="739.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1025.3" y="750.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="1022.3" y="723.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1025.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1022.3" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1025.3" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1022.3" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1025.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.02%)</title><rect x="1022.6" y="771.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1025.6" y="782.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.02%)</title><rect x="1022.8" y="787.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1025.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.09%)</title><rect x="1023.1" y="803.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1026.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long long*, rocksdb::Env*, unsigned long long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (1 samples, 0.02%)</title><rect x="1024.1" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1027.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long long) (1 samples, 0.02%)</title><rect x="1024.4" y="803.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1027.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (180 samples, 3.92%)</title><rect x="1024.6" y="803.0" width="46.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1027.6" y="814.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (167 samples, 3.63%)</title><rect x="1026.7" y="787.0" width="42.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1029.7" y="798.0">/tmp..</text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (8 samples, 0.17%)</title><rect x="1027.2" y="771.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1030.2" y="782.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (1 samples, 0.02%)</title><rect x="1029.0" y="755.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1032.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (143 samples, 3.11%)</title><rect x="1029.2" y="771.0" width="36.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1032.2" y="782.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (8 samples, 0.17%)</title><rect x="1047.7" y="755.0" width="2.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1050.7" y="766.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="1049.8" y="755.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1052.8" y="766.0"></text>
</g>
<g>
<title>___tls_get_addr (7 samples, 0.15%)</title><rect x="1050.0" y="755.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1053.0" y="766.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="1051.8" y="755.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1054.8" y="766.0"></text>
</g>
<g>
<title>resume_userspace (3 samples, 0.07%)</title><rect x="1052.4" y="755.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1055.4" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.07%)</title><rect x="1052.4" y="739.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1055.4" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="1052.4" y="723.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1055.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (48 samples, 1.04%)</title><rect x="1053.1" y="755.0" width="12.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1056.1" y="766.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (22 samples, 0.48%)</title><rect x="1056.2" y="739.0" width="5.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1059.2" y="750.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (8 samples, 0.17%)</title><rect x="1061.9" y="739.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1064.9" y="750.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="1063.9" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1066.9" y="750.0"></text>
</g>
<g>
<title>___tls_get_addr (1 samples, 0.02%)</title><rect x="1064.4" y="739.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1067.4" y="750.0"></text>
</g>
<g>
<title>_init (3 samples, 0.07%)</title><rect x="1064.7" y="739.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1067.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTableRep::KeyComparator::decode_key(char const*) const (2 samples, 0.04%)</title><rect x="1065.5" y="755.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1068.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.11%)</title><rect x="1066.0" y="771.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1069.0" y="782.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="1067.0" y="755.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1070.0" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1067.0" y="739.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.0" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1067.0" y="723.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1070.0" y="734.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1067.0" y="707.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1070.0" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1067.0" y="691.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1070.0" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1067.0" y="675.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1070.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTableRep::KeyComparator::decode_key(char const*) const (1 samples, 0.02%)</title><rect x="1067.2" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1070.2" y="782.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned int, unsigned int, char const*, unsigned int) (4 samples, 0.09%)</title><rect x="1067.5" y="771.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1070.5" y="782.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned int) (4 samples, 0.09%)</title><rect x="1068.5" y="771.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1071.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.02%)</title><rect x="1069.6" y="787.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1072.6" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long long) (4 samples, 0.09%)</title><rect x="1069.8" y="787.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1072.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long long) (6 samples, 0.13%)</title><rect x="1070.8" y="803.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1073.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.04%)</title><rect x="1072.4" y="803.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1075.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.04%)</title><rect x="1072.4" y="787.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1075.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.02%)</title><rect x="1072.9" y="803.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1075.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long long, rocksdb::ValueType) (5 samples, 0.11%)</title><rect x="1073.2" y="803.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1076.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="1074.4" y="803.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1077.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.02%)</title><rect x="1074.7" y="803.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1077.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*) (5 samples, 0.11%)</title><rect x="1075.0" y="803.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1078.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.04%)</title><rect x="1075.5" y="787.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1078.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long long*, rocksdb::Env*, unsigned long long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (1 samples, 0.02%)</title><rect x="1076.0" y="787.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1079.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.04%)</title><rect x="1076.2" y="819.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1079.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (7 samples, 0.15%)</title><rect x="1076.8" y="819.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1079.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (7 samples, 0.15%)</title><rect x="1078.5" y="819.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1081.5" y="830.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="1080.1" y="803.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1083.1" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1080.1" y="787.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1083.1" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1080.1" y="771.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1083.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*) (2 samples, 0.04%)</title><rect x="1080.3" y="819.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1083.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (2 samples, 0.04%)</title><rect x="1080.9" y="835.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1083.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (4 samples, 0.09%)</title><rect x="1081.4" y="851.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1084.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.07%)</title><rect x="1082.4" y="867.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1085.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned int) (26 samples, 0.57%)</title><rect x="1083.2" y="867.0" width="6.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1086.2" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1083.2" y="851.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1086.2" y="862.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="1083.4" y="851.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1086.4" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="1083.7" y="851.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1086.7" y="862.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="1083.9" y="851.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1086.9" y="862.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="1084.2" y="835.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1087.2" y="846.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="1084.2" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1087.2" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1084.2" y="803.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1087.2" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1084.2" y="787.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1087.2" y="798.0"></text>
</g>
<g>
<title>jni_NewByteArray (20 samples, 0.44%)</title><rect x="1084.5" y="851.0" width="5.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1087.5" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.09%)</title><rect x="1085.2" y="835.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1088.2" y="846.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.04%)</title><rect x="1086.3" y="835.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1089.3" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;5292116ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)0, 5292116ull&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="1086.5" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1089.5" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.24%)</title><rect x="1086.8" y="835.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1089.8" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.13%)</title><rect x="1087.8" y="819.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1090.8" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.13%)</title><rect x="1087.8" y="803.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1090.8" y="814.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="1088.6" y="787.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1091.6" y="798.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="1088.6" y="771.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1091.6" y="782.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="1088.8" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1091.8" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.02%)</title><rect x="1089.1" y="787.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1092.1" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1089.3" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1092.3" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="1089.6" y="851.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1092.6" y="862.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned int) (1 samples, 0.02%)</title><rect x="1089.8" y="867.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1092.8" y="878.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.02%)</title><rect x="1090.1" y="883.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1093.1" y="894.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_dispose(std::allocator&lt;char&gt; const&amp;) (3 samples, 0.07%)</title><rect x="1090.4" y="883.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1093.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="1091.1" y="899.0" width="2.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1094.1" y="910.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.02%)</title><rect x="1091.1" y="883.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1094.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1091.4" y="883.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1094.4" y="894.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.02%)</title><rect x="1091.4" y="867.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1094.4" y="878.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.02%)</title><rect x="1091.6" y="883.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1094.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (1 samples, 0.02%)</title><rect x="1091.6" y="867.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1094.6" y="878.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (1 samples, 0.02%)</title><rect x="1091.6" y="851.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1094.6" y="862.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="1091.6" y="835.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1094.6" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1091.6" y="819.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1094.6" y="830.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="1091.6" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1094.6" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="1091.6" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1094.6" y="798.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1091.6" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1094.6" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1091.6" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1094.6" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1091.6" y="739.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1094.6" y="750.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.07%)</title><rect x="1091.9" y="883.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1094.9" y="894.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned int, unsigned int, unsigned int) (3 samples, 0.07%)</title><rect x="1092.7" y="883.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1095.7" y="894.0"></text>
</g>
<g>
<title>_init (6 samples, 0.13%)</title><rect x="1093.4" y="899.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1096.4" y="910.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.09%)</title><rect x="1095.0" y="899.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1098.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (11 samples, 0.24%)</title><rect x="1096.0" y="899.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1099.0" y="910.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (3 samples, 0.07%)</title><rect x="1098.8" y="899.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1101.8" y="910.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned int, unsigned int, unsigned int) (3 samples, 0.07%)</title><rect x="1099.6" y="899.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1102.6" y="910.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.04%)</title><rect x="1100.4" y="899.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1103.4" y="910.0"></text>
</g>
<g>
<title>resume_userspace (1 samples, 0.02%)</title><rect x="1100.9" y="915.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1103.9" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1100.9" y="899.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1103.9" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1100.9" y="883.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1103.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Bridges.getBridgeTo (8 samples, 0.17%)</title><rect x="1101.1" y="947.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.1" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.17%)</title><rect x="1101.1" y="931.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.1" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.17%)</title><rect x="1101.1" y="915.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1104.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Coordinator.response (9 samples, 0.20%)</title><rect x="1103.2" y="963.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/DataWithTimestamp.merge (7 samples, 0.15%)</title><rect x="1103.7" y="947.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.7" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (7 samples, 0.15%)</title><rect x="1103.7" y="931.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1106.7" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (7 samples, 0.15%)</title><rect x="1103.7" y="915.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1106.7" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.15%)</title><rect x="1103.7" y="899.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.7" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (7 samples, 0.15%)</title><rect x="1103.7" y="883.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1106.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.15%)</title><rect x="1103.7" y="867.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.7" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.07%)</title><rect x="1103.7" y="851.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.7" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.07%)</title><rect x="1103.7" y="835.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.7" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.07%)</title><rect x="1103.7" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1106.7" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (3 samples, 0.07%)</title><rect x="1103.7" y="803.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.7" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.09%)</title><rect x="1104.5" y="851.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1107.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Coordinator.upsert (3 samples, 0.07%)</title><rect x="1105.5" y="979.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1108.5" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.07%)</title><rect x="1105.5" y="963.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1108.5" y="974.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (16 samples, 0.35%)</title><rect x="1106.3" y="1027.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1109.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.35%)</title><rect x="1106.3" y="1011.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1109.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (16 samples, 0.35%)</title><rect x="1106.3" y="995.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1109.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.04%)</title><rect x="1110.4" y="1059.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="1110.4" y="1043.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1113.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="1110.4" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.20%)</title><rect x="1110.9" y="1059.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1113.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.20%)</title><rect x="1110.9" y="1043.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.20%)</title><rect x="1110.9" y="1027.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1113.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.15%)</title><rect x="1113.2" y="1059.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1116.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.15%)</title><rect x="1113.2" y="1043.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1116.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (193 samples, 4.20%)</title><rect x="1126.8" y="1075.0" width="49.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.8" y="1086.0">one/n..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (190 samples, 4.13%)</title><rect x="1127.3" y="1059.0" width="48.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.3" y="1070.0">one/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.22%)</title><rect x="1127.3" y="1043.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.3" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.15%)</title><rect x="1128.1" y="1027.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.1" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.15%)</title><rect x="1128.1" y="1011.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1131.1" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.15%)</title><rect x="1128.1" y="995.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.1" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.15%)</title><rect x="1128.1" y="979.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.1" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.15%)</title><rect x="1128.1" y="963.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.1" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (180 samples, 3.92%)</title><rect x="1129.9" y="1043.0" width="46.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1132.9" y="1054.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (168 samples, 3.66%)</title><rect x="1129.9" y="1027.0" width="43.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.9" y="1038.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (164 samples, 3.57%)</title><rect x="1130.9" y="1011.0" width="42.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.9" y="1022.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (156 samples, 3.39%)</title><rect x="1130.9" y="995.0" width="40.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.9" y="1006.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (156 samples, 3.39%)</title><rect x="1130.9" y="979.0" width="40.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.9" y="990.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (148 samples, 3.22%)</title><rect x="1133.0" y="963.0" width="38.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.0" y="974.0">sun..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.07%)</title><rect x="1135.6" y="947.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1138.6" y="958.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (3 samples, 0.07%)</title><rect x="1136.3" y="947.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1139.3" y="958.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="1136.8" y="931.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1139.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="1137.1" y="947.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1140.1" y="958.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.07%)</title><rect x="1137.1" y="931.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1140.1" y="942.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.07%)</title><rect x="1137.1" y="915.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1140.1" y="926.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.07%)</title><rect x="1137.1" y="899.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1140.1" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (119 samples, 2.59%)</title><rect x="1137.9" y="947.0" width="30.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1140.9" y="958.0">__..</text>
</g>
<g>
<title>entry_SYSENTER_32 (116 samples, 2.52%)</title><rect x="1138.6" y="931.0" width="29.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1141.6" y="942.0">en..</text>
</g>
<g>
<title>do_fast_syscall_32 (116 samples, 2.52%)</title><rect x="1138.6" y="915.0" width="29.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1141.6" y="926.0">do..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="1138.9" y="899.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1141.9" y="910.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="1139.2" y="899.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1142.2" y="910.0"></text>
</g>
<g>
<title>sys_read (113 samples, 2.46%)</title><rect x="1139.4" y="899.0" width="29.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1142.4" y="910.0">sy..</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.11%)</title><rect x="1139.7" y="883.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1142.7" y="894.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.11%)</title><rect x="1139.7" y="867.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1142.7" y="878.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.11%)</title><rect x="1139.7" y="851.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1142.7" y="862.0"></text>
</g>
<g>
<title>vfs_read (107 samples, 2.33%)</title><rect x="1141.0" y="883.0" width="27.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1144.0" y="894.0">v..</text>
</g>
<g>
<title>__vfs_read (76 samples, 1.65%)</title><rect x="1141.2" y="867.0" width="19.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1144.2" y="878.0"></text>
</g>
<g>
<title>new_sync_read (76 samples, 1.65%)</title><rect x="1141.2" y="851.0" width="19.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1144.2" y="862.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.04%)</title><rect x="1141.7" y="835.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1144.7" y="846.0"></text>
</g>
<g>
<title>sock_read_iter (72 samples, 1.57%)</title><rect x="1142.2" y="835.0" width="18.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1145.2" y="846.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_edi (1 samples, 0.02%)</title><rect x="1143.0" y="819.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1146.0" y="830.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.02%)</title><rect x="1143.3" y="819.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1146.3" y="830.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1143.5" y="819.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.5" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (66 samples, 1.44%)</title><rect x="1143.8" y="819.0" width="16.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1146.8" y="830.0"></text>
</g>
<g>
<title>inet_recvmsg (60 samples, 1.31%)</title><rect x="1143.8" y="803.0" width="15.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1146.8" y="814.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1144.3" y="787.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1147.3" y="798.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="1144.5" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1147.5" y="798.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="1144.8" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1147.8" y="798.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="1145.1" y="787.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1148.1" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (54 samples, 1.18%)</title><rect x="1145.3" y="787.0" width="13.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1148.3" y="798.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.26%)</title><rect x="1147.9" y="771.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1150.9" y="782.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.07%)</title><rect x="1147.9" y="755.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.9" y="766.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.15%)</title><rect x="1148.7" y="755.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1151.7" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_edx (1 samples, 0.02%)</title><rect x="1148.7" y="739.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1151.7" y="750.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.09%)</title><rect x="1148.9" y="739.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1151.9" y="750.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="1149.9" y="739.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1152.9" y="750.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="1150.2" y="723.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.2" y="734.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1150.5" y="755.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1153.5" y="766.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1150.7" y="755.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1153.7" y="766.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="1151.0" y="771.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1154.0" y="782.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.15%)</title><rect x="1151.5" y="771.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1154.5" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.15%)</title><rect x="1151.5" y="755.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1154.5" y="766.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (2 samples, 0.04%)</title><rect x="1152.8" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1155.8" y="750.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.07%)</title><rect x="1153.3" y="771.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1156.3" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1153.3" y="755.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1156.3" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="1153.5" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1156.5" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1153.5" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.5" y="750.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1153.8" y="755.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1156.8" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (16 samples, 0.35%)</title><rect x="1154.0" y="771.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1157.0" y="782.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="1154.0" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1157.0" y="766.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.11%)</title><rect x="1154.3" y="755.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1157.3" y="766.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="1154.8" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.8" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="1155.1" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1158.1" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1155.6" y="755.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.6" y="766.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.20%)</title><rect x="1155.8" y="755.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1158.8" y="766.0"></text>
</g>
<g>
<title>copyout (8 samples, 0.17%)</title><rect x="1156.1" y="739.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1159.1" y="750.0"></text>
</g>
<g>
<title>__copy_user_ll (6 samples, 0.13%)</title><rect x="1156.6" y="723.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1159.6" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.07%)</title><rect x="1158.2" y="771.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1161.2" y="782.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="1158.9" y="771.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1161.9" y="782.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1158.9" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1161.9" y="766.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="1158.9" y="739.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1161.9" y="750.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.02%)</title><rect x="1158.9" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1161.9" y="734.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="1158.9" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1161.9" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.09%)</title><rect x="1159.2" y="803.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1162.2" y="814.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1159.4" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1162.4" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.04%)</title><rect x="1159.7" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.7" y="798.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="1159.7" y="771.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1162.7" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="1159.7" y="755.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1162.7" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm (2 samples, 0.04%)</title><rect x="1159.7" y="739.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1162.7" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.04%)</title><rect x="1160.2" y="803.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1163.2" y="814.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.02%)</title><rect x="1160.7" y="867.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1163.7" y="878.0"></text>
</g>
<g>
<title>rw_verify_area (29 samples, 0.63%)</title><rect x="1161.0" y="867.0" width="7.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1164.0" y="878.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="1162.0" y="851.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1165.0" y="862.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="1162.3" y="851.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1165.3" y="862.0"></text>
</g>
<g>
<title>security_file_permission (23 samples, 0.50%)</title><rect x="1162.5" y="851.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1165.5" y="862.0"></text>
</g>
<g>
<title>apparmor_file_permission (9 samples, 0.20%)</title><rect x="1165.9" y="835.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1168.9" y="846.0"></text>
</g>
<g>
<title>common_file_perm (9 samples, 0.20%)</title><rect x="1165.9" y="819.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1168.9" y="830.0"></text>
</g>
<g>
<title>aa_file_perm (4 samples, 0.09%)</title><rect x="1167.1" y="803.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1170.1" y="814.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="1168.2" y="835.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1171.2" y="846.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.02%)</title><rect x="1168.4" y="947.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1171.4" y="958.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.04%)</title><rect x="1168.7" y="947.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1171.7" y="958.0"></text>
</g>
<g>
<title>read (7 samples, 0.15%)</title><rect x="1169.2" y="947.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1172.2" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.17%)</title><rect x="1171.0" y="995.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1174.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.17%)</title><rect x="1171.0" y="979.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1174.0" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (8 samples, 0.17%)</title><rect x="1171.0" y="963.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.0" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (12 samples, 0.26%)</title><rect x="1173.1" y="1027.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.1" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.07%)</title><rect x="1175.4" y="1011.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1178.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.07%)</title><rect x="1175.4" y="995.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="1176.1" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1179.1" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (39 samples, 0.85%)</title><rect x="1176.4" y="1107.0" width="10.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="1176.9" y="1091.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1179.9" y="1102.0"></text>
</g>
<g>
<title>__kernel_vsyscall (9 samples, 0.20%)</title><rect x="1176.9" y="1075.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1179.9" y="1086.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (9 samples, 0.20%)</title><rect x="1176.9" y="1059.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1179.9" y="1070.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (9 samples, 0.20%)</title><rect x="1176.9" y="1043.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1179.9" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (26 samples, 0.57%)</title><rect x="1179.2" y="1091.0" width="6.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1182.2" y="1102.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (17 samples, 0.37%)</title><rect x="1181.5" y="1075.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1184.5" y="1086.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (14 samples, 0.30%)</title><rect x="1181.5" y="1059.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1184.5" y="1070.0"></text>
</g>
<g>
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="1182.3" y="1043.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1185.3" y="1054.0"></text>
</g>
<g>
<title>sys_gettimeofday (10 samples, 0.22%)</title><rect x="1182.6" y="1043.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1185.6" y="1054.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.04%)</title><rect x="1182.6" y="1027.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1185.6" y="1038.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.04%)</title><rect x="1182.6" y="1011.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1185.6" y="1022.0"></text>
</g>
<g>
<title>do_gettimeofday (8 samples, 0.17%)</title><rect x="1183.1" y="1027.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1186.1" y="1038.0"></text>
</g>
<g>
<title>__getnstimeofday64 (6 samples, 0.13%)</title><rect x="1183.3" y="1011.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.3" y="1022.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (5 samples, 0.11%)</title><rect x="1183.6" y="995.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1186.6" y="1006.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (5 samples, 0.11%)</title><rect x="1183.6" y="979.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.6" y="990.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.02%)</title><rect x="1184.9" y="1011.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1187.9" y="1022.0"></text>
</g>
<g>
<title>sys_gettimeofday (3 samples, 0.07%)</title><rect x="1185.1" y="1059.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1188.1" y="1070.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.04%)</title><rect x="1185.9" y="1091.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1188.9" y="1102.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (3 samples, 0.07%)</title><rect x="1186.4" y="1123.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.4" y="1134.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.02%)</title><rect x="1187.2" y="1123.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.2" y="1134.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="1187.2" y="1107.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Coordinator.get (1 samples, 0.02%)</title><rect x="1187.4" y="1123.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1190.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.02%)</title><rect x="1187.4" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.4" y="1118.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="1187.4" y="1091.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1190.4" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (3 samples, 0.07%)</title><rect x="1187.7" y="1123.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1190.7" y="1134.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.04%)</title><rect x="1187.7" y="1107.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.7" y="1118.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.02%)</title><rect x="1188.2" y="1107.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1191.2" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="1188.5" y="1123.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.5" y="1134.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="1188.5" y="1107.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.5" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.04%)</title><rect x="1188.7" y="1123.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.7" y="1134.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.04%)</title><rect x="1188.7" y="1107.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.7" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (3 samples, 0.07%)</title><rect x="1189.2" y="1123.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.2" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.02%)</title><rect x="1189.2" y="1107.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.2" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.02%)</title><rect x="1189.2" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.2" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.02%)</title><rect x="1189.2" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.2" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.02%)</title><rect x="1189.2" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.2" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="1189.2" y="1043.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.02%)</title><rect x="1189.2" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="1189.2" y="1011.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.2" y="1022.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.02%)</title><rect x="1189.2" y="995.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.2" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.04%)</title><rect x="1189.5" y="1107.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.5" y="1118.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.04%)</title><rect x="1189.5" y="1091.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.5" y="1102.0"></text>
</g>
</g>
</svg>
