<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1157"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1157"> </text>
<g id="frames">
<g>
<title>all (7,245 samples, 100.00%)</title><rect x="10.0" y="1123.0" width="1180.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="1134.0">all</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="10.0" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (3 samples, 0.04%)</title><rect x="10.3" y="1107.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.3" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (259 samples, 3.57%)</title><rect x="10.8" y="1107.0" width="42.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.8" y="1118.0">Opto..</text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.04%)</title><rect x="13.3" y="1091.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.3" y="1102.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (11 samples, 0.15%)</title><rect x="13.7" y="1091.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.7" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (8 samples, 0.11%)</title><rect x="14.1" y="1075.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.1" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.08%)</title><rect x="14.4" y="1059.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.4" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.07%)</title><rect x="14.4" y="1043.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.4" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.04%)</title><rect x="14.4" y="1027.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="17.4" y="1038.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.03%)</title><rect x="14.6" y="1011.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.6" y="1022.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="14.9" y="1027.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.9" y="1038.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (230 samples, 3.17%)</title><rect x="15.5" y="1091.0" width="37.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.5" y="1102.0">oop..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.11%)</title><rect x="16.0" y="1075.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="19.0" y="1086.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (219 samples, 3.02%)</title><rect x="17.3" y="1075.0" width="35.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="20.3" y="1086.0">Typ..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (200 samples, 2.76%)</title><rect x="19.3" y="1059.0" width="32.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="22.3" y="1070.0">Co..</text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (10 samples, 0.14%)</title><rect x="19.6" y="1043.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="22.6" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.03%)</title><rect x="21.2" y="1043.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="24.2" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (180 samples, 2.48%)</title><rect x="21.6" y="1043.0" width="29.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="24.6" y="1054.0">Me..</text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned int, Thread*) (7 samples, 0.10%)</title><rect x="24.3" y="1027.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="27.3" y="1038.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (3 samples, 0.04%)</title><rect x="25.0" y="1011.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="28.0" y="1022.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (2 samples, 0.03%)</title><rect x="25.5" y="1027.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="28.5" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (2 samples, 0.03%)</title><rect x="25.8" y="1027.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="28.8" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (53 samples, 0.73%)</title><rect x="26.1" y="1027.0" width="8.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.1" y="1038.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (6 samples, 0.08%)</title><rect x="26.3" y="1011.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="29.3" y="1022.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (14 samples, 0.19%)</title><rect x="27.3" y="1011.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="30.3" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (30 samples, 0.41%)</title><rect x="29.5" y="1011.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.5" y="1022.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (8 samples, 0.11%)</title><rect x="29.9" y="995.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.9" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (14 samples, 0.19%)</title><rect x="31.2" y="995.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="34.2" y="1006.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (4 samples, 0.06%)</title><rect x="32.8" y="979.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="35.8" y="990.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (4 samples, 0.06%)</title><rect x="33.5" y="995.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="36.5" y="1006.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.03%)</title><rect x="34.4" y="1011.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="37.4" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (2 samples, 0.03%)</title><rect x="34.9" y="1027.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="37.9" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (3 samples, 0.04%)</title><rect x="35.4" y="1027.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="38.4" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (20 samples, 0.28%)</title><rect x="35.9" y="1027.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="38.9" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (2 samples, 0.03%)</title><rect x="36.7" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="39.7" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (2 samples, 0.03%)</title><rect x="37.0" y="1011.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="40.0" y="1022.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (4 samples, 0.06%)</title><rect x="37.4" y="1011.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="40.4" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (6 samples, 0.08%)</title><rect x="38.0" y="1011.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="41.0" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (5 samples, 0.07%)</title><rect x="38.2" y="995.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="41.2" y="1006.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (3 samples, 0.04%)</title><rect x="38.5" y="979.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="41.5" y="990.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (64 samples, 0.88%)</title><rect x="39.2" y="1027.0" width="10.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="42.2" y="1038.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (4 samples, 0.06%)</title><rect x="49.6" y="1027.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="52.6" y="1038.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned int) (2 samples, 0.03%)</title><rect x="50.4" y="1027.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="53.4" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.08%)</title><rect x="50.9" y="1043.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="53.9" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.10%)</title><rect x="51.9" y="1059.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="54.9" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (22 samples, 0.30%)</title><rect x="53.0" y="1107.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="56.0" y="1118.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (19 samples, 0.26%)</title><rect x="53.5" y="1091.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="56.5" y="1102.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (18 samples, 0.25%)</title><rect x="53.6" y="1075.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="56.6" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (17 samples, 0.23%)</title><rect x="53.8" y="1059.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="56.8" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (17 samples, 0.23%)</title><rect x="53.8" y="1043.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="56.8" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (3 samples, 0.04%)</title><rect x="54.6" y="1027.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="57.6" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.11%)</title><rect x="55.1" y="1027.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="58.1" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (3 samples, 0.04%)</title><rect x="55.3" y="1011.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="58.3" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (2 samples, 0.03%)</title><rect x="55.8" y="1011.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="58.8" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (2 samples, 0.03%)</title><rect x="55.8" y="995.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="58.8" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (50 samples, 0.69%)</title><rect x="56.6" y="1107.0" width="8.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="59.6" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (39 samples, 0.54%)</title><rect x="57.2" y="1091.0" width="6.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="60.2" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (38 samples, 0.52%)</title><rect x="57.4" y="1075.0" width="6.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="60.4" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (37 samples, 0.51%)</title><rect x="57.4" y="1059.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="60.4" y="1070.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (5 samples, 0.07%)</title><rect x="58.0" y="1043.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="61.0" y="1054.0"></text>
</g>
<g>
<title>JfrAllocationTracer::~JfrAllocationTracer() (2 samples, 0.03%)</title><rect x="59.0" y="1043.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="62.0" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (15 samples, 0.21%)</title><rect x="59.3" y="1043.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="62.3" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (2 samples, 0.03%)</title><rect x="59.7" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="62.7" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (5 samples, 0.07%)</title><rect x="60.0" y="1027.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="63.0" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (3 samples, 0.04%)</title><rect x="60.2" y="1011.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="63.2" y="1022.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (2 samples, 0.03%)</title><rect x="60.3" y="995.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="63.3" y="1006.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (2 samples, 0.03%)</title><rect x="60.3" y="979.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="63.3" y="990.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (3 samples, 0.04%)</title><rect x="61.0" y="1027.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="64.0" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (2 samples, 0.03%)</title><rect x="61.0" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="64.0" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned int) (2 samples, 0.03%)</title><rect x="61.5" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="64.5" y="1038.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (5 samples, 0.07%)</title><rect x="61.8" y="1043.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="64.8" y="1054.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.03%)</title><rect x="62.6" y="1043.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="65.6" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (4 samples, 0.06%)</title><rect x="63.6" y="1091.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="66.6" y="1102.0"></text>
</g>
<g>
<title>Klass::class_loader() const (3 samples, 0.04%)</title><rect x="63.7" y="1075.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="66.7" y="1086.0"></text>
</g>
<g>
<title>Klass::class_loader() const (3 samples, 0.04%)</title><rect x="64.2" y="1091.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="67.2" y="1102.0"></text>
</g>
<g>
<title>[not_walkable_Java] (44 samples, 0.61%)</title><rect x="64.7" y="1107.0" width="7.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="67.7" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (13 samples, 0.18%)</title><rect x="64.9" y="1091.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="67.9" y="1102.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (7 samples, 0.10%)</title><rect x="64.9" y="1075.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="67.9" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (6 samples, 0.08%)</title><rect x="66.0" y="1075.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="69.0" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (19 samples, 0.26%)</title><rect x="67.0" y="1091.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="70.0" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (16 samples, 0.22%)</title><rect x="67.5" y="1075.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="70.5" y="1086.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.07%)</title><rect x="67.7" y="1059.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="70.7" y="1070.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="67.7" y="1043.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="70.7" y="1054.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="68.1" y="1043.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="71.1" y="1054.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (10 samples, 0.14%)</title><rect x="68.5" y="1059.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="71.5" y="1070.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (5 samples, 0.07%)</title><rect x="68.8" y="1043.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="71.8" y="1054.0"></text>
</g>
<g>
<title>CodeBlob::oop_map_for_return_address(unsigned char*) (3 samples, 0.04%)</title><rect x="68.8" y="1027.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="71.8" y="1038.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (3 samples, 0.04%)</title><rect x="68.8" y="1011.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="71.8" y="1022.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (2 samples, 0.03%)</title><rect x="69.3" y="1027.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="72.3" y="1038.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (3 samples, 0.04%)</title><rect x="69.6" y="1043.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="72.6" y="1054.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="69.6" y="1027.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="72.6" y="1038.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="69.6" y="1011.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="72.6" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.12%)</title><rect x="70.1" y="1091.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="73.1" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (7 samples, 0.10%)</title><rect x="70.4" y="1075.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="73.4" y="1086.0"></text>
</g>
<g>
<title>CardTableRS::is_in_young(oopDesc*) const (2 samples, 0.03%)</title><rect x="70.8" y="1059.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="73.8" y="1070.0"></text>
</g>
<g>
<title>GenCollectedHeap::is_in_young(oopDesc*) (3 samples, 0.04%)</title><rect x="71.1" y="1059.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="74.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.32%)</title><rect x="71.9" y="1107.0" width="3.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="74.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.06%)</title><rect x="72.1" y="1091.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="75.1" y="1102.0"></text>
</g>
<g>
<title>__vsnprintf_chk (2 samples, 0.03%)</title><rect x="72.4" y="1075.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="75.4" y="1086.0"></text>
</g>
<g>
<title>_IO_vfprintf (2 samples, 0.03%)</title><rect x="72.4" y="1059.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="75.4" y="1070.0"></text>
</g>
<g>
<title>__kernel_vsyscall (17 samples, 0.23%)</title><rect x="72.9" y="1091.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="75.9" y="1102.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (17 samples, 0.23%)</title><rect x="72.9" y="1075.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="75.9" y="1086.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (17 samples, 0.23%)</title><rect x="72.9" y="1059.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="75.9" y="1070.0"></text>
</g>
<g>
<title>sys_futex (17 samples, 0.23%)</title><rect x="72.9" y="1043.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="75.9" y="1054.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.23%)</title><rect x="72.9" y="1027.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="75.9" y="1038.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.06%)</title><rect x="73.0" y="1011.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="76.0" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.06%)</title><rect x="73.0" y="995.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.0" y="1006.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.06%)</title><rect x="73.0" y="979.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.0" y="990.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.06%)</title><rect x="73.0" y="963.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.0" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.06%)</title><rect x="73.0" y="947.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="76.0" y="958.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.17%)</title><rect x="73.7" y="1011.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="76.7" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.14%)</title><rect x="74.0" y="995.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="77.0" y="1006.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.14%)</title><rect x="74.0" y="979.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="77.0" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.14%)</title><rect x="74.0" y="963.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="77.0" y="974.0"></text>
</g>
<g>
<title>[unknown_Java] (257 samples, 3.55%)</title><rect x="75.6" y="1107.0" width="41.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="78.6" y="1118.0">[un..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.06%)</title><rect x="112.0" y="1091.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="115.0" y="1102.0"></text>
</g>
<g>
<title>Thread::current() (3 samples, 0.04%)</title><rect x="112.8" y="1091.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="115.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="113.3" y="1091.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="116.3" y="1102.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (3 samples, 0.04%)</title><rect x="113.3" y="1075.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="116.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="113.3" y="1059.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="116.3" y="1070.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.03%)</title><rect x="113.4" y="1043.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="116.4" y="1054.0"></text>
</g>
<g>
<title>Thread::current() (6 samples, 0.08%)</title><rect x="113.9" y="1075.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="116.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="114.9" y="1075.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="117.9" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="114.9" y="1059.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="117.9" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.03%)</title><rect x="115.4" y="1075.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="118.4" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="116.0" y="1091.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="119.0" y="1102.0"></text>
</g>
<g>
<title>resume_userspace (5 samples, 0.07%)</title><rect x="116.7" y="1091.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="119.7" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.07%)</title><rect x="116.7" y="1075.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="119.7" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.07%)</title><rect x="116.7" y="1059.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="119.7" y="1070.0"></text>
</g>
<g>
<title>clone (109 samples, 1.50%)</title><rect x="117.5" y="1107.0" width="17.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="120.5" y="1118.0"></text>
</g>
<g>
<title>start_thread (109 samples, 1.50%)</title><rect x="117.5" y="1091.0" width="17.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="120.5" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (109 samples, 1.50%)</title><rect x="117.5" y="1075.0" width="17.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="120.5" y="1086.0"></text>
</g>
<g>
<title>Thread::call_run() (109 samples, 1.50%)</title><rect x="117.5" y="1059.0" width="17.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="120.5" y="1070.0"></text>
</g>
<g>
<title>VMThread::run() (100 samples, 1.38%)</title><rect x="117.8" y="1043.0" width="16.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="120.8" y="1054.0"></text>
</g>
<g>
<title>VMThread::loop() (100 samples, 1.38%)</title><rect x="117.8" y="1027.0" width="16.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="120.8" y="1038.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.07%)</title><rect x="118.1" y="1011.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="121.1" y="1022.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (5 samples, 0.07%)</title><rect x="118.1" y="995.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="121.1" y="1006.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.04%)</title><rect x="118.3" y="979.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="121.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.04%)</title><rect x="118.3" y="963.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="121.3" y="974.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.04%)</title><rect x="118.3" y="947.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="121.3" y="958.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="118.3" y="931.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="121.3" y="942.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="118.3" y="915.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="121.3" y="926.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.04%)</title><rect x="118.3" y="899.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="121.3" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.04%)</title><rect x="118.3" y="883.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="121.3" y="894.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.03%)</title><rect x="118.3" y="867.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="121.3" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="118.3" y="851.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="121.3" y="862.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (46 samples, 0.63%)</title><rect x="119.0" y="1011.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="122.0" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (35 samples, 0.48%)</title><rect x="120.4" y="995.0" width="5.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="123.4" y="1006.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (35 samples, 0.48%)</title><rect x="120.4" y="979.0" width="5.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="123.4" y="990.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (35 samples, 0.48%)</title><rect x="120.4" y="963.0" width="5.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="123.4" y="974.0"></text>
</g>
<g>
<title>sys_mprotect (23 samples, 0.32%)</title><rect x="120.4" y="947.0" width="3.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="123.4" y="958.0"></text>
</g>
<g>
<title>mprotect_fixup (22 samples, 0.30%)</title><rect x="120.4" y="931.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="123.4" y="942.0"></text>
</g>
<g>
<title>change_protection (22 samples, 0.30%)</title><rect x="120.4" y="915.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="123.4" y="926.0"></text>
</g>
<g>
<title>change_protection_range (22 samples, 0.30%)</title><rect x="120.4" y="899.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="123.4" y="910.0"></text>
</g>
<g>
<title>__ptep_modify_prot_commit (4 samples, 0.06%)</title><rect x="120.6" y="883.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="123.6" y="894.0"></text>
</g>
<g>
<title>native_set_pte_at (4 samples, 0.06%)</title><rect x="120.6" y="867.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="123.6" y="878.0"></text>
</g>
<g>
<title>atomic64_xchg_cx8 (4 samples, 0.06%)</title><rect x="121.2" y="883.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="124.2" y="894.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (13 samples, 0.18%)</title><rect x="121.9" y="883.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="124.9" y="894.0"></text>
</g>
<g>
<title>native_flush_tlb_others (12 samples, 0.17%)</title><rect x="122.1" y="867.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="125.1" y="878.0"></text>
</g>
<g>
<title>smp_call_function_many (12 samples, 0.17%)</title><rect x="122.1" y="851.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="125.1" y="862.0"></text>
</g>
<g>
<title>smp_call_function_single (12 samples, 0.17%)</title><rect x="122.1" y="835.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="125.1" y="846.0"></text>
</g>
<g>
<title>sys_nanosleep (2 samples, 0.03%)</title><rect x="124.2" y="947.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="127.2" y="958.0"></text>
</g>
<g>
<title>hrtimer_nanosleep (2 samples, 0.03%)</title><rect x="124.2" y="931.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="127.2" y="942.0"></text>
</g>
<g>
<title>do_nanosleep (2 samples, 0.03%)</title><rect x="124.2" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="127.2" y="926.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="124.2" y="899.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="127.2" y="910.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="124.2" y="883.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="127.2" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="124.2" y="867.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="127.2" y="878.0"></text>
</g>
<g>
<title>sys_sched_yield (9 samples, 0.12%)</title><rect x="124.5" y="947.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="127.5" y="958.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.12%)</title><rect x="124.5" y="931.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="127.5" y="942.0"></text>
</g>
<g>
<title>__sched_text_start (9 samples, 0.12%)</title><rect x="124.5" y="915.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="127.5" y="926.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (15 samples, 0.21%)</title><rect x="126.5" y="1011.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="129.5" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (15 samples, 0.21%)</title><rect x="126.5" y="995.0" width="2.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="129.5" y="1006.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (15 samples, 0.21%)</title><rect x="126.5" y="979.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="129.5" y="990.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (15 samples, 0.21%)</title><rect x="126.5" y="963.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="129.5" y="974.0"></text>
</g>
<g>
<title>sys_mprotect (15 samples, 0.21%)</title><rect x="126.5" y="947.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="129.5" y="958.0"></text>
</g>
<g>
<title>mprotect_fixup (15 samples, 0.21%)</title><rect x="126.5" y="931.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="129.5" y="942.0"></text>
</g>
<g>
<title>change_protection (15 samples, 0.21%)</title><rect x="126.5" y="915.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="129.5" y="926.0"></text>
</g>
<g>
<title>change_protection_range (15 samples, 0.21%)</title><rect x="126.5" y="899.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="129.5" y="910.0"></text>
</g>
<g>
<title>atomic64_xchg_cx8 (3 samples, 0.04%)</title><rect x="126.6" y="883.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="129.6" y="894.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (11 samples, 0.15%)</title><rect x="127.1" y="883.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="130.1" y="894.0"></text>
</g>
<g>
<title>native_flush_tlb_others (10 samples, 0.14%)</title><rect x="127.3" y="867.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="130.3" y="878.0"></text>
</g>
<g>
<title>smp_call_function_many (10 samples, 0.14%)</title><rect x="127.3" y="851.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="130.3" y="862.0"></text>
</g>
<g>
<title>smp_call_function_single (10 samples, 0.14%)</title><rect x="127.3" y="835.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="130.3" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.61] (32 samples, 0.44%)</title><rect x="128.9" y="1011.0" width="5.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="131.9" y="1022.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (32 samples, 0.44%)</title><rect x="128.9" y="995.0" width="5.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="131.9" y="1006.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (32 samples, 0.44%)</title><rect x="128.9" y="979.0" width="5.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="131.9" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned int, bool) (32 samples, 0.44%)</title><rect x="128.9" y="963.0" width="5.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="131.9" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned int, bool, GenCollectedHeap::GenerationType) (32 samples, 0.44%)</title><rect x="128.9" y="947.0" width="5.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="131.9" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned int, bool, bool, bool, bool) (30 samples, 0.41%)</title><rect x="129.1" y="931.0" width="4.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="132.1" y="942.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned int, bool) (29 samples, 0.40%)</title><rect x="129.1" y="915.0" width="4.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="132.1" y="926.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (18 samples, 0.25%)</title><rect x="129.4" y="899.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="132.4" y="910.0"></text>
</g>
<g>
<title>CardGeneration::younger_refs_iterate(OopsInGenClosure*, unsigned int) (3 samples, 0.04%)</title><rect x="129.4" y="883.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="132.4" y="894.0"></text>
</g>
<g>
<title>CardTableRS::younger_refs_in_space_iterate(Space*, OopsInGenClosure*, unsigned int) (3 samples, 0.04%)</title><rect x="129.4" y="867.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="132.4" y="878.0"></text>
</g>
<g>
<title>ClearNoncleanCardWrapper::do_MemRegion(MemRegion) (3 samples, 0.04%)</title><rect x="129.4" y="851.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="132.4" y="862.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (3 samples, 0.04%)</title><rect x="129.4" y="835.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="132.4" y="846.0"></text>
</g>
<g>
<title>FilteringDCTOC::walk_mem_region(MemRegion, HeapWord*, HeapWord*) (2 samples, 0.03%)</title><rect x="129.5" y="819.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="132.5" y="830.0"></text>
</g>
<g>
<title>StringTable::oops_do(OopClosure*) (4 samples, 0.06%)</title><rect x="129.9" y="883.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="132.9" y="894.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(oopDesc**) (4 samples, 0.06%)</title><rect x="129.9" y="867.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="132.9" y="878.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (10 samples, 0.14%)</title><rect x="130.7" y="883.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="133.7" y="894.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (10 samples, 0.14%)</title><rect x="130.7" y="867.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="133.7" y="878.0"></text>
</g>
<g>
<title>MarkingCodeBlobClosure::do_code_blob(CodeBlob*) (2 samples, 0.03%)</title><rect x="131.0" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="134.0" y="862.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (2 samples, 0.03%)</title><rect x="131.0" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="134.0" y="846.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (3 samples, 0.04%)</title><rect x="131.5" y="851.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="134.5" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="132.0" y="851.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="135.0" y="862.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (2 samples, 0.03%)</title><rect x="132.0" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="135.0" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="132.0" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="135.0" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="132.0" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="135.0" y="814.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (5 samples, 0.07%)</title><rect x="132.6" y="899.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="135.6" y="910.0"></text>
</g>
<g>
<title>JvmtiExport::weak_oops_do(BoolObjectClosure*, OopClosure*) (4 samples, 0.06%)</title><rect x="132.8" y="883.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="135.8" y="894.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (4 samples, 0.06%)</title><rect x="132.8" y="867.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="135.8" y="878.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (4 samples, 0.06%)</title><rect x="132.8" y="851.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="135.8" y="862.0"></text>
</g>
<g>
<title>__divdi3 (2 samples, 0.03%)</title><rect x="133.5" y="899.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="136.5" y="910.0"></text>
</g>
<g>
<title>WatcherThread::run() (7 samples, 0.10%)</title><rect x="134.1" y="1043.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="137.1" y="1054.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (5 samples, 0.07%)</title><rect x="134.3" y="1027.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="137.3" y="1038.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.06%)</title><rect x="134.3" y="1011.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="137.3" y="1022.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (3 samples, 0.04%)</title><rect x="134.3" y="995.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="137.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3 samples, 0.04%)</title><rect x="135.4" y="1107.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (3 samples, 0.04%)</title><rect x="135.4" y="1091.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.4" y="1102.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.03%)</title><rect x="135.4" y="1075.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="138.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (2 samples, 0.03%)</title><rect x="135.9" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.9" y="1118.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.03%)</title><rect x="135.9" y="1091.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="138.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,461 samples, 89.18%)</title><rect x="136.2" y="1107.0" width="1052.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.2" y="1118.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (687 samples, 9.48%)</title><rect x="141.3" y="1091.0" width="111.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.3" y="1102.0">one/nio/net/J..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (4 samples, 0.06%)</title><rect x="141.4" y="1075.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.4" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (4 samples, 0.06%)</title><rect x="141.4" y="1059.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.06%)</title><rect x="141.4" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.03%)</title><rect x="141.8" y="1027.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.8" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="141.8" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.8" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="141.8" y="995.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.8" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="141.8" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.8" y="990.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (59 samples, 0.81%)</title><rect x="142.1" y="1075.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.1" y="1086.0"></text>
</g>
<g>
<title>__clock_gettime (25 samples, 0.35%)</title><rect x="143.6" y="1059.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="146.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.06%)</title><rect x="143.6" y="1043.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="146.6" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.06%)</title><rect x="143.6" y="1027.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="146.6" y="1038.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="143.6" y="1011.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="146.6" y="1022.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="143.6" y="995.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="146.6" y="1006.0"></text>
</g>
<g>
<title>__kernel_vsyscall (18 samples, 0.25%)</title><rect x="144.2" y="1043.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="147.2" y="1054.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (18 samples, 0.25%)</title><rect x="144.2" y="1027.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="147.2" y="1038.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (15 samples, 0.21%)</title><rect x="144.2" y="1011.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="147.2" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="144.2" y="995.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="147.2" y="1006.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="144.2" y="979.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="147.2" y="990.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="144.2" y="963.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="147.2" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="144.2" y="947.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="147.2" y="958.0"></text>
</g>
<g>
<title>sys_clock_gettime (11 samples, 0.15%)</title><rect x="144.9" y="995.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="147.9" y="1006.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.03%)</title><rect x="145.2" y="979.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="148.2" y="990.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (4 samples, 0.06%)</title><rect x="145.5" y="979.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="148.5" y="990.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.04%)</title><rect x="145.5" y="963.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="148.5" y="974.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.03%)</title><rect x="145.7" y="947.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="148.7" y="958.0"></text>
</g>
<g>
<title>put_timespec64 (3 samples, 0.04%)</title><rect x="146.2" y="979.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="149.2" y="990.0"></text>
</g>
<g>
<title>_copy_to_user (3 samples, 0.04%)</title><rect x="146.2" y="963.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="149.2" y="974.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.03%)</title><rect x="146.3" y="947.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="149.3" y="958.0"></text>
</g>
<g>
<title>sys_clock_gettime (3 samples, 0.04%)</title><rect x="146.6" y="1011.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="149.6" y="1022.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.04%)</title><rect x="147.1" y="1043.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="150.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (23 samples, 0.32%)</title><rect x="148.0" y="1059.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.updateHead (13 samples, 0.18%)</title><rect x="149.6" y="1043.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (12 samples, 0.17%)</title><rect x="149.7" y="1027.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (4 samples, 0.06%)</title><rect x="151.0" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.0" y="1022.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (3 samples, 0.04%)</title><rect x="151.0" y="995.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.0" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (623 samples, 8.60%)</title><rect x="151.7" y="1075.0" width="101.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.7" y="1086.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (623 samples, 8.60%)</title><rect x="151.7" y="1059.0" width="101.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.7" y="1070.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (603 samples, 8.32%)</title><rect x="155.0" y="1043.0" width="98.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.0" y="1054.0">sun/nio/ch/E..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (489 samples, 6.75%)</title><rect x="155.0" y="1027.0" width="79.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.0" y="1038.0">sun/nio/c..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (6 samples, 0.08%)</title><rect x="157.2" y="1011.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="160.2" y="1022.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (5 samples, 0.07%)</title><rect x="158.2" y="1011.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="161.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.14%)</title><rect x="159.0" y="1011.0" width="1.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="162.0" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (10 samples, 0.14%)</title><rect x="159.0" y="995.0" width="1.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="162.0" y="1006.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (10 samples, 0.14%)</title><rect x="159.0" y="979.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="162.0" y="990.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (10 samples, 0.14%)</title><rect x="159.0" y="963.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.0" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (423 samples, 5.84%)</title><rect x="160.7" y="1011.0" width="68.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="163.7" y="1022.0">__kerne..</text>
</g>
<g>
<title>entry_SYSENTER_32 (417 samples, 5.76%)</title><rect x="161.6" y="995.0" width="68.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="164.6" y="1006.0">entry_S..</text>
</g>
<g>
<title>do_fast_syscall_32 (414 samples, 5.71%)</title><rect x="161.6" y="979.0" width="67.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="164.6" y="990.0">do_fast..</text>
</g>
<g>
<title>sys_epoll_wait (410 samples, 5.66%)</title><rect x="162.3" y="963.0" width="66.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="165.3" y="974.0">sys_epo..</text>
</g>
<g>
<title>__fdget (12 samples, 0.17%)</title><rect x="164.2" y="947.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="167.2" y="958.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.17%)</title><rect x="164.2" y="931.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="167.2" y="942.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.15%)</title><rect x="164.4" y="915.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="167.4" y="926.0"></text>
</g>
<g>
<title>ep_poll (381 samples, 5.26%)</title><rect x="166.4" y="947.0" width="62.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="169.4" y="958.0">ep_poll</text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.14%)</title><rect x="167.8" y="931.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="170.8" y="942.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.04%)</title><rect x="169.6" y="931.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="172.6" y="942.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.16 (82 samples, 1.13%)</title><rect x="170.1" y="931.0" width="13.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="173.1" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.32%)</title><rect x="170.3" y="915.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="173.3" y="926.0"></text>
</g>
<g>
<title>ep_send_events_proc (50 samples, 0.69%)</title><rect x="174.3" y="915.0" width="8.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="177.3" y="926.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (35 samples, 0.48%)</title><rect x="175.8" y="899.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="178.8" y="910.0"></text>
</g>
<g>
<title>sock_poll (26 samples, 0.36%)</title><rect x="176.6" y="883.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.6" y="894.0"></text>
</g>
<g>
<title>tcp_poll (17 samples, 0.23%)</title><rect x="177.6" y="867.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="180.6" y="878.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="180.0" y="851.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="183.0" y="862.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.04%)</title><rect x="180.4" y="867.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="183.4" y="878.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.06%)</title><rect x="180.9" y="883.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="183.9" y="894.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.08%)</title><rect x="181.5" y="899.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="184.5" y="910.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.07%)</title><rect x="182.5" y="915.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="185.5" y="926.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.04%)</title><rect x="182.8" y="899.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="185.8" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.03%)</title><rect x="183.5" y="931.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="186.5" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (270 samples, 3.73%)</title><rect x="184.1" y="931.0" width="44.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.1" y="942.0">sche..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (269 samples, 3.71%)</title><rect x="184.3" y="915.0" width="43.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="187.3" y="926.0">sche..</text>
</g>
<g>
<title>schedule (267 samples, 3.69%)</title><rect x="184.6" y="899.0" width="43.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="187.6" y="910.0">sche..</text>
</g>
<g>
<title>__sched_text_start (265 samples, 3.66%)</title><rect x="184.9" y="883.0" width="43.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="187.9" y="894.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (257 samples, 3.55%)</title><rect x="186.2" y="867.0" width="41.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="189.2" y="878.0">fin..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="228.1" y="931.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="231.1" y="942.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.16 (2 samples, 0.03%)</title><rect x="228.4" y="947.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="231.4" y="958.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="228.7" y="947.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="231.7" y="958.0"></text>
</g>
<g>
<title>sys_epoll_wait (3 samples, 0.04%)</title><rect x="229.1" y="979.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="232.1" y="990.0"></text>
</g>
<g>
<title>epoll_wait (31 samples, 0.43%)</title><rect x="229.6" y="1011.0" width="5.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="232.6" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (37 samples, 0.51%)</title><rect x="234.6" y="1027.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.6" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.17%)</title><rect x="235.6" y="1011.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.6" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="235.7" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.7" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (9 samples, 0.12%)</title><rect x="236.1" y="995.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.1" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (17 samples, 0.23%)</title><rect x="237.9" y="1011.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.9" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.10%)</title><rect x="237.9" y="995.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="240.9" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.10%)</title><rect x="237.9" y="979.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.08%)</title><rect x="238.0" y="963.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.04%)</title><rect x="238.5" y="947.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.5" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (8 samples, 0.11%)</title><rect x="239.3" y="995.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.3" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (29 samples, 0.40%)</title><rect x="240.6" y="1027.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.6" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (7 samples, 0.10%)</title><rect x="244.0" y="1011.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.0" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (7 samples, 0.10%)</title><rect x="244.0" y="995.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.0" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (25 samples, 0.35%)</title><rect x="245.3" y="1027.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.3" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (25 samples, 0.35%)</title><rect x="245.3" y="1011.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (16 samples, 0.22%)</title><rect x="245.3" y="995.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.12%)</title><rect x="248.0" y="995.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.06%)</title><rect x="248.8" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.8" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.06%)</title><rect x="248.8" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.8" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (11 samples, 0.15%)</title><rect x="249.4" y="1027.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.4" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (11 samples, 0.15%)</title><rect x="249.4" y="1011.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.4" y="1022.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (11 samples, 0.15%)</title><rect x="249.4" y="995.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (8 samples, 0.11%)</title><rect x="249.6" y="979.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (8 samples, 0.11%)</title><rect x="249.6" y="963.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (12 samples, 0.17%)</title><rect x="251.2" y="1027.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,704 samples, 78.73%)</title><rect x="253.2" y="1091.0" width="929.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.2" y="1102.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,704 samples, 78.73%)</title><rect x="253.2" y="1075.0" width="929.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.2" y="1086.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,387 samples, 74.35%)</title><rect x="253.3" y="1059.0" width="877.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.3" y="1070.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,221 samples, 72.06%)</title><rect x="264.1" y="1043.0" width="850.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.1" y="1054.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,221 samples, 72.06%)</title><rect x="264.1" y="1027.0" width="850.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="267.1" y="1038.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (5,192 samples, 71.66%)</title><rect x="264.6" y="1011.0" width="845.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.6" y="1022.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.21%)</title><rect x="264.6" y="995.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.11%)</title><rect x="265.7" y="979.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (5,177 samples, 71.46%)</title><rect x="267.0" y="995.0" width="843.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="270.0" y="1006.0">ru/mail/polis/service/dogm/ServiceImpl.entity</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.14%)</title><rect x="270.8" y="979.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.14%)</title><rect x="270.8" y="963.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.8" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.14%)</title><rect x="270.8" y="947.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="273.8" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.07%)</title><rect x="272.4" y="979.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Coordinator.request (5,139 samples, 70.93%)</title><rect x="273.2" y="979.0" width="837.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.2" y="990.0">ru/mail/polis/service/dogm/Coordinator.request</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,572 samples, 21.70%)</title><rect x="275.8" y="963.0" width="256.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.8" y="974.0">one/nio/http/HttpSession.sendRespo..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.07%)</title><rect x="276.9" y="947.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.07%)</title><rect x="276.9" y="931.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.9" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="276.9" y="915.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,543 samples, 21.30%)</title><rect x="277.8" y="947.0" width="251.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.8" y="958.0">one/nio/http/HttpSession.writeRes..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (38 samples, 0.52%)</title><rect x="277.8" y="931.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.8" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (20 samples, 0.28%)</title><rect x="280.7" y="915.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.7" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (20 samples, 0.28%)</title><rect x="280.7" y="899.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (20 samples, 0.28%)</title><rect x="280.7" y="883.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,505 samples, 20.77%)</title><rect x="283.9" y="931.0" width="245.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.9" y="942.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,501 samples, 20.72%)</title><rect x="284.6" y="915.0" width="244.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.6" y="926.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,487 samples, 20.52%)</title><rect x="286.9" y="899.0" width="242.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.9" y="910.0">one/nio/net/Session$ArrayQueueIt..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1,487 samples, 20.52%)</title><rect x="286.9" y="883.0" width="242.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.9" y="894.0">one/nio/net/JavaSocket.write</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1,487 samples, 20.52%)</title><rect x="286.9" y="867.0" width="242.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.9" y="878.0">sun/nio/ch/SocketChannelImpl.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,411 samples, 19.48%)</title><rect x="286.9" y="851.0" width="229.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.9" y="862.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,411 samples, 19.48%)</title><rect x="286.9" y="835.0" width="229.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.9" y="846.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1,411 samples, 19.48%)</title><rect x="286.9" y="819.0" width="229.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.9" y="830.0">sun/nio/ch/IOUtil.writeFromNat..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (17 samples, 0.23%)</title><rect x="286.9" y="803.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.9" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1,394 samples, 19.24%)</title><rect x="289.6" y="803.0" width="227.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.6" y="814.0">sun/nio/ch/SocketDispatcher.wr..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1,386 samples, 19.13%)</title><rect x="291.0" y="787.0" width="225.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.0" y="798.0">sun/nio/ch/FileDispatcherImpl...</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (5 samples, 0.07%)</title><rect x="292.3" y="771.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="295.3" y="782.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (3 samples, 0.04%)</title><rect x="292.4" y="755.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="295.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="293.1" y="771.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="296.1" y="782.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.08%)</title><rect x="293.1" y="755.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="296.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (6 samples, 0.08%)</title><rect x="293.1" y="739.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="296.1" y="750.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (6 samples, 0.08%)</title><rect x="293.1" y="723.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="296.1" y="734.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1,364 samples, 18.83%)</title><rect x="294.0" y="771.0" width="222.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="297.0" y="782.0">__kernel_vsyscall</text>
</g>
<g>
<title>entry_SYSENTER_32 (1,357 samples, 18.73%)</title><rect x="295.0" y="755.0" width="221.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="298.0" y="766.0">entry_SYSENTER_32</text>
</g>
<g>
<title>do_fast_syscall_32 (1,357 samples, 18.73%)</title><rect x="295.0" y="739.0" width="221.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="298.0" y="750.0">do_fast_syscall_32</text>
</g>
<g>
<title>exit_to_usermode_loop (33 samples, 0.46%)</title><rect x="295.5" y="723.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="298.5" y="734.0"></text>
</g>
<g>
<title>schedule (33 samples, 0.46%)</title><rect x="295.5" y="707.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="298.5" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (33 samples, 0.46%)</title><rect x="295.5" y="691.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="298.5" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (33 samples, 0.46%)</title><rect x="295.5" y="675.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="298.5" y="686.0"></text>
</g>
<g>
<title>sys_write (1,320 samples, 18.22%)</title><rect x="301.1" y="723.0" width="214.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="304.1" y="734.0">sys_write</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.07%)</title><rect x="301.7" y="707.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="304.7" y="718.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.07%)</title><rect x="301.7" y="691.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="304.7" y="702.0"></text>
</g>
<g>
<title>vfs_write (1,310 samples, 18.08%)</title><rect x="302.7" y="707.0" width="213.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="305.7" y="718.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (1,294 samples, 17.86%)</title><rect x="303.3" y="691.0" width="210.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="306.3" y="702.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (1,294 samples, 17.86%)</title><rect x="303.3" y="675.0" width="210.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="306.3" y="686.0">new_sync_write</text>
</g>
<g>
<title>sock_write_iter (1,288 samples, 17.78%)</title><rect x="304.3" y="659.0" width="209.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="307.3" y="670.0">sock_write_iter</text>
</g>
<g>
<title>sock_sendmsg (1,285 samples, 17.74%)</title><rect x="304.8" y="643.0" width="209.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="307.8" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (1,277 samples, 17.63%)</title><rect x="305.3" y="627.0" width="208.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="308.3" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,274 samples, 17.58%)</title><rect x="305.6" y="611.0" width="207.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="308.6" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="305.9" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="308.9" y="606.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="306.4" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="309.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.04%)</title><rect x="306.4" y="579.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="309.4" y="590.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="307.2" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="310.2" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (7 samples, 0.10%)</title><rect x="307.6" y="595.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="310.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,254 samples, 17.31%)</title><rect x="308.9" y="595.0" width="204.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="311.9" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.06%)</title><rect x="310.3" y="579.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.3" y="590.0"></text>
</g>
<g>
<title>page_address (3 samples, 0.04%)</title><rect x="310.5" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="313.5" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="311.1" y="579.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="314.1" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.07%)</title><rect x="311.5" y="579.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="314.5" y="590.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.04%)</title><rect x="311.6" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="314.6" y="574.0"></text>
</g>
<g>
<title>__copy_user_ll (3 samples, 0.04%)</title><rect x="311.6" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.6" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (25 samples, 0.35%)</title><rect x="312.3" y="579.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="315.3" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (22 samples, 0.30%)</title><rect x="312.8" y="563.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="315.8" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (9 samples, 0.12%)</title><rect x="313.4" y="547.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="316.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (5 samples, 0.07%)</title><rect x="313.6" y="531.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="316.6" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="314.6" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="317.6" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc (5 samples, 0.07%)</title><rect x="315.1" y="547.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="318.1" y="558.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.04%)</title><rect x="315.9" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="318.9" y="558.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="316.4" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="319.4" y="590.0"></text>
</g>
<g>
<title>tcp_push (1,181 samples, 16.30%)</title><rect x="316.8" y="579.0" width="192.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="319.8" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,177 samples, 16.25%)</title><rect x="317.2" y="563.0" width="191.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="320.2" y="574.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_small_queue_check.isra.28 (2 samples, 0.03%)</title><rect x="317.2" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="320.2" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (1,175 samples, 16.22%)</title><rect x="317.5" y="547.0" width="191.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="320.5" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,124 samples, 15.51%)</title><rect x="319.6" y="531.0" width="183.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="322.6" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.04%)</title><rect x="322.5" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="325.5" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (1,094 samples, 15.10%)</title><rect x="323.0" y="515.0" width="178.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="326.0" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (1,081 samples, 14.92%)</title><rect x="324.2" y="499.0" width="176.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="327.2" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="324.3" y="483.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="327.3" y="494.0"></text>
</g>
<g>
<title>ip_output (1,077 samples, 14.87%)</title><rect x="324.8" y="483.0" width="175.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="327.8" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.04%)</title><rect x="325.5" y="467.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="328.5" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (1,070 samples, 14.77%)</title><rect x="326.0" y="467.0" width="174.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="329.0" y="478.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.08%)</title><rect x="326.3" y="451.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="329.3" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (1,060 samples, 14.63%)</title><rect x="327.4" y="451.0" width="172.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="330.4" y="462.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (1,000 samples, 13.80%)</title><rect x="329.4" y="435.0" width="162.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="332.4" y="446.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.15 (999 samples, 13.79%)</title><rect x="329.6" y="419.0" width="162.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="332.6" y="430.0">do_softirq.part.15</text>
</g>
<g>
<title>do_softirq_own_stack (994 samples, 13.72%)</title><rect x="330.4" y="403.0" width="161.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="333.4" y="414.0">do_softirq_own_stack</text>
</g>
<g>
<title>call_on_stack (994 samples, 13.72%)</title><rect x="330.4" y="387.0" width="161.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="333.4" y="398.0">call_on_stack</text>
</g>
<g>
<title>__do_softirq (994 samples, 13.72%)</title><rect x="330.4" y="371.0" width="161.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="333.4" y="382.0">__do_softirq</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="332.0" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="335.0" y="366.0"></text>
</g>
<g>
<title>net_rx_action (980 samples, 13.53%)</title><rect x="332.3" y="355.0" width="159.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="335.3" y="366.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="332.8" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="335.8" y="350.0"></text>
</g>
<g>
<title>process_backlog (975 samples, 13.46%)</title><rect x="333.1" y="339.0" width="158.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="336.1" y="350.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (968 samples, 13.36%)</title><rect x="334.1" y="323.0" width="157.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="337.1" y="334.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_core (961 samples, 13.26%)</title><rect x="334.9" y="307.0" width="156.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="337.9" y="318.0">__netif_receive_skb_..</text>
</g>
<g>
<title>ip_rcv (950 samples, 13.11%)</title><rect x="336.7" y="291.0" width="154.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="339.7" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (940 samples, 12.97%)</title><rect x="338.3" y="275.0" width="153.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="341.3" y="286.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (938 samples, 12.95%)</title><rect x="338.5" y="259.0" width="152.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="341.5" y="270.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (935 samples, 12.91%)</title><rect x="338.7" y="243.0" width="152.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="341.7" y="254.0">ip_local_deliver_fi..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="339.2" y="227.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="342.2" y="238.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.04%)</title><rect x="339.5" y="227.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="342.5" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (925 samples, 12.77%)</title><rect x="340.3" y="227.0" width="150.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="343.3" y="238.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (12 samples, 0.17%)</title><rect x="342.7" y="211.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="345.7" y="222.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.34 (2 samples, 0.03%)</title><rect x="344.7" y="211.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.7" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (10 samples, 0.14%)</title><rect x="345.7" y="211.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="348.7" y="222.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (6 samples, 0.08%)</title><rect x="346.3" y="195.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="349.3" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.06%)</title><rect x="347.3" y="211.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="350.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (873 samples, 12.05%)</title><rect x="348.0" y="211.0" width="142.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="351.0" y="222.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_ack (4 samples, 0.06%)</title><rect x="348.3" y="195.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="351.3" y="206.0"></text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.03%)</title><rect x="349.1" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="352.1" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (864 samples, 11.93%)</title><rect x="349.4" y="195.0" width="140.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="352.4" y="206.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (14 samples, 0.19%)</title><rect x="350.1" y="179.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="353.1" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (13 samples, 0.18%)</title><rect x="350.2" y="163.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="353.2" y="174.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.07%)</title><rect x="350.2" y="147.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="353.2" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.11%)</title><rect x="351.1" y="147.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="354.1" y="158.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.10%)</title><rect x="351.2" y="131.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.2" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.08%)</title><rect x="351.4" y="115.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="354.4" y="126.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="352.4" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="355.4" y="190.0"></text>
</g>
<g>
<title>sched_clock_cpu (4 samples, 0.06%)</title><rect x="352.8" y="179.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="355.8" y="190.0"></text>
</g>
<g>
<title>sched_clock (4 samples, 0.06%)</title><rect x="352.8" y="163.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="355.8" y="174.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (4 samples, 0.06%)</title><rect x="352.8" y="147.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="355.8" y="158.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (4 samples, 0.06%)</title><rect x="352.8" y="131.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="355.8" y="142.0"></text>
</g>
<g>
<title>tcp_ack (75 samples, 1.04%)</title><rect x="353.7" y="179.0" width="12.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="356.7" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (46 samples, 0.63%)</title><rect x="357.2" y="163.0" width="7.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="360.2" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (23 samples, 0.32%)</title><rect x="358.5" y="147.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="361.5" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="358.5" y="131.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="361.5" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="358.5" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="361.5" y="126.0"></text>
</g>
<g>
<title>skb_release_all (20 samples, 0.28%)</title><rect x="358.9" y="131.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="361.9" y="142.0"></text>
</g>
<g>
<title>skb_release_data (19 samples, 0.26%)</title><rect x="359.0" y="115.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="362.0" y="126.0"></text>
</g>
<g>
<title>skb_free_head (13 samples, 0.18%)</title><rect x="360.0" y="99.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.0" y="110.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="360.0" y="83.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="363.0" y="94.0"></text>
</g>
<g>
<title>kfree (11 samples, 0.15%)</title><rect x="360.3" y="83.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="363.3" y="94.0"></text>
</g>
<g>
<title>__slab_free (8 samples, 0.11%)</title><rect x="360.8" y="67.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="363.8" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="362.3" y="147.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="365.3" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (4 samples, 0.06%)</title><rect x="362.8" y="147.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="365.8" y="158.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (6 samples, 0.08%)</title><rect x="363.8" y="147.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="366.8" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (4 samples, 0.06%)</title><rect x="365.2" y="163.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="368.2" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.06%)</title><rect x="365.9" y="179.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="368.9" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (756 samples, 10.43%)</title><rect x="366.5" y="179.0" width="123.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="369.5" y="190.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (740 samples, 10.21%)</title><rect x="367.8" y="163.0" width="120.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.8" y="174.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (733 samples, 10.12%)</title><rect x="369.0" y="147.0" width="119.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="372.0" y="158.0">__wake_up_sync_..</text>
</g>
<g>
<title>__wake_up_common_lock (733 samples, 10.12%)</title><rect x="369.0" y="131.0" width="119.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="372.0" y="142.0">__wake_up_commo..</text>
</g>
<g>
<title>__lock_text_start (733 samples, 10.12%)</title><rect x="369.0" y="115.0" width="119.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="372.0" y="126.0">__lock_text_start</text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.07%)</title><rect x="488.4" y="163.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="491.4" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="489.2" y="163.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="492.2" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="489.7" y="179.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="492.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.04%)</title><rect x="490.1" y="211.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="493.1" y="222.0"></text>
</g>
<g>
<title>memmove (2 samples, 0.03%)</title><rect x="490.3" y="195.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="493.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.03%)</title><rect x="490.6" y="211.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="493.6" y="222.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.03%)</title><rect x="490.6" y="195.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="493.6" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="491.0" y="243.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="491.4" y="307.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="494.4" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (48 samples, 0.66%)</title><rect x="492.3" y="435.0" width="7.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="495.3" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (46 samples, 0.63%)</title><rect x="492.3" y="419.0" width="7.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="495.3" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (21 samples, 0.29%)</title><rect x="494.4" y="403.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="497.4" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (14 samples, 0.19%)</title><rect x="494.7" y="387.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="497.7" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="494.9" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="497.9" y="382.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.08%)</title><rect x="495.2" y="371.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.2" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.07%)</title><rect x="495.4" y="355.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="498.4" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.06%)</title><rect x="495.5" y="339.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="498.5" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.04%)</title><rect x="496.5" y="371.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="499.5" y="382.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="497.0" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="500.0" y="398.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="497.3" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="500.3" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.04%)</title><rect x="497.8" y="403.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="500.8" y="414.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="498.4" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="501.4" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.06%)</title><rect x="498.8" y="403.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="501.8" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.04%)</title><rect x="498.9" y="387.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="501.9" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="499.4" y="403.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="502.4" y="414.0"></text>
</g>
<g>
<title>netdev_pick_tx (2 samples, 0.03%)</title><rect x="499.8" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="502.8" y="430.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.07%)</title><rect x="500.4" y="499.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="503.4" y="510.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.07%)</title><rect x="501.2" y="515.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="504.2" y="526.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.07%)</title><rect x="501.2" y="499.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="504.2" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="501.7" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="504.7" y="494.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.04%)</title><rect x="502.2" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="505.2" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.04%)</title><rect x="502.2" y="499.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="505.2" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_esi (2 samples, 0.03%)</title><rect x="502.7" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="505.7" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="503.3" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="506.3" y="542.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.03%)</title><rect x="504.0" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="507.0" y="542.0"></text>
</g>
<g>
<title>sched_clock_cpu (10 samples, 0.14%)</title><rect x="504.3" y="531.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="507.3" y="542.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (3 samples, 0.04%)</title><rect x="504.5" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="507.5" y="526.0"></text>
</g>
<g>
<title>sched_clock (6 samples, 0.08%)</title><rect x="505.0" y="515.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="508.0" y="526.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (6 samples, 0.08%)</title><rect x="505.0" y="499.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="508.0" y="510.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (5 samples, 0.07%)</title><rect x="505.1" y="483.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="508.1" y="494.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="505.9" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="508.9" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.12%)</title><rect x="506.3" y="531.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="509.3" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (2 samples, 0.03%)</title><rect x="506.4" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="509.4" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.08%)</title><rect x="506.8" y="515.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="509.8" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (6 samples, 0.08%)</title><rect x="506.8" y="499.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="509.8" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.08%)</title><rect x="506.8" y="483.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.8" y="494.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.08%)</title><rect x="506.8" y="467.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="509.8" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.06%)</title><rect x="506.9" y="451.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="509.9" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.04%)</title><rect x="507.9" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="510.9" y="542.0"></text>
</g>
<g>
<title>tcp_tso_segs (2 samples, 0.03%)</title><rect x="508.5" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="511.5" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.03%)</title><rect x="508.9" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="511.9" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (19 samples, 0.26%)</title><rect x="509.4" y="579.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="512.4" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.07%)</title><rect x="509.9" y="563.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="512.9" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.14%)</title><rect x="510.7" y="563.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="513.7" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.04%)</title><rect x="511.3" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="514.3" y="558.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (3 samples, 0.04%)</title><rect x="511.8" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="514.8" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.04%)</title><rect x="512.5" y="579.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="515.5" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.07%)</title><rect x="513.3" y="627.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="516.3" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="513.8" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="516.8" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="513.8" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="516.8" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.12%)</title><rect x="514.4" y="691.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="517.4" y="702.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.07%)</title><rect x="515.1" y="675.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="518.1" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.06%)</title><rect x="515.2" y="659.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="518.2" y="670.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.06%)</title><rect x="515.2" y="643.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="518.2" y="654.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.04%)</title><rect x="515.4" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="518.4" y="638.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.03%)</title><rect x="516.4" y="771.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="519.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (74 samples, 1.02%)</title><rect x="516.7" y="851.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.7" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (66 samples, 0.91%)</title><rect x="518.0" y="835.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (66 samples, 0.91%)</title><rect x="518.0" y="819.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.0" y="830.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (12 samples, 0.17%)</title><rect x="518.5" y="803.0" width="1.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="521.5" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (51 samples, 0.70%)</title><rect x="520.4" y="803.0" width="8.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="523.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="521.1" y="787.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="524.1" y="798.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.08%)</title><rect x="521.1" y="771.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="524.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (6 samples, 0.08%)</title><rect x="521.1" y="755.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="524.1" y="766.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (6 samples, 0.08%)</title><rect x="521.1" y="739.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="524.1" y="750.0"></text>
</g>
<g>
<title>__kernel_vsyscall (38 samples, 0.52%)</title><rect x="522.2" y="787.0" width="6.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="525.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (32 samples, 0.44%)</title><rect x="523.2" y="771.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="526.2" y="782.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (30 samples, 0.41%)</title><rect x="523.2" y="755.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="526.2" y="766.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.03%)</title><rect x="523.5" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="526.5" y="750.0"></text>
</g>
<g>
<title>do_gettimeofday (4 samples, 0.06%)</title><rect x="523.9" y="739.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="526.9" y="750.0"></text>
</g>
<g>
<title>sys_gettimeofday (22 samples, 0.30%)</title><rect x="524.5" y="739.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="527.5" y="750.0"></text>
</g>
<g>
<title>_copy_to_user (4 samples, 0.06%)</title><rect x="525.2" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="528.2" y="734.0"></text>
</g>
<g>
<title>__copy_user_ll (3 samples, 0.04%)</title><rect x="525.3" y="707.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="528.3" y="718.0"></text>
</g>
<g>
<title>do_gettimeofday (14 samples, 0.19%)</title><rect x="525.8" y="723.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="528.8" y="734.0"></text>
</g>
<g>
<title>__getnstimeofday64 (12 samples, 0.17%)</title><rect x="525.8" y="707.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="528.8" y="718.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (5 samples, 0.07%)</title><rect x="527.0" y="691.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="530.0" y="702.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (5 samples, 0.07%)</title><rect x="527.0" y="675.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="530.0" y="686.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.03%)</title><rect x="527.8" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="530.8" y="718.0"></text>
</g>
<g>
<title>sys_gettimeofday (2 samples, 0.03%)</title><rect x="528.1" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="531.1" y="766.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.03%)</title><rect x="528.4" y="787.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="531.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endWrite (2 samples, 0.03%)</title><rect x="528.7" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.7" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.03%)</title><rect x="528.7" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.22%)</title><rect x="529.1" y="947.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (16 samples, 0.22%)</title><rect x="529.1" y="931.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.1" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (16 samples, 0.22%)</title><rect x="529.1" y="915.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.06%)</title><rect x="531.8" y="963.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.8" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.06%)</title><rect x="531.8" y="947.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (4 samples, 0.06%)</title><rect x="531.8" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (4 samples, 0.06%)</title><rect x="531.8" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.8" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (4 samples, 0.06%)</title><rect x="531.8" y="899.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.8" y="910.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.06%)</title><rect x="531.8" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.06%)</title><rect x="531.8" y="867.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.8" y="878.0"></text>
</g>
<g>
<title>Thread::current() (4 samples, 0.06%)</title><rect x="531.8" y="851.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="534.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Coordinator.upsert (3,547 samples, 48.96%)</title><rect x="532.5" y="963.0" width="577.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.5" y="974.0">ru/mail/polis/service/dogm/Coordinator.upsert</text>
</g>
<g>
<title>one/nio/http/HttpClient.put (1,697 samples, 23.42%)</title><rect x="533.1" y="947.0" width="276.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.1" y="958.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (17 samples, 0.23%)</title><rect x="536.1" y="931.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="539.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,661 samples, 22.93%)</title><rect x="538.8" y="931.0" width="270.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.8" y="942.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,661 samples, 22.93%)</title><rect x="538.8" y="915.0" width="270.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.8" y="926.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (12 samples, 0.17%)</title><rect x="539.3" y="899.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.17%)</title><rect x="539.3" y="883.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.17%)</title><rect x="539.3" y="867.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (459 samples, 6.34%)</title><rect x="541.3" y="899.0" width="74.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.3" y="910.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (456 samples, 6.29%)</title><rect x="541.6" y="883.0" width="74.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.6" y="894.0">one/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (456 samples, 6.29%)</title><rect x="541.6" y="867.0" width="74.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.6" y="878.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (369 samples, 5.09%)</title><rect x="543.4" y="851.0" width="60.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.4" y="862.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (369 samples, 5.09%)</title><rect x="543.4" y="835.0" width="60.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.4" y="846.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (6 samples, 0.08%)</title><rect x="543.4" y="819.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.4" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.08%)</title><rect x="543.4" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (6 samples, 0.08%)</title><rect x="543.4" y="787.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (6 samples, 0.08%)</title><rect x="543.4" y="771.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.04%)</title><rect x="543.4" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.03%)</title><rect x="543.6" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.03%)</title><rect x="543.6" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (3 samples, 0.04%)</title><rect x="543.9" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (351 samples, 4.84%)</title><rect x="544.4" y="819.0" width="57.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.4" y="830.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (351 samples, 4.84%)</title><rect x="544.4" y="803.0" width="57.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.4" y="814.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (348 samples, 4.80%)</title><rect x="544.9" y="787.0" width="56.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.9" y="798.0">sun/ni..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.04%)</title><rect x="546.3" y="771.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="549.3" y="782.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (2 samples, 0.03%)</title><rect x="546.8" y="771.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="549.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="547.1" y="771.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="550.1" y="782.0"></text>
</g>
<g>
<title>__kernel_vsyscall (9 samples, 0.12%)</title><rect x="547.1" y="755.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="550.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (9 samples, 0.12%)</title><rect x="547.1" y="739.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="550.1" y="750.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (8 samples, 0.11%)</title><rect x="547.3" y="723.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="550.3" y="734.0"></text>
</g>
<g>
<title>__kernel_vsyscall (318 samples, 4.39%)</title><rect x="548.6" y="771.0" width="51.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="551.6" y="782.0">__ker..</text>
</g>
<g>
<title>entry_SYSENTER_32 (315 samples, 4.35%)</title><rect x="549.1" y="755.0" width="51.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="552.1" y="766.0">entry..</text>
</g>
<g>
<title>do_fast_syscall_32 (315 samples, 4.35%)</title><rect x="549.1" y="739.0" width="51.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="552.1" y="750.0">do_fa..</text>
</g>
<g>
<title>sys_read (314 samples, 4.33%)</title><rect x="549.3" y="723.0" width="51.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="552.3" y="734.0">sys_r..</text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.04%)</title><rect x="549.6" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="552.6" y="718.0"></text>
</g>
<g>
<title>vfs_read (309 samples, 4.27%)</title><rect x="550.1" y="707.0" width="50.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="553.1" y="718.0">vfs_r..</text>
</g>
<g>
<title>__vfs_read (296 samples, 4.09%)</title><rect x="550.2" y="691.0" width="48.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="553.2" y="702.0">__vf..</text>
</g>
<g>
<title>new_sync_read (293 samples, 4.04%)</title><rect x="550.6" y="675.0" width="47.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="553.6" y="686.0">new_..</text>
</g>
<g>
<title>sock_read_iter (290 samples, 4.00%)</title><rect x="551.1" y="659.0" width="47.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="554.1" y="670.0">sock..</text>
</g>
<g>
<title>inet_recvmsg (3 samples, 0.04%)</title><rect x="551.4" y="643.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="554.4" y="654.0"></text>
</g>
<g>
<title>sock_recvmsg (285 samples, 3.93%)</title><rect x="551.9" y="643.0" width="46.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="554.9" y="654.0">sock..</text>
</g>
<g>
<title>inet_recvmsg (280 samples, 3.86%)</title><rect x="552.2" y="627.0" width="45.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="555.2" y="638.0">inet..</text>
</g>
<g>
<title>tcp_recvmsg (280 samples, 3.86%)</title><rect x="552.2" y="611.0" width="45.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="555.2" y="622.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.04%)</title><rect x="554.2" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="557.2" y="606.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="554.3" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="557.3" y="590.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="554.3" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="557.3" y="574.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="554.3" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="557.3" y="558.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="554.6" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="557.6" y="606.0"></text>
</g>
<g>
<title>add_wait_queue (4 samples, 0.06%)</title><rect x="555.1" y="595.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.1" y="606.0"></text>
</g>
<g>
<title>sk_wait_data (247 samples, 3.41%)</title><rect x="556.1" y="595.0" width="40.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="559.1" y="606.0">sk_..</text>
</g>
<g>
<title>add_wait_queue (3 samples, 0.04%)</title><rect x="557.2" y="579.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="560.2" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="557.2" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="560.2" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.07%)</title><rect x="557.7" y="579.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="560.7" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.07%)</title><rect x="557.7" y="563.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="560.7" y="574.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (4 samples, 0.06%)</title><rect x="557.9" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="560.9" y="558.0"></text>
</g>
<g>
<title>wait_woken (230 samples, 3.17%)</title><rect x="558.9" y="579.0" width="37.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="561.9" y="590.0">wai..</text>
</g>
<g>
<title>schedule_timeout (228 samples, 3.15%)</title><rect x="559.2" y="563.0" width="37.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="562.2" y="574.0">sch..</text>
</g>
<g>
<title>schedule (227 samples, 3.13%)</title><rect x="559.4" y="547.0" width="36.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="562.4" y="558.0">sch..</text>
</g>
<g>
<title>__sched_text_start (226 samples, 3.12%)</title><rect x="559.5" y="531.0" width="36.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="562.5" y="542.0">__s..</text>
</g>
<g>
<title>finish_task_switch (223 samples, 3.08%)</title><rect x="560.0" y="515.0" width="36.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="563.0" y="526.0">fin..</text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.07%)</title><rect x="596.3" y="595.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="599.3" y="606.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.06%)</title><rect x="596.3" y="579.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="599.3" y="590.0"></text>
</g>
<g>
<title>__check_heap_object (4 samples, 0.06%)</title><rect x="596.3" y="563.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="599.3" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.06%)</title><rect x="597.1" y="595.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="600.1" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.03%)</title><rect x="597.8" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.8" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="597.8" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="600.8" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="597.8" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="600.8" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (10 samples, 0.14%)</title><rect x="598.8" y="691.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="601.8" y="702.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="598.9" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="601.9" y="686.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.10%)</title><rect x="599.3" y="675.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="602.3" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.04%)</title><rect x="599.9" y="659.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="602.9" y="670.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.04%)</title><rect x="599.9" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="602.9" y="654.0"></text>
</g>
<g>
<title>read (7 samples, 0.10%)</title><rect x="600.4" y="771.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="603.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (12 samples, 0.17%)</title><rect x="601.5" y="819.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (12 samples, 0.17%)</title><rect x="601.5" y="803.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.5" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (12 samples, 0.17%)</title><rect x="601.5" y="787.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.5" y="798.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (12 samples, 0.17%)</title><rect x="601.5" y="771.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (12 samples, 0.17%)</title><rect x="601.5" y="755.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (65 samples, 0.90%)</title><rect x="603.5" y="851.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.06%)</title><rect x="613.4" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="616.4" y="846.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.03%)</title><rect x="613.6" y="819.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="616.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endRead (11 samples, 0.15%)</title><rect x="614.1" y="851.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.1" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (11 samples, 0.15%)</title><rect x="614.1" y="835.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.1" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.04%)</title><rect x="615.4" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.4" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="615.6" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="615.6" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (47 samples, 0.65%)</title><rect x="616.0" y="899.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (23 samples, 0.32%)</title><rect x="618.3" y="883.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.3" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.10%)</title><rect x="620.9" y="867.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.10%)</title><rect x="620.9" y="851.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (9 samples, 0.12%)</title><rect x="622.1" y="883.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.12%)</title><rect x="622.1" y="867.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.12%)</title><rect x="622.1" y="851.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (25 samples, 0.35%)</title><rect x="623.7" y="899.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.06%)</title><rect x="627.8" y="899.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="627.8" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="627.8" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (1,098 samples, 15.16%)</title><rect x="628.6" y="899.0" width="178.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="631.6" y="910.0">one/nio/net/JavaSocket...</text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (802 samples, 11.07%)</title><rect x="628.6" y="883.0" width="130.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.6" y="894.0">java/nio/channel..</text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (793 samples, 10.95%)</title><rect x="630.0" y="867.0" width="129.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.0" y="878.0">java/nio/channel..</text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (792 samples, 10.93%)</title><rect x="630.2" y="851.0" width="129.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.2" y="862.0">java/nio/channel..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (783 samples, 10.81%)</title><rect x="631.7" y="835.0" width="127.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.7" y="846.0">sun/nio/ch/Socke..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (741 samples, 10.23%)</title><rect x="631.8" y="819.0" width="120.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.8" y="830.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (740 samples, 10.21%)</title><rect x="632.0" y="803.0" width="120.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.0" y="814.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (740 samples, 10.21%)</title><rect x="632.0" y="787.0" width="120.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.0" y="798.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (12 samples, 0.17%)</title><rect x="632.0" y="771.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (728 samples, 10.05%)</title><rect x="634.0" y="771.0" width="118.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.0" y="782.0">sun/nio/ch/Soc..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (725 samples, 10.01%)</title><rect x="634.4" y="755.0" width="118.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.4" y="766.0">sun/nio/ch/Fil..</text>
</g>
<g>
<title>__kernel_vsyscall (718 samples, 9.91%)</title><rect x="635.3" y="739.0" width="116.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="638.3" y="750.0">__kernel_vsysc..</text>
</g>
<g>
<title>entry_SYSENTER_32 (715 samples, 9.87%)</title><rect x="635.8" y="723.0" width="116.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="638.8" y="734.0">entry_SYSENTER..</text>
</g>
<g>
<title>do_fast_syscall_32 (714 samples, 9.86%)</title><rect x="635.8" y="707.0" width="116.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="638.8" y="718.0">do_fast_syscal..</text>
</g>
<g>
<title>exit_to_usermode_loop (11 samples, 0.15%)</title><rect x="635.9" y="691.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="638.9" y="702.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.15%)</title><rect x="635.9" y="675.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="638.9" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (11 samples, 0.15%)</title><rect x="635.9" y="659.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.9" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.15%)</title><rect x="635.9" y="643.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="638.9" y="654.0"></text>
</g>
<g>
<title>sys_write (701 samples, 9.68%)</title><rect x="637.9" y="691.0" width="114.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.9" y="702.0">sys_write</text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.10%)</title><rect x="638.0" y="675.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="641.0" y="686.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.10%)</title><rect x="638.0" y="659.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="641.0" y="670.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="638.2" y="643.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="641.2" y="654.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="639.3" y="675.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="642.3" y="686.0"></text>
</g>
<g>
<title>vfs_write (690 samples, 9.52%)</title><rect x="639.7" y="675.0" width="112.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="642.7" y="686.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (668 samples, 9.22%)</title><rect x="641.1" y="659.0" width="108.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="644.1" y="670.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (666 samples, 9.19%)</title><rect x="641.1" y="643.0" width="108.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="644.1" y="654.0">new_sync_write</text>
</g>
<g>
<title>sock_write_iter (663 samples, 9.15%)</title><rect x="641.6" y="627.0" width="108.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="644.6" y="638.0">sock_write_iter</text>
</g>
<g>
<title>sock_sendmsg (662 samples, 9.14%)</title><rect x="641.8" y="611.0" width="107.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="644.8" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (655 samples, 9.04%)</title><rect x="641.8" y="595.0" width="106.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="644.8" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (653 samples, 9.01%)</title><rect x="641.9" y="579.0" width="106.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="644.9" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="641.9" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="644.9" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="642.3" y="563.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="645.3" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="642.3" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="645.3" y="558.0"></text>
</g>
<g>
<title>skb_put (2 samples, 0.03%)</title><rect x="643.1" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="646.1" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.06%)</title><rect x="643.4" y="563.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="646.4" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (640 samples, 8.83%)</title><rect x="644.1" y="563.0" width="104.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="647.1" y="574.0">tcp_sendmsg_..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="645.0" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="648.0" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.04%)</title><rect x="645.7" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="648.7" y="558.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="645.7" y="531.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="648.7" y="542.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.03%)</title><rect x="645.7" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="648.7" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (20 samples, 0.28%)</title><rect x="646.7" y="547.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="649.7" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (17 samples, 0.23%)</title><rect x="646.8" y="531.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="649.8" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (8 samples, 0.11%)</title><rect x="647.5" y="515.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="650.5" y="526.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (5 samples, 0.07%)</title><rect x="647.5" y="499.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="650.5" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.04%)</title><rect x="648.3" y="499.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="651.3" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.06%)</title><rect x="648.8" y="515.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="651.8" y="526.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="649.9" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="652.9" y="558.0"></text>
</g>
<g>
<title>tcp_push (589 samples, 8.13%)</title><rect x="650.4" y="547.0" width="95.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="653.4" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (586 samples, 8.09%)</title><rect x="650.6" y="531.0" width="95.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="653.6" y="542.0">__tcp_push_..</text>
</g>
<g>
<title>tcp_write_xmit (584 samples, 8.06%)</title><rect x="650.9" y="515.0" width="95.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="653.9" y="526.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (572 samples, 7.90%)</title><rect x="651.4" y="499.0" width="93.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="654.4" y="510.0">__tcp_trans..</text>
</g>
<g>
<title>ip_queue_xmit (550 samples, 7.59%)</title><rect x="653.8" y="483.0" width="89.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="656.8" y="494.0">ip_queue_x..</text>
</g>
<g>
<title>ip_local_out (544 samples, 7.51%)</title><rect x="654.8" y="467.0" width="88.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="657.8" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.04%)</title><rect x="654.8" y="451.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="657.8" y="462.0"></text>
</g>
<g>
<title>ip_output (541 samples, 7.47%)</title><rect x="655.3" y="451.0" width="88.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="658.3" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (539 samples, 7.44%)</title><rect x="655.6" y="435.0" width="87.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="658.6" y="446.0">ip_finish_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="656.4" y="419.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="659.4" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (531 samples, 7.33%)</title><rect x="656.9" y="419.0" width="86.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="659.9" y="430.0">ip_finish_..</text>
</g>
<g>
<title>__local_bh_enable_ip (491 samples, 6.78%)</title><rect x="658.6" y="403.0" width="79.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="661.6" y="414.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.15 (491 samples, 6.78%)</title><rect x="658.6" y="387.0" width="79.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="661.6" y="398.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (490 samples, 6.76%)</title><rect x="658.7" y="371.0" width="79.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="661.7" y="382.0">do_softir..</text>
</g>
<g>
<title>call_on_stack (490 samples, 6.76%)</title><rect x="658.7" y="355.0" width="79.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="661.7" y="366.0">call_on_s..</text>
</g>
<g>
<title>__do_softirq (489 samples, 6.75%)</title><rect x="658.7" y="339.0" width="79.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="661.7" y="350.0">__do_soft..</text>
</g>
<g>
<title>net_rx_action (485 samples, 6.69%)</title><rect x="659.0" y="323.0" width="79.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="662.0" y="334.0">net_rx_ac..</text>
</g>
<g>
<title>process_backlog (481 samples, 6.64%)</title><rect x="659.7" y="307.0" width="78.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="662.7" y="318.0">process_b..</text>
</g>
<g>
<title>__netif_receive_skb (478 samples, 6.60%)</title><rect x="660.2" y="291.0" width="77.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="663.2" y="302.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (475 samples, 6.56%)</title><rect x="660.2" y="275.0" width="77.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="663.2" y="286.0">__netif_r..</text>
</g>
<g>
<title>ip_rcv (472 samples, 6.51%)</title><rect x="660.7" y="259.0" width="76.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="663.7" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (467 samples, 6.45%)</title><rect x="661.5" y="243.0" width="76.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="664.5" y="254.0">ip_rcv_f..</text>
</g>
<g>
<title>ip_local_deliver (462 samples, 6.38%)</title><rect x="661.8" y="227.0" width="75.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="664.8" y="238.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (459 samples, 6.34%)</title><rect x="661.8" y="211.0" width="74.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="664.8" y="222.0">ip_local..</text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="662.0" y="195.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="665.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (455 samples, 6.28%)</title><rect x="662.5" y="195.0" width="74.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="665.5" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.11%)</title><rect x="664.1" y="179.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="667.1" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="664.9" y="163.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="667.9" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="665.6" y="179.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="668.6" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.08%)</title><rect x="666.0" y="179.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="669.0" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.07%)</title><rect x="666.2" y="163.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="669.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (423 samples, 5.84%)</title><rect x="667.3" y="179.0" width="68.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="670.3" y="190.0">tcp_v4_..</text>
</g>
<g>
<title>tcp_rcv_established (421 samples, 5.81%)</title><rect x="667.5" y="163.0" width="68.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="670.5" y="174.0">tcp_rcv..</text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.11%)</title><rect x="668.0" y="147.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="671.0" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.08%)</title><rect x="668.3" y="131.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="671.3" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.07%)</title><rect x="668.5" y="115.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="671.5" y="126.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.07%)</title><rect x="668.5" y="99.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="671.5" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="668.7" y="83.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="671.7" y="94.0"></text>
</g>
<g>
<title>sched_clock_cpu (3 samples, 0.04%)</title><rect x="669.6" y="147.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.6" y="158.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.04%)</title><rect x="669.6" y="131.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="672.6" y="142.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (3 samples, 0.04%)</title><rect x="669.6" y="115.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="672.6" y="126.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (3 samples, 0.04%)</title><rect x="669.6" y="99.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="672.6" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="670.1" y="147.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="673.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack (44 samples, 0.61%)</title><rect x="670.4" y="147.0" width="7.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="673.4" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.06%)</title><rect x="671.4" y="131.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="674.4" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (29 samples, 0.40%)</title><rect x="672.4" y="131.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="675.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.14%)</title><rect x="673.5" y="115.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="676.5" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.06%)</title><rect x="673.5" y="99.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.5" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.04%)</title><rect x="673.7" y="83.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.08%)</title><rect x="674.2" y="99.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="677.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.07%)</title><rect x="674.4" y="83.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="677.4" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.04%)</title><rect x="674.7" y="67.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="677.7" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="674.7" y="51.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="677.7" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="674.7" y="35.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="677.7" y="46.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.03%)</title><rect x="675.7" y="115.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="678.7" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (3 samples, 0.04%)</title><rect x="676.0" y="115.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="679.0" y="126.0"></text>
</g>
<g>
<title>minmax_running_min (2 samples, 0.03%)</title><rect x="676.1" y="99.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="679.1" y="110.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.04%)</title><rect x="676.6" y="115.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="679.6" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.04%)</title><rect x="677.1" y="131.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="680.1" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (356 samples, 4.91%)</title><rect x="677.8" y="147.0" width="58.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="680.8" y="158.0">tcp_da..</text>
</g>
<g>
<title>sock_def_readable (343 samples, 4.73%)</title><rect x="678.1" y="131.0" width="55.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="681.1" y="142.0">sock_..</text>
</g>
<g>
<title>__wake_up_sync_key (343 samples, 4.73%)</title><rect x="678.1" y="115.0" width="55.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="681.1" y="126.0">__wak..</text>
</g>
<g>
<title>__wake_up_common_lock (343 samples, 4.73%)</title><rect x="678.1" y="99.0" width="55.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="681.1" y="110.0">__wak..</text>
</g>
<g>
<title>__lock_text_start (343 samples, 4.73%)</title><rect x="678.1" y="83.0" width="55.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="681.1" y="94.0">__loc..</text>
</g>
<g>
<title>tcp_event_data_recv (8 samples, 0.11%)</title><rect x="734.0" y="131.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="737.0" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="735.3" y="131.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="738.3" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="735.8" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="738.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.04%)</title><rect x="736.6" y="211.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="739.6" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.04%)</title><rect x="737.1" y="227.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="740.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="737.7" y="275.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="740.7" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (29 samples, 0.40%)</title><rect x="738.5" y="403.0" width="4.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="741.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (29 samples, 0.40%)</title><rect x="738.5" y="387.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="741.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (18 samples, 0.25%)</title><rect x="739.7" y="371.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="742.7" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (12 samples, 0.17%)</title><rect x="740.0" y="355.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="743.0" y="366.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.12%)</title><rect x="740.3" y="339.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="743.3" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="740.3" y="323.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="743.3" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.08%)</title><rect x="740.8" y="323.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="743.8" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 0.08%)</title><rect x="740.8" y="307.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="743.8" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="742.3" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="745.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="742.6" y="371.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="745.6" y="382.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.04%)</title><rect x="743.4" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="746.4" y="494.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="743.4" y="467.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="746.4" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="743.6" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="746.6" y="462.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="744.1" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="747.1" y="494.0"></text>
</g>
<g>
<title>sched_clock_cpu (3 samples, 0.04%)</title><rect x="744.5" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="747.5" y="510.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.03%)</title><rect x="744.7" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="747.7" y="494.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (2 samples, 0.03%)</title><rect x="744.7" y="467.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="747.7" y="478.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="744.7" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="747.7" y="462.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.04%)</title><rect x="745.0" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="748.0" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.03%)</title><rect x="746.0" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="749.0" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (12 samples, 0.17%)</title><rect x="746.3" y="547.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="749.3" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.04%)</title><rect x="746.5" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="749.5" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.11%)</title><rect x="747.0" y="531.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="750.0" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (5 samples, 0.07%)</title><rect x="747.5" y="515.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="750.5" y="526.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (2 samples, 0.03%)</title><rect x="748.0" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="751.0" y="510.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.03%)</title><rect x="748.0" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="751.0" y="494.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.07%)</title><rect x="748.5" y="595.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="751.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.04%)</title><rect x="748.8" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="751.8" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.04%)</title><rect x="748.8" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="751.8" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="749.3" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="752.3" y="606.0"></text>
</g>
<g>
<title>sock_write_iter (2 samples, 0.03%)</title><rect x="749.6" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="752.6" y="654.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.07%)</title><rect x="749.9" y="659.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="752.9" y="670.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.11%)</title><rect x="750.7" y="659.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="753.7" y="670.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.04%)</title><rect x="751.6" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="754.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (19 samples, 0.26%)</title><rect x="752.5" y="819.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (9 samples, 0.12%)</title><rect x="754.2" y="803.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.2" y="814.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (3 samples, 0.04%)</title><rect x="754.6" y="787.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="757.6" y="798.0"></text>
</g>
<g>
<title>pthread_self (2 samples, 0.03%)</title><rect x="755.3" y="787.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="758.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endWrite (22 samples, 0.30%)</title><rect x="755.6" y="819.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="758.6" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (18 samples, 0.25%)</title><rect x="756.3" y="803.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.3" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (11 samples, 0.15%)</title><rect x="757.4" y="787.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.4" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.07%)</title><rect x="758.4" y="771.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.4" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.07%)</title><rect x="758.4" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.4" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.03%)</title><rect x="759.2" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="762.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.03%)</title><rect x="759.2" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (2 samples, 0.03%)</title><rect x="759.2" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.2" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.03%)</title><rect x="759.2" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.2" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.03%)</title><rect x="759.2" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.2" y="830.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.03%)</title><rect x="759.2" y="803.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="762.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (293 samples, 4.04%)</title><rect x="759.5" y="883.0" width="47.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="762.5" y="894.0">sun/..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (270 samples, 3.73%)</title><rect x="763.3" y="867.0" width="44.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.3" y="878.0">java..</text>
</g>
<g>
<title>I2C/C2I adapters (4 samples, 0.06%)</title><rect x="763.9" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.9" y="862.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (6 samples, 0.08%)</title><rect x="764.6" y="851.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="767.6" y="862.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedExceptionAction_2 (242 samples, 3.34%)</title><rect x="765.6" y="851.0" width="39.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="768.6" y="862.0">Jav..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (6 samples, 0.08%)</title><rect x="766.5" y="835.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="769.5" y="846.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (3 samples, 0.04%)</title><rect x="767.5" y="835.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="770.5" y="846.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (5 samples, 0.07%)</title><rect x="768.0" y="835.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="771.0" y="846.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (3 samples, 0.04%)</title><rect x="769.0" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="772.0" y="846.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (202 samples, 2.79%)</title><rect x="769.5" y="835.0" width="32.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="772.5" y="846.0">JV..</text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (2 samples, 0.03%)</title><rect x="773.1" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="776.1" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="773.5" y="819.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="776.5" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (10 samples, 0.14%)</title><rect x="773.9" y="819.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="776.9" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.224] (8 samples, 0.11%)</title><rect x="774.2" y="803.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="777.2" y="814.0"></text>
</g>
<g>
<title>resume_userspace (3 samples, 0.04%)</title><rect x="775.0" y="787.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="778.0" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.04%)</title><rect x="775.0" y="771.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="778.0" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.04%)</title><rect x="775.0" y="755.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="778.0" y="766.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (3 samples, 0.04%)</title><rect x="775.5" y="819.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="778.5" y="830.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (50 samples, 0.69%)</title><rect x="776.0" y="819.0" width="8.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="779.0" y="830.0"></text>
</g>
<g>
<title>.L409 (19 samples, 0.26%)</title><rect x="776.0" y="803.0" width="3.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="779.0" y="814.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (3 samples, 0.04%)</title><rect x="776.5" y="787.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="779.5" y="798.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (10 samples, 0.14%)</title><rect x="777.0" y="787.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="780.0" y="798.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (3 samples, 0.04%)</title><rect x="777.6" y="771.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="780.6" y="782.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (3 samples, 0.04%)</title><rect x="778.1" y="771.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="781.1" y="782.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.03%)</title><rect x="779.2" y="803.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="782.2" y="814.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (2 samples, 0.03%)</title><rect x="779.6" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="782.6" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (15 samples, 0.21%)</title><rect x="779.9" y="803.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="782.9" y="814.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.03%)</title><rect x="781.7" y="787.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="784.7" y="798.0"></text>
</g>
<g>
<title>Method::is_empty_method() const (2 samples, 0.03%)</title><rect x="782.3" y="803.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="785.3" y="814.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (5 samples, 0.07%)</title><rect x="783.0" y="803.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="786.0" y="814.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.03%)</title><rect x="783.8" y="803.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="786.8" y="814.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.04%)</title><rect x="784.3" y="819.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="787.3" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="784.8" y="819.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="787.8" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.04%)</title><rect x="785.1" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="788.1" y="830.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="785.6" y="819.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="788.6" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="786.1" y="819.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="789.1" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.186] (2 samples, 0.03%)</title><rect x="786.4" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="789.4" y="830.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (6 samples, 0.08%)</title><rect x="786.7" y="819.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="789.7" y="830.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (3 samples, 0.04%)</title><rect x="788.0" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="791.0" y="830.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.06%)</title><rect x="788.8" y="819.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="791.8" y="830.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (33 samples, 0.46%)</title><rect x="789.5" y="819.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="792.5" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="790.2" y="803.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="793.2" y="814.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (4 samples, 0.06%)</title><rect x="790.6" y="803.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="793.6" y="814.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (20 samples, 0.28%)</title><rect x="791.5" y="803.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="794.5" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (15 samples, 0.21%)</title><rect x="791.5" y="787.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="794.5" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (8 samples, 0.11%)</title><rect x="792.3" y="771.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="795.3" y="782.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.03%)</title><rect x="793.6" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="796.6" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="793.6" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="796.6" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="793.6" y="739.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="796.6" y="750.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.06%)</title><rect x="793.9" y="787.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="796.9" y="798.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (46 samples, 0.63%)</title><rect x="794.9" y="819.0" width="7.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="797.9" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (15 samples, 0.21%)</title><rect x="796.3" y="803.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="799.3" y="814.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (7 samples, 0.10%)</title><rect x="797.5" y="787.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="800.5" y="798.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (4 samples, 0.06%)</title><rect x="798.8" y="803.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="801.8" y="814.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (15 samples, 0.21%)</title><rect x="799.8" y="803.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="802.8" y="814.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (5 samples, 0.07%)</title><rect x="800.2" y="787.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="803.2" y="798.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (7 samples, 0.10%)</title><rect x="801.1" y="787.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="804.1" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.10%)</title><rect x="801.1" y="771.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="804.1" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (7 samples, 0.10%)</title><rect x="801.1" y="755.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="804.1" y="766.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.03%)</title><rect x="802.4" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="805.4" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.186] (2 samples, 0.03%)</title><rect x="802.9" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="805.9" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (5 samples, 0.07%)</title><rect x="803.7" y="835.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="806.7" y="846.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.04%)</title><rect x="804.5" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="807.5" y="846.0"></text>
</g>
<g>
<title>call_stub (5 samples, 0.07%)</title><rect x="805.1" y="851.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="808.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (7 samples, 0.10%)</title><rect x="806.1" y="851.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (4 samples, 0.06%)</title><rect x="806.6" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.6" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.newOutputStream (4 samples, 0.06%)</title><rect x="806.6" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.6" y="830.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.07%)</title><rect x="807.4" y="899.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="810.4" y="910.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (7 samples, 0.10%)</title><rect x="808.2" y="899.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.2" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (5 samples, 0.07%)</title><rect x="808.6" y="883.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.6" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (5 samples, 0.07%)</title><rect x="808.6" y="867.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="811.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.18%)</title><rect x="809.5" y="947.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.5" y="958.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="811.3" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.3" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/RocksDAO.upsertWithTimestamp (1,815 samples, 25.05%)</title><rect x="811.7" y="947.0" width="295.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="814.7" y="958.0">ru/mail/polis/dao/dogm/RocksDAO.upsertWi..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,767 samples, 24.39%)</title><rect x="813.9" y="931.0" width="287.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.9" y="942.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,763 samples, 24.33%)</title><rect x="814.6" y="915.0" width="287.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.6" y="926.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (18 samples, 0.25%)</title><rect x="815.4" y="899.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="818.4" y="910.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (27 samples, 0.37%)</title><rect x="818.3" y="899.0" width="4.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="821.3" y="910.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1,669 samples, 23.04%)</title><rect x="822.9" y="899.0" width="271.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="825.9" y="910.0">Java_org_rocksdb_RocksDB_put__J_3BII..</text>
</g>
<g>
<title>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.25 (5 samples, 0.07%)</title><rect x="824.2" y="883.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="827.2" y="894.0"></text>
</g>
<g>
<title>free (4 samples, 0.06%)</title><rect x="825.0" y="883.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="828.0" y="894.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.04%)</title><rect x="825.7" y="883.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="828.7" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.07%)</title><rect x="826.1" y="883.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="829.1" y="894.0"></text>
</g>
<g>
<title>malloc (9 samples, 0.12%)</title><rect x="827.0" y="883.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="830.0" y="894.0"></text>
</g>
<g>
<title>operator delete[](void*) (2 samples, 0.03%)</title><rect x="828.4" y="883.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="831.4" y="894.0"></text>
</g>
<g>
<title>operator new(unsigned int) (6 samples, 0.08%)</title><rect x="828.8" y="883.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="831.8" y="894.0"></text>
</g>
<g>
<title>operator new[](unsigned int) (6 samples, 0.08%)</title><rect x="829.7" y="883.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="832.7" y="894.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="830.7" y="883.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="833.7" y="894.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1,618 samples, 22.33%)</title><rect x="831.2" y="883.0" width="263.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="834.2" y="894.0">rocksdb_put_helper(JNIEnv_*, rocksd..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (4 samples, 0.06%)</title><rect x="832.3" y="867.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="835.3" y="878.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (4 samples, 0.06%)</title><rect x="833.1" y="867.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="836.1" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="833.8" y="867.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="836.8" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.158] (6 samples, 0.08%)</title><rect x="834.1" y="867.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="837.1" y="878.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.07%)</title><rect x="835.3" y="867.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="838.3" y="878.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.03%)</title><rect x="835.3" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="838.3" y="862.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.03%)</title><rect x="835.8" y="851.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="838.8" y="862.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (41 samples, 0.57%)</title><rect x="836.1" y="867.0" width="6.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="839.1" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="836.1" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="839.1" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (8 samples, 0.11%)</title><rect x="836.4" y="851.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="839.4" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="837.7" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="840.7" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.158] (7 samples, 0.10%)</title><rect x="838.0" y="851.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="841.0" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (19 samples, 0.26%)</title><rect x="839.3" y="851.0" width="3.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="842.3" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (8 samples, 0.11%)</title><rect x="841.1" y="835.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="844.1" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned int) (2 samples, 0.03%)</title><rect x="842.4" y="851.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="845.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,540 samples, 21.26%)</title><rect x="842.8" y="867.0" width="250.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="845.8" y="878.0">rocksdb::DB::Put(rocksdb::WriteOp..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.08%)</title><rect x="843.1" y="851.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="846.1" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,532 samples, 21.15%)</title><rect x="844.1" y="851.0" width="249.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="847.1" y="862.0">rocksdb::DBImpl::Put(rocksdb::Wri..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,512 samples, 20.87%)</title><rect x="844.1" y="835.0" width="246.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="847.1" y="846.0">rocksdb::DB::Put(rocksdb::WriteOp..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="844.4" y="819.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="847.4" y="830.0"></text>
</g>
<g>
<title>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.03%)</title><rect x="844.7" y="819.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="847.7" y="830.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="845.0" y="819.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="848.0" y="830.0"></text>
</g>
<g>
<title>free (9 samples, 0.12%)</title><rect x="845.4" y="819.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="848.4" y="830.0"></text>
</g>
<g>
<title>operator delete(void*) (8 samples, 0.11%)</title><rect x="846.8" y="819.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="849.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1,391 samples, 19.20%)</title><rect x="848.1" y="819.0" width="226.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="851.1" y="830.0">rocksdb::DBImpl::Write(rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (8 samples, 0.11%)</title><rect x="848.1" y="803.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="851.1" y="814.0"></text>
</g>
<g>
<title>___tls_get_addr (4 samples, 0.06%)</title><rect x="849.4" y="803.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="852.4" y="814.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="850.1" y="803.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="853.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (6 samples, 0.08%)</title><rect x="850.6" y="803.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="853.6" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (3 samples, 0.04%)</title><rect x="851.6" y="803.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="854.6" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (1,312 samples, 18.11%)</title><rect x="852.0" y="803.0" width="213.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="855.0" y="814.0">rocksdb::DBImpl::WriteImpl(r..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (6 samples, 0.08%)</title><rect x="863.6" y="787.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="866.6" y="798.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (5 samples, 0.07%)</title><rect x="864.6" y="787.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="867.6" y="798.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (5 samples, 0.07%)</title><rect x="865.4" y="787.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="868.4" y="798.0"></text>
</g>
<g>
<title>___tls_get_addr (7 samples, 0.10%)</title><rect x="866.2" y="787.0" width="1.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="869.2" y="798.0"></text>
</g>
<g>
<title>_init (6 samples, 0.08%)</title><rect x="867.5" y="787.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="870.5" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (10 samples, 0.14%)</title><rect x="868.5" y="787.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="871.5" y="798.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.03%)</title><rect x="870.1" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="873.1" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="870.1" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="873.1" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="870.1" y="755.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="873.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned int*, rocksdb::WriteBatch**) (5 samples, 0.07%)</title><rect x="870.4" y="787.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="873.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (17 samples, 0.23%)</title><rect x="871.3" y="787.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="874.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (12 samples, 0.17%)</title><rect x="874.0" y="787.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="877.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (4 samples, 0.06%)</title><rect x="874.7" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="877.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (4 samples, 0.06%)</title><rect x="875.3" y="771.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="878.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (4 samples, 0.06%)</title><rect x="876.0" y="787.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="879.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (677 samples, 9.34%)</title><rect x="876.8" y="787.0" width="110.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="879.8" y="798.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (660 samples, 9.11%)</title><rect x="878.6" y="771.0" width="107.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="881.6" y="782.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (651 samples, 8.99%)</title><rect x="879.4" y="755.0" width="106.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="882.4" y="766.0">rocksdb::log:..</text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="879.7" y="739.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="882.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="880.2" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="883.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.04%)</title><rect x="880.7" y="739.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="883.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned int) (5 samples, 0.07%)</title><rect x="881.2" y="739.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="884.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned int) (635 samples, 8.76%)</title><rect x="882.0" y="739.0" width="103.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="885.0" y="750.0">rocksdb::log..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (11 samples, 0.15%)</title><rect x="882.7" y="723.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="885.7" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (8 samples, 0.11%)</title><rect x="884.5" y="723.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="887.5" y="734.0"></text>
</g>
<g>
<title>___tls_get_addr (2 samples, 0.03%)</title><rect x="885.8" y="723.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="888.8" y="734.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="886.1" y="723.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="889.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush() (2 samples, 0.03%)</title><rect x="886.4" y="723.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="889.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (6 samples, 0.08%)</title><rect x="886.7" y="723.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="889.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned int, unsigned int) (2 samples, 0.03%)</title><rect x="887.7" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="890.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (5 samples, 0.07%)</title><rect x="888.0" y="723.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="891.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned int, unsigned int) (2 samples, 0.03%)</title><rect x="888.5" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="891.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (592 samples, 8.17%)</title><rect x="888.9" y="723.0" width="96.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="891.9" y="734.0">rocksdb::Wr..</text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (2 samples, 0.03%)</title><rect x="889.7" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="892.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="890.0" y="707.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="893.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (2 samples, 0.03%)</title><rect x="890.3" y="707.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="893.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (3 samples, 0.04%)</title><rect x="890.6" y="707.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="893.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned int) (578 samples, 7.98%)</title><rect x="891.1" y="707.0" width="94.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="894.1" y="718.0">rocksdb::Wr..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="892.9" y="691.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="895.9" y="702.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.07%)</title><rect x="892.9" y="675.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="895.9" y="686.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.07%)</title><rect x="892.9" y="659.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="895.9" y="670.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="893.1" y="643.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="896.1" y="654.0"></text>
</g>
<g>
<title>__kernel_vsyscall (556 samples, 7.67%)</title><rect x="893.7" y="691.0" width="90.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="896.7" y="702.0">__kernel_v..</text>
</g>
<g>
<title>entry_SYSENTER_32 (551 samples, 7.61%)</title><rect x="894.6" y="675.0" width="89.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="897.6" y="686.0">entry_SYSE..</text>
</g>
<g>
<title>do_fast_syscall_32 (550 samples, 7.59%)</title><rect x="894.6" y="659.0" width="89.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="897.6" y="670.0">do_fast_sy..</text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.07%)</title><rect x="894.7" y="643.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="897.7" y="654.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.07%)</title><rect x="894.7" y="627.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="897.7" y="638.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.07%)</title><rect x="894.7" y="611.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="897.7" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.07%)</title><rect x="894.7" y="595.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="897.7" y="606.0"></text>
</g>
<g>
<title>sys_write (544 samples, 7.51%)</title><rect x="895.5" y="643.0" width="88.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="898.5" y="654.0">sys_write</text>
</g>
<g>
<title>__fdget_pos (19 samples, 0.26%)</title><rect x="895.7" y="627.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="898.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.21%)</title><rect x="895.7" y="611.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="898.7" y="622.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.21%)</title><rect x="895.7" y="595.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="898.7" y="606.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.04%)</title><rect x="898.1" y="611.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="901.1" y="622.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.03%)</title><rect x="899.3" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="902.3" y="638.0"></text>
</g>
<g>
<title>vfs_write (518 samples, 7.15%)</title><rect x="899.8" y="627.0" width="84.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="902.8" y="638.0">vfs_write</text>
</g>
<g>
<title>__sb_start_write (6 samples, 0.08%)</title><rect x="900.4" y="611.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="903.4" y="622.0"></text>
</g>
<g>
<title>__vfs_write (489 samples, 6.75%)</title><rect x="901.4" y="611.0" width="79.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="904.4" y="622.0">__vfs_write</text>
</g>
<g>
<title>ext4_file_write_iter (2 samples, 0.03%)</title><rect x="901.7" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="904.7" y="606.0"></text>
</g>
<g>
<title>new_sync_write (485 samples, 6.69%)</title><rect x="902.0" y="595.0" width="79.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="905.0" y="606.0">new_sync_..</text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.03%)</title><rect x="902.0" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="905.0" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (482 samples, 6.65%)</title><rect x="902.4" y="579.0" width="78.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="905.4" y="590.0">ext4_file..</text>
</g>
<g>
<title>__generic_file_write_iter (460 samples, 6.35%)</title><rect x="904.2" y="563.0" width="74.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="907.2" y="574.0">__generi..</text>
</g>
<g>
<title>__mnt_want_write_file (2 samples, 0.03%)</title><rect x="904.5" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="907.5" y="558.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.04%)</title><rect x="905.3" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="908.3" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.04%)</title><rect x="905.8" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="908.8" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_end (4 samples, 0.06%)</title><rect x="906.3" y="547.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="909.3" y="558.0"></text>
</g>
<g>
<title>file_remove_privs (10 samples, 0.14%)</title><rect x="906.9" y="547.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="909.9" y="558.0"></text>
</g>
<g>
<title>file_update_time (93 samples, 1.28%)</title><rect x="908.6" y="547.0" width="15.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="911.6" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.03%)</title><rect x="909.2" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="912.2" y="542.0"></text>
</g>
<g>
<title>generic_update_time (86 samples, 1.19%)</title><rect x="909.7" y="531.0" width="14.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="912.7" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (86 samples, 1.19%)</title><rect x="909.7" y="515.0" width="14.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="912.7" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (82 samples, 1.13%)</title><rect x="910.4" y="499.0" width="13.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="913.4" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (11 samples, 0.15%)</title><rect x="910.4" y="483.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="913.4" y="494.0"></text>
</g>
<g>
<title>jbd2__journal_start (11 samples, 0.15%)</title><rect x="910.4" y="467.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="913.4" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc (5 samples, 0.07%)</title><rect x="910.8" y="451.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="913.8" y="462.0"></text>
</g>
<g>
<title>start_this_handle (3 samples, 0.04%)</title><rect x="911.7" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="914.7" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_stop (10 samples, 0.14%)</title><rect x="912.1" y="483.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="915.1" y="494.0"></text>
</g>
<g>
<title>jbd2_journal_stop (9 samples, 0.12%)</title><rect x="912.3" y="467.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="915.3" y="478.0"></text>
</g>
<g>
<title>__wake_up (3 samples, 0.04%)</title><rect x="912.8" y="451.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="915.8" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="912.8" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="915.8" y="446.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.04%)</title><rect x="913.3" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="916.3" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (58 samples, 0.80%)</title><rect x="913.8" y="483.0" width="9.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="916.8" y="494.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (33 samples, 0.46%)</title><rect x="914.4" y="467.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.4" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (30 samples, 0.41%)</title><rect x="914.7" y="451.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="917.7" y="462.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.03%)</title><rect x="916.5" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.5" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (16 samples, 0.22%)</title><rect x="917.0" y="435.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="920.0" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.52 (16 samples, 0.22%)</title><rect x="917.0" y="419.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="920.0" y="430.0"></text>
</g>
<g>
<title>chksum_update (2 samples, 0.03%)</title><rect x="917.2" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="920.2" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (13 samples, 0.18%)</title><rect x="917.5" y="403.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="920.5" y="414.0"></text>
</g>
<g>
<title>chksum_update (13 samples, 0.18%)</title><rect x="917.5" y="387.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="920.5" y="398.0"></text>
</g>
<g>
<title>__crc32c_le (13 samples, 0.18%)</title><rect x="917.5" y="371.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="920.5" y="382.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (21 samples, 0.29%)</title><rect x="919.8" y="467.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="922.8" y="478.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (17 samples, 0.23%)</title><rect x="919.8" y="451.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="922.8" y="462.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.03%)</title><rect x="920.0" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="923.0" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (10 samples, 0.14%)</title><rect x="920.3" y="435.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="923.3" y="446.0"></text>
</g>
<g>
<title>__find_get_block (7 samples, 0.10%)</title><rect x="920.4" y="419.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="923.4" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (6 samples, 0.08%)</title><rect x="920.6" y="403.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="923.6" y="414.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.03%)</title><rect x="921.6" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="924.6" y="430.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.04%)</title><rect x="921.9" y="435.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="924.9" y="446.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.03%)</title><rect x="923.2" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="926.2" y="494.0"></text>
</g>
<g>
<title>generic_perform_write (332 samples, 4.58%)</title><rect x="923.7" y="547.0" width="54.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="926.7" y="558.0">gener..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (4 samples, 0.06%)</title><rect x="924.5" y="531.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="927.5" y="542.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="925.2" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="928.2" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (97 samples, 1.34%)</title><rect x="925.5" y="531.0" width="15.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="928.5" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (19 samples, 0.26%)</title><rect x="927.0" y="515.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="930.0" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (16 samples, 0.22%)</title><rect x="927.1" y="499.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="930.1" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (6 samples, 0.08%)</title><rect x="927.8" y="483.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="930.8" y="494.0"></text>
</g>
<g>
<title>start_this_handle (6 samples, 0.08%)</title><rect x="928.8" y="483.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="931.8" y="494.0"></text>
</g>
<g>
<title>ext4_block_write_begin (25 samples, 0.35%)</title><rect x="930.1" y="515.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="933.1" y="526.0"></text>
</g>
<g>
<title>clean_bdev_aliases (2 samples, 0.03%)</title><rect x="933.8" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="936.8" y="510.0"></text>
</g>
<g>
<title>pagevec_lookup_range (2 samples, 0.03%)</title><rect x="933.8" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="936.8" y="494.0"></text>
</g>
<g>
<title>find_get_pages_range (2 samples, 0.03%)</title><rect x="933.8" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.8" y="478.0"></text>
</g>
<g>
<title>ext4_nonda_switch (3 samples, 0.04%)</title><rect x="934.1" y="515.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="937.1" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (37 samples, 0.51%)</title><rect x="934.6" y="515.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="937.6" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (30 samples, 0.41%)</title><rect x="934.9" y="499.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="937.9" y="510.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="935.3" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="938.3" y="494.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="935.3" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="938.3" y="478.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (2 samples, 0.03%)</title><rect x="935.8" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="938.8" y="494.0"></text>
</g>
<g>
<title>find_get_entry (22 samples, 0.30%)</title><rect x="936.1" y="483.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="939.1" y="494.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (12 samples, 0.17%)</title><rect x="937.7" y="467.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="940.7" y="478.0"></text>
</g>
<g>
<title>__radix_tree_lookup (11 samples, 0.15%)</title><rect x="937.9" y="451.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="940.9" y="462.0"></text>
</g>
<g>
<title>wait_for_stable_page (5 samples, 0.07%)</title><rect x="939.8" y="499.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="942.8" y="510.0"></text>
</g>
<g>
<title>wait_for_stable_page (2 samples, 0.03%)</title><rect x="941.0" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="944.0" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (198 samples, 2.73%)</title><rect x="941.3" y="531.0" width="32.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="944.3" y="542.0">ex..</text>
</g>
<g>
<title>__ext4_journal_stop (14 samples, 0.19%)</title><rect x="942.3" y="515.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="945.3" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (12 samples, 0.17%)</title><rect x="942.3" y="499.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="945.3" y="510.0"></text>
</g>
<g>
<title>__wake_up (5 samples, 0.07%)</title><rect x="943.3" y="483.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="946.3" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.07%)</title><rect x="943.3" y="467.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="946.3" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="943.6" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.6" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="944.2" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="947.2" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (6 samples, 0.08%)</title><rect x="944.6" y="515.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="947.6" y="526.0"></text>
</g>
<g>
<title>block_write_end (3 samples, 0.04%)</title><rect x="945.5" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="948.5" y="526.0"></text>
</g>
<g>
<title>generic_write_end (169 samples, 2.33%)</title><rect x="946.0" y="515.0" width="27.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="949.0" y="526.0">g..</text>
</g>
<g>
<title>__mark_inode_dirty (163 samples, 2.25%)</title><rect x="946.0" y="499.0" width="26.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="949.0" y="510.0">_..</text>
</g>
<g>
<title>ext4_dirty_inode (155 samples, 2.14%)</title><rect x="947.0" y="483.0" width="25.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="950.0" y="494.0">e..</text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.03%)</title><rect x="947.2" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="950.2" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.04%)</title><rect x="947.5" y="467.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="950.5" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (148 samples, 2.04%)</title><rect x="948.0" y="467.0" width="24.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="951.0" y="478.0">e..</text>
</g>
<g>
<title>__ext4_journal_get_write_access (2 samples, 0.03%)</title><rect x="948.3" y="451.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="951.3" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (97 samples, 1.34%)</title><rect x="948.8" y="451.0" width="15.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="951.8" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (87 samples, 1.20%)</title><rect x="949.6" y="435.0" width="14.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="952.6" y="446.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (6 samples, 0.08%)</title><rect x="950.9" y="419.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="953.9" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (2 samples, 0.03%)</title><rect x="951.6" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="954.6" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (64 samples, 0.88%)</title><rect x="952.0" y="419.0" width="10.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="955.0" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.52 (61 samples, 0.84%)</title><rect x="952.5" y="403.0" width="10.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="955.5" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (57 samples, 0.79%)</title><rect x="953.2" y="387.0" width="9.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="956.2" y="398.0"></text>
</g>
<g>
<title>__crc32c_le (3 samples, 0.04%)</title><rect x="954.2" y="371.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="957.2" y="382.0"></text>
</g>
<g>
<title>chksum_update (43 samples, 0.59%)</title><rect x="954.7" y="371.0" width="7.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="957.7" y="382.0"></text>
</g>
<g>
<title>__crc32c_le (43 samples, 0.59%)</title><rect x="954.7" y="355.0" width="7.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="957.7" y="366.0"></text>
</g>
<g>
<title>memcpy (4 samples, 0.06%)</title><rect x="961.7" y="371.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="964.7" y="382.0"></text>
</g>
<g>
<title>from_kgid (2 samples, 0.03%)</title><rect x="962.5" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="965.5" y="430.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.03%)</title><rect x="962.5" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="965.5" y="414.0"></text>
</g>
<g>
<title>from_kuid (2 samples, 0.03%)</title><rect x="963.0" y="419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="966.0" y="430.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.03%)</title><rect x="963.0" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="966.0" y="414.0"></text>
</g>
<g>
<title>map_id_up (3 samples, 0.04%)</title><rect x="963.3" y="419.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="966.3" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.03%)</title><rect x="963.8" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="966.8" y="446.0"></text>
</g>
<g>
<title>from_kuid (3 samples, 0.04%)</title><rect x="964.1" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="967.1" y="446.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (46 samples, 0.63%)</title><rect x="964.6" y="451.0" width="7.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="967.6" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (29 samples, 0.40%)</title><rect x="964.7" y="435.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="967.7" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (18 samples, 0.25%)</title><rect x="965.6" y="419.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="968.6" y="430.0"></text>
</g>
<g>
<title>__find_get_block (13 samples, 0.18%)</title><rect x="965.6" y="403.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="968.6" y="414.0"></text>
</g>
<g>
<title>mark_page_accessed (8 samples, 0.11%)</title><rect x="966.4" y="387.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="969.4" y="398.0"></text>
</g>
<g>
<title>mark_page_accessed (4 samples, 0.06%)</title><rect x="967.8" y="403.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="970.8" y="414.0"></text>
</g>
<g>
<title>ext4_get_group_desc (5 samples, 0.07%)</title><rect x="968.5" y="419.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="971.5" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (5 samples, 0.07%)</title><rect x="969.5" y="435.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="972.5" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (3 samples, 0.04%)</title><rect x="969.5" y="419.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="972.5" y="430.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.8 (3 samples, 0.04%)</title><rect x="969.5" y="403.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="972.5" y="414.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.8 (2 samples, 0.03%)</title><rect x="970.0" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="973.0" y="430.0"></text>
</g>
<g>
<title>ext4_get_group_desc (4 samples, 0.06%)</title><rect x="970.4" y="435.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="973.4" y="446.0"></text>
</g>
<g>
<title>ext4_inode_table (5 samples, 0.07%)</title><rect x="971.1" y="435.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="974.1" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.03%)</title><rect x="972.2" y="483.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="975.2" y="494.0"></text>
</g>
<g>
<title>block_write_end (4 samples, 0.06%)</title><rect x="972.6" y="499.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="975.6" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.27 (2 samples, 0.03%)</title><rect x="972.6" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="975.6" y="494.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.03%)</title><rect x="972.9" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="975.9" y="494.0"></text>
</g>
<g>
<title>ext4_nonda_switch (3 samples, 0.04%)</title><rect x="973.5" y="531.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="976.5" y="542.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.03%)</title><rect x="974.0" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="977.0" y="542.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="974.4" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="977.4" y="542.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (14 samples, 0.19%)</title><rect x="974.7" y="531.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="977.7" y="542.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.07%)</title><rect x="975.3" y="515.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="978.3" y="526.0"></text>
</g>
<g>
<title>__copy_user_ll (4 samples, 0.06%)</title><rect x="975.5" y="499.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="978.5" y="510.0"></text>
</g>
<g>
<title>kmap_atomic (5 samples, 0.07%)</title><rect x="976.2" y="515.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="979.2" y="526.0"></text>
</g>
<g>
<title>kmap_atomic_prot (5 samples, 0.07%)</title><rect x="976.2" y="499.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="979.2" y="510.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (3 samples, 0.04%)</title><rect x="977.0" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="980.0" y="542.0"></text>
</g>
<g>
<title>kmap_atomic (2 samples, 0.03%)</title><rect x="977.5" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="980.5" y="542.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (5 samples, 0.07%)</title><rect x="978.3" y="547.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="981.3" y="558.0"></text>
</g>
<g>
<title>ext4_write_checks (6 samples, 0.08%)</title><rect x="979.1" y="563.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="982.1" y="574.0"></text>
</g>
<g>
<title>generic_write_checks (6 samples, 0.08%)</title><rect x="979.1" y="547.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="982.1" y="558.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.03%)</title><rect x="980.5" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="983.5" y="574.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="981.0" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="984.0" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (15 samples, 0.21%)</title><rect x="981.5" y="611.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="984.5" y="622.0"></text>
</g>
<g>
<title>security_file_permission (10 samples, 0.14%)</title><rect x="982.3" y="595.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="985.3" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (10 samples, 0.14%)</title><rect x="982.3" y="579.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="985.3" y="590.0"></text>
</g>
<g>
<title>common_file_perm (10 samples, 0.14%)</title><rect x="982.3" y="563.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="985.3" y="574.0"></text>
</g>
<g>
<title>aa_file_perm (7 samples, 0.10%)</title><rect x="982.8" y="547.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="985.8" y="558.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="984.5" y="691.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="987.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="984.8" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="987.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned int) (4 samples, 0.06%)</title><rect x="985.4" y="755.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="988.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (3 samples, 0.04%)</title><rect x="986.1" y="771.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="989.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="986.6" y="771.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="989.6" y="782.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (7 samples, 0.10%)</title><rect x="987.1" y="787.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="990.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (23 samples, 0.32%)</title><rect x="988.2" y="787.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="991.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (13 samples, 0.18%)</title><rect x="988.7" y="771.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="991.7" y="782.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.04%)</title><rect x="988.7" y="755.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="991.7" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (5 samples, 0.07%)</title><rect x="989.2" y="755.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="992.2" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.06%)</title><rect x="990.2" y="755.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="993.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (7 samples, 0.10%)</title><rect x="990.8" y="771.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="993.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (5 samples, 0.07%)</title><rect x="991.9" y="787.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="994.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.03%)</title><rect x="992.9" y="787.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="995.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.03%)</title><rect x="993.3" y="787.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="996.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (4 samples, 0.06%)</title><rect x="993.6" y="787.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="996.6" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (5 samples, 0.07%)</title><rect x="994.2" y="787.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="997.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.06%)</title><rect x="995.0" y="787.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="998.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (370 samples, 5.11%)</title><rect x="995.7" y="787.0" width="60.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="998.7" y="798.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.08%)</title><rect x="996.3" y="771.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="999.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.04%)</title><rect x="997.3" y="771.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1000.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (355 samples, 4.90%)</title><rect x="998.0" y="771.0" width="57.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1001.0" y="782.0">rocksd..</text>
</g>
<g>
<title>rocksdb::GetLengthPrefixedSlice(rocksdb::Slice*, rocksdb::Slice*) (9 samples, 0.12%)</title><rect x="1000.1" y="755.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1003.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (317 samples, 4.38%)</title><rect x="1001.6" y="755.0" width="51.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1004.6" y="766.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (3 samples, 0.04%)</title><rect x="1001.7" y="739.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1004.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.03%)</title><rect x="1002.2" y="739.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1005.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (311 samples, 4.29%)</title><rect x="1002.5" y="739.0" width="50.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1005.5" y="750.0">rocks..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (12 samples, 0.17%)</title><rect x="1004.5" y="723.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1007.5" y="734.0"></text>
</g>
<g>
<title>common_exception (10 samples, 0.14%)</title><rect x="1004.8" y="707.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1007.8" y="718.0"></text>
</g>
<g>
<title>do_page_fault (10 samples, 0.14%)</title><rect x="1004.8" y="691.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1007.8" y="702.0"></text>
</g>
<g>
<title>__do_page_fault (10 samples, 0.14%)</title><rect x="1004.8" y="675.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1007.8" y="686.0"></text>
</g>
<g>
<title>handle_mm_fault (8 samples, 0.11%)</title><rect x="1005.0" y="659.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1008.0" y="670.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (4 samples, 0.06%)</title><rect x="1005.1" y="643.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1008.1" y="654.0"></text>
</g>
<g>
<title>get_page_from_freelist (4 samples, 0.06%)</title><rect x="1005.1" y="627.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1008.1" y="638.0"></text>
</g>
<g>
<title>native_set_pte_at (3 samples, 0.04%)</title><rect x="1005.8" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1008.8" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (6 samples, 0.08%)</title><rect x="1006.4" y="723.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1009.4" y="734.0"></text>
</g>
<g>
<title>_init (4 samples, 0.06%)</title><rect x="1007.4" y="723.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1010.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (5 samples, 0.07%)</title><rect x="1008.1" y="723.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1011.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.03%)</title><rect x="1008.9" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1011.9" y="734.0"></text>
</g>
<g>
<title>common_exception (2 samples, 0.03%)</title><rect x="1008.9" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1011.9" y="718.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="1008.9" y="691.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1011.9" y="702.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="1008.9" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1011.9" y="686.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="1008.9" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1011.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (262 samples, 3.62%)</title><rect x="1009.2" y="723.0" width="42.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1012.2" y="734.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (224 samples, 3.09%)</title><rect x="1010.5" y="707.0" width="36.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1013.5" y="718.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (32 samples, 0.44%)</title><rect x="1010.7" y="691.0" width="5.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1013.7" y="702.0"></text>
</g>
<g>
<title>common_exception (3 samples, 0.04%)</title><rect x="1012.0" y="675.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1015.0" y="686.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.04%)</title><rect x="1012.0" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1015.0" y="670.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.04%)</title><rect x="1012.0" y="643.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1015.0" y="654.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.04%)</title><rect x="1012.0" y="627.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1015.0" y="638.0"></text>
</g>
<g>
<title>native_set_pte_at (3 samples, 0.04%)</title><rect x="1012.0" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1015.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned int, unsigned int, rocksdb::Logger*) (6 samples, 0.08%)</title><rect x="1012.5" y="675.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1015.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned int, unsigned int, rocksdb::Logger*) (15 samples, 0.21%)</title><rect x="1013.4" y="675.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1016.4" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (186 samples, 2.57%)</title><rect x="1016.1" y="691.0" width="30.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1019.1" y="702.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (165 samples, 2.28%)</title><rect x="1017.5" y="675.0" width="26.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1020.5" y="686.0">/..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.04%)</title><rect x="1033.3" y="659.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1036.3" y="670.0"></text>
</g>
<g>
<title>___tls_get_addr (4 samples, 0.06%)</title><rect x="1033.8" y="659.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1036.8" y="670.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="1034.5" y="659.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1037.5" y="670.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.03%)</title><rect x="1034.8" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1037.8" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="1034.8" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.8" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="1034.8" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1037.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (57 samples, 0.79%)</title><rect x="1035.1" y="659.0" width="9.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.1" y="670.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (19 samples, 0.26%)</title><rect x="1038.4" y="643.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1041.4" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15839031220246833615.so (9 samples, 0.12%)</title><rect x="1041.5" y="643.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1044.5" y="654.0"></text>
</g>
<g>
<title>_init (7 samples, 0.10%)</title><rect x="1043.3" y="643.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1046.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (6 samples, 0.08%)</title><rect x="1044.6" y="675.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1047.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.06%)</title><rect x="1045.5" y="675.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1048.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTableRep::KeyComparator::decode_key(char const*) const (2 samples, 0.03%)</title><rect x="1046.7" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1049.7" y="702.0"></text>
</g>
<g>
<title>common_exception (12 samples, 0.17%)</title><rect x="1047.2" y="707.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1050.2" y="718.0"></text>
</g>
<g>
<title>do_page_fault (12 samples, 0.17%)</title><rect x="1047.2" y="691.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1050.2" y="702.0"></text>
</g>
<g>
<title>__do_page_fault (12 samples, 0.17%)</title><rect x="1047.2" y="675.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1050.2" y="686.0"></text>
</g>
<g>
<title>handle_mm_fault (12 samples, 0.17%)</title><rect x="1047.2" y="659.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1050.2" y="670.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (4 samples, 0.06%)</title><rect x="1047.3" y="643.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1050.3" y="654.0"></text>
</g>
<g>
<title>get_page_from_freelist (4 samples, 0.06%)</title><rect x="1047.3" y="627.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1050.3" y="638.0"></text>
</g>
<g>
<title>native_set_pte_at (7 samples, 0.10%)</title><rect x="1048.0" y="643.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1051.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (7 samples, 0.10%)</title><rect x="1049.4" y="707.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1052.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (6 samples, 0.08%)</title><rect x="1049.6" y="691.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1052.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (8 samples, 0.11%)</title><rect x="1050.6" y="707.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1053.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (4 samples, 0.06%)</title><rect x="1051.9" y="723.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1054.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long long, rocksdb::ValueType) (4 samples, 0.06%)</title><rect x="1052.5" y="723.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1055.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (7 samples, 0.10%)</title><rect x="1053.2" y="755.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1056.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (9 samples, 0.12%)</title><rect x="1054.3" y="755.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1057.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::GetLengthPrefixedSlice(rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="1055.5" y="739.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1058.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long long) (5 samples, 0.07%)</title><rect x="1056.1" y="787.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1059.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (11 samples, 0.15%)</title><rect x="1056.9" y="787.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1059.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="1058.7" y="787.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1061.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (6 samples, 0.08%)</title><rect x="1059.2" y="787.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1062.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (7 samples, 0.10%)</title><rect x="1060.2" y="787.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1063.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (13 samples, 0.18%)</title><rect x="1061.3" y="787.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1064.3" y="798.0"></text>
</g>
<g>
<title>__clock_gettime (9 samples, 0.12%)</title><rect x="1061.3" y="771.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1064.3" y="782.0"></text>
</g>
<g>
<title>__kernel_vsyscall (7 samples, 0.10%)</title><rect x="1061.5" y="755.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1064.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.07%)</title><rect x="1061.8" y="739.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1064.8" y="750.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.07%)</title><rect x="1061.8" y="723.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1064.8" y="734.0"></text>
</g>
<g>
<title>sys_clock_gettime (5 samples, 0.07%)</title><rect x="1061.8" y="707.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1064.8" y="718.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (4 samples, 0.06%)</title><rect x="1061.8" y="691.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1064.8" y="702.0"></text>
</g>
<g>
<title>ktime_get_ts64 (4 samples, 0.06%)</title><rect x="1061.8" y="675.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1064.8" y="686.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.03%)</title><rect x="1062.1" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1065.1" y="670.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="1062.1" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1065.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (9 samples, 0.12%)</title><rect x="1063.4" y="787.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1066.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (4 samples, 0.06%)</title><rect x="1064.9" y="787.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1067.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (4 samples, 0.06%)</title><rect x="1065.7" y="803.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1068.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (7 samples, 0.10%)</title><rect x="1066.4" y="803.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1069.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (7 samples, 0.10%)</title><rect x="1067.5" y="803.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1070.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (7 samples, 0.10%)</title><rect x="1068.7" y="803.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1071.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (5 samples, 0.07%)</title><rect x="1069.8" y="803.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1072.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned int, unsigned int) (9 samples, 0.12%)</title><rect x="1070.6" y="803.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1073.6" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1072.1" y="803.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1075.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.03%)</title><rect x="1072.4" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1075.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (4 samples, 0.06%)</title><rect x="1072.7" y="803.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1075.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (8 samples, 0.11%)</title><rect x="1073.4" y="803.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1076.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (8 samples, 0.11%)</title><rect x="1074.7" y="819.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1077.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (9 samples, 0.12%)</title><rect x="1076.0" y="819.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1079.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (42 samples, 0.58%)</title><rect x="1077.5" y="819.0" width="6.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.5" y="830.0"></text>
</g>
<g>
<title>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.25 (3 samples, 0.04%)</title><rect x="1077.5" y="803.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1080.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (6 samples, 0.08%)</title><rect x="1077.9" y="803.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1080.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (8 samples, 0.11%)</title><rect x="1079.1" y="803.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1082.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (5 samples, 0.07%)</title><rect x="1080.4" y="803.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1083.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 0.15%)</title><rect x="1081.2" y="803.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1084.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (4 samples, 0.06%)</title><rect x="1082.0" y="787.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1085.0" y="798.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (2 samples, 0.03%)</title><rect x="1082.7" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1085.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (2 samples, 0.03%)</title><rect x="1083.0" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1086.0" y="814.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned int) (6 samples, 0.08%)</title><rect x="1083.3" y="803.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1086.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned int, unsigned int) (3 samples, 0.04%)</title><rect x="1084.3" y="819.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1087.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.03%)</title><rect x="1084.8" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1087.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.10%)</title><rect x="1085.1" y="819.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1088.1" y="830.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned int) (3 samples, 0.04%)</title><rect x="1086.3" y="819.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1089.3" y="830.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (3 samples, 0.04%)</title><rect x="1086.7" y="819.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1089.7" y="830.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;) (5 samples, 0.07%)</title><rect x="1087.2" y="819.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1090.2" y="830.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned int) (10 samples, 0.14%)</title><rect x="1088.2" y="819.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1091.2" y="830.0"></text>
</g>
<g>
<title>std::string::resize(unsigned int, char) (3 samples, 0.04%)</title><rect x="1089.8" y="819.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1092.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (3 samples, 0.04%)</title><rect x="1090.3" y="835.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1093.3" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 0.14%)</title><rect x="1090.8" y="835.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1093.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned int, unsigned int) (7 samples, 0.10%)</title><rect x="1092.4" y="835.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1095.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (4 samples, 0.06%)</title><rect x="1093.6" y="867.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1096.6" y="878.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned int) (2 samples, 0.03%)</title><rect x="1094.4" y="867.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1097.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.32%)</title><rect x="1094.7" y="899.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1097.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1094.9" y="883.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1097.9" y="894.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.03%)</title><rect x="1094.9" y="867.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1097.9" y="878.0"></text>
</g>
<g>
<title>__kernel_vsyscall (10 samples, 0.14%)</title><rect x="1095.2" y="883.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1098.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (10 samples, 0.14%)</title><rect x="1095.2" y="867.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1098.2" y="878.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (10 samples, 0.14%)</title><rect x="1095.2" y="851.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1098.2" y="862.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.14%)</title><rect x="1095.2" y="835.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1098.2" y="846.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.14%)</title><rect x="1095.2" y="819.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1098.2" y="830.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.08%)</title><rect x="1095.4" y="803.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1098.4" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.08%)</title><rect x="1095.4" y="787.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1098.4" y="798.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.07%)</title><rect x="1095.5" y="771.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1098.5" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.07%)</title><rect x="1095.5" y="755.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1098.5" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.07%)</title><rect x="1095.5" y="739.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1098.5" y="750.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="1096.3" y="803.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1099.3" y="814.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="1096.3" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1099.3" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="1096.3" y="771.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1099.3" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="1096.3" y="755.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1099.3" y="766.0"></text>
</g>
<g>
<title>malloc (9 samples, 0.12%)</title><rect x="1096.8" y="883.0" width="1.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1099.8" y="894.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="1098.5" y="899.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1101.5" y="910.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.06%)</title><rect x="1099.0" y="899.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1102.0" y="910.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (5 samples, 0.07%)</title><rect x="1099.6" y="899.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1102.6" y="910.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned int) (7 samples, 0.10%)</title><rect x="1100.4" y="899.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1103.4" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (18 samples, 0.25%)</title><rect x="1101.7" y="931.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1104.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1101.7" y="915.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1104.7" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.04%)</title><rect x="1101.7" y="899.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1104.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.04%)</title><rect x="1101.7" y="883.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1104.7" y="894.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.04%)</title><rect x="1101.7" y="867.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1104.7" y="878.0"></text>
</g>
<g>
<title>__kernel_vsyscall (12 samples, 0.17%)</title><rect x="1102.2" y="915.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1105.2" y="926.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (9 samples, 0.12%)</title><rect x="1102.7" y="899.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1105.7" y="910.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (9 samples, 0.12%)</title><rect x="1102.7" y="883.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1105.7" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="1103.4" y="867.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1106.4" y="878.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="1103.4" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1106.4" y="862.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="1103.4" y="835.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1106.4" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="1103.4" y="819.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1106.4" y="830.0"></text>
</g>
<g>
<title>sys_gettimeofday (3 samples, 0.04%)</title><rect x="1103.7" y="867.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1106.7" y="878.0"></text>
</g>
<g>
<title>do_gettimeofday (2 samples, 0.03%)</title><rect x="1103.8" y="851.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1106.8" y="862.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.03%)</title><rect x="1103.8" y="835.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1106.8" y="846.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (3 samples, 0.04%)</title><rect x="1104.2" y="915.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1107.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/ByteBufferUtils.restoreByteArray (7 samples, 0.10%)</title><rect x="1104.7" y="931.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1107.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/ByteBufferUtils.getByteArray (7 samples, 0.10%)</title><rect x="1104.7" y="915.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.7" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.10%)</title><rect x="1104.7" y="899.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1107.7" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.10%)</title><rect x="1104.7" y="883.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.7" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.10%)</title><rect x="1104.7" y="867.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1107.7" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.10%)</title><rect x="1104.7" y="851.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1107.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.10%)</title><rect x="1104.7" y="835.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.10%)</title><rect x="1104.7" y="819.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1107.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/DataWithTimestamp.toBytes (8 samples, 0.11%)</title><rect x="1106.0" y="931.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1109.0" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.11%)</title><rect x="1106.0" y="915.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1109.0" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.11%)</title><rect x="1106.0" y="899.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1109.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Bridges.getBridgeTo (18 samples, 0.25%)</title><rect x="1107.3" y="947.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.3" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (18 samples, 0.25%)</title><rect x="1107.3" y="931.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.3" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (18 samples, 0.25%)</title><rect x="1107.3" y="915.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1110.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (26 samples, 0.36%)</title><rect x="1110.2" y="1011.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.2" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.get (26 samples, 0.36%)</title><rect x="1110.2" y="995.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.2" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (26 samples, 0.36%)</title><rect x="1110.2" y="979.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1113.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (21 samples, 0.29%)</title><rect x="1114.6" y="1043.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (20 samples, 0.28%)</title><rect x="1114.6" y="1027.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1117.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (20 samples, 0.28%)</title><rect x="1114.6" y="1011.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (77 samples, 1.06%)</title><rect x="1118.0" y="1043.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1121.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (77 samples, 1.06%)</title><rect x="1118.0" y="1027.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1121.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (316 samples, 4.36%)</title><rect x="1130.7" y="1059.0" width="51.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.7" y="1070.0">one/n..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (310 samples, 4.28%)</title><rect x="1131.5" y="1043.0" width="50.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.5" y="1054.0">one/n..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.12%)</title><rect x="1131.5" y="1027.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="1132.2" y="1011.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.2" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="1132.2" y="995.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="1132.2" y="979.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.2" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.07%)</title><rect x="1132.2" y="963.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.2" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.07%)</title><rect x="1132.2" y="947.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.2" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (301 samples, 4.15%)</title><rect x="1133.0" y="1027.0" width="49.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.0" y="1038.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (277 samples, 3.82%)</title><rect x="1133.0" y="1011.0" width="45.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1136.0" y="1022.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (274 samples, 3.78%)</title><rect x="1133.5" y="995.0" width="44.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.5" y="1006.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (264 samples, 3.64%)</title><rect x="1133.5" y="979.0" width="43.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.5" y="990.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (264 samples, 3.64%)</title><rect x="1133.5" y="963.0" width="43.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.5" y="974.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (242 samples, 3.34%)</title><rect x="1137.1" y="947.0" width="39.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.1" y="958.0">sun..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (5 samples, 0.07%)</title><rect x="1138.5" y="931.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1141.5" y="942.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (2 samples, 0.03%)</title><rect x="1139.3" y="931.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1142.3" y="942.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.03%)</title><rect x="1139.3" y="915.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1142.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1139.7" y="931.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1142.7" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="1139.7" y="915.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1142.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="1139.7" y="899.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1142.7" y="910.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="1139.7" y="883.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1142.7" y="894.0"></text>
</g>
<g>
<title>__kernel_vsyscall (216 samples, 2.98%)</title><rect x="1140.0" y="931.0" width="35.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1143.0" y="942.0">__k..</text>
</g>
<g>
<title>entry_SYSENTER_32 (211 samples, 2.91%)</title><rect x="1140.8" y="915.0" width="34.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1143.8" y="926.0">en..</text>
</g>
<g>
<title>do_fast_syscall_32 (210 samples, 2.90%)</title><rect x="1140.8" y="899.0" width="34.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1143.8" y="910.0">do..</text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.04%)</title><rect x="1140.8" y="883.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1143.8" y="894.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="1140.8" y="867.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1143.8" y="878.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.04%)</title><rect x="1140.8" y="851.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1143.8" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="1140.8" y="835.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1143.8" y="846.0"></text>
</g>
<g>
<title>sys_read (206 samples, 2.84%)</title><rect x="1141.5" y="883.0" width="33.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1144.5" y="894.0">sy..</text>
</g>
<g>
<title>__fdget_pos (14 samples, 0.19%)</title><rect x="1142.1" y="867.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1145.1" y="878.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.19%)</title><rect x="1142.1" y="851.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1145.1" y="862.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.15%)</title><rect x="1142.6" y="835.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1145.6" y="846.0"></text>
</g>
<g>
<title>vfs_read (187 samples, 2.58%)</title><rect x="1144.6" y="867.0" width="30.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1147.6" y="878.0">vf..</text>
</g>
<g>
<title>__vfs_read (133 samples, 1.84%)</title><rect x="1145.0" y="851.0" width="21.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1148.0" y="862.0">_..</text>
</g>
<g>
<title>new_sync_read (133 samples, 1.84%)</title><rect x="1145.0" y="835.0" width="21.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1148.0" y="846.0">n..</text>
</g>
<g>
<title>sock_read_iter (131 samples, 1.81%)</title><rect x="1145.4" y="819.0" width="21.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1148.4" y="830.0">s..</text>
</g>
<g>
<title>inet_recvmsg (5 samples, 0.07%)</title><rect x="1145.9" y="803.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1148.9" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (123 samples, 1.70%)</title><rect x="1146.7" y="803.0" width="20.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1149.7" y="814.0"></text>
</g>
<g>
<title>inet_recvmsg (107 samples, 1.48%)</title><rect x="1146.8" y="787.0" width="17.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1149.8" y="798.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="1147.0" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1150.0" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (102 samples, 1.41%)</title><rect x="1147.7" y="771.0" width="16.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.7" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.17%)</title><rect x="1151.1" y="755.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1154.1" y="766.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.07%)</title><rect x="1151.1" y="739.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1154.1" y="750.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.10%)</title><rect x="1151.9" y="739.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1154.9" y="750.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.10%)</title><rect x="1151.9" y="723.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1154.9" y="734.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="1153.2" y="755.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1156.2" y="766.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.06%)</title><rect x="1153.5" y="755.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1156.5" y="766.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.08%)</title><rect x="1154.5" y="755.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.5" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="1154.7" y="739.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1157.7" y="750.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (2 samples, 0.03%)</title><rect x="1155.0" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1158.0" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (33 samples, 0.46%)</title><rect x="1155.6" y="755.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1158.6" y="766.0"></text>
</g>
<g>
<title>__check_object_size (15 samples, 0.21%)</title><rect x="1156.0" y="739.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1159.0" y="750.0"></text>
</g>
<g>
<title>__check_heap_object (5 samples, 0.07%)</title><rect x="1157.3" y="723.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1160.3" y="734.0"></text>
</g>
<g>
<title>page_address (2 samples, 0.03%)</title><rect x="1157.8" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1160.8" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="1158.1" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1161.1" y="734.0"></text>
</g>
<g>
<title>_copy_to_iter (15 samples, 0.21%)</title><rect x="1158.4" y="739.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1161.4" y="750.0"></text>
</g>
<g>
<title>copyout (12 samples, 0.17%)</title><rect x="1158.9" y="723.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1161.9" y="734.0"></text>
</g>
<g>
<title>__copy_user_ll (12 samples, 0.17%)</title><rect x="1158.9" y="707.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1161.9" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (17 samples, 0.23%)</title><rect x="1161.2" y="755.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1164.2" y="766.0"></text>
</g>
<g>
<title>sched_clock_cpu (12 samples, 0.17%)</title><rect x="1162.0" y="739.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1165.0" y="750.0"></text>
</g>
<g>
<title>sched_clock (12 samples, 0.17%)</title><rect x="1162.0" y="723.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1165.0" y="734.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (12 samples, 0.17%)</title><rect x="1162.0" y="707.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1165.0" y="718.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (9 samples, 0.12%)</title><rect x="1162.5" y="691.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1165.5" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="1163.9" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1166.9" y="766.0"></text>
</g>
<g>
<title>security_socket_recvmsg (14 samples, 0.19%)</title><rect x="1164.3" y="787.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1167.3" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (11 samples, 0.15%)</title><rect x="1164.8" y="771.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1167.8" y="782.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (9 samples, 0.12%)</title><rect x="1165.1" y="755.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1168.1" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.06%)</title><rect x="1165.9" y="739.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1168.9" y="750.0"></text>
</g>
<g>
<title>aa_label_sk_perm (3 samples, 0.04%)</title><rect x="1166.1" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1169.1" y="734.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.04%)</title><rect x="1166.9" y="851.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1169.9" y="862.0"></text>
</g>
<g>
<title>rw_verify_area (45 samples, 0.62%)</title><rect x="1167.4" y="851.0" width="7.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1170.4" y="862.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="1168.8" y="835.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1171.8" y="846.0"></text>
</g>
<g>
<title>security_file_permission (33 samples, 0.46%)</title><rect x="1169.3" y="835.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1172.3" y="846.0"></text>
</g>
<g>
<title>apparmor_file_permission (21 samples, 0.29%)</title><rect x="1170.0" y="819.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1173.0" y="830.0"></text>
</g>
<g>
<title>common_file_perm (20 samples, 0.28%)</title><rect x="1170.1" y="803.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1173.1" y="814.0"></text>
</g>
<g>
<title>aa_file_perm (9 samples, 0.12%)</title><rect x="1171.9" y="787.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1174.9" y="798.0"></text>
</g>
<g>
<title>fsnotify (8 samples, 0.11%)</title><rect x="1173.4" y="819.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1176.4" y="830.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="1174.7" y="851.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1177.7" y="862.0"></text>
</g>
<g>
<title>read (6 samples, 0.08%)</title><rect x="1175.5" y="931.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1178.5" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.14%)</title><rect x="1176.5" y="979.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1179.5" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.14%)</title><rect x="1176.5" y="963.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.5" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (10 samples, 0.14%)</title><rect x="1176.5" y="947.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1179.5" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (24 samples, 0.33%)</title><rect x="1178.1" y="1011.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.1" y="1022.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.03%)</title><rect x="1181.7" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1184.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.03%)</title><rect x="1181.7" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1184.7" y="990.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (39 samples, 0.54%)</title><rect x="1182.2" y="1091.0" width="6.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="1182.8" y="1075.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1185.8" y="1086.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.07%)</title><rect x="1182.8" y="1059.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1185.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.07%)</title><rect x="1182.8" y="1043.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1185.8" y="1054.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.07%)</title><rect x="1182.8" y="1027.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1185.8" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (28 samples, 0.39%)</title><rect x="1183.6" y="1075.0" width="4.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1186.6" y="1086.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (18 samples, 0.25%)</title><rect x="1185.3" y="1059.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1188.3" y="1070.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (17 samples, 0.23%)</title><rect x="1185.3" y="1043.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1188.3" y="1054.0"></text>
</g>
<g>
<title>sys_gettimeofday (15 samples, 0.21%)</title><rect x="1185.6" y="1027.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1188.6" y="1038.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.03%)</title><rect x="1185.8" y="1011.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1188.8" y="1022.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.03%)</title><rect x="1185.8" y="995.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1188.8" y="1006.0"></text>
</g>
<g>
<title>do_gettimeofday (12 samples, 0.17%)</title><rect x="1186.1" y="1011.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1189.1" y="1022.0"></text>
</g>
<g>
<title>__getnstimeofday64 (9 samples, 0.12%)</title><rect x="1186.3" y="995.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1189.3" y="1006.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (7 samples, 0.10%)</title><rect x="1186.6" y="979.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1189.6" y="990.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (7 samples, 0.10%)</title><rect x="1186.6" y="963.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1189.6" y="974.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.03%)</title><rect x="1187.7" y="995.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1190.7" y="1006.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.03%)</title><rect x="1188.2" y="1075.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1191.2" y="1086.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (2 samples, 0.03%)</title><rect x="1188.5" y="1107.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.5" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (3 samples, 0.04%)</title><rect x="1189.0" y="1107.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.03%)</title><rect x="1189.0" y="1091.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.0" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2 samples, 0.03%)</title><rect x="1189.7" y="1107.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.7" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.03%)</title><rect x="1189.7" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.7" y="1102.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.03%)</title><rect x="1189.7" y="1075.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.7" y="1086.0"></text>
</g>
</g>
</svg>
