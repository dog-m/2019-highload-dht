<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1173"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1173"> </text>
<g id="frames">
<g>
<title>all (8,165 samples, 100.00%)</title><rect x="10.0" y="1139.0" width="1180.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="1150.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (156 samples, 1.91%)</title><rect x="10.3" y="1123.0" width="22.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.3" y="1134.0">O..</text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="11.2" y="1107.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="14.2" y="1118.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (17 samples, 0.21%)</title><rect x="11.4" y="1107.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.4" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (15 samples, 0.18%)</title><rect x="11.7" y="1091.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.7" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (13 samples, 0.16%)</title><rect x="11.9" y="1075.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.9" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (12 samples, 0.15%)</title><rect x="12.0" y="1059.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.0" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.07%)</title><rect x="12.6" y="1043.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.6" y="1054.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (3 samples, 0.04%)</title><rect x="12.6" y="1027.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.6" y="1038.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (2 samples, 0.02%)</title><rect x="12.6" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.6" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (3 samples, 0.04%)</title><rect x="13.0" y="1027.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="16.0" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (3 samples, 0.04%)</title><rect x="13.0" y="1011.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.0" y="1022.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.02%)</title><rect x="13.5" y="1043.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.5" y="1054.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (130 samples, 1.59%)</title><rect x="13.9" y="1107.0" width="18.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.9" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="14.0" y="1091.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.0" y="1102.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (127 samples, 1.56%)</title><rect x="14.3" y="1091.0" width="18.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.3" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (121 samples, 1.48%)</title><rect x="14.8" y="1075.0" width="17.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.8" y="1086.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (4 samples, 0.05%)</title><rect x="15.1" y="1059.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="18.1" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.02%)</title><rect x="15.6" y="1059.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.6" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (111 samples, 1.36%)</title><rect x="15.9" y="1059.0" width="16.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.9" y="1070.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (5 samples, 0.06%)</title><rect x="17.1" y="1043.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="20.1" y="1054.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned int, Thread*) (8 samples, 0.10%)</title><rect x="17.8" y="1043.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="20.8" y="1054.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (2 samples, 0.02%)</title><rect x="18.5" y="1027.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="21.5" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (18 samples, 0.22%)</title><rect x="19.2" y="1043.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="22.2" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (2 samples, 0.02%)</title><rect x="19.2" y="1027.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="22.2" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (15 samples, 0.18%)</title><rect x="19.7" y="1027.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.7" y="1038.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (8 samples, 0.10%)</title><rect x="20.1" y="1011.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="23.1" y="1022.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (2 samples, 0.02%)</title><rect x="21.0" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="24.0" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (4 samples, 0.05%)</title><rect x="21.3" y="1011.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="24.3" y="1022.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned int, Thread*) (2 samples, 0.02%)</title><rect x="21.9" y="1043.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="24.9" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (21 samples, 0.26%)</title><rect x="22.4" y="1043.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="25.4" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (3 samples, 0.04%)</title><rect x="23.0" y="1027.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="26.0" y="1038.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (2 samples, 0.02%)</title><rect x="23.4" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="26.4" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (5 samples, 0.06%)</title><rect x="23.7" y="1027.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.7" y="1038.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (2 samples, 0.02%)</title><rect x="23.7" y="1011.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="26.7" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (3 samples, 0.04%)</title><rect x="24.0" y="1011.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="27.0" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (4 samples, 0.05%)</title><rect x="24.7" y="1027.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="27.7" y="1038.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (3 samples, 0.04%)</title><rect x="24.9" y="1011.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="27.9" y="1022.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (34 samples, 0.42%)</title><rect x="25.5" y="1043.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="28.5" y="1054.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (7 samples, 0.09%)</title><rect x="30.4" y="1043.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="33.4" y="1054.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (3 samples, 0.04%)</title><rect x="31.5" y="1043.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="34.5" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="32.0" y="1059.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="35.0" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="32.3" y="1075.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="35.3" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (19 samples, 0.23%)</title><rect x="32.8" y="1123.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="35.8" y="1134.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (18 samples, 0.22%)</title><rect x="33.0" y="1107.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="36.0" y="1118.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (17 samples, 0.21%)</title><rect x="33.1" y="1091.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="36.1" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (16 samples, 0.20%)</title><rect x="33.1" y="1075.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="36.1" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (16 samples, 0.20%)</title><rect x="33.1" y="1059.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="36.1" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (9 samples, 0.11%)</title><rect x="34.0" y="1043.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="37.0" y="1054.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (2 samples, 0.02%)</title><rect x="34.3" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="37.3" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (2 samples, 0.02%)</title><rect x="34.3" y="1011.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="37.3" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (4 samples, 0.05%)</title><rect x="34.7" y="1027.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="37.7" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (2 samples, 0.02%)</title><rect x="34.7" y="1011.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="37.7" y="1022.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.02%)</title><rect x="35.0" y="1011.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="38.0" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (61 samples, 0.75%)</title><rect x="35.6" y="1123.0" width="8.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="38.6" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="36.9" y="1107.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="39.9" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (46 samples, 0.56%)</title><rect x="37.5" y="1107.0" width="6.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="40.5" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (42 samples, 0.51%)</title><rect x="37.9" y="1091.0" width="6.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="40.9" y="1102.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (2 samples, 0.02%)</title><rect x="37.9" y="1075.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="40.9" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (39 samples, 0.48%)</title><rect x="38.2" y="1075.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="41.2" y="1086.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (5 samples, 0.06%)</title><rect x="39.0" y="1059.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="42.0" y="1070.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (3 samples, 0.04%)</title><rect x="39.3" y="1043.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="42.3" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (23 samples, 0.28%)</title><rect x="39.9" y="1059.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="42.9" y="1070.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (2 samples, 0.02%)</title><rect x="40.6" y="1043.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="43.6" y="1054.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (4 samples, 0.05%)</title><rect x="40.9" y="1043.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="43.9" y="1054.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (4 samples, 0.05%)</title><rect x="40.9" y="1027.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="43.9" y="1038.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (2 samples, 0.02%)</title><rect x="40.9" y="1011.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="43.9" y="1022.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (2 samples, 0.02%)</title><rect x="41.2" y="1011.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="44.2" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (8 samples, 0.10%)</title><rect x="41.6" y="1043.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="44.6" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (3 samples, 0.04%)</title><rect x="41.8" y="1027.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="44.8" y="1038.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (3 samples, 0.04%)</title><rect x="42.2" y="1027.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="45.2" y="1038.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned int) (3 samples, 0.04%)</title><rect x="42.8" y="1043.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="45.8" y="1054.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.02%)</title><rect x="43.4" y="1059.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="46.4" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (2 samples, 0.02%)</title><rect x="44.1" y="1107.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="47.1" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (20 samples, 0.24%)</title><rect x="44.4" y="1123.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="47.4" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (19 samples, 0.23%)</title><rect x="44.5" y="1107.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="47.5" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.85] (18 samples, 0.22%)</title><rect x="44.7" y="1091.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="47.7" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (17 samples, 0.21%)</title><rect x="44.8" y="1075.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="47.8" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.63] (4 samples, 0.05%)</title><rect x="44.8" y="1059.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="47.8" y="1070.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="45.4" y="1059.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="48.4" y="1070.0"></text>
</g>
<g>
<title>__kernel_vsyscall (9 samples, 0.11%)</title><rect x="45.7" y="1059.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="48.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (9 samples, 0.11%)</title><rect x="45.7" y="1043.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="48.7" y="1054.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (9 samples, 0.11%)</title><rect x="45.7" y="1027.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="48.7" y="1038.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.11%)</title><rect x="45.7" y="1011.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="48.7" y="1022.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.10%)</title><rect x="45.7" y="995.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="48.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.10%)</title><rect x="45.7" y="979.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="48.7" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.09%)</title><rect x="45.7" y="963.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="48.7" y="974.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.09%)</title><rect x="45.7" y="947.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="48.7" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.09%)</title><rect x="45.7" y="931.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="48.7" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.09%)</title><rect x="45.7" y="915.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="48.7" y="926.0"></text>
</g>
<g>
<title>[not_walkable_Java] (39 samples, 0.48%)</title><rect x="47.3" y="1123.0" width="5.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="50.3" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (13 samples, 0.16%)</title><rect x="47.3" y="1107.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="50.3" y="1118.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (5 samples, 0.06%)</title><rect x="47.9" y="1091.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="50.9" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (4 samples, 0.05%)</title><rect x="48.6" y="1091.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="51.6" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (14 samples, 0.17%)</title><rect x="49.2" y="1107.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="52.2" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (13 samples, 0.16%)</title><rect x="49.3" y="1091.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="52.3" y="1102.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.04%)</title><rect x="49.5" y="1075.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="52.5" y="1086.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.10%)</title><rect x="50.0" y="1075.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="53.0" y="1086.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (5 samples, 0.06%)</title><rect x="50.2" y="1059.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="53.2" y="1070.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (2 samples, 0.02%)</title><rect x="50.9" y="1059.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="53.9" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (10 samples, 0.12%)</title><rect x="51.2" y="1107.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="54.2" y="1118.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (3 samples, 0.04%)</title><rect x="51.5" y="1091.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="54.5" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (5 samples, 0.06%)</title><rect x="51.9" y="1091.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="54.9" y="1102.0"></text>
</g>
<g>
<title>CardTableRS::is_in_young(oopDesc*) const (4 samples, 0.05%)</title><rect x="51.9" y="1075.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="54.9" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.02%)</title><rect x="52.6" y="1107.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="55.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.23%)</title><rect x="52.9" y="1123.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="55.9" y="1134.0"></text>
</g>
<g>
<title>__kernel_vsyscall (17 samples, 0.21%)</title><rect x="53.2" y="1107.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="56.2" y="1118.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (17 samples, 0.21%)</title><rect x="53.2" y="1091.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="56.2" y="1102.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (17 samples, 0.21%)</title><rect x="53.2" y="1075.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="56.2" y="1086.0"></text>
</g>
<g>
<title>sys_futex (16 samples, 0.20%)</title><rect x="53.4" y="1059.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="56.4" y="1070.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.20%)</title><rect x="53.4" y="1043.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="56.4" y="1054.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.05%)</title><rect x="53.4" y="1027.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="56.4" y="1038.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.05%)</title><rect x="53.4" y="1011.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="56.4" y="1022.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="53.4" y="995.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="56.4" y="1006.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.05%)</title><rect x="53.4" y="979.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="56.4" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.05%)</title><rect x="53.4" y="963.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="56.4" y="974.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.15%)</title><rect x="53.9" y="1027.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="56.9" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.12%)</title><rect x="54.2" y="1011.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="57.2" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.12%)</title><rect x="54.2" y="995.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="57.2" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.12%)</title><rect x="54.2" y="979.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="57.2" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (209 samples, 2.56%)</title><rect x="55.7" y="1123.0" width="30.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="58.7" y="1134.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 0.37%)</title><rect x="80.5" y="1107.0" width="4.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="83.5" y="1118.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (8 samples, 0.10%)</title><rect x="80.5" y="1091.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="83.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="80.5" y="1075.0" width="1.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="83.5" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.04%)</title><rect x="80.5" y="1059.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="83.5" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.05%)</title><rect x="81.0" y="1059.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="84.0" y="1070.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.02%)</title><rect x="81.8" y="1091.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="84.8" y="1102.0"></text>
</g>
<g>
<title>__kernel_vsyscall (11 samples, 0.13%)</title><rect x="82.1" y="1091.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="85.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (11 samples, 0.13%)</title><rect x="82.1" y="1075.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="85.1" y="1086.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (11 samples, 0.13%)</title><rect x="82.1" y="1059.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="85.1" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.05%)</title><rect x="82.1" y="1043.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="85.1" y="1054.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="82.1" y="1027.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="85.1" y="1038.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.05%)</title><rect x="82.1" y="1011.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="85.1" y="1022.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.05%)</title><rect x="82.1" y="995.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="85.1" y="1006.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.09%)</title><rect x="82.7" y="1043.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="85.7" y="1054.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.09%)</title><rect x="82.7" y="1027.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="85.7" y="1038.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.09%)</title><rect x="82.7" y="1011.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="85.7" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.07%)</title><rect x="82.8" y="995.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.8" y="1006.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.07%)</title><rect x="82.8" y="979.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="85.8" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.07%)</title><rect x="82.8" y="963.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="85.8" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="83.7" y="1091.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="86.7" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (5 samples, 0.06%)</title><rect x="84.1" y="1091.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="87.1" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="84.9" y="1107.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="87.9" y="1118.0"></text>
</g>
<g>
<title>resume_userspace (5 samples, 0.06%)</title><rect x="85.2" y="1107.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="88.2" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.06%)</title><rect x="85.2" y="1091.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="88.2" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.06%)</title><rect x="85.2" y="1075.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="88.2" y="1086.0"></text>
</g>
<g>
<title>clone (102 samples, 1.25%)</title><rect x="85.9" y="1123.0" width="14.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="88.9" y="1134.0"></text>
</g>
<g>
<title>start_thread (102 samples, 1.25%)</title><rect x="85.9" y="1107.0" width="14.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="88.9" y="1118.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (102 samples, 1.25%)</title><rect x="85.9" y="1091.0" width="14.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="88.9" y="1102.0"></text>
</g>
<g>
<title>Thread::call_run() (102 samples, 1.25%)</title><rect x="85.9" y="1075.0" width="14.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="88.9" y="1086.0"></text>
</g>
<g>
<title>VMThread::run() (94 samples, 1.15%)</title><rect x="86.0" y="1059.0" width="13.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="89.0" y="1070.0"></text>
</g>
<g>
<title>VMThread::loop() (94 samples, 1.15%)</title><rect x="86.0" y="1043.0" width="13.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="89.0" y="1054.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.05%)</title><rect x="86.2" y="1027.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="89.2" y="1038.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (4 samples, 0.05%)</title><rect x="86.2" y="1011.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="89.2" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.05%)</title><rect x="86.2" y="995.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="89.2" y="1006.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.04%)</title><rect x="86.3" y="979.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="89.3" y="990.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.04%)</title><rect x="86.3" y="963.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="89.3" y="974.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="86.3" y="947.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="89.3" y="958.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="86.5" y="931.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="89.5" y="942.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.02%)</title><rect x="86.5" y="915.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="89.5" y="926.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (28 samples, 0.34%)</title><rect x="86.7" y="1027.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="89.7" y="1038.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (6 samples, 0.07%)</title><rect x="86.7" y="1011.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="89.7" y="1022.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (6 samples, 0.07%)</title><rect x="86.7" y="995.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="89.7" y="1006.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (6 samples, 0.07%)</title><rect x="86.7" y="979.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="89.7" y="990.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.62] (5 samples, 0.06%)</title><rect x="86.7" y="963.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="89.7" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.06%)</title><rect x="86.7" y="947.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="89.7" y="958.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (3 samples, 0.04%)</title><rect x="86.9" y="931.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="89.9" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (18 samples, 0.22%)</title><rect x="88.2" y="1011.0" width="2.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="91.2" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (17 samples, 0.21%)</title><rect x="88.3" y="995.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.3" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (17 samples, 0.21%)</title><rect x="88.3" y="979.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.3" y="990.0"></text>
</g>
<g>
<title>sys_mprotect (15 samples, 0.18%)</title><rect x="88.3" y="963.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="91.3" y="974.0"></text>
</g>
<g>
<title>mprotect_fixup (15 samples, 0.18%)</title><rect x="88.3" y="947.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="91.3" y="958.0"></text>
</g>
<g>
<title>change_protection (15 samples, 0.18%)</title><rect x="88.3" y="931.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.3" y="942.0"></text>
</g>
<g>
<title>change_protection_range (15 samples, 0.18%)</title><rect x="88.3" y="915.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="91.3" y="926.0"></text>
</g>
<g>
<title>__ptep_modify_prot_commit (3 samples, 0.04%)</title><rect x="88.5" y="899.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="91.5" y="910.0"></text>
</g>
<g>
<title>native_set_pte_at (3 samples, 0.04%)</title><rect x="88.5" y="883.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="91.5" y="894.0"></text>
</g>
<g>
<title>atomic64_xchg_cx8 (6 samples, 0.07%)</title><rect x="88.9" y="899.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="91.9" y="910.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (5 samples, 0.06%)</title><rect x="89.8" y="899.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="92.8" y="910.0"></text>
</g>
<g>
<title>native_flush_tlb_others (4 samples, 0.05%)</title><rect x="89.9" y="883.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="92.9" y="894.0"></text>
</g>
<g>
<title>smp_call_function_many (4 samples, 0.05%)</title><rect x="89.9" y="867.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="92.9" y="878.0"></text>
</g>
<g>
<title>smp_call_function_single (4 samples, 0.05%)</title><rect x="89.9" y="851.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="92.9" y="862.0"></text>
</g>
<g>
<title>sys_sched_yield (2 samples, 0.02%)</title><rect x="90.5" y="963.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="93.5" y="974.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="90.5" y="947.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="93.5" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="90.5" y="931.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="93.5" y="942.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (15 samples, 0.18%)</title><rect x="90.8" y="1027.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="93.8" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (14 samples, 0.17%)</title><rect x="90.9" y="1011.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="93.9" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (14 samples, 0.17%)</title><rect x="90.9" y="995.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="93.9" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (14 samples, 0.17%)</title><rect x="90.9" y="979.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="93.9" y="990.0"></text>
</g>
<g>
<title>sys_mprotect (14 samples, 0.17%)</title><rect x="90.9" y="963.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="93.9" y="974.0"></text>
</g>
<g>
<title>mprotect_fixup (14 samples, 0.17%)</title><rect x="90.9" y="947.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="93.9" y="958.0"></text>
</g>
<g>
<title>change_protection (13 samples, 0.16%)</title><rect x="90.9" y="931.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="93.9" y="942.0"></text>
</g>
<g>
<title>change_protection_range (12 samples, 0.15%)</title><rect x="90.9" y="915.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="93.9" y="926.0"></text>
</g>
<g>
<title>atomic64_xchg_cx8 (2 samples, 0.02%)</title><rect x="91.2" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.2" y="910.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (8 samples, 0.10%)</title><rect x="91.5" y="899.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="94.5" y="910.0"></text>
</g>
<g>
<title>native_flush_tlb_others (7 samples, 0.09%)</title><rect x="91.7" y="883.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="94.7" y="894.0"></text>
</g>
<g>
<title>smp_call_function_many (7 samples, 0.09%)</title><rect x="91.7" y="867.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="94.7" y="878.0"></text>
</g>
<g>
<title>smp_call_function_single (7 samples, 0.09%)</title><rect x="91.7" y="851.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="94.7" y="862.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.61] (45 samples, 0.55%)</title><rect x="93.0" y="1027.0" width="6.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="96.0" y="1038.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (45 samples, 0.55%)</title><rect x="93.0" y="1011.0" width="6.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="96.0" y="1022.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (45 samples, 0.55%)</title><rect x="93.0" y="995.0" width="6.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="96.0" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned int, bool) (45 samples, 0.55%)</title><rect x="93.0" y="979.0" width="6.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="96.0" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned int, bool, GenCollectedHeap::GenerationType) (45 samples, 0.55%)</title><rect x="93.0" y="963.0" width="6.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="96.0" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned int, bool, bool, bool, bool) (43 samples, 0.53%)</title><rect x="93.1" y="947.0" width="6.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="96.1" y="958.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned int, bool) (40 samples, 0.49%)</title><rect x="93.1" y="931.0" width="5.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="96.1" y="942.0"></text>
</g>
<g>
<title>DefNewGeneration::FastEvacuateFollowersClosure::do_void() (2 samples, 0.02%)</title><rect x="93.1" y="915.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="96.1" y="926.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (30 samples, 0.37%)</title><rect x="93.4" y="915.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="96.4" y="926.0"></text>
</g>
<g>
<title>CardGeneration::younger_refs_iterate(OopsInGenClosure*, unsigned int) (10 samples, 0.12%)</title><rect x="93.4" y="899.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="96.4" y="910.0"></text>
</g>
<g>
<title>CardTableRS::younger_refs_in_space_iterate(Space*, OopsInGenClosure*, unsigned int) (10 samples, 0.12%)</title><rect x="93.4" y="883.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="96.4" y="894.0"></text>
</g>
<g>
<title>ClearNoncleanCardWrapper::do_MemRegion(MemRegion) (10 samples, 0.12%)</title><rect x="93.4" y="867.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="96.4" y="878.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (10 samples, 0.12%)</title><rect x="93.4" y="851.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="96.4" y="862.0"></text>
</g>
<g>
<title>FilteringDCTOC::walk_mem_region(MemRegion, HeapWord*, HeapWord*) (9 samples, 0.11%)</title><rect x="93.5" y="835.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="96.5" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate_bounded&lt;InstanceKlass, oopDesc*&gt;(FilteringClosure*, oopDesc*, Klass*, MemRegion) (2 samples, 0.02%)</title><rect x="93.7" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="96.7" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, oopDesc*&gt;(FilteringClosure*, oopDesc*, Klass*, MemRegion) (2 samples, 0.02%)</title><rect x="94.0" y="819.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="97.0" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, oopDesc*&gt;(FilteringClosure*, oopDesc*, Klass*) (3 samples, 0.04%)</title><rect x="94.3" y="819.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="97.3" y="830.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (2 samples, 0.02%)</title><rect x="94.8" y="899.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="97.8" y="910.0"></text>
</g>
<g>
<title>StringTable::oops_do(OopClosure*) (6 samples, 0.07%)</title><rect x="95.3" y="899.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="98.3" y="910.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(oopDesc**) (2 samples, 0.02%)</title><rect x="95.8" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="98.8" y="894.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (11 samples, 0.13%)</title><rect x="96.1" y="899.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="99.1" y="910.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (11 samples, 0.13%)</title><rect x="96.1" y="883.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="99.1" y="894.0"></text>
</g>
<g>
<title>MarkingCodeBlobClosure::do_code_blob(CodeBlob*) (7 samples, 0.09%)</title><rect x="96.3" y="867.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="99.3" y="878.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (5 samples, 0.06%)</title><rect x="96.3" y="851.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="99.3" y="862.0"></text>
</g>
<g>
<title>metadata_Relocation::fix_metadata_relocation() (2 samples, 0.02%)</title><rect x="96.6" y="835.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="99.6" y="846.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (2 samples, 0.02%)</title><rect x="97.0" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="100.0" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.02%)</title><rect x="97.4" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="100.4" y="878.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (2 samples, 0.02%)</title><rect x="97.4" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="100.4" y="862.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, ReferenceProcessorPhaseTimes*) (2 samples, 0.02%)</title><rect x="97.7" y="915.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="100.7" y="926.0"></text>
</g>
<g>
<title>RefProcTotalPhaseTimesTracker::~RefProcTotalPhaseTimesTracker() (2 samples, 0.02%)</title><rect x="97.7" y="899.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="100.7" y="910.0"></text>
</g>
<g>
<title>CompositeElapsedCounterSource::now() (2 samples, 0.02%)</title><rect x="97.7" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="100.7" y="894.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.02%)</title><rect x="97.7" y="867.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="100.7" y="878.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (6 samples, 0.07%)</title><rect x="98.0" y="915.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="101.0" y="926.0"></text>
</g>
<g>
<title>JvmtiExport::weak_oops_do(BoolObjectClosure*, OopClosure*) (3 samples, 0.04%)</title><rect x="98.4" y="899.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="101.4" y="910.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (3 samples, 0.04%)</title><rect x="98.4" y="883.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="101.4" y="894.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (2 samples, 0.02%)</title><rect x="98.6" y="867.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="101.6" y="878.0"></text>
</g>
<g>
<title>WatcherThread::run() (7 samples, 0.09%)</title><rect x="99.6" y="1059.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="102.6" y="1070.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (5 samples, 0.06%)</title><rect x="99.9" y="1043.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="102.9" y="1054.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.06%)</title><rect x="99.9" y="1027.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="102.9" y="1038.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (4 samples, 0.05%)</title><rect x="99.9" y="1011.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="102.9" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.02%)</title><rect x="100.0" y="995.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="103.0" y="1006.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.02%)</title><rect x="100.0" y="979.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="103.0" y="990.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.02%)</title><rect x="100.0" y="963.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.0" y="974.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.02%)</title><rect x="100.0" y="947.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.0" y="958.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="100.0" y="931.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="103.0" y="942.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.02%)</title><rect x="100.0" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="103.0" y="926.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.02%)</title><rect x="100.0" y="899.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="103.0" y="910.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="100.0" y="883.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="103.0" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="100.0" y="867.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="103.0" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.02%)</title><rect x="100.0" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="103.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6,040 samples, 73.97%)</title><rect x="100.6" y="1123.0" width="872.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.6" y="1134.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,040 samples, 73.97%)</title><rect x="100.6" y="1107.0" width="872.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.6" y="1118.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,040 samples, 73.97%)</title><rect x="100.6" y="1091.0" width="872.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.6" y="1102.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (10 samples, 0.12%)</title><rect x="101.0" y="1075.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.12%)</title><rect x="101.0" y="1059.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.12%)</title><rect x="101.0" y="1043.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.12%)</title><rect x="101.0" y="1027.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (725 samples, 8.88%)</title><rect x="102.5" y="1075.0" width="104.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.5" y="1086.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (719 samples, 8.81%)</title><rect x="103.4" y="1059.0" width="103.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.4" y="1070.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (586 samples, 7.18%)</title><rect x="104.9" y="1043.0" width="84.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.9" y="1054.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (22 samples, 0.27%)</title><rect x="105.4" y="1027.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.27%)</title><rect x="105.4" y="1011.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.09%)</title><rect x="107.4" y="995.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.09%)</title><rect x="107.4" y="979.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (560 samples, 6.86%)</title><rect x="108.7" y="1027.0" width="80.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.7" y="1038.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (559 samples, 6.85%)</title><rect x="108.9" y="1011.0" width="80.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.9" y="1022.0">jdk/inter..</text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (4 samples, 0.05%)</title><rect x="109.9" y="995.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="112.9" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (3 samples, 0.04%)</title><rect x="110.7" y="995.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="113.7" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (152 samples, 1.86%)</title><rect x="111.2" y="995.0" width="21.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="114.2" y="1006.0">U..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (5 samples, 0.06%)</title><rect x="113.0" y="979.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="116.0" y="990.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (8 samples, 0.10%)</title><rect x="113.8" y="979.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="116.8" y="990.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (13 samples, 0.16%)</title><rect x="114.9" y="979.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="117.9" y="990.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (5 samples, 0.06%)</title><rect x="116.8" y="979.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="119.8" y="990.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (38 samples, 0.47%)</title><rect x="117.7" y="979.0" width="5.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="120.7" y="990.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.04%)</title><rect x="120.0" y="963.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="123.0" y="974.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.02%)</title><rect x="120.4" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="123.4" y="974.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.02%)</title><rect x="120.7" y="963.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="123.7" y="974.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.02%)</title><rect x="120.7" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="123.7" y="958.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (14 samples, 0.17%)</title><rect x="121.1" y="963.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="124.1" y="974.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (6 samples, 0.07%)</title><rect x="123.2" y="979.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="126.2" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (6 samples, 0.07%)</title><rect x="124.0" y="979.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="127.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="124.9" y="979.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="127.9" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.04%)</title><rect x="124.9" y="963.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="127.9" y="974.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.04%)</title><rect x="124.9" y="947.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="127.9" y="958.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.04%)</title><rect x="124.9" y="931.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="127.9" y="942.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (20 samples, 0.24%)</title><rect x="125.3" y="979.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="128.3" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (8 samples, 0.10%)</title><rect x="128.2" y="979.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="131.2" y="990.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (6 samples, 0.07%)</title><rect x="128.5" y="963.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="131.5" y="974.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (6 samples, 0.07%)</title><rect x="128.5" y="947.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="131.5" y="958.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.05%)</title><rect x="128.8" y="931.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="131.8" y="942.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="128.8" y="915.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="131.8" y="926.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="128.8" y="899.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="131.8" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.02%)</title><rect x="129.4" y="979.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="132.4" y="990.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (4 samples, 0.05%)</title><rect x="129.7" y="979.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="132.7" y="990.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (3 samples, 0.04%)</title><rect x="130.2" y="979.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="133.2" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (4 samples, 0.05%)</title><rect x="130.7" y="979.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="133.7" y="990.0"></text>
</g>
<g>
<title>pthread_cond_wait (12 samples, 0.15%)</title><rect x="131.4" y="979.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="134.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (389 samples, 4.76%)</title><rect x="133.1" y="995.0" width="56.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="136.1" y="1006.0">[unkno..</text>
</g>
<g>
<title>__kernel_vsyscall (360 samples, 4.41%)</title><rect x="133.4" y="979.0" width="52.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="136.4" y="990.0">__ker..</text>
</g>
<g>
<title>entry_SYSENTER_32 (356 samples, 4.36%)</title><rect x="134.0" y="963.0" width="51.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="137.0" y="974.0">entry..</text>
</g>
<g>
<title>do_fast_syscall_32 (356 samples, 4.36%)</title><rect x="134.0" y="947.0" width="51.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="137.0" y="958.0">do_fa..</text>
</g>
<g>
<title>sys_futex (355 samples, 4.35%)</title><rect x="134.1" y="931.0" width="51.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="137.1" y="942.0">sys_f..</text>
</g>
<g>
<title>do_futex (345 samples, 4.23%)</title><rect x="134.3" y="915.0" width="49.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="137.3" y="926.0">do_fu..</text>
</g>
<g>
<title>futex_wait (335 samples, 4.10%)</title><rect x="135.2" y="899.0" width="48.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="138.2" y="910.0">fute..</text>
</g>
<g>
<title>futex_wait_queue_me (313 samples, 3.83%)</title><rect x="135.6" y="883.0" width="45.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="138.6" y="894.0">fute..</text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="136.3" y="867.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="139.3" y="878.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.02%)</title><rect x="136.6" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="139.6" y="878.0"></text>
</g>
<g>
<title>schedule (304 samples, 3.72%)</title><rect x="136.9" y="867.0" width="43.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="139.9" y="878.0">sche..</text>
</g>
<g>
<title>__sched_text_start (304 samples, 3.72%)</title><rect x="136.9" y="851.0" width="43.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="139.9" y="862.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (297 samples, 3.64%)</title><rect x="137.9" y="835.0" width="42.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="140.9" y="846.0">fini..</text>
</g>
<g>
<title>futex_wait_setup (12 samples, 0.15%)</title><rect x="180.8" y="883.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.8" y="894.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.02%)</title><rect x="182.3" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="185.3" y="878.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.05%)</title><rect x="182.7" y="883.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="185.7" y="894.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="183.3" y="883.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="186.3" y="894.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.02%)</title><rect x="183.6" y="899.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="186.6" y="910.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.02%)</title><rect x="183.9" y="899.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="186.9" y="910.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.11%)</title><rect x="184.1" y="915.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="187.1" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_wait (16 samples, 0.20%)</title><rect x="185.6" y="979.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="188.6" y="990.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.02%)</title><rect x="188.0" y="979.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="191.0" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.04%)</title><rect x="188.3" y="979.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="191.3" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.04%)</title><rect x="188.8" y="979.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="191.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.02%)</title><rect x="189.6" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.02%)</title><rect x="189.6" y="1027.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.02%)</title><rect x="189.6" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (119 samples, 1.46%)</title><rect x="190.1" y="1043.0" width="17.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (119 samples, 1.46%)</title><rect x="190.1" y="1027.0" width="17.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (119 samples, 1.46%)</title><rect x="190.1" y="1011.0" width="17.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (119 samples, 1.46%)</title><rect x="190.1" y="995.0" width="17.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (110 samples, 1.35%)</title><rect x="191.4" y="979.0" width="15.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.4" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.07%)</title><rect x="191.7" y="963.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="194.7" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.02%)</title><rect x="191.8" y="947.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="194.8" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.02%)</title><rect x="191.8" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="194.8" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.02%)</title><rect x="192.2" y="947.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="195.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.25%)</title><rect x="192.5" y="963.0" width="14.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="195.5" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (98 samples, 1.20%)</title><rect x="192.5" y="947.0" width="14.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="195.5" y="958.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (98 samples, 1.20%)</title><rect x="192.5" y="931.0" width="14.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="195.5" y="942.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (98 samples, 1.20%)</title><rect x="192.5" y="915.0" width="14.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="195.5" y="926.0"></text>
</g>
<g>
<title>sys_futex (98 samples, 1.20%)</title><rect x="192.5" y="899.0" width="14.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="195.5" y="910.0"></text>
</g>
<g>
<title>do_futex (98 samples, 1.20%)</title><rect x="192.5" y="883.0" width="14.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="195.5" y="894.0"></text>
</g>
<g>
<title>futex_wake (98 samples, 1.20%)</title><rect x="192.5" y="867.0" width="14.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="195.5" y="878.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="192.5" y="851.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="195.5" y="862.0"></text>
</g>
<g>
<title>wake_q_add (3 samples, 0.04%)</title><rect x="193.0" y="851.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="196.0" y="862.0"></text>
</g>
<g>
<title>wake_up_q (92 samples, 1.13%)</title><rect x="193.4" y="851.0" width="13.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="196.4" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (92 samples, 1.13%)</title><rect x="193.4" y="835.0" width="13.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="196.4" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (92 samples, 1.13%)</title><rect x="193.4" y="819.0" width="13.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="196.4" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.05%)</title><rect x="206.7" y="947.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="209.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$67/23099948.run (5,302 samples, 64.94%)</title><rect x="207.3" y="1075.0" width="766.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.3" y="1086.0">ru/mail/polis/service/dogm/ServiceImpl$$Lambda$67/23099948.run</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$2 (5,302 samples, 64.94%)</title><rect x="207.3" y="1059.0" width="766.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.3" y="1070.0">ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$2</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,601 samples, 19.61%)</title><rect x="207.7" y="1043.0" width="231.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.7" y="1054.0">one/nio/http/HttpSession.sendRe..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (54 samples, 0.66%)</title><rect x="210.2" y="1027.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (54 samples, 0.66%)</title><rect x="210.2" y="1011.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (54 samples, 0.66%)</title><rect x="210.2" y="995.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.2" y="1006.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (6 samples, 0.07%)</title><rect x="211.6" y="979.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="214.6" y="990.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (37 samples, 0.45%)</title><rect x="212.6" y="979.0" width="5.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="215.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="213.6" y="963.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="216.6" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (7 samples, 0.09%)</title><rect x="213.6" y="947.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="216.6" y="958.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (7 samples, 0.09%)</title><rect x="213.6" y="931.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="216.6" y="942.0"></text>
</g>
<g>
<title>__get_user_4 (3 samples, 0.04%)</title><rect x="213.6" y="915.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="216.6" y="926.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.05%)</title><rect x="214.1" y="915.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="217.1" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (19 samples, 0.23%)</title><rect x="214.8" y="963.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="217.8" y="974.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (13 samples, 0.16%)</title><rect x="215.7" y="947.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="218.7" y="958.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (12 samples, 0.15%)</title><rect x="215.7" y="931.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="218.7" y="942.0"></text>
</g>
<g>
<title>sys_gettimeofday (9 samples, 0.11%)</title><rect x="216.1" y="915.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="219.1" y="926.0"></text>
</g>
<g>
<title>do_gettimeofday (7 samples, 0.09%)</title><rect x="216.4" y="899.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="219.4" y="910.0"></text>
</g>
<g>
<title>__getnstimeofday64 (6 samples, 0.07%)</title><rect x="216.5" y="883.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.5" y="894.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (4 samples, 0.05%)</title><rect x="216.8" y="867.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="219.8" y="878.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (4 samples, 0.05%)</title><rect x="216.8" y="851.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="219.8" y="862.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.02%)</title><rect x="217.5" y="963.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="220.5" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,515 samples, 18.55%)</title><rect x="218.0" y="1027.0" width="218.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="221.0" y="1038.0">one/nio/http/HttpSession.writ..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (34 samples, 0.42%)</title><rect x="218.0" y="1011.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (14 samples, 0.17%)</title><rect x="220.6" y="995.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (14 samples, 0.17%)</title><rect x="220.6" y="979.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.charAt (14 samples, 0.17%)</title><rect x="220.6" y="963.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.6" y="974.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="222.6" y="995.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="225.6" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="222.6" y="979.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="225.6" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="222.6" y="963.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="225.6" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,481 samples, 18.14%)</title><rect x="222.9" y="1011.0" width="214.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.9" y="1022.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,481 samples, 18.14%)</title><rect x="222.9" y="995.0" width="214.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.9" y="1006.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,480 samples, 18.13%)</title><rect x="223.0" y="979.0" width="213.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.0" y="990.0">one/nio/net/Session$ArrayQue..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1,475 samples, 18.06%)</title><rect x="223.7" y="963.0" width="213.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.7" y="974.0">one/nio/net/JavaSocket.write</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.09%)</title><rect x="223.9" y="947.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.9" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="223.9" y="931.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.9" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="223.9" y="915.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.9" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="223.9" y="899.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.9" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="223.9" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.9" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="224.5" y="883.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.5" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="224.5" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.5" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.04%)</title><rect x="224.5" y="851.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1,467 samples, 17.97%)</title><rect x="224.9" y="947.0" width="212.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.9" y="958.0">sun/nio/ch/SocketChannelImpl..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="224.9" y="931.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="224.9" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.06%)</title><rect x="225.2" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.06%)</title><rect x="225.2" y="915.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.06%)</title><rect x="225.2" y="899.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.06%)</title><rect x="225.2" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,457 samples, 17.84%)</title><rect x="225.9" y="931.0" width="210.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.9" y="942.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,454 samples, 17.81%)</title><rect x="226.3" y="915.0" width="210.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.3" y="926.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1,454 samples, 17.81%)</title><rect x="226.3" y="899.0" width="210.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="229.3" y="910.0">sun/nio/ch/IOUtil.writeFromN..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (11 samples, 0.13%)</title><rect x="226.3" y="883.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.3" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1,443 samples, 17.67%)</title><rect x="227.9" y="883.0" width="208.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.9" y="894.0">sun/nio/ch/SocketDispatcher..</text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="230.8" y="867.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="233.8" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="230.8" y="851.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="233.8" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="230.8" y="835.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="233.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1,421 samples, 17.40%)</title><rect x="231.1" y="867.0" width="205.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.1" y="878.0">sun/nio/ch/FileDispatcherIm..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.05%)</title><rect x="232.8" y="851.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="235.8" y="862.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (6 samples, 0.07%)</title><rect x="233.4" y="851.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="236.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="234.3" y="851.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="237.3" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.05%)</title><rect x="234.3" y="835.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="237.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.05%)</title><rect x="234.3" y="819.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="237.3" y="830.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.04%)</title><rect x="234.4" y="803.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="237.4" y="814.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1,387 samples, 16.99%)</title><rect x="234.9" y="851.0" width="200.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="237.9" y="862.0">__kernel_vsyscall</text>
</g>
<g>
<title>entry_SYSENTER_32 (1,379 samples, 16.89%)</title><rect x="235.9" y="835.0" width="199.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="238.9" y="846.0">entry_SYSENTER_32</text>
</g>
<g>
<title>do_fast_syscall_32 (1,378 samples, 16.88%)</title><rect x="236.0" y="819.0" width="199.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="239.0" y="830.0">do_fast_syscall_32</text>
</g>
<g>
<title>exit_to_usermode_loop (39 samples, 0.48%)</title><rect x="236.6" y="803.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="239.6" y="814.0"></text>
</g>
<g>
<title>schedule (38 samples, 0.47%)</title><rect x="236.8" y="787.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="239.8" y="798.0"></text>
</g>
<g>
<title>__sched_text_start (38 samples, 0.47%)</title><rect x="236.8" y="771.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="239.8" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (38 samples, 0.47%)</title><rect x="236.8" y="755.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="239.8" y="766.0"></text>
</g>
<g>
<title>sys_write (1,335 samples, 16.35%)</title><rect x="242.2" y="803.0" width="193.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="245.2" y="814.0">sys_write</text>
</g>
<g>
<title>__fdget_pos (8 samples, 0.10%)</title><rect x="242.5" y="787.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="245.5" y="798.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.09%)</title><rect x="242.7" y="771.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="245.7" y="782.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.09%)</title><rect x="242.7" y="755.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="245.7" y="766.0"></text>
</g>
<g>
<title>vfs_write (1,324 samples, 16.22%)</title><rect x="243.8" y="787.0" width="191.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="246.8" y="798.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (1,297 samples, 15.88%)</title><rect x="245.3" y="771.0" width="187.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="248.3" y="782.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (1,295 samples, 15.86%)</title><rect x="245.6" y="755.0" width="187.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="248.6" y="766.0">new_sync_write</text>
</g>
<g>
<title>sock_write_iter (1,293 samples, 15.84%)</title><rect x="245.9" y="739.0" width="186.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="248.9" y="750.0">sock_write_iter</text>
</g>
<g>
<title>inet_sendmsg (3 samples, 0.04%)</title><rect x="247.0" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="250.0" y="734.0"></text>
</g>
<g>
<title>sock_sendmsg (1,281 samples, 15.69%)</title><rect x="247.6" y="723.0" width="185.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="250.6" y="734.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (1,270 samples, 15.55%)</title><rect x="247.6" y="707.0" width="183.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="250.6" y="718.0">inet_sendmsg</text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="248.0" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="251.0" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,263 samples, 15.47%)</title><rect x="248.5" y="691.0" width="182.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="251.5" y="702.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="248.6" y="675.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="251.6" y="686.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.04%)</title><rect x="249.2" y="675.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="252.2" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.06%)</title><rect x="249.8" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="252.8" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="250.0" y="659.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="253.0" y="670.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="250.5" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="253.5" y="686.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.05%)</title><rect x="251.1" y="675.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="254.1" y="686.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.02%)</title><rect x="251.8" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="254.8" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,235 samples, 15.13%)</title><rect x="252.1" y="675.0" width="178.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="255.1" y="686.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.06%)</title><rect x="256.4" y="659.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="259.4" y="670.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.10%)</title><rect x="257.3" y="659.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="260.3" y="670.0"></text>
</g>
<g>
<title>copyin (6 samples, 0.07%)</title><rect x="257.6" y="643.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="260.6" y="654.0"></text>
</g>
<g>
<title>__copy_user_ll (6 samples, 0.07%)</title><rect x="257.6" y="627.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.6" y="638.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.04%)</title><rect x="258.6" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.6" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (31 samples, 0.38%)</title><rect x="259.2" y="659.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="262.2" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (22 samples, 0.27%)</title><rect x="260.0" y="643.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="263.0" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (10 samples, 0.12%)</title><rect x="260.6" y="627.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="263.6" y="638.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (8 samples, 0.10%)</title><rect x="260.6" y="611.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="263.6" y="622.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.02%)</title><rect x="261.5" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.5" y="606.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.02%)</title><rect x="261.8" y="611.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="264.8" y="622.0"></text>
</g>
<g>
<title>kmem_cache_alloc (5 samples, 0.06%)</title><rect x="262.2" y="627.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="265.2" y="638.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.02%)</title><rect x="262.9" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="265.9" y="638.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.02%)</title><rect x="263.3" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="266.3" y="654.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.05%)</title><rect x="263.6" y="659.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="266.6" y="670.0"></text>
</g>
<g>
<title>tcp_push (1,122 samples, 13.74%)</title><rect x="264.6" y="659.0" width="162.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="267.6" y="670.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,115 samples, 13.66%)</title><rect x="265.7" y="643.0" width="161.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="268.7" y="654.0">__tcp_push_pending_fr..</text>
</g>
<g>
<title>tcp_write_xmit (1,114 samples, 13.64%)</title><rect x="265.8" y="627.0" width="161.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="268.8" y="638.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,079 samples, 13.21%)</title><rect x="267.4" y="611.0" width="155.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="270.4" y="622.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__sk_dst_check (7 samples, 0.09%)</title><rect x="269.7" y="595.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="272.7" y="606.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.04%)</title><rect x="270.7" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="273.7" y="606.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.04%)</title><rect x="271.1" y="595.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="274.1" y="606.0"></text>
</g>
<g>
<title>ip_queue_xmit (1,036 samples, 12.69%)</title><rect x="271.9" y="595.0" width="149.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="274.9" y="606.0">ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (1,026 samples, 12.57%)</title><rect x="273.0" y="579.0" width="148.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="276.0" y="590.0">ip_local_out</text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.04%)</title><rect x="273.3" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="276.3" y="574.0"></text>
</g>
<g>
<title>ip_output (1,021 samples, 12.50%)</title><rect x="273.7" y="563.0" width="147.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="276.7" y="574.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="274.2" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="277.2" y="558.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.05%)</title><rect x="274.5" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="277.5" y="558.0"></text>
</g>
<g>
<title>ip_finish_output (1,011 samples, 12.38%)</title><rect x="275.0" y="547.0" width="146.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="278.0" y="558.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (10 samples, 0.12%)</title><rect x="275.9" y="531.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.9" y="542.0"></text>
</g>
<g>
<title>ip_finish_output2 (994 samples, 12.17%)</title><rect x="277.5" y="531.0" width="143.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="280.5" y="542.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (919 samples, 11.26%)</title><rect x="278.8" y="515.0" width="132.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="281.8" y="526.0">__local_bh_enabl..</text>
</g>
<g>
<title>do_softirq.part.15 (917 samples, 11.23%)</title><rect x="279.1" y="499.0" width="132.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="282.1" y="510.0">do_softirq.part.15</text>
</g>
<g>
<title>do_softirq_own_stack (916 samples, 11.22%)</title><rect x="279.2" y="483.0" width="132.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="282.2" y="494.0">do_softirq_own_s..</text>
</g>
<g>
<title>call_on_stack (916 samples, 11.22%)</title><rect x="279.2" y="467.0" width="132.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="282.2" y="478.0">call_on_stack</text>
</g>
<g>
<title>__do_softirq (912 samples, 11.17%)</title><rect x="279.2" y="451.0" width="131.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="282.2" y="462.0">__do_softirq</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.02%)</title><rect x="281.6" y="435.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="284.6" y="446.0"></text>
</g>
<g>
<title>net_rx_action (890 samples, 10.90%)</title><rect x="282.0" y="435.0" width="128.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="285.0" y="446.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (882 samples, 10.80%)</title><rect x="283.1" y="419.0" width="127.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="286.1" y="430.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (880 samples, 10.78%)</title><rect x="283.4" y="403.0" width="127.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="286.4" y="414.0">__netif_receive_..</text>
</g>
<g>
<title>__netif_receive_skb_core (879 samples, 10.77%)</title><rect x="283.4" y="387.0" width="127.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="286.4" y="398.0">__netif_receive_..</text>
</g>
<g>
<title>ip_rcv (864 samples, 10.58%)</title><rect x="285.5" y="371.0" width="124.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="288.5" y="382.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.02%)</title><rect x="286.2" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="289.2" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (857 samples, 10.50%)</title><rect x="286.5" y="355.0" width="123.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="289.5" y="366.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (851 samples, 10.42%)</title><rect x="287.2" y="339.0" width="123.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.2" y="350.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (850 samples, 10.41%)</title><rect x="287.3" y="323.0" width="122.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="290.3" y="334.0">ip_local_delive..</text>
</g>
<g>
<title>raw_local_deliver (4 samples, 0.05%)</title><rect x="288.6" y="307.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="291.6" y="318.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.09%)</title><rect x="289.2" y="307.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="292.2" y="318.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.04%)</title><rect x="290.2" y="307.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="293.2" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (826 samples, 10.12%)</title><rect x="290.8" y="307.0" width="119.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="293.8" y="318.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (12 samples, 0.15%)</title><rect x="293.1" y="291.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="296.1" y="302.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="295.3" y="291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="298.3" y="302.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.04%)</title><rect x="295.6" y="291.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="298.6" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.10%)</title><rect x="296.0" y="291.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="299.0" y="302.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.06%)</title><rect x="296.4" y="275.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="299.4" y="286.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.02%)</title><rect x="297.2" y="291.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="300.2" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (773 samples, 9.47%)</title><rect x="297.6" y="291.0" width="111.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="300.6" y="302.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.02%)</title><rect x="297.7" y="275.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="300.7" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (768 samples, 9.41%)</title><rect x="298.2" y="275.0" width="111.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="301.2" y="286.0">tcp_rcv_estab..</text>
</g>
<g>
<title>__tcp_ack_snd_check (18 samples, 0.22%)</title><rect x="299.6" y="259.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="302.6" y="270.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (17 samples, 0.21%)</title><rect x="299.8" y="243.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="302.8" y="254.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="299.8" y="227.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="302.8" y="238.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.16%)</title><rect x="300.3" y="227.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="303.3" y="238.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.15%)</title><rect x="300.5" y="211.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="303.5" y="222.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.12%)</title><rect x="300.8" y="195.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="303.8" y="206.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.05%)</title><rect x="302.4" y="259.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="305.4" y="270.0"></text>
</g>
<g>
<title>get_seconds (3 samples, 0.04%)</title><rect x="302.9" y="259.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="305.9" y="270.0"></text>
</g>
<g>
<title>sched_clock_cpu (6 samples, 0.07%)</title><rect x="303.5" y="259.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="306.5" y="270.0"></text>
</g>
<g>
<title>sched_clock (6 samples, 0.07%)</title><rect x="303.5" y="243.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="306.5" y="254.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (4 samples, 0.05%)</title><rect x="303.5" y="227.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="306.5" y="238.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (3 samples, 0.04%)</title><rect x="303.7" y="211.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="306.7" y="222.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.02%)</title><rect x="304.1" y="227.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="307.1" y="238.0"></text>
</g>
<g>
<title>tcp_ack (86 samples, 1.05%)</title><rect x="304.5" y="259.0" width="12.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="307.5" y="270.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.02%)</title><rect x="306.3" y="243.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="309.3" y="254.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.02%)</title><rect x="306.7" y="243.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="309.7" y="254.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.02%)</title><rect x="307.0" y="243.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="310.0" y="254.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (57 samples, 0.70%)</title><rect x="307.4" y="243.0" width="8.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="310.4" y="254.0"></text>
</g>
<g>
<title>__kfree_skb (26 samples, 0.32%)</title><rect x="309.9" y="227.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="312.9" y="238.0"></text>
</g>
<g>
<title>kfree_skbmem (13 samples, 0.16%)</title><rect x="309.9" y="211.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="312.9" y="222.0"></text>
</g>
<g>
<title>kmem_cache_free (10 samples, 0.12%)</title><rect x="310.3" y="195.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="313.3" y="206.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.02%)</title><rect x="311.5" y="179.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="314.5" y="190.0"></text>
</g>
<g>
<title>skb_release_all (13 samples, 0.16%)</title><rect x="311.8" y="211.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="314.8" y="222.0"></text>
</g>
<g>
<title>skb_release_data (12 samples, 0.15%)</title><rect x="311.9" y="195.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="314.9" y="206.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.06%)</title><rect x="312.9" y="179.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="315.9" y="190.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.02%)</title><rect x="312.9" y="163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="315.9" y="174.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="313.2" y="163.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="316.2" y="174.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (6 samples, 0.07%)</title><rect x="314.1" y="227.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="317.1" y="238.0"></text>
</g>
<g>
<title>minmax_subwin_update (3 samples, 0.04%)</title><rect x="314.5" y="211.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="317.5" y="222.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (4 samples, 0.05%)</title><rect x="315.1" y="227.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="318.1" y="238.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.02%)</title><rect x="315.7" y="243.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="318.7" y="254.0"></text>
</g>
<g>
<title>tcp_rate_gen (4 samples, 0.05%)</title><rect x="315.9" y="243.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="318.9" y="254.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.02%)</title><rect x="316.7" y="243.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="319.7" y="254.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.05%)</title><rect x="317.0" y="259.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="320.0" y="270.0"></text>
</g>
<g>
<title>tcp_data_queue (627 samples, 7.68%)</title><rect x="317.7" y="259.0" width="90.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.7" y="270.0">tcp_data_q..</text>
</g>
<g>
<title>dst_release (2 samples, 0.02%)</title><rect x="318.7" y="243.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="321.7" y="254.0"></text>
</g>
<g>
<title>sock_def_readable (605 samples, 7.41%)</title><rect x="319.0" y="243.0" width="87.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="322.0" y="254.0">sock_def_r..</text>
</g>
<g>
<title>__wake_up_sync_key (597 samples, 7.31%)</title><rect x="320.1" y="227.0" width="86.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="323.1" y="238.0">__wake_up_..</text>
</g>
<g>
<title>__wake_up_common_lock (597 samples, 7.31%)</title><rect x="320.1" y="211.0" width="86.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="323.1" y="222.0">__wake_up_..</text>
</g>
<g>
<title>__lock_text_start (597 samples, 7.31%)</title><rect x="320.1" y="195.0" width="86.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="323.1" y="206.0">__lock_tex..</text>
</g>
<g>
<title>tcp_event_data_recv (9 samples, 0.11%)</title><rect x="406.4" y="243.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.4" y="254.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.05%)</title><rect x="407.7" y="243.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="410.7" y="254.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.02%)</title><rect x="408.3" y="259.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="411.3" y="270.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.02%)</title><rect x="408.7" y="259.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="411.7" y="270.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (5 samples, 0.06%)</title><rect x="409.3" y="291.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="412.3" y="302.0"></text>
</g>
<g>
<title>memmove (3 samples, 0.04%)</title><rect x="409.6" y="275.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="412.6" y="286.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.02%)</title><rect x="410.6" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="413.6" y="446.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.02%)</title><rect x="411.0" y="451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="414.0" y="462.0"></text>
</g>
<g>
<title>rcu_bh_qs (2 samples, 0.02%)</title><rect x="411.3" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="414.3" y="462.0"></text>
</g>
<g>
<title>dev_queue_xmit (66 samples, 0.81%)</title><rect x="411.6" y="515.0" width="9.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="414.6" y="526.0"></text>
</g>
<g>
<title>__dev_queue_xmit (63 samples, 0.77%)</title><rect x="411.6" y="499.0" width="9.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="414.6" y="510.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (36 samples, 0.44%)</title><rect x="412.9" y="483.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="415.9" y="494.0"></text>
</g>
<g>
<title>loopback_xmit (28 samples, 0.34%)</title><rect x="413.5" y="467.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="416.5" y="478.0"></text>
</g>
<g>
<title>eth_type_trans (5 samples, 0.06%)</title><rect x="414.2" y="451.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="417.2" y="462.0"></text>
</g>
<g>
<title>netif_rx (10 samples, 0.12%)</title><rect x="414.9" y="451.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="417.9" y="462.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.11%)</title><rect x="415.1" y="435.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="418.1" y="446.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.10%)</title><rect x="415.2" y="419.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="418.2" y="430.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.02%)</title><rect x="416.4" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="419.4" y="462.0"></text>
</g>
<g>
<title>sk_free (3 samples, 0.04%)</title><rect x="416.7" y="451.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="419.7" y="462.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.04%)</title><rect x="417.1" y="451.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="420.1" y="462.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.02%)</title><rect x="417.7" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="420.7" y="478.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.02%)</title><rect x="418.4" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="421.4" y="494.0"></text>
</g>
<g>
<title>validate_xmit_skb (12 samples, 0.15%)</title><rect x="418.7" y="483.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="421.7" y="494.0"></text>
</g>
<g>
<title>netif_skb_features (10 samples, 0.12%)</title><rect x="418.8" y="467.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="421.8" y="478.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.02%)</title><rect x="420.4" y="483.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="423.4" y="494.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="420.7" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="423.7" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="421.3" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="424.3" y="590.0"></text>
</g>
<g>
<title>skb_clone (8 samples, 0.10%)</title><rect x="421.6" y="595.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="424.6" y="606.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.09%)</title><rect x="421.7" y="579.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="424.7" y="590.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.04%)</title><rect x="422.3" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="425.3" y="574.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.02%)</title><rect x="423.0" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="426.0" y="606.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.04%)</title><rect x="423.3" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="426.3" y="622.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.02%)</title><rect x="423.8" y="611.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="426.8" y="622.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.02%)</title><rect x="424.0" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="427.0" y="622.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.02%)</title><rect x="424.0" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="427.0" y="606.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (2 samples, 0.02%)</title><rect x="424.0" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="427.0" y="590.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.02%)</title><rect x="424.0" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="427.0" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.07%)</title><rect x="424.6" y="611.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.6" y="622.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.07%)</title><rect x="424.6" y="595.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="427.6" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (6 samples, 0.07%)</title><rect x="424.6" y="579.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="427.6" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="424.9" y="563.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="427.9" y="574.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="424.9" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="427.9" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.05%)</title><rect x="424.9" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="427.9" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="425.8" y="611.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="428.8" y="622.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.04%)</title><rect x="426.4" y="611.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="429.4" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (22 samples, 0.27%)</title><rect x="426.9" y="659.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="429.9" y="670.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="426.9" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="429.9" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (20 samples, 0.24%)</title><rect x="427.2" y="643.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="430.2" y="654.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.05%)</title><rect x="428.2" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="431.2" y="638.0"></text>
</g>
<g>
<title>tcp_established_options (5 samples, 0.06%)</title><rect x="428.8" y="627.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="431.8" y="638.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.02%)</title><rect x="429.1" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="432.1" y="622.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (4 samples, 0.05%)</title><rect x="429.5" y="627.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="432.5" y="638.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.04%)</title><rect x="430.1" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="433.1" y="670.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.02%)</title><rect x="430.7" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="433.7" y="686.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.11%)</title><rect x="431.1" y="707.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="434.1" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.02%)</title><rect x="431.4" y="691.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="434.4" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.06%)</title><rect x="431.7" y="691.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="434.7" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.05%)</title><rect x="431.9" y="675.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="434.9" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.04%)</title><rect x="432.0" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="435.0" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm (2 samples, 0.02%)</title><rect x="432.1" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="435.1" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.02%)</title><rect x="432.4" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="435.4" y="718.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="432.7" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="435.7" y="782.0"></text>
</g>
<g>
<title>rw_verify_area (15 samples, 0.18%)</title><rect x="433.0" y="771.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="436.0" y="782.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="433.3" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="436.3" y="766.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.13%)</title><rect x="433.6" y="755.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="436.6" y="766.0"></text>
</g>
<g>
<title>apparmor_file_permission (10 samples, 0.12%)</title><rect x="433.7" y="739.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="436.7" y="750.0"></text>
</g>
<g>
<title>common_file_perm (10 samples, 0.12%)</title><rect x="433.7" y="723.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="436.7" y="734.0"></text>
</g>
<g>
<title>aa_file_perm (5 samples, 0.06%)</title><rect x="434.5" y="707.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="437.5" y="718.0"></text>
</g>
<g>
<title>__write (4 samples, 0.05%)</title><rect x="435.3" y="851.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="438.3" y="862.0"></text>
</g>
<g>
<title>convertReturnVal (2 samples, 0.02%)</title><rect x="435.9" y="851.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="438.9" y="862.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.02%)</title><rect x="436.2" y="851.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="439.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (3 samples, 0.04%)</title><rect x="436.5" y="931.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="439.5" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.18%)</title><rect x="436.9" y="1027.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.18%)</title><rect x="436.9" y="1011.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.18%)</title><rect x="436.9" y="995.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$66/25175452.act (3,698 samples, 45.29%)</title><rect x="439.1" y="1043.0" width="534.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.1" y="1054.0">ru/mail/polis/service/dogm/ServiceImpl$$Lambda$66/25175452.act</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$0 (3,698 samples, 45.29%)</title><rect x="439.1" y="1027.0" width="534.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.1" y="1038.0">ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.processEntityRequest (3,698 samples, 45.29%)</title><rect x="439.1" y="1011.0" width="534.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="442.1" y="1022.0">ru/mail/polis/service/dogm/ServiceImpl.processEntityRequest</text>
</g>
<g>
<title>java/util/HashMap.get (21 samples, 0.26%)</title><rect x="439.2" y="995.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.2" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (21 samples, 0.26%)</title><rect x="439.2" y="979.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.2" y="990.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="442.0" y="963.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="445.0" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="442.0" y="947.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="445.0" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="442.0" y="931.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="445.0" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorPut.processEntityDirectly (1,269 samples, 15.54%)</title><rect x="442.3" y="995.0" width="183.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.3" y="1006.0">ru/mail/polis/service/do..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.07%)</title><rect x="442.3" y="979.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.07%)</title><rect x="442.3" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.07%)</title><rect x="442.3" y="947.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.3" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.07%)</title><rect x="442.3" y="931.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="445.3" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/RocksDAO.upsertWithTimestamp (1,263 samples, 15.47%)</title><rect x="443.1" y="979.0" width="182.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.1" y="990.0">ru/mail/polis/dao/dogm/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,263 samples, 15.47%)</title><rect x="443.1" y="963.0" width="182.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.1" y="974.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,237 samples, 15.15%)</title><rect x="445.7" y="947.0" width="178.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.7" y="958.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (9 samples, 0.11%)</title><rect x="446.7" y="931.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="449.7" y="942.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (15 samples, 0.18%)</title><rect x="448.0" y="931.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="451.0" y="942.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1,181 samples, 14.46%)</title><rect x="450.2" y="931.0" width="170.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="453.2" y="942.0">Java_org_rocksdb_Rocks..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.02%)</title><rect x="450.6" y="915.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="453.6" y="926.0"></text>
</g>
<g>
<title>free (4 samples, 0.05%)</title><rect x="450.9" y="915.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="453.9" y="926.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (6 samples, 0.07%)</title><rect x="451.5" y="915.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="454.5" y="926.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="452.4" y="915.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="455.4" y="926.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.05%)</title><rect x="453.0" y="915.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="456.0" y="926.0"></text>
</g>
<g>
<title>operator new(unsigned int) (5 samples, 0.06%)</title><rect x="453.7" y="915.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="456.7" y="926.0"></text>
</g>
<g>
<title>operator new[](unsigned int) (5 samples, 0.06%)</title><rect x="454.4" y="915.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="457.4" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="455.1" y="915.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="458.1" y="926.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1,143 samples, 14.00%)</title><rect x="455.7" y="915.0" width="165.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="458.7" y="926.0">rocksdb_put_helper(JN..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.158] (4 samples, 0.05%)</title><rect x="456.6" y="899.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="459.6" y="910.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.04%)</title><rect x="457.1" y="899.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="460.1" y="910.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (17 samples, 0.21%)</title><rect x="457.6" y="899.0" width="2.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="460.6" y="910.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (9 samples, 0.11%)</title><rect x="458.3" y="883.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="461.3" y="894.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.05%)</title><rect x="459.0" y="867.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="462.0" y="878.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned int) (3 samples, 0.04%)</title><rect x="459.6" y="883.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="462.6" y="894.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,106 samples, 13.55%)</title><rect x="460.0" y="899.0" width="159.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="463.0" y="910.0">rocksdb::DB::Put(roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="460.0" y="883.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="463.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,104 samples, 13.52%)</title><rect x="460.3" y="883.0" width="159.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="463.3" y="894.0">rocksdb::DBImpl::Put..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,093 samples, 13.39%)</title><rect x="460.3" y="867.0" width="158.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="463.3" y="878.0">rocksdb::DB::Put(roc..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.04%)</title><rect x="460.3" y="851.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="463.3" y="862.0"></text>
</g>
<g>
<title>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.25 (3 samples, 0.04%)</title><rect x="460.8" y="851.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="463.8" y="862.0"></text>
</g>
<g>
<title>free (4 samples, 0.05%)</title><rect x="461.3" y="851.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="464.3" y="862.0"></text>
</g>
<g>
<title>operator delete(void*) (3 samples, 0.04%)</title><rect x="462.1" y="851.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="465.1" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1,018 samples, 12.47%)</title><rect x="462.6" y="851.0" width="147.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="465.6" y="862.0">rocksdb::DBImpl::Wr..</text>
</g>
<g>
<title>___tls_get_addr (3 samples, 0.04%)</title><rect x="462.8" y="835.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="465.8" y="846.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="463.2" y="835.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="466.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (5 samples, 0.06%)</title><rect x="463.6" y="835.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="466.6" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (4 samples, 0.05%)</title><rect x="464.4" y="835.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="467.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (961 samples, 11.77%)</title><rect x="464.9" y="835.0" width="138.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="467.9" y="846.0">rocksdb::DBImpl::..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (3 samples, 0.04%)</title><rect x="470.7" y="819.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="473.7" y="830.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (2 samples, 0.02%)</title><rect x="471.3" y="819.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="474.3" y="830.0"></text>
</g>
<g>
<title>___tls_get_addr (3 samples, 0.04%)</title><rect x="471.6" y="819.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="474.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned int*, rocksdb::WriteBatch**) (2 samples, 0.02%)</title><rect x="472.0" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="475.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (7 samples, 0.09%)</title><rect x="472.3" y="819.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="475.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (8 samples, 0.10%)</title><rect x="473.3" y="819.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="476.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (7 samples, 0.09%)</title><rect x="473.5" y="803.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="476.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (547 samples, 6.70%)</title><rect x="474.8" y="819.0" width="79.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="477.8" y="830.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned int*, rocksdb::WriteBatch**) (2 samples, 0.02%)</title><rect x="475.9" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="478.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (528 samples, 6.47%)</title><rect x="476.2" y="803.0" width="76.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="479.2" y="814.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (518 samples, 6.34%)</title><rect x="476.9" y="787.0" width="74.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="479.9" y="798.0">rocksdb:..</text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="477.7" y="771.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="480.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="478.0" y="771.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="481.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned int) (5 samples, 0.06%)</title><rect x="478.2" y="771.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="481.2" y="782.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned int) (504 samples, 6.17%)</title><rect x="479.0" y="771.0" width="72.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="482.0" y="782.0">rocksdb:..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.05%)</title><rect x="479.4" y="755.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="482.4" y="766.0"></text>
</g>
<g>
<title>___tls_get_addr (3 samples, 0.04%)</title><rect x="480.1" y="755.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="483.1" y="766.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="480.6" y="755.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="483.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (5 samples, 0.06%)</title><rect x="481.1" y="755.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="484.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned int, unsigned int) (3 samples, 0.04%)</title><rect x="481.9" y="755.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="484.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="482.3" y="755.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="485.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (473 samples, 5.79%)</title><rect x="482.9" y="755.0" width="68.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="485.9" y="766.0">rocksdb..</text>
</g>
<g>
<title>___tls_get_addr (2 samples, 0.02%)</title><rect x="483.2" y="739.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="486.2" y="750.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="483.4" y="739.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="486.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (4 samples, 0.05%)</title><rect x="483.9" y="739.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="486.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (5 samples, 0.06%)</title><rect x="484.6" y="739.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="487.6" y="750.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (5 samples, 0.06%)</title><rect x="485.3" y="739.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="488.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned int) (451 samples, 5.52%)</title><rect x="486.0" y="739.0" width="65.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="489.0" y="750.0">rocksdb..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.04%)</title><rect x="487.8" y="723.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="490.8" y="734.0"></text>
</g>
<g>
<title>__kernel_vsyscall (427 samples, 5.23%)</title><rect x="488.4" y="723.0" width="61.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="491.4" y="734.0">__kern..</text>
</g>
<g>
<title>entry_SYSENTER_32 (421 samples, 5.16%)</title><rect x="489.1" y="707.0" width="60.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="492.1" y="718.0">entry_..</text>
</g>
<g>
<title>do_fast_syscall_32 (420 samples, 5.14%)</title><rect x="489.1" y="691.0" width="60.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="492.1" y="702.0">do_fas..</text>
</g>
<g>
<title>sys_write (418 samples, 5.12%)</title><rect x="489.4" y="675.0" width="60.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="492.4" y="686.0">sys_wr..</text>
</g>
<g>
<title>__fdget_pos (10 samples, 0.12%)</title><rect x="489.9" y="659.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="492.9" y="670.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.10%)</title><rect x="489.9" y="643.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="492.9" y="654.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.06%)</title><rect x="490.4" y="627.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="493.4" y="638.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.02%)</title><rect x="491.1" y="643.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.1" y="654.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="491.4" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="494.4" y="670.0"></text>
</g>
<g>
<title>__sb_end_write (2 samples, 0.02%)</title><rect x="491.7" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="494.7" y="670.0"></text>
</g>
<g>
<title>vfs_write (398 samples, 4.87%)</title><rect x="492.3" y="659.0" width="57.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="495.3" y="670.0">vfs_wr..</text>
</g>
<g>
<title>__vfs_write (372 samples, 4.56%)</title><rect x="492.8" y="643.0" width="53.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="495.8" y="654.0">__vfs..</text>
</g>
<g>
<title>new_sync_write (371 samples, 4.54%)</title><rect x="493.0" y="627.0" width="53.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.0" y="638.0">new_s..</text>
</g>
<g>
<title>ext4_file_write_iter (369 samples, 4.52%)</title><rect x="493.1" y="611.0" width="53.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="496.1" y="622.0">ext4_..</text>
</g>
<g>
<title>__generic_file_write_iter (350 samples, 4.29%)</title><rect x="493.7" y="595.0" width="50.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="496.7" y="606.0">__gen..</text>
</g>
<g>
<title>__mnt_want_write_file (2 samples, 0.02%)</title><rect x="494.0" y="579.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="497.0" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.04%)</title><rect x="494.6" y="579.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="497.6" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.02%)</title><rect x="495.0" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.0" y="590.0"></text>
</g>
<g>
<title>file_remove_privs (7 samples, 0.09%)</title><rect x="495.3" y="579.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="498.3" y="590.0"></text>
</g>
<g>
<title>file_update_time (62 samples, 0.76%)</title><rect x="496.3" y="579.0" width="9.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="499.3" y="590.0"></text>
</g>
<g>
<title>current_kernel_time64 (3 samples, 0.04%)</title><rect x="496.9" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="499.9" y="574.0"></text>
</g>
<g>
<title>generic_update_time (55 samples, 0.67%)</title><rect x="497.3" y="563.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="500.3" y="574.0"></text>
</g>
<g>
<title>__mark_inode_dirty (53 samples, 0.65%)</title><rect x="497.5" y="547.0" width="7.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="500.5" y="558.0"></text>
</g>
<g>
<title>ext4_dirty_inode (52 samples, 0.64%)</title><rect x="497.6" y="531.0" width="7.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="500.6" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.06%)</title><rect x="497.6" y="515.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="500.6" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.05%)</title><rect x="497.8" y="499.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="500.8" y="510.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.02%)</title><rect x="498.0" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.0" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.04%)</title><rect x="498.3" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="501.3" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.02%)</title><rect x="498.5" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="501.5" y="510.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="498.5" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="501.5" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (43 samples, 0.53%)</title><rect x="498.8" y="515.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="501.8" y="526.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 0.04%)</title><rect x="499.2" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="502.2" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (20 samples, 0.24%)</title><rect x="499.9" y="499.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="502.9" y="510.0"></text>
</g>
<g>
<title>ext4_do_update_inode (17 samples, 0.21%)</title><rect x="500.2" y="483.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="503.2" y="494.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (11 samples, 0.13%)</title><rect x="500.8" y="467.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="503.8" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.52 (10 samples, 0.12%)</title><rect x="500.9" y="451.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="503.9" y="462.0"></text>
</g>
<g>
<title>crypto_shash_update (8 samples, 0.10%)</title><rect x="501.2" y="435.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="504.2" y="446.0"></text>
</g>
<g>
<title>chksum_update (7 samples, 0.09%)</title><rect x="501.4" y="419.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="504.4" y="430.0"></text>
</g>
<g>
<title>__crc32c_le (7 samples, 0.09%)</title><rect x="501.4" y="403.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="504.4" y="414.0"></text>
</g>
<g>
<title>from_kuid (2 samples, 0.02%)</title><rect x="502.4" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.4" y="478.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.02%)</title><rect x="502.4" y="451.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.4" y="462.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (15 samples, 0.18%)</title><rect x="502.8" y="499.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="505.8" y="510.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (9 samples, 0.11%)</title><rect x="502.8" y="483.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="505.8" y="494.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.04%)</title><rect x="503.1" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="506.1" y="478.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.04%)</title><rect x="503.1" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="506.1" y="462.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.02%)</title><rect x="503.2" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="506.2" y="446.0"></text>
</g>
<g>
<title>ext4_inode_table (3 samples, 0.04%)</title><rect x="503.7" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="506.7" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (3 samples, 0.04%)</title><rect x="504.5" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="507.5" y="494.0"></text>
</g>
<g>
<title>generic_perform_write (267 samples, 3.27%)</title><rect x="505.3" y="579.0" width="38.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="508.3" y="590.0">gen..</text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.02%)</title><rect x="505.7" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="508.7" y="574.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (3 samples, 0.04%)</title><rect x="506.1" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="509.1" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_begin (75 samples, 0.92%)</title><rect x="506.9" y="563.0" width="10.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="509.9" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (13 samples, 0.16%)</title><rect x="507.3" y="547.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="510.3" y="558.0"></text>
</g>
<g>
<title>jbd2__journal_start (13 samples, 0.16%)</title><rect x="507.3" y="531.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="510.3" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.05%)</title><rect x="507.7" y="515.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="510.7" y="526.0"></text>
</g>
<g>
<title>start_this_handle (6 samples, 0.07%)</title><rect x="508.3" y="515.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="511.3" y="526.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.02%)</title><rect x="508.9" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="511.9" y="510.0"></text>
</g>
<g>
<title>ext4_block_write_begin (18 samples, 0.22%)</title><rect x="509.2" y="547.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="512.2" y="558.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.02%)</title><rect x="511.8" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="514.8" y="558.0"></text>
</g>
<g>
<title>ext4_nonda_switch (7 samples, 0.09%)</title><rect x="512.1" y="547.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="515.1" y="558.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (31 samples, 0.38%)</title><rect x="513.1" y="547.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="516.1" y="558.0"></text>
</g>
<g>
<title>pagecache_get_page (26 samples, 0.32%)</title><rect x="513.2" y="531.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="516.2" y="542.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.02%)</title><rect x="513.5" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="516.5" y="526.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (2 samples, 0.02%)</title><rect x="513.8" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="516.8" y="526.0"></text>
</g>
<g>
<title>find_get_entry (18 samples, 0.22%)</title><rect x="514.1" y="515.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="517.1" y="526.0"></text>
</g>
<g>
<title>__radix_tree_lookup (2 samples, 0.02%)</title><rect x="514.8" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="517.8" y="510.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (11 samples, 0.13%)</title><rect x="515.1" y="499.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="518.1" y="510.0"></text>
</g>
<g>
<title>__radix_tree_lookup (11 samples, 0.13%)</title><rect x="515.1" y="483.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="518.1" y="494.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (2 samples, 0.02%)</title><rect x="516.7" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="519.7" y="526.0"></text>
</g>
<g>
<title>wait_for_stable_page (4 samples, 0.05%)</title><rect x="517.0" y="531.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="520.0" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_end (159 samples, 1.95%)</title><rect x="517.7" y="563.0" width="23.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="520.7" y="574.0">e..</text>
</g>
<g>
<title>__ext4_journal_stop (9 samples, 0.11%)</title><rect x="518.1" y="547.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="521.1" y="558.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.02%)</title><rect x="518.1" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="521.1" y="542.0"></text>
</g>
<g>
<title>jbd2_journal_stop (6 samples, 0.07%)</title><rect x="518.4" y="531.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="521.4" y="542.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.02%)</title><rect x="518.7" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="521.7" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.02%)</title><rect x="518.7" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="521.7" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="518.7" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="521.7" y="494.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="519.0" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="522.0" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.04%)</title><rect x="519.4" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="522.4" y="558.0"></text>
</g>
<g>
<title>generic_write_end (144 samples, 1.76%)</title><rect x="519.9" y="547.0" width="20.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="522.9" y="558.0"></text>
</g>
<g>
<title>__block_commit_write.isra.27 (2 samples, 0.02%)</title><rect x="520.3" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="523.3" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (130 samples, 1.59%)</title><rect x="520.6" y="531.0" width="18.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="523.6" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (129 samples, 1.58%)</title><rect x="520.7" y="515.0" width="18.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.7" y="526.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (128 samples, 1.57%)</title><rect x="520.9" y="499.0" width="18.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="523.9" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (90 samples, 1.10%)</title><rect x="521.0" y="483.0" width="13.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="524.0" y="494.0"></text>
</g>
<g>
<title>__brelse (3 samples, 0.04%)</title><rect x="521.2" y="467.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="524.2" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (79 samples, 0.97%)</title><rect x="521.6" y="467.0" width="11.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="524.6" y="478.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (6 samples, 0.07%)</title><rect x="523.9" y="451.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="526.9" y="462.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (2 samples, 0.02%)</title><rect x="524.5" y="435.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="527.5" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="524.9" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="527.9" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (52 samples, 0.64%)</title><rect x="525.2" y="451.0" width="7.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="528.2" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.52 (51 samples, 0.62%)</title><rect x="525.4" y="435.0" width="7.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="528.4" y="446.0"></text>
</g>
<g>
<title>chksum_update (4 samples, 0.05%)</title><rect x="525.9" y="419.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="528.9" y="430.0"></text>
</g>
<g>
<title>crypto_shash_update (43 samples, 0.53%)</title><rect x="526.5" y="419.0" width="6.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="529.5" y="430.0"></text>
</g>
<g>
<title>__crc32c_le (2 samples, 0.02%)</title><rect x="527.2" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="530.2" y="414.0"></text>
</g>
<g>
<title>chksum_update (34 samples, 0.42%)</title><rect x="527.5" y="403.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="530.5" y="414.0"></text>
</g>
<g>
<title>__crc32c_le (34 samples, 0.42%)</title><rect x="527.5" y="387.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="530.5" y="398.0"></text>
</g>
<g>
<title>from_kuid (5 samples, 0.06%)</title><rect x="533.3" y="467.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="536.3" y="478.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (37 samples, 0.45%)</title><rect x="534.0" y="483.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="537.0" y="494.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (26 samples, 0.32%)</title><rect x="534.0" y="467.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="537.0" y="478.0"></text>
</g>
<g>
<title>__getblk_gfp (17 samples, 0.21%)</title><rect x="534.6" y="451.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="537.6" y="462.0"></text>
</g>
<g>
<title>__find_get_block (14 samples, 0.17%)</title><rect x="534.7" y="435.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="537.7" y="446.0"></text>
</g>
<g>
<title>lookup_page_ext (2 samples, 0.02%)</title><rect x="535.3" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="538.3" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (8 samples, 0.10%)</title><rect x="535.6" y="419.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.6" y="430.0"></text>
</g>
<g>
<title>lookup_page_ext (2 samples, 0.02%)</title><rect x="536.5" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="539.5" y="414.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.04%)</title><rect x="537.1" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="540.1" y="462.0"></text>
</g>
<g>
<title>ext4_inode_table (2 samples, 0.02%)</title><rect x="537.5" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="540.5" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (3 samples, 0.04%)</title><rect x="537.8" y="467.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="540.8" y="478.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.8 (2 samples, 0.02%)</title><rect x="537.9" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="540.9" y="462.0"></text>
</g>
<g>
<title>ext4_get_group_desc (2 samples, 0.02%)</title><rect x="538.2" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="541.2" y="478.0"></text>
</g>
<g>
<title>ext4_inode_table (3 samples, 0.04%)</title><rect x="538.5" y="467.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="541.5" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (3 samples, 0.04%)</title><rect x="538.9" y="467.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="541.9" y="478.0"></text>
</g>
<g>
<title>block_write_end (5 samples, 0.06%)</title><rect x="539.4" y="531.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="542.4" y="542.0"></text>
</g>
<g>
<title>__block_commit_write.isra.27 (4 samples, 0.05%)</title><rect x="539.5" y="515.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="542.5" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.04%)</title><rect x="540.1" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="543.1" y="542.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (10 samples, 0.12%)</title><rect x="541.1" y="563.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="544.1" y="574.0"></text>
</g>
<g>
<title>copyin (4 samples, 0.05%)</title><rect x="541.5" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.5" y="558.0"></text>
</g>
<g>
<title>__copy_user_ll (4 samples, 0.05%)</title><rect x="541.5" y="531.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="544.5" y="542.0"></text>
</g>
<g>
<title>kmap_atomic (2 samples, 0.02%)</title><rect x="542.1" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="545.1" y="558.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (3 samples, 0.04%)</title><rect x="542.6" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="545.6" y="574.0"></text>
</g>
<g>
<title>kmap_atomic (5 samples, 0.06%)</title><rect x="543.0" y="563.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="546.0" y="574.0"></text>
</g>
<g>
<title>down_write_trylock (2 samples, 0.02%)</title><rect x="544.3" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="547.3" y="606.0"></text>
</g>
<g>
<title>ext4_write_checks (8 samples, 0.10%)</title><rect x="544.6" y="595.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="547.6" y="606.0"></text>
</g>
<g>
<title>generic_write_checks (6 samples, 0.07%)</title><rect x="544.9" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.9" y="590.0"></text>
</g>
<g>
<title>file_remove_privs (2 samples, 0.02%)</title><rect x="545.7" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.7" y="606.0"></text>
</g>
<g>
<title>generic_write_checks (3 samples, 0.04%)</title><rect x="546.0" y="595.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="549.0" y="606.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.06%)</title><rect x="546.6" y="643.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="549.6" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (17 samples, 0.21%)</title><rect x="547.3" y="643.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="550.3" y="654.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.11%)</title><rect x="548.5" y="627.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="551.5" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.07%)</title><rect x="548.8" y="611.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.8" y="622.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.07%)</title><rect x="548.8" y="595.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="551.8" y="606.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="549.2" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="552.2" y="590.0"></text>
</g>
<g>
<title>__write (3 samples, 0.04%)</title><rect x="550.1" y="723.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="553.1" y="734.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="550.5" y="723.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="553.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="550.9" y="723.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="553.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned int) (4 samples, 0.05%)</title><rect x="551.2" y="755.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="554.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned int) (5 samples, 0.06%)</title><rect x="551.8" y="787.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="554.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (3 samples, 0.04%)</title><rect x="552.5" y="803.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="555.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="553.0" y="803.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="556.0" y="814.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (2 samples, 0.02%)</title><rect x="553.5" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="556.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (5 samples, 0.06%)</title><rect x="553.8" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="556.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (10 samples, 0.12%)</title><rect x="554.5" y="819.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="557.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (7 samples, 0.09%)</title><rect x="554.8" y="803.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="557.8" y="814.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.02%)</title><rect x="555.0" y="787.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="558.0" y="798.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (3 samples, 0.04%)</title><rect x="555.3" y="787.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="558.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (2 samples, 0.02%)</title><rect x="556.0" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="559.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.02%)</title><rect x="556.4" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="559.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (3 samples, 0.04%)</title><rect x="556.7" y="819.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="559.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (3 samples, 0.04%)</title><rect x="557.2" y="819.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="560.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.04%)</title><rect x="557.6" y="819.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="560.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (268 samples, 3.28%)</title><rect x="558.0" y="819.0" width="38.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="561.0" y="830.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.06%)</title><rect x="558.3" y="803.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="561.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.02%)</title><rect x="559.0" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="562.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (258 samples, 3.16%)</title><rect x="559.3" y="803.0" width="37.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="562.3" y="814.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (244 samples, 2.99%)</title><rect x="560.6" y="787.0" width="35.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="563.6" y="798.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.02%)</title><rect x="561.1" y="771.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="564.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (239 samples, 2.93%)</title><rect x="561.3" y="771.0" width="34.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="564.3" y="782.0">ro..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (11 samples, 0.13%)</title><rect x="562.6" y="755.0" width="1.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="565.6" y="766.0"></text>
</g>
<g>
<title>common_exception (8 samples, 0.10%)</title><rect x="563.1" y="739.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="566.1" y="750.0"></text>
</g>
<g>
<title>do_page_fault (8 samples, 0.10%)</title><rect x="563.1" y="723.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="566.1" y="734.0"></text>
</g>
<g>
<title>__do_page_fault (8 samples, 0.10%)</title><rect x="563.1" y="707.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="566.1" y="718.0"></text>
</g>
<g>
<title>handle_mm_fault (8 samples, 0.10%)</title><rect x="563.1" y="691.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="566.1" y="702.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (3 samples, 0.04%)</title><rect x="563.1" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="566.1" y="686.0"></text>
</g>
<g>
<title>get_page_from_freelist (3 samples, 0.04%)</title><rect x="563.1" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="566.1" y="670.0"></text>
</g>
<g>
<title>native_set_pte_at (3 samples, 0.04%)</title><rect x="563.8" y="675.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="566.8" y="686.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (5 samples, 0.06%)</title><rect x="564.2" y="755.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="567.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.02%)</title><rect x="565.1" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="568.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.02%)</title><rect x="565.4" y="755.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="568.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (200 samples, 2.45%)</title><rect x="565.7" y="755.0" width="28.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="568.7" y="766.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (167 samples, 2.05%)</title><rect x="567.6" y="739.0" width="24.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="570.6" y="750.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (21 samples, 0.26%)</title><rect x="567.7" y="723.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="570.7" y="734.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="569.0" y="707.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="572.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned int, unsigned int, rocksdb::Logger*) (9 samples, 0.11%)</title><rect x="569.4" y="707.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="572.4" y="718.0"></text>
</g>
<g>
<title>_init (4 samples, 0.05%)</title><rect x="570.7" y="723.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="573.7" y="734.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (131 samples, 1.60%)</title><rect x="571.3" y="723.0" width="18.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="574.3" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (107 samples, 1.31%)</title><rect x="572.8" y="707.0" width="15.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="575.8" y="718.0"></text>
</g>
<g>
<title>___tls_get_addr (3 samples, 0.04%)</title><rect x="584.0" y="691.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="587.0" y="702.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="584.5" y="691.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="587.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (24 samples, 0.29%)</title><rect x="584.8" y="691.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="587.8" y="702.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (6 samples, 0.07%)</title><rect x="586.5" y="675.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="589.5" y="686.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="587.4" y="675.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="590.4" y="686.0"></text>
</g>
<g>
<title>___tls_get_addr (3 samples, 0.04%)</title><rect x="587.6" y="675.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="590.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (4 samples, 0.05%)</title><rect x="588.4" y="707.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="591.4" y="718.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (2 samples, 0.02%)</title><rect x="588.7" y="691.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="591.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.10%)</title><rect x="588.9" y="707.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="591.9" y="718.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.05%)</title><rect x="589.2" y="691.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="592.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned int, unsigned int, rocksdb::Logger*) (2 samples, 0.02%)</title><rect x="590.2" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="593.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableRep::KeyComparator::decode_key(char const*) const (5 samples, 0.06%)</title><rect x="590.5" y="723.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="593.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (3 samples, 0.04%)</title><rect x="591.3" y="723.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="594.3" y="734.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.05%)</title><rect x="591.8" y="739.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="594.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (7 samples, 0.09%)</title><rect x="592.4" y="739.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="595.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (6 samples, 0.07%)</title><rect x="593.4" y="739.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="596.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (6 samples, 0.07%)</title><rect x="593.4" y="723.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="596.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (5 samples, 0.06%)</title><rect x="594.6" y="755.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="597.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (2 samples, 0.02%)</title><rect x="595.3" y="755.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="598.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long long, rocksdb::ValueType) (2 samples, 0.02%)</title><rect x="595.6" y="755.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="598.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (4 samples, 0.05%)</title><rect x="596.0" y="787.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="599.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, unsigned int, bool) (2 samples, 0.02%)</title><rect x="596.7" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="599.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.02%)</title><rect x="596.7" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="599.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="596.7" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="599.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.02%)</title><rect x="596.7" y="771.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="599.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.02%)</title><rect x="596.7" y="755.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="599.7" y="766.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (2 samples, 0.02%)</title><rect x="596.7" y="739.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="599.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.02%)</title><rect x="596.7" y="723.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="599.7" y="734.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.02%)</title><rect x="596.7" y="707.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="599.7" y="718.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (2 samples, 0.02%)</title><rect x="596.7" y="691.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="599.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (4 samples, 0.05%)</title><rect x="597.2" y="819.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="600.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.02%)</title><rect x="597.8" y="819.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="600.8" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.02%)</title><rect x="597.8" y="803.0" width="0.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="600.8" y="814.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.02%)</title><rect x="597.8" y="787.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="600.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.02%)</title><rect x="597.8" y="771.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="600.8" y="782.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.02%)</title><rect x="597.8" y="755.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="600.8" y="766.0"></text>
</g>
<g>
<title>sys_clock_gettime (2 samples, 0.02%)</title><rect x="597.8" y="739.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.8" y="750.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (2 samples, 0.02%)</title><rect x="597.8" y="723.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="600.8" y="734.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.02%)</title><rect x="597.8" y="707.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="600.8" y="718.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.02%)</title><rect x="597.8" y="691.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="600.8" y="702.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.02%)</title><rect x="597.8" y="675.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="600.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (2 samples, 0.02%)</title><rect x="598.0" y="819.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="601.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (4 samples, 0.05%)</title><rect x="598.3" y="819.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="601.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.02%)</title><rect x="598.9" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="601.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (29 samples, 0.36%)</title><rect x="599.2" y="819.0" width="4.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="602.2" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (23 samples, 0.28%)</title><rect x="599.3" y="803.0" width="3.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="602.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="599.3" y="787.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="602.3" y="798.0"></text>
</g>
<g>
<title>__kernel_vsyscall (7 samples, 0.09%)</title><rect x="599.3" y="771.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="602.3" y="782.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (7 samples, 0.09%)</title><rect x="599.3" y="755.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="602.3" y="766.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (7 samples, 0.09%)</title><rect x="599.3" y="739.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="602.3" y="750.0"></text>
</g>
<g>
<title>__kernel_vsyscall (16 samples, 0.20%)</title><rect x="600.4" y="787.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="603.4" y="798.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (14 samples, 0.17%)</title><rect x="600.7" y="771.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="603.7" y="782.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (13 samples, 0.16%)</title><rect x="600.7" y="755.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="603.7" y="766.0"></text>
</g>
<g>
<title>sys_clock_gettime (12 samples, 0.15%)</title><rect x="600.8" y="739.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="603.8" y="750.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (10 samples, 0.12%)</title><rect x="600.9" y="723.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="603.9" y="734.0"></text>
</g>
<g>
<title>ktime_get_ts64 (10 samples, 0.12%)</title><rect x="600.9" y="707.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="603.9" y="718.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (7 samples, 0.09%)</title><rect x="601.4" y="691.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.4" y="702.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (7 samples, 0.09%)</title><rect x="601.4" y="675.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="604.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.02%)</title><rect x="603.0" y="803.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="606.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.02%)</title><rect x="603.4" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="606.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.02%)</title><rect x="603.8" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="606.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (9 samples, 0.11%)</title><rect x="604.1" y="835.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="607.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (5 samples, 0.06%)</title><rect x="605.4" y="835.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="608.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (5 samples, 0.06%)</title><rect x="606.1" y="835.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="609.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (9 samples, 0.11%)</title><rect x="606.9" y="835.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="609.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned int, unsigned int) (3 samples, 0.04%)</title><rect x="608.2" y="835.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="611.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.02%)</title><rect x="608.7" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="611.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (3 samples, 0.04%)</title><rect x="609.3" y="835.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="612.3" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (7 samples, 0.09%)</title><rect x="609.8" y="851.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="612.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (28 samples, 0.34%)</title><rect x="610.9" y="851.0" width="4.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="613.9" y="862.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (5 samples, 0.06%)</title><rect x="611.2" y="835.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="614.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (6 samples, 0.07%)</title><rect x="611.9" y="835.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="614.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (4 samples, 0.05%)</title><rect x="612.2" y="819.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="615.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (4 samples, 0.05%)</title><rect x="612.8" y="835.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="615.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="613.5" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="616.5" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (5 samples, 0.06%)</title><rect x="613.9" y="835.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="616.9" y="846.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned int) (2 samples, 0.02%)</title><rect x="614.7" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="617.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned int, unsigned int) (3 samples, 0.04%)</title><rect x="615.0" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="618.0" y="862.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned int) (4 samples, 0.05%)</title><rect x="615.5" y="851.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="618.5" y="862.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.02%)</title><rect x="616.3" y="851.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="619.3" y="862.0"></text>
</g>
<g>
<title>std::string::append(unsigned int, char) (3 samples, 0.04%)</title><rect x="616.5" y="851.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="619.5" y="862.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned int) (4 samples, 0.05%)</title><rect x="617.0" y="851.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="620.0" y="862.0"></text>
</g>
<g>
<title>std::string::resize(unsigned int, char) (5 samples, 0.06%)</title><rect x="617.6" y="851.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="620.6" y="862.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.06%)</title><rect x="618.4" y="867.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="621.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned int, unsigned int) (2 samples, 0.02%)</title><rect x="619.1" y="867.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="622.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.04%)</title><rect x="619.4" y="867.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="622.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (5 samples, 0.06%)</title><rect x="619.9" y="899.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="622.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="620.9" y="931.0" width="2.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="623.9" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.05%)</title><rect x="621.0" y="915.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="624.0" y="926.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.05%)</title><rect x="621.0" y="899.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="624.0" y="910.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.05%)</title><rect x="621.0" y="883.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="624.0" y="894.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.05%)</title><rect x="621.0" y="867.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="624.0" y="878.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="621.0" y="851.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="624.0" y="862.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.02%)</title><rect x="621.0" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="624.0" y="846.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.02%)</title><rect x="621.0" y="819.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="624.0" y="830.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="621.0" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="624.0" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="621.0" y="787.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="624.0" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.02%)</title><rect x="621.0" y="771.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="624.0" y="782.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="621.3" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="624.3" y="846.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.02%)</title><rect x="621.3" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="624.3" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.02%)</title><rect x="621.3" y="803.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="624.3" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="621.3" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="624.3" y="798.0"></text>
</g>
<g>
<title>malloc (10 samples, 0.12%)</title><rect x="621.6" y="915.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="624.6" y="926.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned int) (3 samples, 0.04%)</title><rect x="623.1" y="915.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="626.1" y="926.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3 samples, 0.04%)</title><rect x="623.6" y="931.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="626.6" y="942.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned int) (2 samples, 0.02%)</title><rect x="624.1" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="627.1" y="942.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.10%)</title><rect x="624.5" y="947.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="627.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="624.6" y="931.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="627.6" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.02%)</title><rect x="624.6" y="915.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="627.6" y="926.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.02%)</title><rect x="624.6" y="899.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="627.6" y="910.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.02%)</title><rect x="624.6" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="627.6" y="894.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.05%)</title><rect x="624.9" y="931.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="627.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorPut.processEntityRequest (2,407 samples, 29.48%)</title><rect x="625.7" y="995.0" width="347.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.7" y="1006.0">ru/mail/polis/service/dogm/processors/Processor..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor.processEntityRequestOnClusterEmptyResult (2,407 samples, 29.48%)</title><rect x="625.7" y="979.0" width="347.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.7" y="990.0">ru/mail/polis/service/dogm/processors/SimpleReq..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/BasicTopology.nodesFor (14 samples, 0.17%)</title><rect x="628.3" y="963.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.3" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.17%)</title><rect x="628.3" y="947.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.3" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.17%)</title><rect x="628.3" y="931.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.3" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.17%)</title><rect x="628.3" y="915.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.3" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.17%)</title><rect x="628.3" y="899.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorPut.processEntityDirectly (674 samples, 8.25%)</title><rect x="630.3" y="963.0" width="97.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.3" y="974.0">ru/mail/pol..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.02%)</title><rect x="630.3" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.3" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.02%)</title><rect x="630.3" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.02%)</title><rect x="630.3" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.3" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.02%)</title><rect x="630.3" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/RocksDAO.upsertWithTimestamp (672 samples, 8.23%)</title><rect x="630.6" y="947.0" width="97.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.6" y="958.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (672 samples, 8.23%)</title><rect x="630.6" y="931.0" width="97.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.6" y="942.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (662 samples, 8.11%)</title><rect x="631.6" y="915.0" width="95.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.6" y="926.0">org/rocksdb..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (6 samples, 0.07%)</title><rect x="631.7" y="899.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="634.7" y="910.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (11 samples, 0.13%)</title><rect x="632.6" y="899.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="635.6" y="910.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (634 samples, 7.76%)</title><rect x="634.2" y="899.0" width="91.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="637.2" y="910.0">Java_org_ro..</text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.05%)</title><rect x="634.8" y="883.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="637.8" y="894.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.04%)</title><rect x="635.3" y="883.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="638.3" y="894.0"></text>
</g>
<g>
<title>operator new(unsigned int) (5 samples, 0.06%)</title><rect x="635.8" y="883.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="638.8" y="894.0"></text>
</g>
<g>
<title>operator new[](unsigned int) (2 samples, 0.02%)</title><rect x="636.5" y="883.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="639.5" y="894.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (616 samples, 7.54%)</title><rect x="636.8" y="883.0" width="89.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="639.8" y="894.0">rocksdb_pu..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.02%)</title><rect x="637.4" y="867.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="640.4" y="878.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="637.6" y="867.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="640.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (599 samples, 7.34%)</title><rect x="637.9" y="867.0" width="86.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="640.9" y="878.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (597 samples, 7.31%)</title><rect x="638.2" y="851.0" width="86.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="641.2" y="862.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (594 samples, 7.27%)</title><rect x="638.2" y="835.0" width="85.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="641.2" y="846.0">rocksdb::D..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.02%)</title><rect x="638.4" y="819.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="641.4" y="830.0"></text>
</g>
<g>
<title>free (6 samples, 0.07%)</title><rect x="638.7" y="819.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="641.7" y="830.0"></text>
</g>
<g>
<title>operator delete(void*) (3 samples, 0.04%)</title><rect x="639.5" y="819.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="642.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (550 samples, 6.74%)</title><rect x="640.1" y="819.0" width="79.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="643.1" y="830.0">rocksdb::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.04%)</title><rect x="640.1" y="803.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="643.1" y="814.0"></text>
</g>
<g>
<title>___tls_get_addr (2 samples, 0.02%)</title><rect x="640.5" y="803.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="643.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.02%)</title><rect x="640.8" y="803.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="643.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.02%)</title><rect x="641.1" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="644.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (523 samples, 6.41%)</title><rect x="641.4" y="803.0" width="75.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="644.4" y="814.0">rocksdb:..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (3 samples, 0.04%)</title><rect x="644.4" y="787.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="647.4" y="798.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="645.0" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="648.0" y="798.0"></text>
</g>
<g>
<title>___tls_get_addr (5 samples, 0.06%)</title><rect x="645.3" y="787.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="648.3" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="646.0" y="787.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="649.0" y="798.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="646.3" y="787.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="649.3" y="798.0"></text>
</g>
<g>
<title>resume_userspace (4 samples, 0.05%)</title><rect x="646.6" y="787.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="649.6" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.05%)</title><rect x="646.6" y="771.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="649.6" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.05%)</title><rect x="646.6" y="755.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="649.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.05%)</title><rect x="647.3" y="787.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="650.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (5 samples, 0.06%)</title><rect x="647.9" y="787.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="650.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (3 samples, 0.04%)</title><rect x="648.2" y="771.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="651.2" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (286 samples, 3.50%)</title><rect x="648.8" y="787.0" width="41.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="651.8" y="798.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned int*, rocksdb::WriteBatch**) (2 samples, 0.02%)</title><rect x="649.4" y="771.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="652.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (276 samples, 3.38%)</title><rect x="649.6" y="771.0" width="39.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="652.6" y="782.0">roc..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (271 samples, 3.32%)</title><rect x="649.8" y="755.0" width="39.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="652.8" y="766.0">roc..</text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned int) (3 samples, 0.04%)</title><rect x="650.7" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="653.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned int) (262 samples, 3.21%)</title><rect x="651.1" y="739.0" width="37.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="654.1" y="750.0">roc..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (5 samples, 0.06%)</title><rect x="651.1" y="723.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="654.1" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (3 samples, 0.04%)</title><rect x="651.8" y="723.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="654.8" y="734.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="652.4" y="723.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="655.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.02%)</title><rect x="652.8" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="655.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="653.3" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="656.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (242 samples, 2.96%)</title><rect x="653.7" y="723.0" width="35.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="656.7" y="734.0">ro..</text>
</g>
<g>
<title>___tls_get_addr (2 samples, 0.02%)</title><rect x="654.4" y="707.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="657.4" y="718.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="654.7" y="707.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="657.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="655.0" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="658.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (6 samples, 0.07%)</title><rect x="655.4" y="707.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="658.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (4 samples, 0.05%)</title><rect x="656.3" y="707.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="659.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned int) (220 samples, 2.69%)</title><rect x="656.9" y="707.0" width="31.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="659.9" y="718.0">ro..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.02%)</title><rect x="658.0" y="691.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="661.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="658.3" y="691.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="661.3" y="702.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.02%)</title><rect x="658.3" y="675.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="661.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.02%)</title><rect x="658.3" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="661.3" y="670.0"></text>
</g>
<g>
<title>__kernel_vsyscall (207 samples, 2.54%)</title><rect x="658.6" y="691.0" width="29.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="661.6" y="702.0">__..</text>
</g>
<g>
<title>entry_SYSENTER_32 (206 samples, 2.52%)</title><rect x="658.7" y="675.0" width="29.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="661.7" y="686.0">en..</text>
</g>
<g>
<title>do_fast_syscall_32 (206 samples, 2.52%)</title><rect x="658.7" y="659.0" width="29.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="661.7" y="670.0">do..</text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.04%)</title><rect x="658.7" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="661.7" y="654.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="658.7" y="627.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="661.7" y="638.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.04%)</title><rect x="658.7" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="661.7" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.02%)</title><rect x="658.9" y="595.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="661.9" y="606.0"></text>
</g>
<g>
<title>sys_write (203 samples, 2.49%)</title><rect x="659.2" y="643.0" width="29.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="662.2" y="654.0">sy..</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.04%)</title><rect x="659.2" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="662.2" y="638.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.02%)</title><rect x="659.3" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="662.3" y="622.0"></text>
</g>
<g>
<title>vfs_write (199 samples, 2.44%)</title><rect x="659.8" y="627.0" width="28.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="662.8" y="638.0">vf..</text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.04%)</title><rect x="660.2" y="611.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="663.2" y="622.0"></text>
</g>
<g>
<title>__vfs_write (184 samples, 2.25%)</title><rect x="660.6" y="611.0" width="26.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="663.6" y="622.0">_..</text>
</g>
<g>
<title>new_sync_write (184 samples, 2.25%)</title><rect x="660.6" y="595.0" width="26.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="663.6" y="606.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (183 samples, 2.24%)</title><rect x="660.6" y="579.0" width="26.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="663.6" y="590.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (173 samples, 2.12%)</title><rect x="661.3" y="563.0" width="25.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="664.3" y="574.0">_..</text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.02%)</title><rect x="661.9" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="664.9" y="558.0"></text>
</g>
<g>
<title>file_update_time (36 samples, 0.44%)</title><rect x="662.4" y="547.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="665.4" y="558.0"></text>
</g>
<g>
<title>generic_update_time (34 samples, 0.42%)</title><rect x="662.6" y="531.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="665.6" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (33 samples, 0.40%)</title><rect x="662.8" y="515.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="665.8" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (30 samples, 0.37%)</title><rect x="663.1" y="499.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="666.1" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.06%)</title><rect x="663.1" y="483.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="666.1" y="494.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.05%)</title><rect x="663.2" y="467.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="666.2" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.02%)</title><rect x="663.4" y="451.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="666.4" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.05%)</title><rect x="663.8" y="483.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="666.8" y="494.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.04%)</title><rect x="663.9" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="666.9" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (21 samples, 0.26%)</title><rect x="664.4" y="483.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="667.4" y="494.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (17 samples, 0.21%)</title><rect x="664.5" y="467.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="667.5" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (17 samples, 0.21%)</title><rect x="664.5" y="451.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="667.5" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (9 samples, 0.11%)</title><rect x="665.3" y="435.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="668.3" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.52 (8 samples, 0.10%)</title><rect x="665.4" y="419.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="668.4" y="430.0"></text>
</g>
<g>
<title>crypto_shash_update (6 samples, 0.07%)</title><rect x="665.7" y="403.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="668.7" y="414.0"></text>
</g>
<g>
<title>chksum_update (6 samples, 0.07%)</title><rect x="665.7" y="387.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="668.7" y="398.0"></text>
</g>
<g>
<title>__crc32c_le (6 samples, 0.07%)</title><rect x="665.7" y="371.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="668.7" y="382.0"></text>
</g>
<g>
<title>from_kuid (2 samples, 0.02%)</title><rect x="666.6" y="435.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="669.6" y="446.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.02%)</title><rect x="666.6" y="419.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="669.6" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.04%)</title><rect x="667.0" y="467.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="670.0" y="478.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.02%)</title><rect x="667.0" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="670.0" y="462.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.02%)</title><rect x="667.0" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="670.0" y="446.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.02%)</title><rect x="667.0" y="419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="670.0" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (128 samples, 1.57%)</title><rect x="667.6" y="547.0" width="18.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="670.6" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.02%)</title><rect x="667.6" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="670.6" y="542.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.02%)</title><rect x="668.0" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="671.0" y="542.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.02%)</title><rect x="668.4" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="671.4" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (35 samples, 0.43%)</title><rect x="668.7" y="531.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="671.7" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (10 samples, 0.12%)</title><rect x="669.4" y="515.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="672.4" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (10 samples, 0.12%)</title><rect x="669.4" y="499.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="672.4" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.02%)</title><rect x="669.6" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="672.6" y="494.0"></text>
</g>
<g>
<title>start_this_handle (6 samples, 0.07%)</title><rect x="670.0" y="483.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="673.0" y="494.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.02%)</title><rect x="670.6" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="673.6" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (10 samples, 0.12%)</title><rect x="670.9" y="515.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="673.9" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (10 samples, 0.12%)</title><rect x="672.3" y="515.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="675.3" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (9 samples, 0.11%)</title><rect x="672.3" y="499.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="675.3" y="510.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.06%)</title><rect x="672.6" y="483.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="675.6" y="494.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (2 samples, 0.02%)</title><rect x="673.1" y="467.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="676.1" y="478.0"></text>
</g>
<g>
<title>__radix_tree_lookup (2 samples, 0.02%)</title><rect x="673.1" y="451.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="676.1" y="462.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (2 samples, 0.02%)</title><rect x="673.3" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="676.3" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (75 samples, 0.92%)</title><rect x="673.8" y="531.0" width="10.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="676.8" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.06%)</title><rect x="673.9" y="515.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="676.9" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (5 samples, 0.06%)</title><rect x="673.9" y="499.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="676.9" y="510.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="674.4" y="483.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="677.4" y="494.0"></text>
</g>
<g>
<title>generic_write_end (68 samples, 0.83%)</title><rect x="674.8" y="515.0" width="9.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="677.8" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (64 samples, 0.78%)</title><rect x="675.1" y="499.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="678.1" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (61 samples, 0.75%)</title><rect x="675.4" y="483.0" width="8.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="678.4" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (58 samples, 0.71%)</title><rect x="675.5" y="467.0" width="8.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="678.5" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (43 samples, 0.53%)</title><rect x="675.7" y="451.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="678.7" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (41 samples, 0.50%)</title><rect x="675.8" y="435.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="678.8" y="446.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (4 samples, 0.05%)</title><rect x="677.0" y="419.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="680.0" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (3 samples, 0.04%)</title><rect x="677.1" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="680.1" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (25 samples, 0.31%)</title><rect x="677.7" y="419.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="680.7" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.52 (24 samples, 0.29%)</title><rect x="677.8" y="403.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="680.8" y="414.0"></text>
</g>
<g>
<title>chksum_update (3 samples, 0.04%)</title><rect x="678.3" y="387.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="681.3" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (18 samples, 0.22%)</title><rect x="678.7" y="387.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="681.7" y="398.0"></text>
</g>
<g>
<title>chksum_update (15 samples, 0.18%)</title><rect x="679.1" y="371.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="682.1" y="382.0"></text>
</g>
<g>
<title>__crc32c_le (15 samples, 0.18%)</title><rect x="679.1" y="355.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="682.1" y="366.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (2 samples, 0.02%)</title><rect x="681.4" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="684.4" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (14 samples, 0.17%)</title><rect x="681.9" y="451.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="684.9" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (8 samples, 0.10%)</title><rect x="681.9" y="435.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="684.9" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.02%)</title><rect x="682.2" y="419.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="685.2" y="430.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.02%)</title><rect x="682.2" y="403.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="685.2" y="414.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.04%)</title><rect x="682.4" y="419.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="685.4" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (3 samples, 0.04%)</title><rect x="683.0" y="435.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="686.0" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (2 samples, 0.02%)</title><rect x="683.0" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="686.0" y="430.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.8 (2 samples, 0.02%)</title><rect x="683.0" y="403.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="686.0" y="414.0"></text>
</g>
<g>
<title>ext4_inode_table (2 samples, 0.02%)</title><rect x="683.6" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="686.6" y="446.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.02%)</title><rect x="684.8" y="531.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="687.8" y="542.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (6 samples, 0.07%)</title><rect x="685.0" y="531.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="688.0" y="542.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.06%)</title><rect x="685.2" y="515.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="688.2" y="526.0"></text>
</g>
<g>
<title>__copy_user_ll (5 samples, 0.06%)</title><rect x="685.2" y="499.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="688.2" y="510.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.02%)</title><rect x="686.8" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="689.8" y="574.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.10%)</title><rect x="687.4" y="611.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="690.4" y="622.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.05%)</title><rect x="687.9" y="595.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="690.9" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.05%)</title><rect x="687.9" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="690.9" y="590.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.05%)</title><rect x="687.9" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="690.9" y="574.0"></text>
</g>
<g>
<title>aa_file_perm (4 samples, 0.05%)</title><rect x="687.9" y="547.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="690.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned int) (2 samples, 0.02%)</title><rect x="688.7" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="691.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned int) (4 samples, 0.05%)</title><rect x="689.0" y="755.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="692.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="689.8" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="692.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (3 samples, 0.04%)</title><rect x="690.1" y="787.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="693.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (7 samples, 0.09%)</title><rect x="690.5" y="787.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="693.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (4 samples, 0.05%)</title><rect x="690.7" y="771.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="693.7" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="690.7" y="755.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="693.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.02%)</title><rect x="691.3" y="771.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="694.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.02%)</title><rect x="691.8" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="694.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (2 samples, 0.02%)</title><rect x="692.1" y="787.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="695.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (146 samples, 1.79%)</title><rect x="692.4" y="787.0" width="21.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="695.4" y="798.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="693.0" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="696.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.04%)</title><rect x="693.3" y="771.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="696.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (136 samples, 1.67%)</title><rect x="693.9" y="771.0" width="19.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="696.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (127 samples, 1.56%)</title><rect x="694.9" y="755.0" width="18.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="697.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.02%)</title><rect x="695.2" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="698.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (123 samples, 1.51%)</title><rect x="695.5" y="739.0" width="17.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="698.5" y="750.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.05%)</title><rect x="696.0" y="723.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="699.0" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (3 samples, 0.04%)</title><rect x="696.6" y="723.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="699.6" y="734.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="697.0" y="723.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="700.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (3 samples, 0.04%)</title><rect x="697.6" y="723.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="700.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.04%)</title><rect x="698.1" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="701.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (99 samples, 1.21%)</title><rect x="698.5" y="723.0" width="14.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="701.5" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (91 samples, 1.11%)</title><rect x="698.9" y="707.0" width="13.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="701.9" y="718.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (2 samples, 0.02%)</title><rect x="698.9" y="691.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="701.9" y="702.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (15 samples, 0.18%)</title><rect x="699.2" y="691.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="702.2" y="702.0"></text>
</g>
<g>
<title>___tls_get_addr (2 samples, 0.02%)</title><rect x="699.5" y="675.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="702.5" y="686.0"></text>
</g>
<g>
<title>common_exception (2 samples, 0.02%)</title><rect x="699.9" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="702.9" y="686.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.02%)</title><rect x="699.9" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="702.9" y="670.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.02%)</title><rect x="699.9" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="702.9" y="654.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.02%)</title><rect x="699.9" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="702.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned int, unsigned int, rocksdb::Logger*) (4 samples, 0.05%)</title><rect x="700.2" y="675.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="703.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned int, unsigned int, rocksdb::Logger*) (4 samples, 0.05%)</title><rect x="700.8" y="675.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="703.8" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (72 samples, 0.88%)</title><rect x="701.4" y="691.0" width="10.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="704.4" y="702.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (65 samples, 0.80%)</title><rect x="701.7" y="675.0" width="9.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="704.7" y="686.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (2 samples, 0.02%)</title><rect x="707.2" y="659.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="710.2" y="670.0"></text>
</g>
<g>
<title>___tls_get_addr (2 samples, 0.02%)</title><rect x="707.5" y="659.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="710.5" y="670.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="707.9" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="710.9" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="707.9" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="710.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="707.9" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="710.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (20 samples, 0.24%)</title><rect x="708.2" y="659.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="711.2" y="670.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (5 samples, 0.06%)</title><rect x="709.2" y="643.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="712.2" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13873297829581089396.so (2 samples, 0.02%)</title><rect x="709.9" y="643.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="712.9" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="710.2" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="713.2" y="654.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="710.6" y="643.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="713.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.04%)</title><rect x="711.4" y="675.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="714.4" y="686.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.02%)</title><rect x="711.5" y="659.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="714.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableRep::KeyComparator::decode_key(char const*) const (2 samples, 0.02%)</title><rect x="711.8" y="691.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="714.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.02%)</title><rect x="712.4" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="715.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long long, rocksdb::ValueType) (2 samples, 0.02%)</title><rect x="712.9" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="715.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.02%)</title><rect x="713.2" y="755.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="716.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.02%)</title><rect x="713.7" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="716.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (17 samples, 0.21%)</title><rect x="714.0" y="787.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="717.0" y="798.0"></text>
</g>
<g>
<title>__clock_gettime (14 samples, 0.17%)</title><rect x="714.1" y="771.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="717.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="714.4" y="755.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="717.4" y="766.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.06%)</title><rect x="714.4" y="739.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="717.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.06%)</title><rect x="714.4" y="723.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="717.4" y="734.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.06%)</title><rect x="714.4" y="707.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="717.4" y="718.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.07%)</title><rect x="715.1" y="755.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="718.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.06%)</title><rect x="715.3" y="739.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="718.3" y="750.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.06%)</title><rect x="715.3" y="723.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="718.3" y="734.0"></text>
</g>
<g>
<title>sys_clock_gettime (4 samples, 0.05%)</title><rect x="715.4" y="707.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="718.4" y="718.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (2 samples, 0.02%)</title><rect x="715.4" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="718.4" y="702.0"></text>
</g>
<g>
<title>put_timespec64 (2 samples, 0.02%)</title><rect x="715.7" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="718.7" y="702.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.02%)</title><rect x="715.7" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="718.7" y="686.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.02%)</title><rect x="715.7" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="718.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.04%)</title><rect x="716.4" y="787.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="719.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (2 samples, 0.02%)</title><rect x="717.1" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="720.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.02%)</title><rect x="717.7" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="720.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned int, unsigned int) (3 samples, 0.04%)</title><rect x="718.0" y="803.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="721.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (5 samples, 0.06%)</title><rect x="718.4" y="803.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="721.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (3 samples, 0.04%)</title><rect x="719.2" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="722.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (2 samples, 0.02%)</title><rect x="719.6" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="722.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.04%)</title><rect x="719.9" y="819.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="722.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.09%)</title><rect x="720.3" y="819.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="723.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (2 samples, 0.02%)</title><rect x="720.7" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="723.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.02%)</title><rect x="721.5" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="724.5" y="830.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned int) (2 samples, 0.02%)</title><rect x="721.8" y="819.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="724.8" y="830.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;) (4 samples, 0.05%)</title><rect x="722.2" y="819.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="725.2" y="830.0"></text>
</g>
<g>
<title>std::string::append(unsigned int, char) (2 samples, 0.02%)</title><rect x="722.8" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="725.8" y="830.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned int) (4 samples, 0.05%)</title><rect x="723.1" y="819.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="726.1" y="830.0"></text>
</g>
<g>
<title>std::string::resize(unsigned int, char) (3 samples, 0.04%)</title><rect x="723.6" y="819.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="726.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="724.1" y="835.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="727.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (5 samples, 0.06%)</title><rect x="724.5" y="867.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="727.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="725.2" y="867.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="728.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="725.8" y="899.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="728.8" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.04%)</title><rect x="725.8" y="883.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="728.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.04%)</title><rect x="725.8" y="867.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="728.8" y="878.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.04%)</title><rect x="725.8" y="851.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="728.8" y="862.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="725.8" y="835.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="728.8" y="846.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="725.8" y="819.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="728.8" y="830.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.02%)</title><rect x="725.8" y="803.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="728.8" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.02%)</title><rect x="725.8" y="787.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="728.8" y="798.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.05%)</title><rect x="726.2" y="883.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="729.2" y="894.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.02%)</title><rect x="726.8" y="899.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="729.8" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="727.2" y="915.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="730.2" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.02%)</title><rect x="727.4" y="899.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="730.4" y="910.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.02%)</title><rect x="727.4" y="883.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="730.4" y="894.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.02%)</title><rect x="727.4" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="730.4" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="727.4" y="851.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="730.4" y="862.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="727.4" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="730.4" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="727.4" y="819.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="730.4" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.02%)</title><rect x="727.4" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="730.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor.processEntityRemotely (1,701 samples, 20.83%)</title><rect x="727.7" y="963.0" width="245.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.7" y="974.0">ru/mail/polis/service/dogm/proces..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Bridges.sendRequestTo (1,701 samples, 20.83%)</title><rect x="727.7" y="947.0" width="245.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.7" y="958.0">ru/mail/polis/service/dogm/Bridge..</text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.04%)</title><rect x="727.7" y="931.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="727.7" y="915.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,698 samples, 20.80%)</title><rect x="728.1" y="931.0" width="245.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.1" y="942.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,697 samples, 20.78%)</title><rect x="728.3" y="915.0" width="245.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.3" y="926.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.02%)</title><rect x="728.3" y="899.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="728.3" y="883.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="728.3" y="867.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (338 samples, 4.14%)</title><rect x="728.5" y="899.0" width="48.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.5" y="910.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (315 samples, 3.86%)</title><rect x="731.6" y="883.0" width="45.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.6" y="894.0">one/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (315 samples, 3.86%)</title><rect x="731.6" y="867.0" width="45.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.6" y="878.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (278 samples, 3.40%)</title><rect x="732.3" y="851.0" width="40.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.3" y="862.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (278 samples, 3.40%)</title><rect x="732.3" y="835.0" width="40.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.3" y="846.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="732.3" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.3" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="732.3" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.02%)</title><rect x="732.3" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.02%)</title><rect x="732.3" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.02%)</title><rect x="732.3" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.02%)</title><rect x="732.3" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (2 samples, 0.02%)</title><rect x="732.3" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (275 samples, 3.37%)</title><rect x="732.6" y="819.0" width="39.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.6" y="830.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (275 samples, 3.37%)</title><rect x="732.6" y="803.0" width="39.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.6" y="814.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (271 samples, 3.32%)</title><rect x="733.2" y="787.0" width="39.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="736.2" y="798.0">sun..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (5 samples, 0.06%)</title><rect x="734.2" y="771.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="737.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="734.9" y="771.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="737.9" y="782.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.07%)</title><rect x="734.9" y="755.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="737.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (6 samples, 0.07%)</title><rect x="734.9" y="739.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="737.9" y="750.0"></text>
</g>
<g>
<title>__get_user_4 (2 samples, 0.02%)</title><rect x="734.9" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="737.9" y="734.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.05%)</title><rect x="735.2" y="723.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="738.2" y="734.0"></text>
</g>
<g>
<title>__kernel_vsyscall (252 samples, 3.09%)</title><rect x="735.8" y="771.0" width="36.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="738.8" y="782.0">__k..</text>
</g>
<g>
<title>entry_SYSENTER_32 (250 samples, 3.06%)</title><rect x="736.1" y="755.0" width="36.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="739.1" y="766.0">ent..</text>
</g>
<g>
<title>do_fast_syscall_32 (250 samples, 3.06%)</title><rect x="736.1" y="739.0" width="36.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="739.1" y="750.0">do_..</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.02%)</title><rect x="736.2" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="739.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.05%)</title><rect x="736.5" y="723.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="739.5" y="734.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="736.5" y="707.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="739.5" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.05%)</title><rect x="736.5" y="691.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="739.5" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="736.6" y="675.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="739.6" y="686.0"></text>
</g>
<g>
<title>sys_read (242 samples, 2.96%)</title><rect x="737.1" y="723.0" width="35.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="740.1" y="734.0">sy..</text>
</g>
<g>
<title>vfs_read (239 samples, 2.93%)</title><rect x="737.5" y="707.0" width="34.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="740.5" y="718.0">vf..</text>
</g>
<g>
<title>__vfs_read (232 samples, 2.84%)</title><rect x="737.8" y="691.0" width="33.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="740.8" y="702.0">__..</text>
</g>
<g>
<title>new_sync_read (229 samples, 2.80%)</title><rect x="738.1" y="675.0" width="33.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="741.1" y="686.0">ne..</text>
</g>
<g>
<title>sock_read_iter (225 samples, 2.76%)</title><rect x="738.7" y="659.0" width="32.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="741.7" y="670.0">so..</text>
</g>
<g>
<title>sock_recvmsg (221 samples, 2.71%)</title><rect x="739.2" y="643.0" width="32.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="742.2" y="654.0">so..</text>
</g>
<g>
<title>inet_recvmsg (213 samples, 2.61%)</title><rect x="739.7" y="627.0" width="30.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="742.7" y="638.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (211 samples, 2.58%)</title><rect x="740.0" y="611.0" width="30.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="743.0" y="622.0">tc..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.04%)</title><rect x="741.1" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="744.1" y="606.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.04%)</title><rect x="741.1" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="744.1" y="590.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.02%)</title><rect x="741.1" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="744.1" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.04%)</title><rect x="741.6" y="595.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="744.6" y="606.0"></text>
</g>
<g>
<title>add_wait_queue (2 samples, 0.02%)</title><rect x="742.0" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="745.0" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="742.4" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="745.4" y="606.0"></text>
</g>
<g>
<title>sk_wait_data (176 samples, 2.16%)</title><rect x="742.7" y="595.0" width="25.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="745.7" y="606.0">s..</text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="743.4" y="579.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="746.4" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="743.4" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="746.4" y="574.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (3 samples, 0.04%)</title><rect x="743.4" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="746.4" y="558.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="743.9" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="746.9" y="590.0"></text>
</g>
<g>
<title>wait_woken (164 samples, 2.01%)</title><rect x="744.4" y="579.0" width="23.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="747.4" y="590.0">w..</text>
</g>
<g>
<title>schedule_timeout (163 samples, 2.00%)</title><rect x="744.6" y="563.0" width="23.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="747.6" y="574.0">s..</text>
</g>
<g>
<title>schedule (161 samples, 1.97%)</title><rect x="744.9" y="547.0" width="23.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="747.9" y="558.0">s..</text>
</g>
<g>
<title>__sched_text_start (160 samples, 1.96%)</title><rect x="745.0" y="531.0" width="23.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="748.0" y="542.0">_..</text>
</g>
<g>
<title>finish_task_switch (157 samples, 1.92%)</title><rect x="745.5" y="515.0" width="22.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="748.5" y="526.0">f..</text>
</g>
<g>
<title>skb_copy_datagram_iter (12 samples, 0.15%)</title><rect x="768.1" y="595.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="771.1" y="606.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="768.4" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="771.4" y="590.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.04%)</title><rect x="768.6" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="771.6" y="574.0"></text>
</g>
<g>
<title>page_address (2 samples, 0.02%)</title><rect x="768.7" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="771.7" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.06%)</title><rect x="769.2" y="579.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="772.2" y="590.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.05%)</title><rect x="769.3" y="563.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="772.3" y="574.0"></text>
</g>
<g>
<title>__copy_user_ll (3 samples, 0.04%)</title><rect x="769.4" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="772.4" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.04%)</title><rect x="769.9" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="772.9" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.05%)</title><rect x="770.5" y="627.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="773.5" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.04%)</title><rect x="770.6" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="773.6" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.02%)</title><rect x="770.7" y="595.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="773.7" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.02%)</title><rect x="770.7" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="773.7" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.05%)</title><rect x="771.5" y="691.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="774.5" y="702.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.04%)</title><rect x="771.6" y="675.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="774.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (20 samples, 0.24%)</title><rect x="772.5" y="851.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.5" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.05%)</title><rect x="774.4" y="835.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.4" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.05%)</title><rect x="774.4" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.4" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.05%)</title><rect x="774.4" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.05%)</title><rect x="774.4" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="775.1" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endRead (12 samples, 0.15%)</title><rect x="775.4" y="851.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.4" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (11 samples, 0.13%)</title><rect x="775.5" y="835.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.5" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.04%)</title><rect x="776.7" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.7" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.04%)</title><rect x="776.7" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.04%)</title><rect x="776.7" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.7" y="798.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="777.1" y="883.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="780.1" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="777.1" y="867.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="780.1" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="777.1" y="851.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="780.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (49 samples, 0.60%)</title><rect x="777.4" y="899.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (26 samples, 0.32%)</title><rect x="779.7" y="883.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.7" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.11%)</title><rect x="782.2" y="867.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="785.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.11%)</title><rect x="782.2" y="851.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.09%)</title><rect x="783.5" y="883.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="783.5" y="867.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.09%)</title><rect x="783.5" y="851.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (32 samples, 0.39%)</title><rect x="784.5" y="899.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.5" y="910.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (13 samples, 0.16%)</title><rect x="787.2" y="883.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="790.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (13 samples, 0.16%)</title><rect x="787.2" y="867.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (13 samples, 0.16%)</title><rect x="787.2" y="851.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="790.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.09%)</title><rect x="789.1" y="899.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="789.1" y="883.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.09%)</title><rect x="789.1" y="867.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (1,259 samples, 15.42%)</title><rect x="790.3" y="899.0" width="181.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.3" y="910.0">one/nio/net/JavaSocket...</text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (902 samples, 11.05%)</title><rect x="790.3" y="883.0" width="130.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.3" y="894.0">java/nio/channel..</text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (902 samples, 11.05%)</title><rect x="790.3" y="867.0" width="130.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.3" y="878.0">java/nio/channel..</text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (902 samples, 11.05%)</title><rect x="790.3" y="851.0" width="130.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.3" y="862.0">java/nio/channel..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (898 samples, 11.00%)</title><rect x="790.8" y="835.0" width="129.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.8" y="846.0">sun/nio/ch/Socke..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (874 samples, 10.70%)</title><rect x="791.0" y="819.0" width="126.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.0" y="830.0">sun/nio/ch/IOUti..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (873 samples, 10.69%)</title><rect x="791.1" y="803.0" width="126.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.1" y="814.0">sun/nio/ch/IOUti..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (873 samples, 10.69%)</title><rect x="791.1" y="787.0" width="126.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.1" y="798.0">sun/nio/ch/IOUti..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (5 samples, 0.06%)</title><rect x="791.1" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (868 samples, 10.63%)</title><rect x="791.8" y="771.0" width="125.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.8" y="782.0">sun/nio/ch/Sock..</text>
</g>
<g>
<title>resume_userspace (5 samples, 0.06%)</title><rect x="792.4" y="755.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="795.4" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.06%)</title><rect x="792.4" y="739.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="795.4" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.06%)</title><rect x="792.4" y="723.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="795.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (859 samples, 10.52%)</title><rect x="793.2" y="755.0" width="124.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.2" y="766.0">sun/nio/ch/File..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="794.2" y="739.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="797.2" y="750.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.06%)</title><rect x="794.2" y="723.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="797.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.06%)</title><rect x="794.2" y="707.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="797.2" y="718.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.06%)</title><rect x="794.2" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="797.2" y="702.0"></text>
</g>
<g>
<title>__kernel_vsyscall (843 samples, 10.32%)</title><rect x="794.9" y="739.0" width="121.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="797.9" y="750.0">__kernel_vsyscall</text>
</g>
<g>
<title>entry_SYSENTER_32 (837 samples, 10.25%)</title><rect x="795.8" y="723.0" width="120.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="798.8" y="734.0">entry_SYSENTER_32</text>
</g>
<g>
<title>do_fast_syscall_32 (837 samples, 10.25%)</title><rect x="795.8" y="707.0" width="120.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="798.8" y="718.0">do_fast_syscall..</text>
</g>
<g>
<title>exit_to_usermode_loop (83 samples, 1.02%)</title><rect x="796.0" y="691.0" width="12.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="799.0" y="702.0"></text>
</g>
<g>
<title>schedule (83 samples, 1.02%)</title><rect x="796.0" y="675.0" width="12.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="799.0" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (83 samples, 1.02%)</title><rect x="796.0" y="659.0" width="12.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="799.0" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (82 samples, 1.00%)</title><rect x="796.2" y="643.0" width="11.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="799.2" y="654.0"></text>
</g>
<g>
<title>sys_write (752 samples, 9.21%)</title><rect x="808.0" y="691.0" width="108.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="811.0" y="702.0">sys_write</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.02%)</title><rect x="808.9" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="811.9" y="686.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="808.9" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="811.9" y="670.0"></text>
</g>
<g>
<title>vfs_write (742 samples, 9.09%)</title><rect x="809.5" y="675.0" width="107.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="812.5" y="686.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (729 samples, 8.93%)</title><rect x="810.2" y="659.0" width="105.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="813.2" y="670.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (724 samples, 8.87%)</title><rect x="810.6" y="643.0" width="104.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="813.6" y="654.0">new_sync_write</text>
</g>
<g>
<title>sock_write_iter (722 samples, 8.84%)</title><rect x="810.9" y="627.0" width="104.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="813.9" y="638.0">sock_write_i..</text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.02%)</title><rect x="811.1" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="814.1" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (719 samples, 8.81%)</title><rect x="811.4" y="611.0" width="103.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="814.4" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (711 samples, 8.71%)</title><rect x="811.6" y="595.0" width="102.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="814.6" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (709 samples, 8.68%)</title><rect x="811.8" y="579.0" width="102.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="814.8" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.02%)</title><rect x="811.9" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="814.9" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.05%)</title><rect x="812.4" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="815.4" y="574.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="812.4" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="815.4" y="558.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="812.4" y="531.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="815.4" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.02%)</title><rect x="812.4" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="815.4" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="812.7" y="547.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="815.7" y="558.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="812.9" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="815.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.02%)</title><rect x="812.9" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="815.9" y="558.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (2 samples, 0.02%)</title><rect x="812.9" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="815.9" y="542.0"></text>
</g>
<g>
<title>__pv_queued_spin_unlock (2 samples, 0.02%)</title><rect x="812.9" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="815.9" y="526.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.02%)</title><rect x="813.4" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="816.4" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.05%)</title><rect x="813.7" y="563.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="816.7" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (691 samples, 8.46%)</title><rect x="814.4" y="563.0" width="99.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="817.4" y="574.0">tcp_sendmsg_..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="815.7" y="547.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="818.7" y="558.0"></text>
</g>
<g>
<title>__check_heap_object (4 samples, 0.05%)</title><rect x="815.7" y="531.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="818.7" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.09%)</title><rect x="816.3" y="547.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="819.3" y="558.0"></text>
</g>
<g>
<title>copyin (4 samples, 0.05%)</title><rect x="816.6" y="531.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="819.6" y="542.0"></text>
</g>
<g>
<title>__copy_user_ll (4 samples, 0.05%)</title><rect x="816.6" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="819.6" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (20 samples, 0.24%)</title><rect x="817.4" y="547.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="820.4" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (17 samples, 0.21%)</title><rect x="817.7" y="531.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="820.7" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (7 samples, 0.09%)</title><rect x="818.3" y="515.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="821.3" y="526.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (6 samples, 0.07%)</title><rect x="818.3" y="499.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="821.3" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.04%)</title><rect x="819.3" y="515.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="822.3" y="526.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.04%)</title><rect x="819.7" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="822.7" y="526.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.02%)</title><rect x="820.3" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="823.3" y="558.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.02%)</title><rect x="820.3" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="823.3" y="542.0"></text>
</g>
<g>
<title>tcp_push (634 samples, 7.76%)</title><rect x="820.6" y="547.0" width="91.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="823.6" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (633 samples, 7.75%)</title><rect x="820.8" y="531.0" width="91.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="823.8" y="542.0">__tcp_push_..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.28 (3 samples, 0.04%)</title><rect x="821.0" y="515.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="824.0" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (627 samples, 7.68%)</title><rect x="821.6" y="515.0" width="90.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="824.6" y="526.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (605 samples, 7.41%)</title><rect x="822.2" y="499.0" width="87.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="825.2" y="510.0">__tcp_tran..</text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.02%)</title><rect x="823.6" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="826.6" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (581 samples, 7.12%)</title><rect x="823.9" y="483.0" width="84.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="826.9" y="494.0">ip_queue_..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.02%)</title><rect x="825.1" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.1" y="478.0"></text>
</g>
<g>
<title>ip_local_out (569 samples, 6.97%)</title><rect x="825.4" y="467.0" width="82.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="828.4" y="478.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.04%)</title><rect x="825.5" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="828.5" y="462.0"></text>
</g>
<g>
<title>ip_output (565 samples, 6.92%)</title><rect x="826.0" y="451.0" width="81.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="829.0" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (562 samples, 6.88%)</title><rect x="826.4" y="435.0" width="81.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="829.4" y="446.0">ip_finish..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.05%)</title><rect x="826.7" y="419.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="829.7" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (554 samples, 6.79%)</title><rect x="827.5" y="419.0" width="80.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="830.5" y="430.0">ip_finish..</text>
</g>
<g>
<title>__local_bh_enable_ip (508 samples, 6.22%)</title><rect x="828.7" y="403.0" width="73.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="831.7" y="414.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.15 (508 samples, 6.22%)</title><rect x="828.7" y="387.0" width="73.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="831.7" y="398.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (507 samples, 6.21%)</title><rect x="828.8" y="371.0" width="73.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="831.8" y="382.0">do_softi..</text>
</g>
<g>
<title>call_on_stack (507 samples, 6.21%)</title><rect x="828.8" y="355.0" width="73.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="831.8" y="366.0">call_on_..</text>
</g>
<g>
<title>__do_softirq (507 samples, 6.21%)</title><rect x="828.8" y="339.0" width="73.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="831.8" y="350.0">__do_sof..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.02%)</title><rect x="829.3" y="323.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="832.3" y="334.0"></text>
</g>
<g>
<title>net_rx_action (502 samples, 6.15%)</title><rect x="829.6" y="323.0" width="72.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="832.6" y="334.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (502 samples, 6.15%)</title><rect x="829.6" y="307.0" width="72.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="832.6" y="318.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb (496 samples, 6.07%)</title><rect x="830.3" y="291.0" width="71.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="833.3" y="302.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (496 samples, 6.07%)</title><rect x="830.3" y="275.0" width="71.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="833.3" y="286.0">__netif_..</text>
</g>
<g>
<title>ip_rcv (491 samples, 6.01%)</title><rect x="831.0" y="259.0" width="71.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="834.0" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (484 samples, 5.93%)</title><rect x="832.0" y="243.0" width="70.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="835.0" y="254.0">ip_rcv_..</text>
</g>
<g>
<title>ip_local_deliver (483 samples, 5.92%)</title><rect x="832.2" y="227.0" width="69.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="835.2" y="238.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (480 samples, 5.88%)</title><rect x="832.3" y="211.0" width="69.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="835.3" y="222.0">ip_loca..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.02%)</title><rect x="832.5" y="195.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="835.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (475 samples, 5.82%)</title><rect x="833.0" y="195.0" width="68.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="836.0" y="206.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.07%)</title><rect x="834.0" y="179.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="837.0" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.02%)</title><rect x="834.6" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="837.6" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="835.2" y="179.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="838.2" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.05%)</title><rect x="835.8" y="179.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="838.8" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="835.9" y="163.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="838.9" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="836.4" y="179.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="839.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (445 samples, 5.45%)</title><rect x="836.7" y="179.0" width="64.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="839.7" y="190.0">tcp_v4_..</text>
</g>
<g>
<title>tcp_rcv_established (445 samples, 5.45%)</title><rect x="836.7" y="163.0" width="64.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="839.7" y="174.0">tcp_rcv..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.07%)</title><rect x="836.9" y="147.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="839.9" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.02%)</title><rect x="836.9" y="131.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="839.9" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.05%)</title><rect x="837.2" y="131.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="840.2" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="837.2" y="115.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="840.2" y="126.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="837.2" y="99.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="840.2" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.05%)</title><rect x="837.2" y="83.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="840.2" y="94.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.02%)</title><rect x="837.8" y="147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="840.8" y="158.0"></text>
</g>
<g>
<title>sched_clock_cpu (5 samples, 0.06%)</title><rect x="838.2" y="147.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="841.2" y="158.0"></text>
</g>
<g>
<title>sched_clock (5 samples, 0.06%)</title><rect x="838.2" y="131.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="841.2" y="142.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (5 samples, 0.06%)</title><rect x="838.2" y="115.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="841.2" y="126.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (5 samples, 0.06%)</title><rect x="838.2" y="99.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="841.2" y="110.0"></text>
</g>
<g>
<title>tcp_ack (40 samples, 0.49%)</title><rect x="839.1" y="147.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="842.1" y="158.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.02%)</title><rect x="840.1" y="131.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="843.1" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (3 samples, 0.04%)</title><rect x="840.4" y="131.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="843.4" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (26 samples, 0.32%)</title><rect x="840.8" y="131.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="843.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.16%)</title><rect x="841.7" y="115.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="844.7" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.05%)</title><rect x="841.7" y="99.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="844.7" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="842.0" y="83.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="845.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.09%)</title><rect x="842.3" y="99.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="845.3" y="110.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.07%)</title><rect x="842.3" y="83.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="845.3" y="94.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.05%)</title><rect x="842.6" y="67.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="845.6" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.05%)</title><rect x="842.6" y="51.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="845.6" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.02%)</title><rect x="842.9" y="35.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="845.9" y="46.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.02%)</title><rect x="843.3" y="99.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="846.3" y="110.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.04%)</title><rect x="844.2" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="847.2" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.05%)</title><rect x="844.9" y="147.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="847.9" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (383 samples, 4.69%)</title><rect x="845.6" y="147.0" width="55.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="848.6" y="158.0">tcp_d..</text>
</g>
<g>
<title>sock_def_readable (372 samples, 4.56%)</title><rect x="846.5" y="131.0" width="53.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="849.5" y="142.0">sock_..</text>
</g>
<g>
<title>__wake_up_sync_key (367 samples, 4.49%)</title><rect x="847.2" y="115.0" width="53.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="850.2" y="126.0">__wak..</text>
</g>
<g>
<title>__wake_up_common_lock (367 samples, 4.49%)</title><rect x="847.2" y="99.0" width="53.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="850.2" y="110.0">__wak..</text>
</g>
<g>
<title>__lock_text_start (367 samples, 4.49%)</title><rect x="847.2" y="83.0" width="53.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="850.2" y="94.0">__loc..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.02%)</title><rect x="900.2" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="903.2" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="900.5" y="131.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="903.5" y="142.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (5 samples, 0.06%)</title><rect x="901.0" y="179.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="904.0" y="190.0"></text>
</g>
<g>
<title>memmove (2 samples, 0.02%)</title><rect x="901.4" y="163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="904.4" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (38 samples, 0.47%)</title><rect x="902.1" y="403.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="905.1" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (38 samples, 0.47%)</title><rect x="902.1" y="387.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="905.1" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (20 samples, 0.24%)</title><rect x="903.4" y="371.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="906.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (17 samples, 0.21%)</title><rect x="903.7" y="355.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="906.7" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.05%)</title><rect x="904.1" y="339.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="907.1" y="350.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.09%)</title><rect x="904.7" y="339.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="907.7" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="904.7" y="323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="907.7" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.06%)</title><rect x="905.0" y="323.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="908.0" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.06%)</title><rect x="905.0" y="307.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="908.0" y="318.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.02%)</title><rect x="905.7" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="908.7" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.02%)</title><rect x="906.3" y="371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="909.3" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.07%)</title><rect x="906.7" y="371.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="909.7" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.06%)</title><rect x="906.9" y="355.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="909.9" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="907.6" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="910.6" y="478.0"></text>
</g>
<g>
<title>skb_clone (9 samples, 0.11%)</title><rect x="907.9" y="483.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="910.9" y="494.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.09%)</title><rect x="908.2" y="467.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="911.2" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.05%)</title><rect x="908.6" y="451.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="911.6" y="462.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.02%)</title><rect x="909.3" y="483.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="912.3" y="494.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.04%)</title><rect x="909.8" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="912.8" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.05%)</title><rect x="910.2" y="499.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="913.2" y="510.0"></text>
</g>
<g>
<title>sched_clock_cpu (3 samples, 0.04%)</title><rect x="910.8" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="913.8" y="510.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.02%)</title><rect x="910.9" y="483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="913.9" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.07%)</title><rect x="911.2" y="499.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="914.2" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.06%)</title><rect x="911.4" y="483.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="914.4" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (5 samples, 0.06%)</title><rect x="911.4" y="467.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="914.4" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.06%)</title><rect x="911.4" y="451.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="914.4" y="462.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.06%)</title><rect x="911.4" y="435.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="914.4" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="911.7" y="419.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="914.7" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.16%)</title><rect x="912.2" y="547.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="915.2" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.09%)</title><rect x="912.2" y="531.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="915.2" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.07%)</title><rect x="913.2" y="531.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="916.2" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.02%)</title><rect x="913.8" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="916.8" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.06%)</title><rect x="914.4" y="595.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="917.4" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.04%)</title><rect x="914.7" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="917.7" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.04%)</title><rect x="914.7" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="917.7" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.02%)</title><rect x="914.8" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="917.8" y="558.0"></text>
</g>
<g>
<title>sock_write_iter (2 samples, 0.02%)</title><rect x="915.3" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="918.3" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.10%)</title><rect x="915.6" y="659.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="918.6" y="670.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.05%)</title><rect x="915.8" y="643.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="918.8" y="654.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="916.4" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="919.4" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="916.4" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="919.4" y="638.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="916.4" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="919.4" y="622.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="916.4" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="919.4" y="606.0"></text>
</g>
<g>
<title>__write (3 samples, 0.04%)</title><rect x="916.7" y="739.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="919.7" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (13 samples, 0.16%)</title><rect x="917.3" y="819.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="920.3" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.04%)</title><rect x="917.9" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="920.9" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="918.0" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.0" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="918.0" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="918.0" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.07%)</title><rect x="918.3" y="803.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.3" y="814.0"></text>
</g>
<g>
<title>pthread_self (3 samples, 0.04%)</title><rect x="918.4" y="787.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="921.4" y="798.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="918.9" y="787.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="921.9" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="918.9" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.9" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="918.9" y="755.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endWrite (10 samples, 0.12%)</title><rect x="919.2" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="922.2" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (7 samples, 0.09%)</title><rect x="919.5" y="803.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="922.5" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="920.2" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (356 samples, 4.36%)</title><rect x="920.6" y="883.0" width="51.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="923.6" y="894.0">sun/n..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (331 samples, 4.05%)</title><rect x="923.8" y="867.0" width="47.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="926.8" y="878.0">java..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.02%)</title><rect x="924.4" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="927.4" y="862.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (12 samples, 0.15%)</title><rect x="924.7" y="851.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="927.7" y="862.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedExceptionAction_2 (298 samples, 3.65%)</title><rect x="926.4" y="851.0" width="43.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="929.4" y="862.0">Java..</text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (5 samples, 0.06%)</title><rect x="926.7" y="835.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="929.7" y="846.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.02%)</title><rect x="927.4" y="835.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="930.4" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (9 samples, 0.11%)</title><rect x="927.7" y="835.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="930.7" y="846.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (4 samples, 0.05%)</title><rect x="929.0" y="835.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="932.0" y="846.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="929.3" y="819.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="932.3" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="929.3" y="803.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="932.3" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="929.3" y="787.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="932.3" y="798.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (248 samples, 3.04%)</title><rect x="929.6" y="835.0" width="35.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="932.6" y="846.0">JVM..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;5292116ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)0, 5292116ull&gt;::oop_access_barrier(void*, oopDesc*) (3 samples, 0.04%)</title><rect x="931.3" y="819.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="934.3" y="830.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.02%)</title><rect x="931.7" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="934.7" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (10 samples, 0.12%)</title><rect x="932.5" y="819.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="935.5" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.224] (10 samples, 0.12%)</title><rect x="932.5" y="803.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="935.5" y="814.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (6 samples, 0.07%)</title><rect x="933.9" y="819.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="936.9" y="830.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="934.5" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="937.5" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="934.5" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="937.5" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="934.5" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="937.5" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (61 samples, 0.75%)</title><rect x="934.8" y="819.0" width="8.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="937.8" y="830.0"></text>
</g>
<g>
<title>.L409 (19 samples, 0.23%)</title><rect x="934.8" y="803.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="937.8" y="814.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.02%)</title><rect x="934.9" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="937.9" y="798.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (6 samples, 0.07%)</title><rect x="935.2" y="787.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="938.2" y="798.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.02%)</title><rect x="935.6" y="771.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="938.6" y="782.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (4 samples, 0.05%)</title><rect x="936.1" y="787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="939.1" y="798.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (5 samples, 0.06%)</title><rect x="936.7" y="787.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="939.7" y="798.0"></text>
</g>
<g>
<title>resume_userspace (3 samples, 0.04%)</title><rect x="936.9" y="771.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="939.9" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.04%)</title><rect x="936.9" y="755.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="939.9" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.04%)</title><rect x="936.9" y="739.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="939.9" y="750.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (7 samples, 0.09%)</title><rect x="937.5" y="803.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="940.5" y="814.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.02%)</title><rect x="938.5" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="941.5" y="814.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.04%)</title><rect x="938.8" y="803.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="941.8" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (20 samples, 0.24%)</title><rect x="939.3" y="803.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="942.3" y="814.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (7 samples, 0.09%)</title><rect x="940.6" y="787.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="943.6" y="798.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.02%)</title><rect x="941.6" y="787.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="944.6" y="798.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="941.9" y="787.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="944.9" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="941.9" y="771.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="944.9" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="941.9" y="755.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="944.9" y="766.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (4 samples, 0.05%)</title><rect x="942.3" y="803.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="945.3" y="814.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (5 samples, 0.06%)</title><rect x="942.9" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="945.9" y="814.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="943.3" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.3" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="943.3" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="946.3" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="943.3" y="755.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="946.3" y="766.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.02%)</title><rect x="943.7" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="946.7" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.02%)</title><rect x="944.0" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="947.0" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.06%)</title><rect x="944.3" y="819.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="947.3" y="830.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (3 samples, 0.04%)</title><rect x="945.0" y="819.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="948.0" y="830.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="945.5" y="819.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="948.5" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.186] (5 samples, 0.06%)</title><rect x="945.9" y="819.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="948.9" y="830.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (9 samples, 0.11%)</title><rect x="946.6" y="819.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="949.6" y="830.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.02%)</title><rect x="947.9" y="819.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="950.9" y="830.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.02%)</title><rect x="948.5" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="951.5" y="830.0"></text>
</g>
<g>
<title>resume_userspace (4 samples, 0.05%)</title><rect x="948.8" y="819.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="951.8" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.05%)</title><rect x="948.8" y="803.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="951.8" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.05%)</title><rect x="948.8" y="787.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="951.8" y="798.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (46 samples, 0.56%)</title><rect x="949.4" y="819.0" width="6.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="952.4" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="950.2" y="803.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="953.2" y="814.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (4 samples, 0.05%)</title><rect x="950.7" y="803.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="953.7" y="814.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (29 samples, 0.36%)</title><rect x="951.3" y="803.0" width="4.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="954.3" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (10 samples, 0.12%)</title><rect x="951.7" y="787.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="954.7" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (6 samples, 0.07%)</title><rect x="952.3" y="771.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="955.3" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (7 samples, 0.09%)</title><rect x="953.1" y="787.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="956.1" y="798.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="953.9" y="771.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="956.9" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="953.9" y="755.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="956.9" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="953.9" y="739.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="956.9" y="750.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (7 samples, 0.09%)</title><rect x="954.3" y="787.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="957.3" y="798.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (4 samples, 0.05%)</title><rect x="955.4" y="803.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="958.4" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (65 samples, 0.80%)</title><rect x="956.0" y="819.0" width="9.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="959.0" y="830.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.04%)</title><rect x="958.6" y="803.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="961.6" y="814.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (19 samples, 0.23%)</title><rect x="959.1" y="803.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="962.1" y="814.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (9 samples, 0.11%)</title><rect x="960.1" y="787.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="963.1" y="798.0"></text>
</g>
<g>
<title>resume_userspace (3 samples, 0.04%)</title><rect x="961.4" y="787.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="964.4" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.04%)</title><rect x="961.4" y="771.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="964.4" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.04%)</title><rect x="961.4" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="964.4" y="766.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.02%)</title><rect x="961.8" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="964.8" y="814.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (2 samples, 0.02%)</title><rect x="962.2" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="965.2" y="814.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (18 samples, 0.22%)</title><rect x="962.5" y="803.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="965.5" y="814.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (4 samples, 0.05%)</title><rect x="962.8" y="787.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="965.8" y="798.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (12 samples, 0.15%)</title><rect x="963.4" y="787.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="966.4" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (10 samples, 0.12%)</title><rect x="963.4" y="771.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="966.4" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (9 samples, 0.11%)</title><rect x="963.5" y="755.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="966.5" y="766.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.02%)</title><rect x="964.8" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="967.8" y="782.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.02%)</title><rect x="965.1" y="803.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="968.1" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="965.1" y="787.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="968.1" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="965.1" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="968.1" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.02%)</title><rect x="965.4" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="968.4" y="846.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (5 samples, 0.06%)</title><rect x="965.7" y="835.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="968.7" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.186] (5 samples, 0.06%)</title><rect x="966.6" y="835.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="969.6" y="846.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (3 samples, 0.04%)</title><rect x="967.4" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="970.4" y="846.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (3 samples, 0.04%)</title><rect x="967.9" y="835.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="970.9" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.05%)</title><rect x="968.3" y="835.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="971.3" y="846.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.05%)</title><rect x="968.9" y="835.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="971.9" y="846.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (4 samples, 0.05%)</title><rect x="969.5" y="851.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="972.5" y="862.0"></text>
</g>
<g>
<title>call_stub (6 samples, 0.07%)</title><rect x="970.0" y="851.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="973.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (4 samples, 0.05%)</title><rect x="971.1" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (3 samples, 0.04%)</title><rect x="971.2" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="974.2" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.newOutputStream (3 samples, 0.04%)</title><rect x="971.2" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.isConnected (3 samples, 0.04%)</title><rect x="971.6" y="867.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="974.6" y="878.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.06%)</title><rect x="972.2" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.2" y="910.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (4 samples, 0.05%)</title><rect x="972.9" y="899.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="975.9" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,488 samples, 18.22%)</title><rect x="973.8" y="1123.0" width="215.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.8" y="1134.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.02%)</title><rect x="975.2" y="1107.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="978.2" y="1118.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.02%)</title><rect x="975.5" y="1107.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="978.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (572 samples, 7.01%)</title><rect x="976.0" y="1107.0" width="82.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.0" y="1118.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (6 samples, 0.07%)</title><rect x="976.1" y="1091.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="979.1" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (6 samples, 0.07%)</title><rect x="976.1" y="1075.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="979.1" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.07%)</title><rect x="976.1" y="1059.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="979.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (5 samples, 0.06%)</title><rect x="976.3" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="979.3" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.&lt;init&gt; (3 samples, 0.04%)</title><rect x="976.5" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.5" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (3 samples, 0.04%)</title><rect x="976.5" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="979.5" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (3 samples, 0.04%)</title><rect x="976.5" y="995.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (53 samples, 0.65%)</title><rect x="977.0" y="1091.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.0" y="1102.0"></text>
</g>
<g>
<title>__clock_gettime (39 samples, 0.48%)</title><rect x="977.7" y="1075.0" width="5.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="980.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="978.0" y="1059.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="981.0" y="1070.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.04%)</title><rect x="978.0" y="1043.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="981.0" y="1054.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.04%)</title><rect x="978.0" y="1027.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="981.0" y="1038.0"></text>
</g>
<g>
<title>__get_user_4 (2 samples, 0.02%)</title><rect x="978.0" y="1011.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="981.0" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (27 samples, 0.33%)</title><rect x="978.6" y="1059.0" width="3.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="981.6" y="1070.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (25 samples, 0.31%)</title><rect x="978.9" y="1043.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="981.9" y="1054.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (22 samples, 0.27%)</title><rect x="978.9" y="1027.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="981.9" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="979.0" y="1011.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="982.0" y="1022.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="979.0" y="995.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="982.0" y="1006.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="979.0" y="979.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="982.0" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.02%)</title><rect x="979.0" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="982.0" y="974.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (2 samples, 0.02%)</title><rect x="979.3" y="1011.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="982.3" y="1022.0"></text>
</g>
<g>
<title>put_timespec64 (4 samples, 0.05%)</title><rect x="979.6" y="1011.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="982.6" y="1022.0"></text>
</g>
<g>
<title>sys_clock_gettime (13 samples, 0.16%)</title><rect x="980.2" y="1011.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="983.2" y="1022.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.04%)</title><rect x="980.7" y="995.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="983.7" y="1006.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (4 samples, 0.05%)</title><rect x="981.2" y="995.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="984.2" y="1006.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.02%)</title><rect x="981.2" y="979.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="984.2" y="990.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.02%)</title><rect x="981.2" y="963.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="984.2" y="974.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.02%)</title><rect x="981.2" y="947.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="984.2" y="958.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.02%)</title><rect x="981.5" y="979.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="984.5" y="990.0"></text>
</g>
<g>
<title>put_timespec64 (2 samples, 0.02%)</title><rect x="981.7" y="995.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="984.7" y="1006.0"></text>
</g>
<g>
<title>sys_clock_gettime (3 samples, 0.04%)</title><rect x="982.0" y="1027.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="985.0" y="1038.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (6 samples, 0.07%)</title><rect x="982.5" y="1059.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="985.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (9 samples, 0.11%)</title><rect x="983.3" y="1075.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.updateHead (7 samples, 0.09%)</title><rect x="983.6" y="1059.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (4 samples, 0.05%)</title><rect x="984.1" y="1043.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="987.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (2 samples, 0.02%)</title><rect x="984.3" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.3" y="1038.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.02%)</title><rect x="984.3" y="1011.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="987.3" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (512 samples, 6.27%)</title><rect x="984.6" y="1091.0" width="74.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="987.6" y="1102.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (512 samples, 6.27%)</title><rect x="984.6" y="1075.0" width="74.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="987.6" y="1086.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (501 samples, 6.14%)</title><rect x="986.2" y="1059.0" width="72.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="989.2" y="1070.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (459 samples, 5.62%)</title><rect x="986.4" y="1043.0" width="66.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="989.4" y="1054.0">sun/nio..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.02%)</title><rect x="987.1" y="1027.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="990.1" y="1038.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (3 samples, 0.04%)</title><rect x="987.4" y="1027.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="990.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="987.8" y="1027.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="990.8" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.06%)</title><rect x="987.8" y="1011.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="990.8" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.06%)</title><rect x="987.8" y="995.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="990.8" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.06%)</title><rect x="987.8" y="979.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="990.8" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (442 samples, 5.41%)</title><rect x="988.5" y="1027.0" width="63.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="991.5" y="1038.0">__kerne..</text>
</g>
<g>
<title>entry_SYSENTER_32 (437 samples, 5.35%)</title><rect x="989.3" y="1011.0" width="63.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="992.3" y="1022.0">entry_S..</text>
</g>
<g>
<title>do_fast_syscall_32 (435 samples, 5.33%)</title><rect x="989.3" y="995.0" width="62.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="992.3" y="1006.0">do_fas..</text>
</g>
<g>
<title>sys_epoll_wait (434 samples, 5.32%)</title><rect x="989.4" y="979.0" width="62.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="992.4" y="990.0">sys_ep..</text>
</g>
<g>
<title>ep_poll (427 samples, 5.23%)</title><rect x="990.1" y="963.0" width="61.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="993.1" y="974.0">ep_poll</text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.11%)</title><rect x="990.7" y="947.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="993.7" y="958.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.16 (22 samples, 0.27%)</title><rect x="992.2" y="947.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="995.2" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.09%)</title><rect x="992.3" y="931.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="995.3" y="942.0"></text>
</g>
<g>
<title>ep_send_events_proc (12 samples, 0.15%)</title><rect x="993.3" y="931.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.3" y="942.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (8 samples, 0.10%)</title><rect x="993.7" y="915.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="996.7" y="926.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.06%)</title><rect x="994.0" y="899.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="997.0" y="910.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.05%)</title><rect x="994.2" y="883.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="997.2" y="894.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.04%)</title><rect x="995.3" y="947.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="998.3" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (387 samples, 4.74%)</title><rect x="995.8" y="947.0" width="55.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="998.8" y="958.0">sched..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (386 samples, 4.73%)</title><rect x="995.9" y="931.0" width="55.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="998.9" y="942.0">sched..</text>
</g>
<g>
<title>schedule (384 samples, 4.70%)</title><rect x="996.2" y="915.0" width="55.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="999.2" y="926.0">sched..</text>
</g>
<g>
<title>__sched_text_start (382 samples, 4.68%)</title><rect x="996.5" y="899.0" width="55.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="999.5" y="910.0">__sch..</text>
</g>
<g>
<title>finish_task_switch (376 samples, 4.61%)</title><rect x="997.4" y="883.0" width="54.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1000.4" y="894.0">finis..</text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.02%)</title><rect x="1052.1" y="995.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1055.1" y="1006.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.02%)</title><rect x="1052.4" y="1027.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1055.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (21 samples, 0.26%)</title><rect x="1052.7" y="1043.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.7" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.09%)</title><rect x="1053.1" y="1027.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1056.1" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.05%)</title><rect x="1053.1" y="1011.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="1053.7" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.7" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.getEvent (2 samples, 0.02%)</title><rect x="1054.3" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1057.3" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.10%)</title><rect x="1054.6" y="1027.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.6" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.04%)</title><rect x="1054.6" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.6" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.04%)</title><rect x="1054.6" y="995.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1057.6" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.04%)</title><rect x="1054.6" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1057.6" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.02%)</title><rect x="1054.7" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.7" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.02%)</title><rect x="1055.0" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.02%)</title><rect x="1055.0" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1058.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.02%)</title><rect x="1055.0" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.0" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (3 samples, 0.04%)</title><rect x="1055.3" y="1011.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.3" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (2 samples, 0.02%)</title><rect x="1055.5" y="995.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.5" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (2 samples, 0.02%)</title><rect x="1055.5" y="979.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.5" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.isConnected (2 samples, 0.02%)</title><rect x="1055.5" y="963.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.05%)</title><rect x="1055.7" y="1043.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.7" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (2 samples, 0.02%)</title><rect x="1056.0" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.0" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (2 samples, 0.02%)</title><rect x="1056.0" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1059.0" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (5 samples, 0.06%)</title><rect x="1056.3" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1059.3" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (5 samples, 0.06%)</title><rect x="1056.3" y="1027.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.04%)</title><rect x="1056.3" y="1011.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1059.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="1056.8" y="1011.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.8" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (6 samples, 0.07%)</title><rect x="1057.0" y="1043.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.0" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (6 samples, 0.07%)</title><rect x="1057.0" y="1027.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.0" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.07%)</title><rect x="1057.0" y="1011.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.05%)</title><rect x="1057.2" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.05%)</title><rect x="1057.2" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.2" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (5 samples, 0.06%)</title><rect x="1057.9" y="1043.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1060.9" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.06%)</title><rect x="1057.9" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.9" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (5 samples, 0.06%)</title><rect x="1057.9" y="1011.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.9" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1057.9" y="995.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.9" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1057.9" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.9" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (883 samples, 10.81%)</title><rect x="1058.6" y="1107.0" width="127.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.6" y="1118.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (877 samples, 10.74%)</title><rect x="1059.5" y="1091.0" width="126.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.5" y="1102.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (703 samples, 8.61%)</title><rect x="1059.5" y="1075.0" width="101.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1062.5" y="1086.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (616 samples, 7.54%)</title><rect x="1064.8" y="1059.0" width="89.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.8" y="1070.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (616 samples, 7.54%)</title><rect x="1064.8" y="1043.0" width="89.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1067.8" y="1054.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (580 samples, 7.10%)</title><rect x="1065.4" y="1027.0" width="83.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1068.4" y="1038.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (22 samples, 0.27%)</title><rect x="1065.4" y="1011.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1068.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.10%)</title><rect x="1067.4" y="995.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1068.3" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1068.3" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (558 samples, 6.83%)</title><rect x="1068.6" y="1011.0" width="80.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.6" y="1022.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.06%)</title><rect x="1069.3" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1072.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="1069.3" y="979.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="1069.3" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1072.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="1069.8" y="979.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="1069.8" y="963.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.8" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="1069.8" y="947.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.executeAsync (548 samples, 6.71%)</title><rect x="1070.0" y="995.0" width="79.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1073.0" y="1006.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (545 samples, 6.67%)</title><rect x="1070.5" y="979.0" width="78.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1073.5" y="990.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (545 samples, 6.67%)</title><rect x="1070.5" y="963.0" width="78.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1073.5" y="974.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (526 samples, 6.44%)</title><rect x="1070.5" y="947.0" width="76.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.5" y="958.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (15 samples, 0.18%)</title><rect x="1070.5" y="931.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (15 samples, 0.18%)</title><rect x="1070.5" y="915.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (15 samples, 0.18%)</title><rect x="1070.5" y="899.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1073.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (511 samples, 6.26%)</title><rect x="1072.7" y="931.0" width="73.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.7" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (511 samples, 6.26%)</title><rect x="1072.7" y="915.0" width="73.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.7" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (511 samples, 6.26%)</title><rect x="1072.7" y="899.0" width="73.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.7" y="910.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (511 samples, 6.26%)</title><rect x="1072.7" y="883.0" width="73.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1075.7" y="894.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (506 samples, 6.20%)</title><rect x="1073.4" y="867.0" width="73.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.4" y="878.0">jdk/inte..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="1073.8" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1076.8" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (2 samples, 0.02%)</title><rect x="1074.1" y="851.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1077.1" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.02%)</title><rect x="1074.4" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1077.4" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (52 samples, 0.64%)</title><rect x="1074.8" y="851.0" width="7.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1077.8" y="862.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.02%)</title><rect x="1076.3" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1079.3" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="1076.6" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1079.6" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.02%)</title><rect x="1077.3" y="835.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1080.3" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.07%)</title><rect x="1077.6" y="835.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1080.6" y="846.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.02%)</title><rect x="1078.1" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1081.1" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (14 samples, 0.17%)</title><rect x="1078.4" y="835.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1081.4" y="846.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.02%)</title><rect x="1080.7" y="835.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1083.7" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal (4 samples, 0.05%)</title><rect x="1081.2" y="835.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1084.2" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.02%)</title><rect x="1081.8" y="835.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1084.8" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="1082.0" y="835.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1085.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (439 samples, 5.38%)</title><rect x="1082.3" y="851.0" width="63.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1085.3" y="862.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="1082.3" y="835.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1085.3" y="846.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.02%)</title><rect x="1082.3" y="819.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1085.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.02%)</title><rect x="1082.3" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1085.3" y="814.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.02%)</title><rect x="1082.3" y="787.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1085.3" y="798.0"></text>
</g>
<g>
<title>__kernel_vsyscall (431 samples, 5.28%)</title><rect x="1082.6" y="835.0" width="62.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1085.6" y="846.0">__kern..</text>
</g>
<g>
<title>entry_SYSENTER_32 (427 samples, 5.23%)</title><rect x="1083.2" y="819.0" width="61.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1086.2" y="830.0">entry_..</text>
</g>
<g>
<title>do_fast_syscall_32 (426 samples, 5.22%)</title><rect x="1083.2" y="803.0" width="61.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1086.2" y="814.0">do_fas..</text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.05%)</title><rect x="1083.3" y="787.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1086.3" y="798.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="1083.3" y="771.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1086.3" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.05%)</title><rect x="1083.3" y="755.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1086.3" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.05%)</title><rect x="1083.3" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1086.3" y="750.0"></text>
</g>
<g>
<title>sys_futex (421 samples, 5.16%)</title><rect x="1083.9" y="787.0" width="60.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1086.9" y="798.0">sys_fu..</text>
</g>
<g>
<title>do_futex (418 samples, 5.12%)</title><rect x="1084.1" y="771.0" width="60.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1087.1" y="782.0">do_futex</text>
</g>
<g>
<title>futex_wake (411 samples, 5.03%)</title><rect x="1084.6" y="755.0" width="59.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1087.6" y="766.0">futex_..</text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="1086.8" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1089.8" y="750.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="1087.2" y="739.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1090.2" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (10 samples, 0.12%)</title><rect x="1087.5" y="739.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1090.5" y="750.0"></text>
</g>
<g>
<title>plist_del (3 samples, 0.04%)</title><rect x="1088.4" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1091.4" y="734.0"></text>
</g>
<g>
<title>wake_q_add (2 samples, 0.02%)</title><rect x="1089.0" y="739.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1092.0" y="750.0"></text>
</g>
<g>
<title>wake_up_q (379 samples, 4.64%)</title><rect x="1089.3" y="739.0" width="54.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1092.3" y="750.0">wake_..</text>
</g>
<g>
<title>try_to_wake_up (378 samples, 4.63%)</title><rect x="1089.4" y="723.0" width="54.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1092.4" y="734.0">try_t..</text>
</g>
<g>
<title>__lock_text_start (378 samples, 4.63%)</title><rect x="1089.4" y="707.0" width="54.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1092.4" y="718.0">__loc..</text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.04%)</title><rect x="1144.0" y="755.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1147.0" y="766.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="1144.5" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1147.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.07%)</title><rect x="1144.9" y="835.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1147.9" y="846.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (3 samples, 0.04%)</title><rect x="1145.8" y="851.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1148.8" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.02%)</title><rect x="1146.2" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.23%)</title><rect x="1146.5" y="947.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.23%)</title><rect x="1146.5" y="931.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.23%)</title><rect x="1146.5" y="915.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.23%)</title><rect x="1146.5" y="899.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.5" y="910.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (32 samples, 0.39%)</title><rect x="1149.2" y="1027.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1152.2" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.get (32 samples, 0.39%)</title><rect x="1149.2" y="1011.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1152.2" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (32 samples, 0.39%)</title><rect x="1149.2" y="995.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1152.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.02%)</title><rect x="1153.9" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1156.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.05%)</title><rect x="1154.2" y="1059.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1157.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.05%)</title><rect x="1154.2" y="1043.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.05%)</title><rect x="1154.2" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="1154.2" y="1011.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.09%)</title><rect x="1154.7" y="1059.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="1154.7" y="1043.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1157.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.09%)</title><rect x="1154.7" y="1027.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 0.45%)</title><rect x="1155.7" y="1059.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1158.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 0.45%)</title><rect x="1155.7" y="1043.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (174 samples, 2.13%)</title><rect x="1161.1" y="1075.0" width="25.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.1" y="1086.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (166 samples, 2.03%)</title><rect x="1162.3" y="1059.0" width="23.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.3" y="1070.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (166 samples, 2.03%)</title><rect x="1162.3" y="1043.0" width="23.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.3" y="1054.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.06%)</title><rect x="1162.3" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1165.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.06%)</title><rect x="1162.3" y="1011.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.06%)</title><rect x="1162.3" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1165.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.06%)</title><rect x="1162.3" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1165.3" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (149 samples, 1.82%)</title><rect x="1163.0" y="1027.0" width="21.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.0" y="1038.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (149 samples, 1.82%)</title><rect x="1163.0" y="1011.0" width="21.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1166.0" y="1022.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.04%)</title><rect x="1163.0" y="995.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.04%)</title><rect x="1163.0" y="979.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.04%)</title><rect x="1163.0" y="963.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.04%)</title><rect x="1163.0" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.04%)</title><rect x="1163.0" y="931.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1166.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (3 samples, 0.04%)</title><rect x="1163.0" y="915.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (3 samples, 0.04%)</title><rect x="1163.0" y="899.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.0" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (143 samples, 1.75%)</title><rect x="1163.4" y="995.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1166.4" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (143 samples, 1.75%)</title><rect x="1163.4" y="979.0" width="20.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.4" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (124 samples, 1.52%)</title><rect x="1166.2" y="963.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.2" y="974.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.02%)</title><rect x="1167.0" y="947.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1170.0" y="958.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (2 samples, 0.02%)</title><rect x="1167.3" y="947.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1170.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="1167.6" y="947.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1170.6" y="958.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.02%)</title><rect x="1167.6" y="931.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1170.6" y="942.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.02%)</title><rect x="1167.6" y="915.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1170.6" y="926.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.02%)</title><rect x="1167.6" y="899.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1170.6" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (108 samples, 1.32%)</title><rect x="1167.9" y="947.0" width="15.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1170.9" y="958.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (108 samples, 1.32%)</title><rect x="1167.9" y="931.0" width="15.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1170.9" y="942.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (107 samples, 1.31%)</title><rect x="1167.9" y="915.0" width="15.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1170.9" y="926.0"></text>
</g>
<g>
<title>sys_read (105 samples, 1.29%)</title><rect x="1168.2" y="899.0" width="15.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1171.2" y="910.0"></text>
</g>
<g>
<title>vfs_read (101 samples, 1.24%)</title><rect x="1168.8" y="883.0" width="14.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1171.8" y="894.0"></text>
</g>
<g>
<title>__vfs_read (81 samples, 0.99%)</title><rect x="1169.0" y="867.0" width="11.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1172.0" y="878.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.02%)</title><rect x="1169.0" y="851.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1172.0" y="862.0"></text>
</g>
<g>
<title>new_sync_read (78 samples, 0.96%)</title><rect x="1169.3" y="851.0" width="11.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1172.3" y="862.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.02%)</title><rect x="1170.1" y="835.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1173.1" y="846.0"></text>
</g>
<g>
<title>sock_read_iter (70 samples, 0.86%)</title><rect x="1170.3" y="835.0" width="10.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1173.3" y="846.0"></text>
</g>
<g>
<title>sock_recvmsg (67 samples, 0.82%)</title><rect x="1170.8" y="819.0" width="9.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1173.8" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.02%)</title><rect x="1171.1" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1174.1" y="814.0"></text>
</g>
<g>
<title>inet_recvmsg (59 samples, 0.72%)</title><rect x="1171.4" y="803.0" width="8.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1174.4" y="814.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.05%)</title><rect x="1171.4" y="787.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1174.4" y="798.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="1172.1" y="787.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1175.1" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (52 samples, 0.64%)</title><rect x="1172.4" y="787.0" width="7.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1175.4" y="798.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.15%)</title><rect x="1173.5" y="771.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1176.5" y="782.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.02%)</title><rect x="1173.5" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1176.5" y="766.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.09%)</title><rect x="1173.8" y="755.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1176.8" y="766.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="1174.1" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1177.1" y="750.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.04%)</title><rect x="1174.4" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1177.4" y="750.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.04%)</title><rect x="1174.8" y="755.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1177.8" y="766.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.04%)</title><rect x="1175.4" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1178.4" y="782.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.06%)</title><rect x="1175.8" y="771.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1178.8" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="1176.0" y="755.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1179.0" y="766.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (2 samples, 0.02%)</title><rect x="1176.3" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1179.3" y="750.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="1176.6" y="771.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1179.6" y="782.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="1176.6" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1179.6" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.13%)</title><rect x="1177.1" y="771.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1180.1" y="782.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="1177.4" y="755.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1180.4" y="766.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.06%)</title><rect x="1178.0" y="755.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1181.0" y="766.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.05%)</title><rect x="1178.1" y="739.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.1" y="750.0"></text>
</g>
<g>
<title>__copy_user_ll (4 samples, 0.05%)</title><rect x="1178.1" y="723.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1181.1" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.05%)</title><rect x="1178.7" y="771.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.7" y="782.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.05%)</title><rect x="1179.3" y="771.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.3" y="782.0"></text>
</g>
<g>
<title>sched_clock_cpu (3 samples, 0.04%)</title><rect x="1179.5" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1182.5" y="766.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.04%)</title><rect x="1179.5" y="739.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1182.5" y="750.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (3 samples, 0.04%)</title><rect x="1179.5" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.02%)</title><rect x="1179.6" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.6" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.05%)</title><rect x="1179.9" y="803.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1182.9" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.04%)</title><rect x="1180.0" y="787.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1183.0" y="798.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.04%)</title><rect x="1180.0" y="771.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1183.0" y="782.0"></text>
</g>
<g>
<title>aa_label_sk_perm (3 samples, 0.04%)</title><rect x="1180.0" y="755.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1183.0" y="766.0"></text>
</g>
<g>
<title>rw_verify_area (18 samples, 0.22%)</title><rect x="1180.8" y="867.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1183.8" y="878.0"></text>
</g>
<g>
<title>security_file_permission (17 samples, 0.21%)</title><rect x="1180.9" y="851.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1183.9" y="862.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.09%)</title><rect x="1181.9" y="835.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1184.9" y="846.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.09%)</title><rect x="1181.9" y="819.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.9" y="830.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="1182.6" y="803.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1185.6" y="814.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="1183.1" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1186.1" y="846.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.02%)</title><rect x="1183.5" y="947.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1186.5" y="958.0"></text>
</g>
<g>
<title>read (2 samples, 0.02%)</title><rect x="1183.8" y="947.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1186.8" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.04%)</title><rect x="1184.1" y="995.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1187.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="1184.1" y="979.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.1" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.04%)</title><rect x="1184.1" y="963.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.1" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (9 samples, 0.11%)</title><rect x="1184.5" y="1027.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.5" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endRead (3 samples, 0.04%)</title><rect x="1185.8" y="1027.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.8" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.04%)</title><rect x="1185.8" y="1011.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1188.8" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (18 samples, 0.22%)</title><rect x="1186.2" y="1107.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="1186.5" y="1091.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1189.5" y="1102.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.06%)</title><rect x="1186.5" y="1075.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1189.5" y="1086.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.06%)</title><rect x="1186.5" y="1059.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1189.5" y="1070.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.06%)</title><rect x="1186.5" y="1043.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1189.5" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (11 samples, 0.13%)</title><rect x="1187.3" y="1091.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1190.3" y="1102.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (7 samples, 0.09%)</title><rect x="1187.8" y="1075.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1190.8" y="1086.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (7 samples, 0.09%)</title><rect x="1187.8" y="1059.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1190.8" y="1070.0"></text>
</g>
<g>
<title>sys_gettimeofday (5 samples, 0.06%)</title><rect x="1188.1" y="1043.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1191.1" y="1054.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.02%)</title><rect x="1188.3" y="1027.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.3" y="1038.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.02%)</title><rect x="1188.3" y="1011.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1191.3" y="1022.0"></text>
</g>
<g>
<title>do_gettimeofday (2 samples, 0.02%)</title><rect x="1188.6" y="1027.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1191.6" y="1038.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.02%)</title><rect x="1188.6" y="1011.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1191.6" y="1022.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (2 samples, 0.02%)</title><rect x="1189.0" y="1123.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.0" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 0.02%)</title><rect x="1189.4" y="1123.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="1134.0"></text>
</g>
</g>
</svg>
