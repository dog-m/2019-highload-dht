<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (325,659 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (264,131 samples, 81.11%)</title><rect x="10.0" y="691.0" width="957.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (18,254 samples, 5.61%)</title><rect x="10.0" y="675.0" width="66.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet$$Lambda$134/14104044.get (18,236 samples, 5.60%)</title><rect x="10.1" y="659.0" width="66.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.1" y="670.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet.lambda$processEntityRequest$0 (18,236 samples, 5.60%)</title><rect x="10.1" y="643.0" width="66.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.1" y="654.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet.processEntityDirectly (18,236 samples, 5.60%)</title><rect x="10.1" y="627.0" width="66.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.1" y="638.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (17,984 samples, 5.52%)</title><rect x="10.1" y="611.0" width="65.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.1" y="622.0">java/la..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (17,984 samples, 5.52%)</title><rect x="10.1" y="595.0" width="65.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.1" y="606.0">java/la..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17,984 samples, 5.52%)</title><rect x="10.1" y="579.0" width="65.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.1" y="590.0">java/la..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (17,984 samples, 5.52%)</title><rect x="10.1" y="563.0" width="65.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.1" y="574.0">java/ut..</text>
</g>
<g>
<title>byte[] (17,847 samples, 5.48%)</title><rect x="10.1" y="547.0" width="64.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.1" y="558.0">byte[]</text>
</g>
<g>
<title>byte[] (137 samples, 0.04%)</title><rect x="74.7" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="77.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/RocksDAO.getWithTimestamp (195 samples, 0.06%)</title><rect x="75.4" y="611.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/ByteBufferUtils.restoreByteArray (140 samples, 0.04%)</title><rect x="75.5" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/ByteBufferUtils.getByteArray (140 samples, 0.04%)</title><rect x="75.5" y="579.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.5" y="590.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.03%)</title><rect x="75.5" y="563.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="78.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (36,380 samples, 11.17%)</title><rect x="76.2" y="675.0" width="131.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.2" y="686.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (36,380 samples, 11.17%)</title><rect x="76.2" y="659.0" width="131.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.2" y="670.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (36,380 samples, 11.17%)</title><rect x="76.2" y="643.0" width="131.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="79.2" y="654.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36,380 samples, 11.17%)</title><rect x="76.2" y="627.0" width="131.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.2" y="638.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (36,317 samples, 11.15%)</title><rect x="76.4" y="611.0" width="131.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.4" y="622.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor$$Lambda$128/2576403.apply (36,317 samples, 11.15%)</title><rect x="76.4" y="595.0" width="131.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.4" y="606.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor.lambda$processEntityRemotely$3 (36,317 samples, 11.15%)</title><rect x="76.4" y="579.0" width="131.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="79.4" y="590.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/lang/String.valueOf (218 samples, 0.07%)</title><rect x="76.4" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (218 samples, 0.07%)</title><rect x="76.4" y="547.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.4" y="558.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.04%)</title><rect x="76.4" y="531.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="79.4" y="542.0"></text>
</g>
<g>
<title>one.nio.http.Response (35,806 samples, 10.99%)</title><rect x="77.2" y="563.0" width="129.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="80.2" y="574.0">one.nio.http.Res..</text>
</g>
<g>
<title>one.nio.http.Response (169 samples, 0.05%)</title><rect x="206.9" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="209.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (124 samples, 0.04%)</title><rect x="207.5" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (209,497 samples, 64.33%)</title><rect x="208.0" y="675.0" width="759.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (209,497 samples, 64.33%)</title><rect x="208.0" y="659.0" width="759.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (98,321 samples, 30.19%)</title><rect x="208.0" y="643.0" width="356.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (98,321 samples, 30.19%)</title><rect x="208.0" y="627.0" width="356.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.0" y="638.0">java/util/concurrent/CompletableFuture.postCompl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (98,311 samples, 30.19%)</title><rect x="208.0" y="611.0" width="356.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.0" y="622.0">java/util/concurrent/CompletableFuture$UniCompos..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (344 samples, 0.11%)</title><rect x="208.0" y="595.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="211.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$120/18004023.apply (97,912 samples, 30.07%)</title><rect x="209.2" y="595.0" width="354.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.2" y="606.0">jdk/internal/net/http/MultiExchange$$Lambda$120/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (97,912 samples, 30.07%)</title><rect x="209.2" y="579.0" width="354.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.2" y="590.0">jdk/internal/net/http/MultiExchange.lambda$respo..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (97,912 samples, 30.07%)</title><rect x="209.2" y="563.0" width="354.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.2" y="574.0">jdk/internal/net/http/MultiExchange.responseAsyn..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (399 samples, 0.12%)</title><rect x="209.2" y="547.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (399 samples, 0.12%)</title><rect x="209.2" y="531.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="212.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/21539894.get$Lambda (256 samples, 0.08%)</title><rect x="209.2" y="515.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$182 (247 samples, 0.08%)</title><rect x="209.2" y="499.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="212.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$186/6790542.get$Lambda (143 samples, 0.04%)</title><rect x="210.2" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$186 (133 samples, 0.04%)</title><rect x="210.2" y="499.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="213.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (668 samples, 0.21%)</title><rect x="210.7" y="547.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (668 samples, 0.21%)</title><rect x="210.7" y="531.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (411 samples, 0.13%)</title><rect x="210.7" y="515.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="213.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (248 samples, 0.08%)</title><rect x="212.2" y="515.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (248 samples, 0.08%)</title><rect x="212.2" y="499.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (238 samples, 0.07%)</title><rect x="212.2" y="483.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="215.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,318 samples, 0.40%)</title><rect x="213.1" y="547.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,318 samples, 0.40%)</title><rect x="213.1" y="531.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (735 samples, 0.23%)</title><rect x="213.1" y="515.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="216.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (563 samples, 0.17%)</title><rect x="215.9" y="515.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (563 samples, 0.17%)</title><rect x="215.9" y="499.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (544 samples, 0.17%)</title><rect x="215.9" y="483.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="218.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (92,871 samples, 28.52%)</title><rect x="217.9" y="547.0" width="336.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.9" y="558.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (92,871 samples, 28.52%)</title><rect x="217.9" y="531.0" width="336.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.9" y="542.0">jdk/internal/net/http/Exchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (92,871 samples, 28.52%)</title><rect x="217.9" y="515.0" width="336.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.9" y="526.0">jdk/internal/net/http/Exchange.responseAsyncIm..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (769 samples, 0.24%)</title><rect x="217.9" y="499.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (769 samples, 0.24%)</title><rect x="217.9" y="483.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/10627322.get$Lambda (326 samples, 0.10%)</title><rect x="217.9" y="467.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="220.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$135 (323 samples, 0.10%)</title><rect x="217.9" y="451.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="220.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/30595298.get$Lambda (289 samples, 0.09%)</title><rect x="219.1" y="467.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$136 (284 samples, 0.09%)</title><rect x="219.1" y="451.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="222.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/5261040.get$Lambda (154 samples, 0.05%)</title><rect x="220.1" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$166 (143 samples, 0.04%)</title><rect x="220.1" y="451.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="223.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (64,477 samples, 19.80%)</title><rect x="220.7" y="499.0" width="233.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.7" y="510.0">java/util/concurrent/Completabl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (64,477 samples, 19.80%)</title><rect x="220.7" y="483.0" width="233.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.7" y="494.0">java/util/concurrent/Completabl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (64,003 samples, 19.65%)</title><rect x="220.7" y="467.0" width="231.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.7" y="478.0">java/util/concurrent/Completabl..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/5261040.apply (64,003 samples, 19.65%)</title><rect x="220.7" y="451.0" width="231.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.7" y="462.0">jdk/internal/net/http/Exchange$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (64,003 samples, 19.65%)</title><rect x="220.7" y="435.0" width="231.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.7" y="446.0">jdk/internal/net/http/Exchange...</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (64,003 samples, 19.65%)</title><rect x="220.7" y="419.0" width="231.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.7" y="430.0">jdk/internal/net/http/Exchange...</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/30595298.apply (64,003 samples, 19.65%)</title><rect x="220.7" y="403.0" width="231.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.7" y="414.0">jdk/internal/net/http/Exchange$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (64,003 samples, 19.65%)</title><rect x="220.7" y="387.0" width="231.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.7" y="398.0">jdk/internal/net/http/Exchange...</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (483 samples, 0.15%)</title><rect x="220.7" y="371.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (483 samples, 0.15%)</title><rect x="220.7" y="355.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/10502657.get$Lambda (483 samples, 0.15%)</title><rect x="220.7" y="339.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$180 (472 samples, 0.14%)</title><rect x="220.7" y="323.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="223.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,450 samples, 0.75%)</title><rect x="222.4" y="371.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,450 samples, 0.75%)</title><rect x="222.4" y="355.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="225.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1,086 samples, 0.33%)</title><rect x="222.4" y="339.0" width="4.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="225.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (138 samples, 0.04%)</title><rect x="226.4" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/10502657.apply (138 samples, 0.04%)</title><rect x="226.4" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="229.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (138 samples, 0.04%)</title><rect x="226.4" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="229.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (138 samples, 0.04%)</title><rect x="226.4" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/10627322.apply (138 samples, 0.04%)</title><rect x="226.4" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (138 samples, 0.04%)</title><rect x="226.4" y="259.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (72 samples, 0.02%)</title><rect x="226.6" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,207 samples, 0.37%)</title><rect x="226.9" y="339.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,207 samples, 0.37%)</title><rect x="226.9" y="323.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,195 samples, 0.37%)</title><rect x="226.9" y="307.0" width="4.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="229.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,207 samples, 0.37%)</title><rect x="231.3" y="371.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,207 samples, 0.37%)</title><rect x="231.3" y="355.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (435 samples, 0.13%)</title><rect x="231.3" y="339.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="234.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (735 samples, 0.23%)</title><rect x="233.0" y="339.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (735 samples, 0.23%)</title><rect x="233.0" y="323.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (727 samples, 0.22%)</title><rect x="233.0" y="307.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="236.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (59,863 samples, 18.38%)</title><rect x="235.7" y="371.0" width="216.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.7" y="382.0">jdk/internal/net/http/Http1E..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (763 samples, 0.23%)</title><rect x="235.7" y="355.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (763 samples, 0.23%)</title><rect x="235.7" y="339.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$176/5866496.get$Lambda (264 samples, 0.08%)</title><rect x="235.7" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="238.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$176 (254 samples, 0.08%)</title><rect x="235.7" y="307.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="238.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/12928094.get$Lambda (499 samples, 0.15%)</title><rect x="236.6" y="323.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$178 (490 samples, 0.15%)</title><rect x="236.6" y="307.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="239.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (51,526 samples, 15.82%)</title><rect x="238.4" y="355.0" width="186.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="241.4" y="366.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (51,526 samples, 15.82%)</title><rect x="238.4" y="339.0" width="186.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.4" y="350.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,379 samples, 0.42%)</title><rect x="238.4" y="323.0" width="5.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="241.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$176/5866496.apply (48,792 samples, 14.98%)</title><rect x="243.5" y="323.0" width="176.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="246.5" y="334.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (48,792 samples, 14.98%)</title><rect x="243.5" y="307.0" width="176.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="246.5" y="318.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (223 samples, 0.07%)</title><rect x="243.5" y="291.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (223 samples, 0.07%)</title><rect x="243.5" y="275.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$192/4915853.get$Lambda (223 samples, 0.07%)</title><rect x="243.5" y="259.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$192 (214 samples, 0.07%)</title><rect x="243.5" y="243.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="246.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (823 samples, 0.25%)</title><rect x="244.3" y="291.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (823 samples, 0.25%)</title><rect x="244.3" y="275.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (508 samples, 0.16%)</title><rect x="244.3" y="259.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="247.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (305 samples, 0.09%)</title><rect x="246.2" y="259.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (305 samples, 0.09%)</title><rect x="246.2" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (293 samples, 0.09%)</title><rect x="246.2" y="227.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="249.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (383 samples, 0.12%)</title><rect x="247.3" y="291.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="250.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1,883 samples, 0.58%)</title><rect x="248.7" y="291.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (591 samples, 0.18%)</title><rect x="248.7" y="275.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="251.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1,284 samples, 0.39%)</title><rect x="250.9" y="275.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1,134 samples, 0.35%)</title><rect x="250.9" y="259.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1,134 samples, 0.35%)</title><rect x="250.9" y="243.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1,134 samples, 0.35%)</title><rect x="250.9" y="227.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="253.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1,134 samples, 0.35%)</title><rect x="250.9" y="211.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.9" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1,125 samples, 0.35%)</title><rect x="250.9" y="195.0" width="4.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="253.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (150 samples, 0.05%)</title><rect x="255.0" y="259.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (150 samples, 0.05%)</title><rect x="255.0" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (150 samples, 0.05%)</title><rect x="255.0" y="227.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="258.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (150 samples, 0.05%)</title><rect x="255.0" y="211.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (150 samples, 0.05%)</title><rect x="255.0" y="195.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (150 samples, 0.05%)</title><rect x="255.0" y="179.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (78 samples, 0.02%)</title><rect x="255.0" y="163.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (72 samples, 0.02%)</title><rect x="255.2" y="163.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="258.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (72 samples, 0.02%)</title><rect x="255.2" y="147.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (72 samples, 0.02%)</title><rect x="255.2" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (72 samples, 0.02%)</title><rect x="255.2" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (72 samples, 0.02%)</title><rect x="255.2" y="99.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.2" y="110.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (72 samples, 0.02%)</title><rect x="255.2" y="83.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.2" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1,071 samples, 0.33%)</title><rect x="255.5" y="291.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,071 samples, 0.33%)</title><rect x="255.5" y="275.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (368 samples, 0.11%)</title><rect x="255.5" y="259.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (368 samples, 0.11%)</title><rect x="255.5" y="243.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (368 samples, 0.11%)</title><rect x="255.5" y="227.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (359 samples, 0.11%)</title><rect x="255.5" y="211.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="258.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (703 samples, 0.22%)</title><rect x="256.8" y="259.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (703 samples, 0.22%)</title><rect x="256.8" y="243.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (465 samples, 0.14%)</title><rect x="256.8" y="227.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="259.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (227 samples, 0.07%)</title><rect x="258.6" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (218 samples, 0.07%)</title><rect x="258.6" y="211.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="261.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (44,399 samples, 13.63%)</title><rect x="259.4" y="291.0" width="160.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.4" y="302.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java.lang.StringBuilder (382 samples, 0.12%)</title><rect x="259.4" y="275.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="262.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6,231 samples, 1.91%)</title><rect x="260.8" y="275.0" width="22.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.8" y="286.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (6,231 samples, 1.91%)</title><rect x="260.8" y="259.0" width="22.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.8" y="270.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (6,231 samples, 1.91%)</title><rect x="260.8" y="243.0" width="22.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.8" y="254.0">j..</text>
</g>
<g>
<title>byte[] (1,013 samples, 0.31%)</title><rect x="260.8" y="227.0" width="3.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="263.8" y="238.0"></text>
</g>
<g>
<title>byte[] (5,218 samples, 1.60%)</title><rect x="264.5" y="227.0" width="18.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="267.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,262 samples, 0.39%)</title><rect x="283.4" y="275.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.4" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,262 samples, 0.39%)</title><rect x="283.4" y="259.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.4" y="270.0"></text>
</g>
<g>
<title>byte[] (795 samples, 0.24%)</title><rect x="283.4" y="243.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="286.4" y="254.0"></text>
</g>
<g>
<title>byte[] (467 samples, 0.14%)</title><rect x="286.3" y="243.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="289.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4,703 samples, 1.44%)</title><rect x="288.0" y="275.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,703 samples, 1.44%)</title><rect x="288.0" y="259.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (608 samples, 0.19%)</title><rect x="288.0" y="243.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="291.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,087 samples, 1.25%)</title><rect x="290.2" y="243.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="293.2" y="254.0"></text>
</g>
<g>
<title>byte[] (1,504 samples, 0.46%)</title><rect x="290.2" y="227.0" width="5.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="293.2" y="238.0"></text>
</g>
<g>
<title>byte[] (2,583 samples, 0.79%)</title><rect x="295.6" y="227.0" width="9.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="298.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (696 samples, 0.21%)</title><rect x="305.0" y="275.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (696 samples, 0.21%)</title><rect x="305.0" y="259.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.0" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (688 samples, 0.21%)</title><rect x="305.0" y="243.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="308.0" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (314 samples, 0.10%)</title><rect x="307.5" y="275.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.5" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (306 samples, 0.09%)</title><rect x="307.5" y="259.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="310.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (26,309 samples, 8.08%)</title><rect x="308.7" y="275.0" width="95.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.7" y="286.0">jdk/interna..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (193 samples, 0.06%)</title><rect x="308.7" y="259.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="311.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (193 samples, 0.06%)</title><rect x="308.7" y="243.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (193 samples, 0.06%)</title><rect x="308.7" y="227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.7" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$195/19686375.get$Lambda (193 samples, 0.06%)</title><rect x="308.7" y="211.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.7" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$195 (189 samples, 0.06%)</title><rect x="308.7" y="195.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="311.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (15,284 samples, 4.69%)</title><rect x="309.4" y="259.0" width="55.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.4" y="270.0">jdk/i..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (6,267 samples, 1.92%)</title><rect x="309.4" y="243.0" width="22.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.4" y="254.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6,267 samples, 1.92%)</title><rect x="309.4" y="227.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.4" y="238.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6,267 samples, 1.92%)</title><rect x="309.4" y="211.0" width="22.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.4" y="222.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (6,267 samples, 1.92%)</title><rect x="309.4" y="195.0" width="22.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.4" y="206.0">j..</text>
</g>
<g>
<title>byte[] (2,117 samples, 0.65%)</title><rect x="309.4" y="179.0" width="7.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="312.4" y="190.0"></text>
</g>
<g>
<title>byte[] (4,150 samples, 1.27%)</title><rect x="317.0" y="179.0" width="15.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="320.0" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1,032 samples, 0.32%)</title><rect x="332.1" y="243.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.1" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1,032 samples, 0.32%)</title><rect x="332.1" y="227.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1,032 samples, 0.32%)</title><rect x="332.1" y="211.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1,021 samples, 0.31%)</title><rect x="332.1" y="195.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="335.1" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1,111 samples, 0.34%)</title><rect x="335.8" y="243.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.8" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (548 samples, 0.17%)</title><rect x="335.8" y="227.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="338.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (553 samples, 0.17%)</title><rect x="337.8" y="227.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.8" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (542 samples, 0.17%)</title><rect x="337.8" y="211.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="340.8" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$195/19686375.test (6,874 samples, 2.11%)</title><rect x="339.8" y="243.0" width="24.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.8" y="254.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (6,874 samples, 2.11%)</title><rect x="339.8" y="227.0" width="24.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.8" y="238.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/13050421.test (6,874 samples, 2.11%)</title><rect x="339.8" y="211.0" width="24.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.8" y="222.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (6,874 samples, 2.11%)</title><rect x="339.8" y="195.0" width="24.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.8" y="206.0">j..</text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/4651926.test (6,874 samples, 2.11%)</title><rect x="339.8" y="179.0" width="24.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.8" y="190.0">j..</text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (6,874 samples, 2.11%)</title><rect x="339.8" y="163.0" width="24.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.8" y="174.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/23660417.test (6,874 samples, 2.11%)</title><rect x="339.8" y="147.0" width="24.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.8" y="158.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (6,874 samples, 2.11%)</title><rect x="339.8" y="131.0" width="24.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.8" y="142.0">j..</text>
</g>
<g>
<title>java/lang/String.substring (6,874 samples, 2.11%)</title><rect x="339.8" y="115.0" width="24.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.8" y="126.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,874 samples, 2.11%)</title><rect x="339.8" y="99.0" width="24.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.8" y="110.0">j..</text>
</g>
<g>
<title>java.lang.String (2,695 samples, 0.83%)</title><rect x="339.8" y="83.0" width="9.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="342.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,139 samples, 1.27%)</title><rect x="349.7" y="83.0" width="15.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.7" y="94.0"></text>
</g>
<g>
<title>byte[] (4,102 samples, 1.26%)</title><rect x="349.7" y="67.0" width="14.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="352.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (10,832 samples, 3.33%)</title><rect x="364.7" y="259.0" width="39.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.7" y="270.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10,832 samples, 3.33%)</title><rect x="364.7" y="243.0" width="39.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="367.7" y="254.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10,832 samples, 3.33%)</title><rect x="364.7" y="227.0" width="39.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.7" y="238.0">jav..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (151 samples, 0.05%)</title><rect x="364.7" y="211.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="367.7" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (327 samples, 0.10%)</title><rect x="365.3" y="211.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="368.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (664 samples, 0.20%)</title><rect x="366.5" y="211.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="369.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (176 samples, 0.05%)</title><rect x="368.9" y="211.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="371.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (234 samples, 0.07%)</title><rect x="369.6" y="211.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (234 samples, 0.07%)</title><rect x="369.6" y="195.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.6" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.get$Lambda (234 samples, 0.07%)</title><rect x="369.6" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.6" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$109 (230 samples, 0.07%)</title><rect x="369.6" y="163.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="372.6" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (589 samples, 0.18%)</title><rect x="370.4" y="211.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.4" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (583 samples, 0.18%)</title><rect x="370.4" y="195.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="373.4" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8,068 samples, 2.48%)</title><rect x="372.5" y="211.0" width="29.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.5" y="222.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (8,068 samples, 2.48%)</title><rect x="372.5" y="195.0" width="29.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.5" y="206.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8,068 samples, 2.48%)</title><rect x="372.5" y="179.0" width="29.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.5" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,895 samples, 0.58%)</title><rect x="372.5" y="163.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,895 samples, 0.58%)</title><rect x="372.5" y="147.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.5" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.get$Lambda (1,895 samples, 0.58%)</title><rect x="372.5" y="131.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.5" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (1,868 samples, 0.57%)</title><rect x="372.5" y="115.0" width="6.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="375.5" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (741 samples, 0.23%)</title><rect x="379.4" y="163.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.4" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (741 samples, 0.23%)</title><rect x="379.4" y="147.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.4" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (741 samples, 0.23%)</title><rect x="379.4" y="131.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (741 samples, 0.23%)</title><rect x="379.4" y="115.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (741 samples, 0.23%)</title><rect x="379.4" y="99.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.4" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (741 samples, 0.23%)</title><rect x="379.4" y="83.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.4" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (741 samples, 0.23%)</title><rect x="379.4" y="67.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (741 samples, 0.23%)</title><rect x="379.4" y="51.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.4" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (709 samples, 0.22%)</title><rect x="379.4" y="35.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="382.4" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,907 samples, 0.89%)</title><rect x="382.1" y="163.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.1" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,907 samples, 0.89%)</title><rect x="382.1" y="147.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,434 samples, 0.44%)</title><rect x="382.1" y="131.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,434 samples, 0.44%)</title><rect x="382.1" y="115.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.1" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,406 samples, 0.43%)</title><rect x="382.1" y="99.0" width="5.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="385.1" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (1,473 samples, 0.45%)</title><rect x="387.3" y="131.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.3" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,447 samples, 0.44%)</title><rect x="387.3" y="115.0" width="5.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="390.3" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,525 samples, 0.78%)</title><rect x="392.6" y="163.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.6" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,499 samples, 0.77%)</title><rect x="392.6" y="147.0" width="9.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="395.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (607 samples, 0.19%)</title><rect x="401.8" y="211.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (603 samples, 0.19%)</title><rect x="401.8" y="195.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="404.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1,070 samples, 0.33%)</title><rect x="404.0" y="275.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.0" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (192 samples, 0.06%)</title><rect x="404.0" y="259.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.0" y="270.0"></text>
</g>
<g>
<title>byte[] (187 samples, 0.06%)</title><rect x="404.0" y="243.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="407.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (878 samples, 0.27%)</title><rect x="404.7" y="259.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (878 samples, 0.27%)</title><rect x="404.7" y="243.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1682085.invoke (878 samples, 0.27%)</title><rect x="404.7" y="227.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (878 samples, 0.27%)</title><rect x="404.7" y="211.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (535 samples, 0.16%)</title><rect x="404.7" y="195.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="407.7" y="206.0"></text>
</g>
<g>
<title>java.lang.String (532 samples, 0.16%)</title><rect x="404.7" y="179.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="407.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (343 samples, 0.11%)</title><rect x="406.6" y="195.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (343 samples, 0.11%)</title><rect x="406.6" y="179.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.6" y="190.0"></text>
</g>
<g>
<title>byte[] (339 samples, 0.10%)</title><rect x="406.6" y="163.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="409.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (944 samples, 0.29%)</title><rect x="407.9" y="275.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="410.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (944 samples, 0.29%)</title><rect x="407.9" y="259.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (944 samples, 0.29%)</title><rect x="407.9" y="243.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (944 samples, 0.29%)</title><rect x="407.9" y="227.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="410.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1682085.invoke (944 samples, 0.29%)</title><rect x="407.9" y="211.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (944 samples, 0.29%)</title><rect x="407.9" y="195.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (352 samples, 0.11%)</title><rect x="407.9" y="179.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="410.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (345 samples, 0.11%)</title><rect x="407.9" y="163.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="410.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (592 samples, 0.18%)</title><rect x="409.1" y="179.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="412.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (592 samples, 0.18%)</title><rect x="409.1" y="163.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.1" y="174.0"></text>
</g>
<g>
<title>byte[] (583 samples, 0.18%)</title><rect x="409.1" y="147.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="412.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,480 samples, 0.76%)</title><rect x="411.3" y="275.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="414.3" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,129 samples, 0.35%)</title><rect x="411.3" y="259.0" width="4.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="414.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (430 samples, 0.13%)</title><rect x="415.4" y="259.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.4" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (424 samples, 0.13%)</title><rect x="415.4" y="243.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="418.4" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (914 samples, 0.28%)</title><rect x="417.0" y="259.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (907 samples, 0.28%)</title><rect x="417.0" y="243.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="420.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,346 samples, 0.41%)</title><rect x="420.3" y="323.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,346 samples, 0.41%)</title><rect x="420.3" y="307.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,325 samples, 0.41%)</title><rect x="420.3" y="291.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="423.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (952 samples, 0.29%)</title><rect x="425.1" y="355.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="428.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (514 samples, 0.16%)</title><rect x="428.6" y="355.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="431.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (309 samples, 0.09%)</title><rect x="430.5" y="355.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="433.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (5,787 samples, 1.78%)</title><rect x="431.6" y="355.0" width="21.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="434.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (440 samples, 0.14%)</title><rect x="431.6" y="339.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (440 samples, 0.14%)</title><rect x="431.6" y="323.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$168/20307824.get$Lambda (197 samples, 0.06%)</title><rect x="431.6" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$168 (186 samples, 0.06%)</title><rect x="431.6" y="291.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="434.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$169/30399944.get$Lambda (243 samples, 0.07%)</title><rect x="432.3" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$169 (232 samples, 0.07%)</title><rect x="432.3" y="291.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="435.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (486 samples, 0.15%)</title><rect x="433.2" y="339.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="436.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (957 samples, 0.29%)</title><rect x="435.0" y="339.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="438.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (819 samples, 0.25%)</title><rect x="438.5" y="339.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="441.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1,297 samples, 0.40%)</title><rect x="441.5" y="339.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,297 samples, 0.40%)</title><rect x="441.5" y="323.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="444.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,297 samples, 0.40%)</title><rect x="441.5" y="307.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,297 samples, 0.40%)</title><rect x="441.5" y="291.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,297 samples, 0.40%)</title><rect x="441.5" y="275.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,297 samples, 0.40%)</title><rect x="441.5" y="259.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (1,297 samples, 0.40%)</title><rect x="441.5" y="243.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,297 samples, 0.40%)</title><rect x="441.5" y="227.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,297 samples, 0.40%)</title><rect x="441.5" y="211.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (446 samples, 0.14%)</title><rect x="441.5" y="195.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="444.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (446 samples, 0.14%)</title><rect x="441.5" y="179.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$170/25985558.get$Lambda (181 samples, 0.06%)</title><rect x="441.5" y="163.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$170 (171 samples, 0.05%)</title><rect x="441.5" y="147.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="444.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$171/33271481.get$Lambda (265 samples, 0.08%)</title><rect x="442.2" y="163.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="445.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$171 (254 samples, 0.08%)</title><rect x="442.2" y="147.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="445.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (284 samples, 0.09%)</title><rect x="443.2" y="195.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="446.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (555 samples, 0.17%)</title><rect x="444.2" y="195.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="447.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (555 samples, 0.17%)</title><rect x="444.2" y="179.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="447.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (358 samples, 0.11%)</title><rect x="444.2" y="163.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="447.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (184 samples, 0.06%)</title><rect x="445.6" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (171 samples, 0.05%)</title><rect x="445.6" y="147.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="448.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1,124 samples, 0.35%)</title><rect x="446.2" y="339.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.2" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (419 samples, 0.13%)</title><rect x="446.2" y="323.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="449.2" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (378 samples, 0.12%)</title><rect x="447.8" y="323.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="450.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (304 samples, 0.09%)</title><rect x="449.2" y="323.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.2" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (304 samples, 0.09%)</title><rect x="449.2" y="307.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.2" y="318.0"></text>
</g>
<g>
<title>byte[] (290 samples, 0.09%)</title><rect x="449.2" y="291.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="452.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (626 samples, 0.19%)</title><rect x="450.3" y="339.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (616 samples, 0.19%)</title><rect x="450.3" y="323.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="453.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (474 samples, 0.15%)</title><rect x="452.6" y="467.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (474 samples, 0.15%)</title><rect x="452.6" y="451.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (464 samples, 0.14%)</title><rect x="452.6" y="435.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="455.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (912 samples, 0.28%)</title><rect x="454.3" y="499.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (912 samples, 0.28%)</title><rect x="454.3" y="483.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (352 samples, 0.11%)</title><rect x="454.3" y="467.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="457.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (551 samples, 0.17%)</title><rect x="455.6" y="467.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (551 samples, 0.17%)</title><rect x="455.6" y="451.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (542 samples, 0.17%)</title><rect x="455.6" y="435.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="458.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (26,713 samples, 8.20%)</title><rect x="457.6" y="499.0" width="96.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.6" y="510.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (534 samples, 0.16%)</title><rect x="457.6" y="483.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (534 samples, 0.16%)</title><rect x="457.6" y="467.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/8874350.get$Lambda (176 samples, 0.05%)</title><rect x="457.6" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$163 (165 samples, 0.05%)</title><rect x="457.6" y="435.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="460.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$165/28758116.get$Lambda (358 samples, 0.11%)</title><rect x="458.2" y="451.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$165 (346 samples, 0.11%)</title><rect x="458.2" y="435.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="461.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (703 samples, 0.22%)</title><rect x="459.5" y="483.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (703 samples, 0.22%)</title><rect x="459.5" y="467.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$165/28758116.apply (445 samples, 0.14%)</title><rect x="459.5" y="451.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (445 samples, 0.14%)</title><rect x="459.5" y="435.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (445 samples, 0.14%)</title><rect x="459.5" y="419.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (432 samples, 0.13%)</title><rect x="459.5" y="403.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="462.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (258 samples, 0.08%)</title><rect x="461.2" y="451.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (258 samples, 0.08%)</title><rect x="461.2" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (247 samples, 0.08%)</title><rect x="461.2" y="419.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="464.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (483 samples, 0.15%)</title><rect x="462.1" y="483.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (483 samples, 0.15%)</title><rect x="462.1" y="467.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (483 samples, 0.15%)</title><rect x="462.1" y="451.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (483 samples, 0.15%)</title><rect x="462.1" y="435.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (471 samples, 0.14%)</title><rect x="462.1" y="419.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="465.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (24,993 samples, 7.67%)</title><rect x="463.8" y="483.0" width="90.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.8" y="494.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (202 samples, 0.06%)</title><rect x="463.8" y="467.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (202 samples, 0.06%)</title><rect x="463.8" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$140/25694846.get$Lambda (202 samples, 0.06%)</title><rect x="463.8" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$140 (197 samples, 0.06%)</title><rect x="463.8" y="419.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="466.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (23,270 samples, 7.15%)</title><rect x="464.6" y="467.0" width="84.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.6" y="478.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (23,270 samples, 7.15%)</title><rect x="464.6" y="451.0" width="84.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.6" y="462.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (22,847 samples, 7.02%)</title><rect x="464.6" y="435.0" width="82.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="467.6" y="446.0">java/util..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$140/25694846.apply (22,847 samples, 7.02%)</title><rect x="464.6" y="419.0" width="82.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.6" y="430.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (22,847 samples, 7.02%)</title><rect x="464.6" y="403.0" width="82.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.6" y="414.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (22,847 samples, 7.02%)</title><rect x="464.6" y="387.0" width="82.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.6" y="398.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (237 samples, 0.07%)</title><rect x="464.6" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (237 samples, 0.07%)</title><rect x="464.6" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$162/23286967.get$Lambda (237 samples, 0.07%)</title><rect x="464.6" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$162 (231 samples, 0.07%)</title><rect x="464.6" y="323.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="467.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (9,318 samples, 2.86%)</title><rect x="465.4" y="371.0" width="33.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.4" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (9,318 samples, 2.86%)</title><rect x="465.4" y="355.0" width="33.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.4" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (9,318 samples, 2.86%)</title><rect x="465.4" y="339.0" width="33.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.4" y="350.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$162/23286967.apply (9,056 samples, 2.78%)</title><rect x="465.4" y="323.0" width="32.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.4" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (9,056 samples, 2.78%)</title><rect x="465.4" y="307.0" width="32.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.4" y="318.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (9,056 samples, 2.78%)</title><rect x="465.4" y="291.0" width="32.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.4" y="302.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (9,056 samples, 2.78%)</title><rect x="465.4" y="275.0" width="32.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.4" y="286.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (5,730 samples, 1.76%)</title><rect x="465.4" y="259.0" width="20.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.4" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1,489 samples, 0.46%)</title><rect x="465.4" y="243.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.4" y="254.0"></text>
</g>
<g>
<title>java.lang.String (220 samples, 0.07%)</title><rect x="465.4" y="227.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="468.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (687 samples, 0.21%)</title><rect x="466.3" y="227.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.3" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (687 samples, 0.21%)</title><rect x="466.3" y="211.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.3" y="222.0"></text>
</g>
<g>
<title>byte[] (617 samples, 0.19%)</title><rect x="466.3" y="195.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="469.3" y="206.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.02%)</title><rect x="468.5" y="195.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="471.5" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (573 samples, 0.18%)</title><rect x="468.8" y="227.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.8" y="238.0"></text>
</g>
<g>
<title>byte[] (510 samples, 0.16%)</title><rect x="468.8" y="211.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="471.8" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (255 samples, 0.08%)</title><rect x="470.8" y="243.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.8" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (246 samples, 0.08%)</title><rect x="470.8" y="227.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="473.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2,946 samples, 0.90%)</title><rect x="471.8" y="243.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (312 samples, 0.10%)</title><rect x="471.8" y="227.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="474.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (1,904 samples, 0.58%)</title><rect x="472.9" y="227.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (1,904 samples, 0.58%)</title><rect x="472.9" y="211.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/4024442.linkToTargetMethod (1,238 samples, 0.38%)</title><rect x="472.9" y="195.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,238 samples, 0.38%)</title><rect x="472.9" y="179.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/12533877.get$Lambda (1,238 samples, 0.38%)</title><rect x="472.9" y="163.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="475.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$66 (1,209 samples, 0.37%)</title><rect x="472.9" y="147.0" width="4.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="475.9" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (666 samples, 0.20%)</title><rect x="477.4" y="195.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/12533877.run (666 samples, 0.20%)</title><rect x="477.4" y="179.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (666 samples, 0.20%)</title><rect x="477.4" y="163.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.4" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (666 samples, 0.20%)</title><rect x="477.4" y="147.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.4" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (666 samples, 0.20%)</title><rect x="477.4" y="131.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.4" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (650 samples, 0.20%)</title><rect x="477.4" y="115.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="480.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (727 samples, 0.22%)</title><rect x="479.8" y="227.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (727 samples, 0.22%)</title><rect x="479.8" y="211.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.8" y="222.0"></text>
</g>
<g>
<title>int[] (720 samples, 0.22%)</title><rect x="479.8" y="195.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="482.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1,040 samples, 0.32%)</title><rect x="482.4" y="243.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.4" y="254.0"></text>
</g>
<g>
<title>byte[] (548 samples, 0.17%)</title><rect x="482.4" y="227.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="485.4" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (484 samples, 0.15%)</title><rect x="484.4" y="227.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.4" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (484 samples, 0.15%)</title><rect x="484.4" y="211.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (477 samples, 0.15%)</title><rect x="484.4" y="195.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="487.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3,326 samples, 1.02%)</title><rect x="486.2" y="259.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="489.2" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (982 samples, 0.30%)</title><rect x="486.2" y="243.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="489.2" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (861 samples, 0.26%)</title><rect x="489.8" y="243.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.8" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (842 samples, 0.26%)</title><rect x="489.8" y="227.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="492.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,462 samples, 0.45%)</title><rect x="492.9" y="243.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.9" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,441 samples, 0.44%)</title><rect x="492.9" y="227.0" width="5.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="495.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (262 samples, 0.08%)</title><rect x="498.2" y="323.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (262 samples, 0.08%)</title><rect x="498.2" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (254 samples, 0.08%)</title><rect x="498.2" y="291.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="501.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (13,292 samples, 4.08%)</title><rect x="499.2" y="371.0" width="48.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.2" y="382.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (841 samples, 0.26%)</title><rect x="499.2" y="355.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="502.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (383 samples, 0.12%)</title><rect x="502.2" y="355.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="505.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (11,831 samples, 3.63%)</title><rect x="503.6" y="355.0" width="42.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.6" y="366.0">jdk/..</text>
</g>
<g>
<title>java.lang.Object (113 samples, 0.03%)</title><rect x="503.6" y="339.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="506.6" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (270 samples, 0.08%)</title><rect x="504.1" y="339.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="507.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (173 samples, 0.05%)</title><rect x="505.1" y="339.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="508.1" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (653 samples, 0.20%)</title><rect x="505.7" y="339.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (653 samples, 0.20%)</title><rect x="505.7" y="323.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (643 samples, 0.20%)</title><rect x="505.7" y="307.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="508.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (325 samples, 0.10%)</title><rect x="508.1" y="339.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (315 samples, 0.10%)</title><rect x="508.1" y="323.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="511.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (715 samples, 0.22%)</title><rect x="509.3" y="339.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="512.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (320 samples, 0.10%)</title><rect x="511.9" y="339.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="514.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (796 samples, 0.24%)</title><rect x="513.0" y="339.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="516.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (720 samples, 0.22%)</title><rect x="515.9" y="339.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="518.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (777 samples, 0.24%)</title><rect x="518.6" y="339.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="521.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3,468 samples, 1.06%)</title><rect x="521.4" y="339.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (213 samples, 0.07%)</title><rect x="521.4" y="323.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="524.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (140 samples, 0.04%)</title><rect x="522.2" y="323.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="525.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (175 samples, 0.05%)</title><rect x="522.8" y="323.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="525.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (148 samples, 0.05%)</title><rect x="523.4" y="323.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="526.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (253 samples, 0.08%)</title><rect x="524.0" y="323.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (253 samples, 0.08%)</title><rect x="524.0" y="307.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.get$Lambda (253 samples, 0.08%)</title><rect x="524.0" y="291.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$161 (243 samples, 0.07%)</title><rect x="524.0" y="275.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="527.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (232 samples, 0.07%)</title><rect x="524.9" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (224 samples, 0.07%)</title><rect x="524.9" y="307.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="527.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (339 samples, 0.10%)</title><rect x="525.8" y="323.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="528.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (344 samples, 0.11%)</title><rect x="527.0" y="323.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="530.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,569 samples, 0.48%)</title><rect x="528.3" y="323.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (248 samples, 0.08%)</title><rect x="528.3" y="307.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="531.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (522 samples, 0.16%)</title><rect x="529.2" y="307.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="532.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (94 samples, 0.03%)</title><rect x="531.2" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (84 samples, 0.03%)</title><rect x="531.2" y="291.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="534.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (686 samples, 0.21%)</title><rect x="531.5" y="307.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (287 samples, 0.09%)</title><rect x="531.5" y="291.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="534.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (183 samples, 0.06%)</title><rect x="532.6" y="291.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="535.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (185 samples, 0.06%)</title><rect x="533.3" y="291.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="536.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1,945 samples, 0.60%)</title><rect x="534.0" y="339.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (162 samples, 0.05%)</title><rect x="534.0" y="323.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="537.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (235 samples, 0.07%)</title><rect x="534.6" y="323.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="537.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (172 samples, 0.05%)</title><rect x="535.5" y="323.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="538.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (171 samples, 0.05%)</title><rect x="536.1" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (164 samples, 0.05%)</title><rect x="536.1" y="307.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="539.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,183 samples, 0.36%)</title><rect x="536.7" y="323.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (253 samples, 0.08%)</title><rect x="536.7" y="307.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="539.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (260 samples, 0.08%)</title><rect x="537.7" y="307.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="540.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (71 samples, 0.02%)</title><rect x="538.6" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="541.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (586 samples, 0.18%)</title><rect x="538.9" y="307.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="541.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (210 samples, 0.06%)</title><rect x="538.9" y="291.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="541.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (172 samples, 0.05%)</title><rect x="539.7" y="291.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="542.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (194 samples, 0.06%)</title><rect x="540.3" y="291.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="543.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (335 samples, 0.10%)</title><rect x="541.0" y="339.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (335 samples, 0.10%)</title><rect x="541.0" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (335 samples, 0.10%)</title><rect x="541.0" y="307.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.0" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (335 samples, 0.10%)</title><rect x="541.0" y="291.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.0" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (335 samples, 0.10%)</title><rect x="541.0" y="275.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (335 samples, 0.10%)</title><rect x="541.0" y="259.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (329 samples, 0.10%)</title><rect x="541.0" y="243.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="544.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1,175 samples, 0.36%)</title><rect x="542.2" y="339.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/4024442.linkToTargetMethod (258 samples, 0.08%)</title><rect x="542.2" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (258 samples, 0.08%)</title><rect x="542.2" y="307.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/6963423.get$Lambda (258 samples, 0.08%)</title><rect x="542.2" y="291.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$144 (253 samples, 0.08%)</title><rect x="542.2" y="275.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="545.2" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (917 samples, 0.28%)</title><rect x="543.2" y="323.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/6963423.run (917 samples, 0.28%)</title><rect x="543.2" y="307.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (917 samples, 0.28%)</title><rect x="543.2" y="291.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.2" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (227 samples, 0.07%)</title><rect x="543.2" y="275.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="546.2" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (684 samples, 0.21%)</title><rect x="544.0" y="275.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.0" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (364 samples, 0.11%)</title><rect x="544.0" y="259.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="547.0" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (314 samples, 0.10%)</title><rect x="545.4" y="259.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="548.4" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (314 samples, 0.10%)</title><rect x="545.4" y="243.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.4" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (314 samples, 0.10%)</title><rect x="545.4" y="227.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.4" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (314 samples, 0.10%)</title><rect x="545.4" y="211.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.4" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (307 samples, 0.09%)</title><rect x="545.4" y="195.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="548.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (237 samples, 0.07%)</title><rect x="546.5" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="549.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (230 samples, 0.07%)</title><rect x="546.5" y="339.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="549.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (423 samples, 0.13%)</title><rect x="547.4" y="435.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (423 samples, 0.13%)</title><rect x="547.4" y="419.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (416 samples, 0.13%)</title><rect x="547.4" y="403.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="550.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (289 samples, 0.09%)</title><rect x="548.9" y="467.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (289 samples, 0.09%)</title><rect x="548.9" y="451.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (289 samples, 0.09%)</title><rect x="548.9" y="435.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (289 samples, 0.09%)</title><rect x="548.9" y="419.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (278 samples, 0.09%)</title><rect x="548.9" y="403.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="551.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1,232 samples, 0.38%)</title><rect x="549.9" y="467.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (917 samples, 0.28%)</title><rect x="549.9" y="451.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (917 samples, 0.28%)</title><rect x="549.9" y="435.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/24430281.linkToTargetMethod (917 samples, 0.28%)</title><rect x="549.9" y="419.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22860378.invoke (917 samples, 0.28%)</title><rect x="549.9" y="403.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/32983193.invoke (917 samples, 0.28%)</title><rect x="549.9" y="387.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (917 samples, 0.28%)</title><rect x="549.9" y="371.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (348 samples, 0.11%)</title><rect x="549.9" y="355.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (341 samples, 0.10%)</title><rect x="549.9" y="339.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="552.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (569 samples, 0.17%)</title><rect x="551.2" y="355.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (569 samples, 0.17%)</title><rect x="551.2" y="339.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.2" y="350.0"></text>
</g>
<g>
<title>byte[] (560 samples, 0.17%)</title><rect x="551.2" y="323.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="554.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (315 samples, 0.10%)</title><rect x="553.3" y="451.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (310 samples, 0.10%)</title><rect x="553.3" y="435.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="556.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (732 samples, 0.22%)</title><rect x="554.4" y="547.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (732 samples, 0.22%)</title><rect x="554.4" y="531.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (732 samples, 0.22%)</title><rect x="554.4" y="515.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.4" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (727 samples, 0.22%)</title><rect x="554.4" y="499.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="557.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1,924 samples, 0.59%)</title><rect x="557.1" y="547.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (857 samples, 0.26%)</title><rect x="557.1" y="531.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="560.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (1,064 samples, 0.33%)</title><rect x="560.2" y="531.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (1,064 samples, 0.33%)</title><rect x="560.2" y="515.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (509 samples, 0.16%)</title><rect x="560.2" y="499.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.2" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (509 samples, 0.16%)</title><rect x="560.2" y="483.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (509 samples, 0.16%)</title><rect x="560.2" y="467.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (509 samples, 0.16%)</title><rect x="560.2" y="451.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.2" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (506 samples, 0.16%)</title><rect x="560.2" y="435.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="563.2" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (555 samples, 0.17%)</title><rect x="562.0" y="499.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.0" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (555 samples, 0.17%)</title><rect x="562.0" y="483.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.0" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (555 samples, 0.17%)</title><rect x="562.0" y="467.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.0" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (555 samples, 0.17%)</title><rect x="562.0" y="451.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.0" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (555 samples, 0.17%)</title><rect x="562.0" y="435.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.0" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (555 samples, 0.17%)</title><rect x="562.0" y="419.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.0" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (555 samples, 0.17%)</title><rect x="562.0" y="403.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.0" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (555 samples, 0.17%)</title><rect x="562.0" y="387.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.0" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (552 samples, 0.17%)</title><rect x="562.0" y="371.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="565.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,753 samples, 1.15%)</title><rect x="564.2" y="643.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (529 samples, 0.16%)</title><rect x="564.2" y="627.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (529 samples, 0.16%)</title><rect x="564.2" y="611.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (529 samples, 0.16%)</title><rect x="564.2" y="595.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (522 samples, 0.16%)</title><rect x="564.2" y="579.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="567.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (3,224 samples, 0.99%)</title><rect x="566.1" y="627.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (3,224 samples, 0.99%)</title><rect x="566.1" y="611.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3,224 samples, 0.99%)</title><rect x="566.1" y="595.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (3,199 samples, 0.98%)</title><rect x="566.1" y="579.0" width="11.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="569.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$196/11651460.run (7,951 samples, 2.44%)</title><rect x="577.8" y="643.0" width="28.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.8" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (7,951 samples, 2.44%)</title><rect x="577.8" y="627.0" width="28.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.8" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (7,951 samples, 2.44%)</title><rect x="577.8" y="611.0" width="28.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.8" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (7,951 samples, 2.44%)</title><rect x="577.8" y="595.0" width="28.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.8" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7,951 samples, 2.44%)</title><rect x="577.8" y="579.0" width="28.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.8" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7,951 samples, 2.44%)</title><rect x="577.8" y="563.0" width="28.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.8" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7,951 samples, 2.44%)</title><rect x="577.8" y="547.0" width="28.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.8" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7,951 samples, 2.44%)</title><rect x="577.8" y="531.0" width="28.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.8" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7,951 samples, 2.44%)</title><rect x="577.8" y="515.0" width="28.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.8" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7,951 samples, 2.44%)</title><rect x="577.8" y="499.0" width="28.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.8" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (7,951 samples, 2.44%)</title><rect x="577.8" y="483.0" width="28.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.8" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (7,448 samples, 2.29%)</title><rect x="577.8" y="467.0" width="27.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.8" y="478.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,592 samples, 0.49%)</title><rect x="577.8" y="451.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,592 samples, 0.49%)</title><rect x="577.8" y="435.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$199/1566432.get$Lambda (1,329 samples, 0.41%)</title><rect x="577.8" y="419.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$199 (1,327 samples, 0.41%)</title><rect x="577.8" y="403.0" width="4.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="580.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$204/20864052.get$Lambda (263 samples, 0.08%)</title><rect x="582.6" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$204 (259 samples, 0.08%)</title><rect x="582.6" y="403.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="585.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (5,856 samples, 1.80%)</title><rect x="583.6" y="451.0" width="21.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.6" y="462.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (701 samples, 0.22%)</title><rect x="583.6" y="435.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="586.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5,151 samples, 1.58%)</title><rect x="586.2" y="435.0" width="18.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5,151 samples, 1.58%)</title><rect x="586.2" y="419.0" width="18.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="589.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,151 samples, 1.58%)</title><rect x="586.2" y="403.0" width="18.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="589.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,831 samples, 0.56%)</title><rect x="586.2" y="387.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (716 samples, 0.22%)</title><rect x="586.2" y="371.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="589.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/20700430.apply (924 samples, 0.28%)</title><rect x="588.8" y="371.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (924 samples, 0.28%)</title><rect x="588.8" y="355.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (924 samples, 0.28%)</title><rect x="588.8" y="339.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (224 samples, 0.07%)</title><rect x="588.8" y="323.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.8" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (224 samples, 0.07%)</title><rect x="588.8" y="307.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.8" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (222 samples, 0.07%)</title><rect x="588.8" y="291.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="591.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (700 samples, 0.21%)</title><rect x="589.6" y="323.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (179 samples, 0.05%)</title><rect x="589.6" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="592.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (179 samples, 0.05%)</title><rect x="589.6" y="291.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$206/5014188.get$Lambda (179 samples, 0.05%)</title><rect x="589.6" y="275.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$206 (176 samples, 0.05%)</title><rect x="589.6" y="259.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="592.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (521 samples, 0.16%)</title><rect x="590.2" y="307.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (521 samples, 0.16%)</title><rect x="590.2" y="291.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (290 samples, 0.09%)</title><rect x="590.2" y="275.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="593.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (225 samples, 0.07%)</title><rect x="591.3" y="275.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (225 samples, 0.07%)</title><rect x="591.3" y="259.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (222 samples, 0.07%)</title><rect x="591.3" y="243.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="594.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/33260527.apply (183 samples, 0.06%)</title><rect x="592.1" y="371.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (183 samples, 0.06%)</title><rect x="592.1" y="355.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (174 samples, 0.05%)</title><rect x="592.2" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (168 samples, 0.05%)</title><rect x="592.2" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (165 samples, 0.05%)</title><rect x="592.2" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (144 samples, 0.04%)</title><rect x="592.3" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/10621704.run (144 samples, 0.04%)</title><rect x="592.3" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (144 samples, 0.04%)</title><rect x="592.3" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (96 samples, 0.03%)</title><rect x="592.4" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (96 samples, 0.03%)</title><rect x="592.4" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (95 samples, 0.03%)</title><rect x="592.4" y="211.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (95 samples, 0.03%)</title><rect x="592.4" y="195.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (95 samples, 0.03%)</title><rect x="592.4" y="179.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (91 samples, 0.03%)</title><rect x="592.4" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="595.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (91 samples, 0.03%)</title><rect x="592.4" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (91 samples, 0.03%)</title><rect x="592.4" y="131.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (87 samples, 0.03%)</title><rect x="592.4" y="115.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.4" y="126.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (87 samples, 0.03%)</title><rect x="592.4" y="99.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.4" y="110.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (87 samples, 0.03%)</title><rect x="592.4" y="83.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.4" y="94.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (87 samples, 0.03%)</title><rect x="592.4" y="67.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="595.4" y="78.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (87 samples, 0.03%)</title><rect x="592.4" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.4" y="62.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (87 samples, 0.03%)</title><rect x="592.4" y="35.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.4" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3,292 samples, 1.01%)</title><rect x="592.8" y="387.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,292 samples, 1.01%)</title><rect x="592.8" y="371.0" width="11.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/10502657.apply (3,292 samples, 1.01%)</title><rect x="592.8" y="355.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3,292 samples, 1.01%)</title><rect x="592.8" y="339.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3,292 samples, 1.01%)</title><rect x="592.8" y="323.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/10627322.apply (3,292 samples, 1.01%)</title><rect x="592.8" y="307.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3,292 samples, 1.01%)</title><rect x="592.8" y="291.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (222 samples, 0.07%)</title><rect x="592.8" y="275.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (222 samples, 0.07%)</title><rect x="592.8" y="259.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/20700430.get$Lambda (222 samples, 0.07%)</title><rect x="592.8" y="243.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$200 (219 samples, 0.07%)</title><rect x="592.8" y="227.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="595.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (827 samples, 0.25%)</title><rect x="593.6" y="275.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (827 samples, 0.25%)</title><rect x="593.6" y="259.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (408 samples, 0.13%)</title><rect x="593.6" y="243.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="596.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (415 samples, 0.13%)</title><rect x="595.1" y="243.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (415 samples, 0.13%)</title><rect x="595.1" y="227.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (411 samples, 0.13%)</title><rect x="595.1" y="211.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="598.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (881 samples, 0.27%)</title><rect x="596.6" y="275.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (171 samples, 0.05%)</title><rect x="596.6" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (171 samples, 0.05%)</title><rect x="596.6" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/9963887.get$Lambda (171 samples, 0.05%)</title><rect x="596.6" y="227.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$201 (167 samples, 0.05%)</title><rect x="596.6" y="211.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="599.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (710 samples, 0.22%)</title><rect x="597.2" y="259.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (710 samples, 0.22%)</title><rect x="597.2" y="243.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (465 samples, 0.14%)</title><rect x="597.2" y="227.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="600.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (240 samples, 0.07%)</title><rect x="598.9" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (240 samples, 0.07%)</title><rect x="598.9" y="211.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (237 samples, 0.07%)</title><rect x="598.9" y="195.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="601.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1,362 samples, 0.42%)</title><rect x="599.8" y="275.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (833 samples, 0.26%)</title><rect x="599.8" y="259.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (419 samples, 0.13%)</title><rect x="599.8" y="243.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="602.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (412 samples, 0.13%)</title><rect x="601.3" y="243.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (412 samples, 0.13%)</title><rect x="601.3" y="227.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (410 samples, 0.13%)</title><rect x="601.3" y="211.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="604.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (529 samples, 0.16%)</title><rect x="602.8" y="259.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (224 samples, 0.07%)</title><rect x="602.8" y="243.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="605.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (302 samples, 0.09%)</title><rect x="603.6" y="243.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (302 samples, 0.09%)</title><rect x="603.6" y="227.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (302 samples, 0.09%)</title><rect x="603.6" y="211.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (302 samples, 0.09%)</title><rect x="603.6" y="195.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (302 samples, 0.09%)</title><rect x="603.6" y="179.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (299 samples, 0.09%)</title><rect x="603.6" y="163.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="606.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (503 samples, 0.15%)</title><rect x="604.8" y="467.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (503 samples, 0.15%)</title><rect x="604.8" y="451.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (503 samples, 0.15%)</title><rect x="604.8" y="435.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (503 samples, 0.15%)</title><rect x="604.8" y="419.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (503 samples, 0.15%)</title><rect x="604.8" y="403.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.8" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (501 samples, 0.15%)</title><rect x="604.8" y="387.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.8" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (198 samples, 0.06%)</title><rect x="604.8" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.8" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (195 samples, 0.06%)</title><rect x="604.8" y="355.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="607.8" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (303 samples, 0.09%)</title><rect x="605.5" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.5" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (299 samples, 0.09%)</title><rect x="605.5" y="355.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="608.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (62,338 samples, 19.14%)</title><rect x="606.6" y="643.0" width="225.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.6" y="654.0">jdk/internal/net/http/common/S..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (62,338 samples, 19.14%)</title><rect x="606.6" y="627.0" width="225.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.6" y="638.0">jdk/internal/net/http/common/S..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (43,269 samples, 13.29%)</title><rect x="606.6" y="611.0" width="156.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.6" y="622.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (43,269 samples, 13.29%)</title><rect x="606.6" y="595.0" width="156.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.6" y="606.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (43,269 samples, 13.29%)</title><rect x="606.6" y="579.0" width="156.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.6" y="590.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (980 samples, 0.30%)</title><rect x="606.6" y="563.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (980 samples, 0.30%)</title><rect x="606.6" y="547.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (980 samples, 0.30%)</title><rect x="606.6" y="531.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (980 samples, 0.30%)</title><rect x="606.6" y="515.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/31242245.linkToTargetMethod (396 samples, 0.12%)</title><rect x="606.6" y="499.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/987179.invoke (396 samples, 0.12%)</title><rect x="606.6" y="483.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (396 samples, 0.12%)</title><rect x="606.6" y="467.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (396 samples, 0.12%)</title><rect x="606.6" y="451.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (396 samples, 0.12%)</title><rect x="606.6" y="435.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.6" y="446.0"></text>
</g>
<g>
<title>byte[] (390 samples, 0.12%)</title><rect x="606.6" y="419.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="609.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (584 samples, 0.18%)</title><rect x="608.1" y="499.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (584 samples, 0.18%)</title><rect x="608.1" y="483.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (584 samples, 0.18%)</title><rect x="608.1" y="467.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="611.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197/13890655.get$Lambda (584 samples, 0.18%)</title><rect x="608.1" y="451.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197 (578 samples, 0.18%)</title><rect x="608.1" y="435.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="611.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (42,289 samples, 12.99%)</title><rect x="610.2" y="563.0" width="153.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.2" y="574.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (42,289 samples, 12.99%)</title><rect x="610.2" y="547.0" width="153.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.2" y="558.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (42,289 samples, 12.99%)</title><rect x="610.2" y="531.0" width="153.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.2" y="542.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (42,289 samples, 12.99%)</title><rect x="610.2" y="515.0" width="153.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.2" y="526.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (20,658 samples, 6.34%)</title><rect x="610.2" y="499.0" width="74.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.2" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (20,658 samples, 6.34%)</title><rect x="610.2" y="483.0" width="74.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.2" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (20,658 samples, 6.34%)</title><rect x="610.2" y="467.0" width="74.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.2" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (20,658 samples, 6.34%)</title><rect x="610.2" y="451.0" width="74.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.2" y="462.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20,658 samples, 6.34%)</title><rect x="610.2" y="435.0" width="74.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.2" y="446.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (20,658 samples, 6.34%)</title><rect x="610.2" y="419.0" width="74.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.2" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (20,658 samples, 6.34%)</title><rect x="610.2" y="403.0" width="74.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.2" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (19,852 samples, 6.10%)</title><rect x="610.2" y="387.0" width="71.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="613.2" y="398.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19,852 samples, 6.10%)</title><rect x="610.2" y="371.0" width="71.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.2" y="382.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (19,555 samples, 6.00%)</title><rect x="610.2" y="355.0" width="70.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.2" y="366.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (386 samples, 0.12%)</title><rect x="610.2" y="339.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="613.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/9963887.apply (433 samples, 0.13%)</title><rect x="611.6" y="339.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (433 samples, 0.13%)</title><rect x="611.6" y="323.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (433 samples, 0.13%)</title><rect x="611.6" y="307.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (433 samples, 0.13%)</title><rect x="611.6" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (417 samples, 0.13%)</title><rect x="611.6" y="275.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="614.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/33260527.apply (17,815 samples, 5.47%)</title><rect x="613.2" y="339.0" width="64.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.2" y="350.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (17,815 samples, 5.47%)</title><rect x="613.2" y="323.0" width="64.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.2" y="334.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (403 samples, 0.12%)</title><rect x="613.2" y="307.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (403 samples, 0.12%)</title><rect x="613.2" y="291.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="616.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$230/28785153.get$Lambda (403 samples, 0.12%)</title><rect x="613.2" y="275.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$230 (392 samples, 0.12%)</title><rect x="613.2" y="259.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="616.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (989 samples, 0.30%)</title><rect x="614.7" y="307.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (989 samples, 0.30%)</title><rect x="614.7" y="291.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (537 samples, 0.16%)</title><rect x="614.7" y="275.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="617.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (441 samples, 0.14%)</title><rect x="616.6" y="275.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (441 samples, 0.14%)</title><rect x="616.6" y="259.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="619.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (431 samples, 0.13%)</title><rect x="616.6" y="243.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="619.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (16,423 samples, 5.04%)</title><rect x="618.2" y="307.0" width="59.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.2" y="318.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (162 samples, 0.05%)</title><rect x="618.2" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (162 samples, 0.05%)</title><rect x="618.2" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$228/32211625.get$Lambda (162 samples, 0.05%)</title><rect x="618.2" y="259.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$228 (152 samples, 0.05%)</title><rect x="618.2" y="243.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="621.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (880 samples, 0.27%)</title><rect x="618.8" y="291.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (880 samples, 0.27%)</title><rect x="618.8" y="275.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (389 samples, 0.12%)</title><rect x="618.8" y="259.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="621.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (480 samples, 0.15%)</title><rect x="620.3" y="259.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (480 samples, 0.15%)</title><rect x="620.3" y="243.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (470 samples, 0.14%)</title><rect x="620.3" y="227.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="623.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (15,381 samples, 4.72%)</title><rect x="622.0" y="291.0" width="55.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.0" y="302.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$113/18506235.apply (883 samples, 0.27%)</title><rect x="622.0" y="275.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (883 samples, 0.27%)</title><rect x="622.0" y="259.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (883 samples, 0.27%)</title><rect x="622.0" y="243.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (317 samples, 0.10%)</title><rect x="622.0" y="227.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="625.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (554 samples, 0.17%)</title><rect x="623.2" y="227.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.2" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (251 samples, 0.08%)</title><rect x="623.2" y="211.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="626.2" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (287 samples, 0.09%)</title><rect x="624.1" y="211.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="627.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (14,498 samples, 4.45%)</title><rect x="625.2" y="275.0" width="52.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.2" y="286.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (349 samples, 0.11%)</title><rect x="625.2" y="259.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (349 samples, 0.11%)</title><rect x="625.2" y="243.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/27658891.get$Lambda (174 samples, 0.05%)</title><rect x="625.2" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$224 (163 samples, 0.05%)</title><rect x="625.2" y="211.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="628.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$226/19484360.get$Lambda (175 samples, 0.05%)</title><rect x="625.8" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$226 (166 samples, 0.05%)</title><rect x="625.8" y="211.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="628.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/4191488.linkToTargetMethod (469 samples, 0.14%)</title><rect x="626.5" y="259.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/19430543.invokeStatic (469 samples, 0.14%)</title><rect x="626.5" y="243.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/10621704.get$Lambda (469 samples, 0.14%)</title><rect x="626.5" y="227.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$216 (455 samples, 0.14%)</title><rect x="626.5" y="211.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="629.5" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2,712 samples, 0.83%)</title><rect x="628.2" y="259.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.2" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,147 samples, 0.35%)</title><rect x="628.2" y="243.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.2" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (505 samples, 0.16%)</title><rect x="628.2" y="227.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.2" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (492 samples, 0.15%)</title><rect x="628.2" y="211.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="631.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (642 samples, 0.20%)</title><rect x="630.0" y="227.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.0" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (629 samples, 0.19%)</title><rect x="630.0" y="211.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="633.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (809 samples, 0.25%)</title><rect x="632.3" y="243.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (809 samples, 0.25%)</title><rect x="632.3" y="227.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (809 samples, 0.25%)</title><rect x="632.3" y="211.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (202 samples, 0.06%)</title><rect x="632.3" y="195.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (202 samples, 0.06%)</title><rect x="632.3" y="179.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (202 samples, 0.06%)</title><rect x="632.3" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.3" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (189 samples, 0.06%)</title><rect x="632.3" y="147.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="635.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$213/32572125.get (260 samples, 0.08%)</title><rect x="633.1" y="195.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.1" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (248 samples, 0.08%)</title><rect x="633.1" y="179.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="636.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (347 samples, 0.11%)</title><rect x="634.0" y="195.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (347 samples, 0.11%)</title><rect x="634.0" y="179.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.0" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (347 samples, 0.11%)</title><rect x="634.0" y="163.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.0" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (334 samples, 0.10%)</title><rect x="634.0" y="147.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="637.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (756 samples, 0.23%)</title><rect x="635.3" y="243.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (700 samples, 0.21%)</title><rect x="635.3" y="227.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="638.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,775 samples, 0.55%)</title><rect x="638.0" y="259.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (867 samples, 0.27%)</title><rect x="638.0" y="243.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (627 samples, 0.19%)</title><rect x="638.0" y="227.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="641.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (229 samples, 0.07%)</title><rect x="640.3" y="227.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (229 samples, 0.07%)</title><rect x="640.3" y="211.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (218 samples, 0.07%)</title><rect x="640.3" y="195.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="643.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (908 samples, 0.28%)</title><rect x="641.1" y="243.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (908 samples, 0.28%)</title><rect x="641.1" y="227.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (552 samples, 0.17%)</title><rect x="641.1" y="211.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="644.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (347 samples, 0.11%)</title><rect x="643.2" y="211.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (347 samples, 0.11%)</title><rect x="643.2" y="195.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.2" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (334 samples, 0.10%)</title><rect x="643.2" y="179.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="646.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (523 samples, 0.16%)</title><rect x="644.4" y="259.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="647.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (365 samples, 0.11%)</title><rect x="646.4" y="259.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="649.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (342 samples, 0.11%)</title><rect x="647.7" y="259.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="650.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (254 samples, 0.08%)</title><rect x="649.0" y="259.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (244 samples, 0.07%)</title><rect x="649.0" y="243.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="652.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7,676 samples, 2.36%)</title><rect x="649.9" y="259.0" width="27.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.9" y="270.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/10621704.run (7,676 samples, 2.36%)</title><rect x="649.9" y="243.0" width="27.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.9" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (7,676 samples, 2.36%)</title><rect x="649.9" y="227.0" width="27.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.9" y="238.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,142 samples, 0.35%)</title><rect x="649.9" y="211.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,142 samples, 0.35%)</title><rect x="649.9" y="195.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/16991611.get$Lambda (234 samples, 0.07%)</title><rect x="649.9" y="179.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$217 (219 samples, 0.07%)</title><rect x="649.9" y="163.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="652.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/1920882.get$Lambda (294 samples, 0.09%)</title><rect x="650.8" y="179.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$219 (278 samples, 0.09%)</title><rect x="650.8" y="163.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="653.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/20534699.get$Lambda (614 samples, 0.19%)</title><rect x="651.8" y="179.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$222 (602 samples, 0.18%)</title><rect x="651.8" y="163.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="654.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (827 samples, 0.25%)</title><rect x="654.1" y="211.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (827 samples, 0.25%)</title><rect x="654.1" y="195.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="657.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (350 samples, 0.11%)</title><rect x="654.1" y="179.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="657.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (464 samples, 0.14%)</title><rect x="655.4" y="179.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (464 samples, 0.14%)</title><rect x="655.4" y="163.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.4" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (452 samples, 0.14%)</title><rect x="655.4" y="147.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="658.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (587 samples, 0.18%)</title><rect x="657.1" y="211.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="660.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (370 samples, 0.11%)</title><rect x="659.3" y="211.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (358 samples, 0.11%)</title><rect x="659.3" y="195.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="662.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (772 samples, 0.24%)</title><rect x="660.6" y="211.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="663.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (772 samples, 0.24%)</title><rect x="660.6" y="195.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (232 samples, 0.07%)</title><rect x="660.6" y="179.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (232 samples, 0.07%)</title><rect x="660.6" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$223/21000255.get$Lambda (232 samples, 0.07%)</title><rect x="660.6" y="147.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$223 (222 samples, 0.07%)</title><rect x="660.6" y="131.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="663.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (535 samples, 0.16%)</title><rect x="661.5" y="179.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (535 samples, 0.16%)</title><rect x="661.5" y="163.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (535 samples, 0.16%)</title><rect x="661.5" y="147.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (292 samples, 0.09%)</title><rect x="661.5" y="131.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="664.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (231 samples, 0.07%)</title><rect x="662.6" y="131.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (231 samples, 0.07%)</title><rect x="662.6" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.6" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (220 samples, 0.07%)</title><rect x="662.6" y="99.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="665.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1,354 samples, 0.42%)</title><rect x="663.4" y="211.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,354 samples, 0.42%)</title><rect x="663.4" y="195.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/10735952.invoke (1,354 samples, 0.42%)</title><rect x="663.4" y="179.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,354 samples, 0.42%)</title><rect x="663.4" y="163.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.4" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (467 samples, 0.14%)</title><rect x="663.4" y="147.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (451 samples, 0.14%)</title><rect x="663.4" y="131.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="666.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (887 samples, 0.27%)</title><rect x="665.1" y="147.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (887 samples, 0.27%)</title><rect x="665.1" y="131.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="668.1" y="142.0"></text>
</g>
<g>
<title>byte[] (782 samples, 0.24%)</title><rect x="665.1" y="115.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="668.1" y="126.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.03%)</title><rect x="667.9" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="670.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2,608 samples, 0.80%)</title><rect x="668.3" y="211.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (782 samples, 0.24%)</title><rect x="668.3" y="195.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="671.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1,811 samples, 0.56%)</title><rect x="671.2" y="195.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,811 samples, 0.56%)</title><rect x="671.2" y="179.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="674.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/10735952.invoke (1,811 samples, 0.56%)</title><rect x="671.2" y="163.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,811 samples, 0.56%)</title><rect x="671.2" y="147.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (444 samples, 0.14%)</title><rect x="671.2" y="131.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="674.2" y="142.0"></text>
</g>
<g>
<title>java.lang.String (432 samples, 0.13%)</title><rect x="671.2" y="115.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="674.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,367 samples, 0.42%)</title><rect x="672.8" y="131.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,367 samples, 0.42%)</title><rect x="672.8" y="115.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.8" y="126.0"></text>
</g>
<g>
<title>byte[] (872 samples, 0.27%)</title><rect x="672.8" y="99.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="675.8" y="110.0"></text>
</g>
<g>
<title>byte[] (495 samples, 0.15%)</title><rect x="676.0" y="99.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="679.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/21539894.apply (910 samples, 0.28%)</title><rect x="677.7" y="339.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (910 samples, 0.28%)</title><rect x="677.7" y="323.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (449 samples, 0.14%)</title><rect x="677.7" y="307.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.7" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (449 samples, 0.14%)</title><rect x="677.7" y="291.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.7" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (449 samples, 0.14%)</title><rect x="677.7" y="275.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.7" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (436 samples, 0.13%)</title><rect x="677.7" y="259.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="680.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (461 samples, 0.14%)</title><rect x="679.4" y="307.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (449 samples, 0.14%)</title><rect x="679.4" y="291.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="682.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (297 samples, 0.09%)</title><rect x="681.0" y="355.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (297 samples, 0.09%)</title><rect x="681.0" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$186/6790542.apply (297 samples, 0.09%)</title><rect x="681.0" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (297 samples, 0.09%)</title><rect x="681.0" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (297 samples, 0.09%)</title><rect x="681.0" y="291.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (285 samples, 0.09%)</title><rect x="681.0" y="275.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="684.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$206/5014188.apply (806 samples, 0.25%)</title><rect x="682.1" y="387.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (806 samples, 0.25%)</title><rect x="682.1" y="371.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (792 samples, 0.24%)</title><rect x="682.1" y="355.0" width="2.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="685.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (21,631 samples, 6.64%)</title><rect x="685.0" y="499.0" width="78.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.0" y="510.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1,271 samples, 0.39%)</title><rect x="685.0" y="483.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,271 samples, 0.39%)</title><rect x="685.0" y="467.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,271 samples, 0.39%)</title><rect x="685.0" y="451.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.0" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,271 samples, 0.39%)</title><rect x="685.0" y="435.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,271 samples, 0.39%)</title><rect x="685.0" y="419.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.0" y="430.0"></text>
</g>
<g>
<title>byte[] (1,261 samples, 0.39%)</title><rect x="685.0" y="403.0" width="4.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="688.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (148 samples, 0.05%)</title><rect x="689.6" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (148 samples, 0.05%)</title><rect x="689.6" y="467.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (148 samples, 0.05%)</title><rect x="689.6" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.6" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (148 samples, 0.05%)</title><rect x="689.6" y="435.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (148 samples, 0.05%)</title><rect x="689.6" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.6" y="430.0"></text>
</g>
<g>
<title>byte[] (147 samples, 0.05%)</title><rect x="689.6" y="403.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="692.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1,916 samples, 0.59%)</title><rect x="690.2" y="483.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.2" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (284 samples, 0.09%)</title><rect x="690.2" y="467.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="693.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (214 samples, 0.07%)</title><rect x="691.2" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (214 samples, 0.07%)</title><rect x="691.2" y="451.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.2" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (214 samples, 0.07%)</title><rect x="691.2" y="435.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.2" y="446.0"></text>
</g>
<g>
<title>byte[] (210 samples, 0.06%)</title><rect x="691.2" y="419.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="694.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (515 samples, 0.16%)</title><rect x="692.0" y="467.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (515 samples, 0.16%)</title><rect x="692.0" y="451.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.0" y="462.0"></text>
</g>
<g>
<title>byte[] (512 samples, 0.16%)</title><rect x="692.0" y="435.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="695.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (900 samples, 0.28%)</title><rect x="693.9" y="467.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (900 samples, 0.28%)</title><rect x="693.9" y="451.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (447 samples, 0.14%)</title><rect x="693.9" y="435.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="696.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (451 samples, 0.14%)</title><rect x="695.5" y="435.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.5" y="446.0"></text>
</g>
<g>
<title>byte[] (448 samples, 0.14%)</title><rect x="695.5" y="419.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="698.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (6,335 samples, 1.95%)</title><rect x="697.1" y="483.0" width="23.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.1" y="494.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6,335 samples, 1.95%)</title><rect x="697.1" y="467.0" width="23.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.1" y="478.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6,335 samples, 1.95%)</title><rect x="697.1" y="451.0" width="23.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.1" y="462.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (475 samples, 0.15%)</title><rect x="697.1" y="435.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="700.1" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (254 samples, 0.08%)</title><rect x="698.9" y="435.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="701.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (509 samples, 0.16%)</title><rect x="699.9" y="435.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="702.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (241 samples, 0.07%)</title><rect x="701.7" y="435.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="704.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (266 samples, 0.08%)</title><rect x="702.6" y="435.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (266 samples, 0.08%)</title><rect x="702.6" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.6" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.get$Lambda (266 samples, 0.08%)</title><rect x="702.6" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.6" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$109 (255 samples, 0.08%)</title><rect x="702.6" y="387.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="705.6" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (352 samples, 0.11%)</title><rect x="703.6" y="435.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.6" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (338 samples, 0.10%)</title><rect x="703.6" y="419.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="706.6" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3,640 samples, 1.12%)</title><rect x="704.9" y="435.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (3,640 samples, 1.12%)</title><rect x="704.9" y="419.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,640 samples, 1.12%)</title><rect x="704.9" y="403.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (837 samples, 0.26%)</title><rect x="704.9" y="387.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (837 samples, 0.26%)</title><rect x="704.9" y="371.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.get$Lambda (837 samples, 0.26%)</title><rect x="704.9" y="355.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.9" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (817 samples, 0.25%)</title><rect x="704.9" y="339.0" width="2.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="707.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (733 samples, 0.23%)</title><rect x="707.9" y="387.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (733 samples, 0.23%)</title><rect x="707.9" y="371.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (733 samples, 0.23%)</title><rect x="707.9" y="355.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (733 samples, 0.23%)</title><rect x="707.9" y="339.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (733 samples, 0.23%)</title><rect x="707.9" y="323.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (733 samples, 0.23%)</title><rect x="707.9" y="307.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (733 samples, 0.23%)</title><rect x="707.9" y="291.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (733 samples, 0.23%)</title><rect x="707.9" y="275.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (690 samples, 0.21%)</title><rect x="707.9" y="259.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="710.9" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (995 samples, 0.31%)</title><rect x="710.6" y="387.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.6" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (995 samples, 0.31%)</title><rect x="710.6" y="371.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (479 samples, 0.15%)</title><rect x="710.6" y="355.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.6" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (479 samples, 0.15%)</title><rect x="710.6" y="339.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (458 samples, 0.14%)</title><rect x="710.6" y="323.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="713.6" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (516 samples, 0.16%)</title><rect x="712.3" y="355.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.3" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (496 samples, 0.15%)</title><rect x="712.3" y="339.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="715.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,075 samples, 0.33%)</title><rect x="714.2" y="387.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.2" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,050 samples, 0.32%)</title><rect x="714.2" y="371.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="717.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (554 samples, 0.17%)</title><rect x="718.1" y="435.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (542 samples, 0.17%)</title><rect x="718.1" y="419.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="721.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (11,961 samples, 3.67%)</title><rect x="720.1" y="483.0" width="43.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.1" y="494.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (730 samples, 0.22%)</title><rect x="720.1" y="467.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="723.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,035 samples, 0.32%)</title><rect x="722.8" y="467.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,035 samples, 0.32%)</title><rect x="722.8" y="451.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.8" y="462.0"></text>
</g>
<g>
<title>byte[] (1,022 samples, 0.31%)</title><rect x="722.8" y="435.0" width="3.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="725.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,544 samples, 0.47%)</title><rect x="726.5" y="467.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,544 samples, 0.47%)</title><rect x="726.5" y="451.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (556 samples, 0.17%)</title><rect x="726.5" y="435.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="729.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (981 samples, 0.30%)</title><rect x="728.6" y="435.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.6" y="446.0"></text>
</g>
<g>
<title>byte[] (972 samples, 0.30%)</title><rect x="728.6" y="419.0" width="3.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="731.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (8,642 samples, 2.65%)</title><rect x="732.1" y="467.0" width="31.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.1" y="478.0">jd..</text>
</g>
<g>
<title>java/lang/String.substring (2,527 samples, 0.78%)</title><rect x="732.1" y="451.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="735.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,527 samples, 0.78%)</title><rect x="732.1" y="435.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,263 samples, 0.39%)</title><rect x="732.1" y="419.0" width="4.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="735.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,237 samples, 0.38%)</title><rect x="736.8" y="419.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.8" y="430.0"></text>
</g>
<g>
<title>byte[] (1,213 samples, 0.37%)</title><rect x="736.8" y="403.0" width="4.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="739.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1,108 samples, 0.34%)</title><rect x="741.3" y="451.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="744.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1,108 samples, 0.34%)</title><rect x="741.3" y="435.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.3" y="446.0"></text>
</g>
<g>
<title>byte[] (594 samples, 0.18%)</title><rect x="741.3" y="419.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="744.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (488 samples, 0.15%)</title><rect x="743.5" y="419.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="746.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (1,068 samples, 0.33%)</title><rect x="745.3" y="451.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1,068 samples, 0.33%)</title><rect x="745.3" y="435.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,068 samples, 0.33%)</title><rect x="745.3" y="419.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="748.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (587 samples, 0.18%)</title><rect x="745.3" y="403.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="748.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (467 samples, 0.14%)</title><rect x="747.5" y="403.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="750.5" y="414.0"></text>
</g>
<g>
<title>byte[] (454 samples, 0.14%)</title><rect x="747.5" y="387.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="750.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,803 samples, 0.55%)</title><rect x="749.1" y="451.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="752.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,803 samples, 0.55%)</title><rect x="749.1" y="435.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,803 samples, 0.55%)</title><rect x="749.1" y="419.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,803 samples, 0.55%)</title><rect x="749.1" y="403.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,803 samples, 0.55%)</title><rect x="749.1" y="387.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,687 samples, 0.52%)</title><rect x="749.1" y="371.0" width="6.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="752.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (116 samples, 0.04%)</title><rect x="755.3" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="758.3" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2,136 samples, 0.66%)</title><rect x="755.7" y="451.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.7" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (679 samples, 0.21%)</title><rect x="755.7" y="435.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.7" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (666 samples, 0.20%)</title><rect x="755.7" y="419.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="758.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (883 samples, 0.27%)</title><rect x="758.1" y="435.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="761.1" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (592 samples, 0.18%)</title><rect x="758.1" y="419.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="761.1" y="430.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (291 samples, 0.09%)</title><rect x="760.3" y="419.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="763.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$209/11032278.apply (574 samples, 0.18%)</title><rect x="761.3" y="435.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (574 samples, 0.18%)</title><rect x="761.3" y="419.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.3" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (560 samples, 0.17%)</title><rect x="761.3" y="403.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="764.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (19,069 samples, 5.86%)</title><rect x="763.4" y="611.0" width="69.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.4" y="622.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (19,069 samples, 5.86%)</title><rect x="763.4" y="595.0" width="69.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.4" y="606.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (19,069 samples, 5.86%)</title><rect x="763.4" y="579.0" width="69.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.4" y="590.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (19,069 samples, 5.86%)</title><rect x="763.4" y="563.0" width="69.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.4" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (19,069 samples, 5.86%)</title><rect x="763.4" y="547.0" width="69.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.4" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4,399 samples, 1.35%)</title><rect x="763.4" y="531.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="766.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (396 samples, 0.12%)</title><rect x="763.4" y="515.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (396 samples, 0.12%)</title><rect x="763.4" y="499.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="766.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$170/25985558.get$Lambda (240 samples, 0.07%)</title><rect x="763.4" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$170 (228 samples, 0.07%)</title><rect x="763.4" y="467.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="766.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$171/33271481.get$Lambda (156 samples, 0.05%)</title><rect x="764.3" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$171 (145 samples, 0.04%)</title><rect x="764.3" y="467.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="767.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (484 samples, 0.15%)</title><rect x="764.9" y="515.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="767.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (414 samples, 0.13%)</title><rect x="766.7" y="515.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (414 samples, 0.13%)</title><rect x="766.7" y="499.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (129 samples, 0.04%)</title><rect x="766.7" y="483.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="769.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (274 samples, 0.08%)</title><rect x="767.2" y="483.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (263 samples, 0.08%)</title><rect x="767.2" y="467.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="770.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (3,092 samples, 0.95%)</title><rect x="768.2" y="515.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (3,092 samples, 0.95%)</title><rect x="768.2" y="499.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/16991611.run (1,033 samples, 0.32%)</title><rect x="768.2" y="483.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1,033 samples, 0.32%)</title><rect x="768.2" y="467.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1,033 samples, 0.32%)</title><rect x="768.2" y="451.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (301 samples, 0.09%)</title><rect x="768.2" y="435.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.2" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (194 samples, 0.06%)</title><rect x="768.2" y="419.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.2" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (71 samples, 0.02%)</title><rect x="768.2" y="403.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.2" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (70 samples, 0.02%)</title><rect x="768.2" y="387.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="771.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (123 samples, 0.04%)</title><rect x="768.4" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.4" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (122 samples, 0.04%)</title><rect x="768.4" y="387.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="771.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (107 samples, 0.03%)</title><rect x="768.9" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (107 samples, 0.03%)</title><rect x="768.9" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="771.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (107 samples, 0.03%)</title><rect x="768.9" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (732 samples, 0.22%)</title><rect x="769.2" y="435.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="772.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (695 samples, 0.21%)</title><rect x="769.4" y="419.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (330 samples, 0.10%)</title><rect x="769.4" y="403.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.4" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (106 samples, 0.03%)</title><rect x="769.8" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.8" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (106 samples, 0.03%)</title><rect x="769.8" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="772.8" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (106 samples, 0.03%)</title><rect x="769.8" y="355.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="772.8" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (90 samples, 0.03%)</title><rect x="770.2" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.2" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (90 samples, 0.03%)</title><rect x="770.2" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.2" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (90 samples, 0.03%)</title><rect x="770.2" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="773.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (103 samples, 0.03%)</title><rect x="770.6" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (262 samples, 0.08%)</title><rect x="771.0" y="403.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (205 samples, 0.06%)</title><rect x="771.2" y="387.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (89 samples, 0.03%)</title><rect x="771.2" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (89 samples, 0.03%)</title><rect x="771.2" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (89 samples, 0.03%)</title><rect x="771.2" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (88 samples, 0.03%)</title><rect x="771.2" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="774.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (116 samples, 0.04%)</title><rect x="771.5" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (116 samples, 0.04%)</title><rect x="771.5" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (92 samples, 0.03%)</title><rect x="771.5" y="339.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="774.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2,059 samples, 0.63%)</title><rect x="771.9" y="483.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2,059 samples, 0.63%)</title><rect x="771.9" y="467.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="774.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (2,059 samples, 0.63%)</title><rect x="771.9" y="451.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,989 samples, 0.61%)</title><rect x="771.9" y="435.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,989 samples, 0.61%)</title><rect x="771.9" y="419.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,989 samples, 0.61%)</title><rect x="771.9" y="403.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,989 samples, 0.61%)</title><rect x="771.9" y="387.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="774.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/27658891.accept (1,989 samples, 0.61%)</title><rect x="771.9" y="371.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (1,989 samples, 0.61%)</title><rect x="771.9" y="355.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,989 samples, 0.61%)</title><rect x="771.9" y="339.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,989 samples, 0.61%)</title><rect x="771.9" y="323.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (132 samples, 0.04%)</title><rect x="771.9" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$230/28785153.apply (132 samples, 0.04%)</title><rect x="771.9" y="291.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (132 samples, 0.04%)</title><rect x="771.9" y="275.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (127 samples, 0.04%)</title><rect x="771.9" y="259.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="774.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,857 samples, 0.57%)</title><rect x="772.4" y="307.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,857 samples, 0.57%)</title><rect x="772.4" y="291.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,857 samples, 0.57%)</title><rect x="772.4" y="275.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (1,857 samples, 0.57%)</title><rect x="772.4" y="259.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.4" y="270.0"></text>
</g>
<g>
<title>java.lang.Thread (237 samples, 0.07%)</title><rect x="772.4" y="243.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="775.4" y="254.0"></text>
</g>
<g>
<title>java.lang.Thread (889 samples, 0.27%)</title><rect x="773.2" y="243.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="776.2" y="254.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (731 samples, 0.22%)</title><rect x="776.5" y="243.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (70 samples, 0.02%)</title><rect x="776.5" y="227.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.5" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (70 samples, 0.02%)</title><rect x="776.5" y="211.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.5" y="222.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.02%)</title><rect x="776.5" y="195.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="779.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (252 samples, 0.08%)</title><rect x="776.7" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (252 samples, 0.08%)</title><rect x="776.7" y="211.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="779.7" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (196 samples, 0.06%)</title><rect x="776.9" y="195.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.9" y="206.0"></text>
</g>
<g>
<title>byte[] (195 samples, 0.06%)</title><rect x="776.9" y="179.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="779.9" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (409 samples, 0.13%)</title><rect x="777.6" y="227.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.6" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (409 samples, 0.13%)</title><rect x="777.6" y="211.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.6" y="222.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (376 samples, 0.12%)</title><rect x="777.7" y="195.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.7" y="206.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (331 samples, 0.10%)</title><rect x="777.9" y="179.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.9" y="190.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (196 samples, 0.06%)</title><rect x="777.9" y="163.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="780.9" y="174.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (133 samples, 0.04%)</title><rect x="778.6" y="163.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="781.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (70 samples, 0.02%)</title><rect x="779.1" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.1" y="446.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.02%)</title><rect x="779.1" y="419.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="782.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (14,632 samples, 4.49%)</title><rect x="779.4" y="531.0" width="53.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.4" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (14,632 samples, 4.49%)</title><rect x="779.4" y="515.0" width="53.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.4" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (14,632 samples, 4.49%)</title><rect x="779.4" y="499.0" width="53.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.4" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (14,632 samples, 4.49%)</title><rect x="779.4" y="483.0" width="53.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.4" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (14,632 samples, 4.49%)</title><rect x="779.4" y="467.0" width="53.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.4" y="478.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (14,632 samples, 4.49%)</title><rect x="779.4" y="451.0" width="53.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.4" y="462.0">jdk/i..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (581 samples, 0.18%)</title><rect x="779.4" y="435.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.4" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (581 samples, 0.18%)</title><rect x="779.4" y="419.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.4" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (571 samples, 0.18%)</title><rect x="779.4" y="403.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="782.4" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (163 samples, 0.05%)</title><rect x="781.5" y="435.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="784.5" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (153 samples, 0.05%)</title><rect x="781.5" y="419.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="784.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/16991611.run (4,704 samples, 1.44%)</title><rect x="782.1" y="435.0" width="17.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4,704 samples, 1.44%)</title><rect x="782.1" y="419.0" width="17.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="785.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4,704 samples, 1.44%)</title><rect x="782.1" y="403.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="785.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,334 samples, 0.41%)</title><rect x="782.1" y="387.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.1" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,026 samples, 0.32%)</title><rect x="782.1" y="371.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.1" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (502 samples, 0.15%)</title><rect x="782.1" y="355.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.1" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (493 samples, 0.15%)</title><rect x="782.1" y="339.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="785.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (524 samples, 0.16%)</title><rect x="783.9" y="355.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="786.9" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (516 samples, 0.16%)</title><rect x="783.9" y="339.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="786.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (308 samples, 0.09%)</title><rect x="785.8" y="371.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.8" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (308 samples, 0.09%)</title><rect x="785.8" y="355.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (308 samples, 0.09%)</title><rect x="785.8" y="339.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/2512844.get (185 samples, 0.06%)</title><rect x="785.8" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.8" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (177 samples, 0.05%)</title><rect x="785.8" y="307.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="788.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (123 samples, 0.04%)</title><rect x="786.4" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (123 samples, 0.04%)</title><rect x="786.4" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.4" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (123 samples, 0.04%)</title><rect x="786.4" y="291.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.4" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (116 samples, 0.04%)</title><rect x="786.4" y="275.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="789.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3,370 samples, 1.03%)</title><rect x="786.9" y="387.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.9" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (183 samples, 0.06%)</title><rect x="786.9" y="371.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.9" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (183 samples, 0.06%)</title><rect x="786.9" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.9" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (183 samples, 0.06%)</title><rect x="786.9" y="339.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.9" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (183 samples, 0.06%)</title><rect x="786.9" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.9" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (174 samples, 0.05%)</title><rect x="786.9" y="307.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="789.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3,187 samples, 0.98%)</title><rect x="787.6" y="371.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1,542 samples, 0.47%)</title><rect x="787.6" y="355.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.6" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (189 samples, 0.06%)</title><rect x="787.6" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (189 samples, 0.06%)</title><rect x="787.6" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.6" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (189 samples, 0.06%)</title><rect x="787.6" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="790.6" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (189 samples, 0.06%)</title><rect x="787.6" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="790.6" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (189 samples, 0.06%)</title><rect x="787.6" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.6" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (181 samples, 0.06%)</title><rect x="787.6" y="259.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="790.6" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (335 samples, 0.10%)</title><rect x="788.2" y="339.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="791.2" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (335 samples, 0.10%)</title><rect x="788.2" y="323.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.2" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (335 samples, 0.10%)</title><rect x="788.2" y="307.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.2" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (335 samples, 0.10%)</title><rect x="788.2" y="291.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.2" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (335 samples, 0.10%)</title><rect x="788.2" y="275.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.2" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (327 samples, 0.10%)</title><rect x="788.2" y="259.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="791.2" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (620 samples, 0.19%)</title><rect x="789.5" y="339.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (620 samples, 0.19%)</title><rect x="789.5" y="323.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.5" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (611 samples, 0.19%)</title><rect x="789.5" y="307.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="792.5" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (261 samples, 0.08%)</title><rect x="791.7" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (261 samples, 0.08%)</title><rect x="791.7" y="323.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (252 samples, 0.08%)</title><rect x="791.7" y="307.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="794.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (122 samples, 0.04%)</title><rect x="792.7" y="339.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="795.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (569 samples, 0.17%)</title><rect x="793.1" y="355.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.1" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (164 samples, 0.05%)</title><rect x="793.1" y="339.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.1" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (164 samples, 0.05%)</title><rect x="793.1" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (164 samples, 0.05%)</title><rect x="793.1" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (156 samples, 0.05%)</title><rect x="793.1" y="291.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="796.1" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (405 samples, 0.12%)</title><rect x="793.7" y="339.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (405 samples, 0.12%)</title><rect x="793.7" y="323.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="796.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (396 samples, 0.12%)</title><rect x="793.7" y="307.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="796.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1,076 samples, 0.33%)</title><rect x="795.2" y="355.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (323 samples, 0.10%)</title><rect x="795.2" y="339.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="798.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (745 samples, 0.23%)</title><rect x="796.4" y="339.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (282 samples, 0.09%)</title><rect x="796.4" y="323.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (282 samples, 0.09%)</title><rect x="796.4" y="307.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (282 samples, 0.09%)</title><rect x="796.4" y="291.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (274 samples, 0.08%)</title><rect x="796.4" y="275.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="799.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (463 samples, 0.14%)</title><rect x="797.4" y="323.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (463 samples, 0.14%)</title><rect x="797.4" y="307.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (333 samples, 0.10%)</title><rect x="797.4" y="291.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="800.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (122 samples, 0.04%)</title><rect x="798.7" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (114 samples, 0.04%)</title><rect x="798.7" y="275.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="801.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (8,502 samples, 2.61%)</title><rect x="799.1" y="435.0" width="30.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.1" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (8,502 samples, 2.61%)</title><rect x="799.1" y="419.0" width="30.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.1" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (8,502 samples, 2.61%)</title><rect x="799.1" y="403.0" width="30.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="802.1" y="414.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8,013 samples, 2.46%)</title><rect x="799.1" y="387.0" width="29.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.1" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,013 samples, 2.46%)</title><rect x="799.1" y="371.0" width="29.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.1" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8,013 samples, 2.46%)</title><rect x="799.1" y="355.0" width="29.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.1" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8,013 samples, 2.46%)</title><rect x="799.1" y="339.0" width="29.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.1" y="350.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/27658891.accept (8,013 samples, 2.46%)</title><rect x="799.1" y="323.0" width="29.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.1" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (8,013 samples, 2.46%)</title><rect x="799.1" y="307.0" width="29.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="802.1" y="318.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8,013 samples, 2.46%)</title><rect x="799.1" y="291.0" width="29.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.1" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,013 samples, 2.46%)</title><rect x="799.1" y="275.0" width="29.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.1" y="286.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (784 samples, 0.24%)</title><rect x="799.1" y="259.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$230/28785153.apply (784 samples, 0.24%)</title><rect x="799.1" y="243.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (784 samples, 0.24%)</title><rect x="799.1" y="227.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (759 samples, 0.23%)</title><rect x="799.1" y="211.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="802.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7,229 samples, 2.22%)</title><rect x="801.9" y="259.0" width="26.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.9" y="270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7,229 samples, 2.22%)</title><rect x="801.9" y="243.0" width="26.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.9" y="254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7,229 samples, 2.22%)</title><rect x="801.9" y="227.0" width="26.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.9" y="238.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (7,229 samples, 2.22%)</title><rect x="801.9" y="211.0" width="26.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.9" y="222.0">j..</text>
</g>
<g>
<title>java.lang.Thread (971 samples, 0.30%)</title><rect x="801.9" y="195.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="804.9" y="206.0"></text>
</g>
<g>
<title>java.lang.Thread (3,216 samples, 0.99%)</title><rect x="805.5" y="195.0" width="11.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="808.5" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (3,042 samples, 0.93%)</title><rect x="817.1" y="195.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (367 samples, 0.11%)</title><rect x="817.1" y="179.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="820.1" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (367 samples, 0.11%)</title><rect x="817.1" y="163.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="820.1" y="174.0"></text>
</g>
<g>
<title>byte[] (360 samples, 0.11%)</title><rect x="817.1" y="147.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="820.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (966 samples, 0.30%)</title><rect x="818.4" y="179.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (966 samples, 0.30%)</title><rect x="818.4" y="163.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (278 samples, 0.09%)</title><rect x="818.4" y="147.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="821.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (684 samples, 0.21%)</title><rect x="819.5" y="147.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.5" y="158.0"></text>
</g>
<g>
<title>byte[] (680 samples, 0.21%)</title><rect x="819.5" y="131.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="822.5" y="142.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1,709 samples, 0.52%)</title><rect x="821.9" y="179.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.9" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1,709 samples, 0.52%)</title><rect x="821.9" y="163.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (273 samples, 0.08%)</title><rect x="821.9" y="147.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="824.9" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (1,431 samples, 0.44%)</title><rect x="823.0" y="147.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.0" y="158.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (119 samples, 0.04%)</title><rect x="823.0" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.0" y="142.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (119 samples, 0.04%)</title><rect x="823.0" y="115.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.0" y="126.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (118 samples, 0.04%)</title><rect x="823.0" y="99.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="826.0" y="110.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (1,312 samples, 0.40%)</title><rect x="823.4" y="131.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.4" y="142.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (839 samples, 0.26%)</title><rect x="823.4" y="115.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="826.4" y="126.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (461 samples, 0.14%)</title><rect x="826.4" y="115.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="829.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (489 samples, 0.15%)</title><rect x="828.1" y="387.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.1" y="398.0"></text>
</g>
<g>
<title>byte[] (480 samples, 0.15%)</title><rect x="828.1" y="371.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="831.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (682 samples, 0.21%)</title><rect x="829.9" y="435.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (682 samples, 0.21%)</title><rect x="829.9" y="419.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (682 samples, 0.21%)</title><rect x="829.9" y="403.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="832.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (682 samples, 0.21%)</title><rect x="829.9" y="387.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (682 samples, 0.21%)</title><rect x="829.9" y="371.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.9" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (111 samples, 0.03%)</title><rect x="829.9" y="355.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (101 samples, 0.03%)</title><rect x="829.9" y="339.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="832.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (571 samples, 0.18%)</title><rect x="830.3" y="355.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (571 samples, 0.18%)</title><rect x="830.3" y="339.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.3" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (537 samples, 0.16%)</title><rect x="830.3" y="323.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="833.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$108/20693185.run (37,134 samples, 11.40%)</title><rect x="832.5" y="643.0" width="134.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.5" y="654.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$2 (37,134 samples, 11.40%)</title><rect x="832.5" y="627.0" width="134.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.5" y="638.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5,044 samples, 1.55%)</title><rect x="832.5" y="611.0" width="18.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4,148 samples, 1.27%)</title><rect x="832.5" y="595.0" width="15.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,893 samples, 0.89%)</title><rect x="832.5" y="579.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,893 samples, 0.89%)</title><rect x="832.5" y="563.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.5" y="574.0"></text>
</g>
<g>
<title>byte[] (2,500 samples, 0.77%)</title><rect x="832.5" y="547.0" width="9.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="835.5" y="558.0"></text>
</g>
<g>
<title>byte[] (393 samples, 0.12%)</title><rect x="841.6" y="547.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="844.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,255 samples, 0.39%)</title><rect x="843.0" y="579.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.0" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (415 samples, 0.13%)</title><rect x="843.0" y="563.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="846.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (830 samples, 0.25%)</title><rect x="844.5" y="563.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="847.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (830 samples, 0.25%)</title><rect x="844.5" y="547.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (830 samples, 0.25%)</title><rect x="844.5" y="531.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (830 samples, 0.25%)</title><rect x="844.5" y="515.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (822 samples, 0.25%)</title><rect x="844.5" y="499.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="847.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (896 samples, 0.28%)</title><rect x="847.5" y="595.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (896 samples, 0.28%)</title><rect x="847.5" y="579.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (896 samples, 0.28%)</title><rect x="847.5" y="563.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (473 samples, 0.15%)</title><rect x="847.5" y="547.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="850.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (412 samples, 0.13%)</title><rect x="849.3" y="547.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="852.3" y="558.0"></text>
</g>
<g>
<title>byte[] (402 samples, 0.12%)</title><rect x="849.3" y="531.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="852.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$106/10655556.act (32,090 samples, 9.85%)</title><rect x="850.8" y="611.0" width="116.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.8" y="622.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$0 (32,090 samples, 9.85%)</title><rect x="850.8" y="595.0" width="116.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.8" y="606.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.processEntityRequest (32,090 samples, 9.85%)</title><rect x="850.8" y="579.0" width="116.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.8" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet.processEntityDirectly (5,304 samples, 1.63%)</title><rect x="850.8" y="563.0" width="19.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2,063 samples, 0.63%)</title><rect x="850.8" y="547.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,063 samples, 0.63%)</title><rect x="850.8" y="531.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="853.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2,063 samples, 0.63%)</title><rect x="850.8" y="515.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,063 samples, 0.63%)</title><rect x="850.8" y="499.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.8" y="510.0"></text>
</g>
<g>
<title>byte[] (2,063 samples, 0.63%)</title><rect x="850.8" y="483.0" width="7.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="853.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,112 samples, 0.65%)</title><rect x="858.4" y="547.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.4" y="558.0"></text>
</g>
<g>
<title>byte[] (667 samples, 0.20%)</title><rect x="858.4" y="531.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="861.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (1,351 samples, 0.41%)</title><rect x="860.8" y="531.0" width="4.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="863.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (76 samples, 0.02%)</title><rect x="865.8" y="531.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="868.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/DataWithTimestamp.toBytes (114 samples, 0.04%)</title><rect x="866.0" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="869.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (114 samples, 0.04%)</title><rect x="866.0" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.0" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (114 samples, 0.04%)</title><rect x="866.0" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.0" y="526.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.03%)</title><rect x="866.0" y="499.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="869.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/RocksDAO.getWithTimestamp (980 samples, 0.30%)</title><rect x="866.5" y="547.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="869.5" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (341 samples, 0.10%)</title><rect x="866.5" y="531.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.5" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (341 samples, 0.10%)</title><rect x="866.5" y="515.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.5" y="526.0"></text>
</g>
<g>
<title>byte[] (341 samples, 0.10%)</title><rect x="866.5" y="499.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="869.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/DataWithTimestamp.fromBytes (631 samples, 0.19%)</title><rect x="867.7" y="531.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="870.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (321 samples, 0.10%)</title><rect x="867.7" y="515.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="870.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (321 samples, 0.10%)</title><rect x="867.7" y="499.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (320 samples, 0.10%)</title><rect x="867.7" y="483.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="870.7" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.dogm.DataWithTimestamp (246 samples, 0.08%)</title><rect x="868.9" y="515.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="871.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet.processEntityRequest (26,786 samples, 8.23%)</title><rect x="870.0" y="563.0" width="97.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.0" y="574.0">ru/mail/pol..</text>
</g>
<g>
<title>java.util.ArrayList (102 samples, 0.03%)</title><rect x="870.0" y="547.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="873.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (147 samples, 0.05%)</title><rect x="870.6" y="547.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="873.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (428 samples, 0.13%)</title><rect x="871.1" y="547.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (428 samples, 0.13%)</title><rect x="871.1" y="531.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet$$Lambda$132/16819248.get$Lambda (355 samples, 0.11%)</title><rect x="871.1" y="515.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="874.1" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dogm.processors.entity.ProcessorGet$$Lambda$132 (349 samples, 0.11%)</title><rect x="871.1" y="499.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="874.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet$$Lambda$134/14104044.get$Lambda (73 samples, 0.02%)</title><rect x="872.4" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.4" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dogm.processors.entity.ProcessorGet$$Lambda$134 (73 samples, 0.02%)</title><rect x="872.4" y="499.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="875.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/11253319.linkToTargetMethod (524 samples, 0.16%)</title><rect x="872.7" y="547.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/5760220.invokeStatic (524 samples, 0.16%)</title><rect x="872.7" y="531.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet$$Lambda$131/17791192.get$Lambda (524 samples, 0.16%)</title><rect x="872.7" y="515.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.7" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dogm.processors.entity.ProcessorGet$$Lambda$131 (514 samples, 0.16%)</title><rect x="872.7" y="499.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="875.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (86 samples, 0.03%)</title><rect x="874.6" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (84 samples, 0.03%)</title><rect x="874.6" y="531.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="877.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (654 samples, 0.20%)</title><rect x="874.9" y="547.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (654 samples, 0.20%)</title><rect x="874.9" y="531.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="877.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (417 samples, 0.13%)</title><rect x="874.9" y="515.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="877.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (83 samples, 0.03%)</title><rect x="876.4" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="879.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (77 samples, 0.02%)</title><rect x="876.4" y="499.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="879.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (147 samples, 0.05%)</title><rect x="876.7" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="879.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (147 samples, 0.05%)</title><rect x="876.7" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (144 samples, 0.04%)</title><rect x="876.7" y="483.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="879.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (141 samples, 0.04%)</title><rect x="877.2" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.timedGet (141 samples, 0.04%)</title><rect x="877.2" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (140 samples, 0.04%)</title><rect x="877.2" y="515.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="880.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (2,509 samples, 0.77%)</title><rect x="877.7" y="547.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (2,509 samples, 0.77%)</title><rect x="877.7" y="531.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="880.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (81 samples, 0.02%)</title><rect x="877.7" y="515.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="880.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (2,381 samples, 0.73%)</title><rect x="878.2" y="515.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.2" y="526.0"></text>
</g>
<g>
<title>java.lang.Thread (323 samples, 0.10%)</title><rect x="878.2" y="499.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="881.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Thread (932 samples, 0.29%)</title><rect x="879.4" y="499.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="882.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1,126 samples, 0.35%)</title><rect x="882.8" y="499.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.8" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (88 samples, 0.03%)</title><rect x="882.8" y="483.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="885.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (111 samples, 0.03%)</title><rect x="883.1" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="886.1" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (111 samples, 0.03%)</title><rect x="883.1" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.1" y="478.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.03%)</title><rect x="883.1" y="451.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="886.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (251 samples, 0.08%)</title><rect x="883.5" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="886.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (251 samples, 0.08%)</title><rect x="883.5" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="886.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.02%)</title><rect x="883.5" y="451.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="886.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (176 samples, 0.05%)</title><rect x="883.8" y="451.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="886.8" y="462.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.05%)</title><rect x="883.8" y="435.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="886.8" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (673 samples, 0.21%)</title><rect x="884.4" y="483.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.4" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (673 samples, 0.21%)</title><rect x="884.4" y="467.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.4" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (616 samples, 0.19%)</title><rect x="884.6" y="451.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.6" y="462.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (220 samples, 0.07%)</title><rect x="884.6" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.6" y="446.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (220 samples, 0.07%)</title><rect x="884.6" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.6" y="430.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (215 samples, 0.07%)</title><rect x="884.6" y="403.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="887.6" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (396 samples, 0.12%)</title><rect x="885.4" y="435.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="888.4" y="446.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (278 samples, 0.09%)</title><rect x="885.4" y="419.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="888.4" y="430.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (111 samples, 0.03%)</title><rect x="886.4" y="419.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="889.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (737 samples, 0.23%)</title><rect x="886.8" y="547.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (737 samples, 0.23%)</title><rect x="886.8" y="531.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (455 samples, 0.14%)</title><rect x="886.8" y="515.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="889.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (109 samples, 0.03%)</title><rect x="888.5" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.5" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (107 samples, 0.03%)</title><rect x="888.5" y="499.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="891.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (166 samples, 0.05%)</title><rect x="888.9" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (166 samples, 0.05%)</title><rect x="888.9" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (163 samples, 0.05%)</title><rect x="888.9" y="483.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="891.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/BasicTopology.nodesFor (181 samples, 0.06%)</title><rect x="889.5" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.5" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (85 samples, 0.03%)</title><rect x="889.5" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="892.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (94 samples, 0.03%)</title><rect x="889.8" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.8" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (92 samples, 0.03%)</title><rect x="889.8" y="515.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="892.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet.resolveSuitableGetResponse (737 samples, 0.23%)</title><rect x="890.2" y="547.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="893.2" y="558.0"></text>
</g>
<g>
<title>one.nio.http.Response (88 samples, 0.03%)</title><rect x="890.2" y="531.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="893.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (254 samples, 0.08%)</title><rect x="890.5" y="531.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="893.5" y="542.0"></text>
</g>
<g>
<title>byte[] (98 samples, 0.03%)</title><rect x="890.5" y="515.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="893.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (87 samples, 0.03%)</title><rect x="890.8" y="515.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="893.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/DataWithTimestamp.fromAbsent (329 samples, 0.10%)</title><rect x="891.6" y="531.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.dogm.DataWithTimestamp (328 samples, 0.10%)</title><rect x="891.6" y="515.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="894.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor.processEntityRemotely (20,488 samples, 6.29%)</title><rect x="892.8" y="547.0" width="74.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="895.8" y="558.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (382 samples, 0.12%)</title><rect x="892.8" y="531.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="895.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (382 samples, 0.12%)</title><rect x="892.8" y="515.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="895.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (228 samples, 0.07%)</title><rect x="892.8" y="499.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="895.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.05%)</title><rect x="893.7" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.05%)</title><rect x="893.7" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="896.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (145 samples, 0.04%)</title><rect x="893.7" y="467.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="896.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/Bridges.sendRequestTo (20,106 samples, 6.17%)</title><rect x="894.2" y="531.0" width="72.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.2" y="542.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (495 samples, 0.15%)</title><rect x="894.2" y="515.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/13107155.invoke (495 samples, 0.15%)</title><rect x="894.2" y="499.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="897.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (495 samples, 0.15%)</title><rect x="894.2" y="483.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (145 samples, 0.04%)</title><rect x="894.2" y="467.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (140 samples, 0.04%)</title><rect x="894.2" y="451.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="897.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (350 samples, 0.11%)</title><rect x="894.7" y="467.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (350 samples, 0.11%)</title><rect x="894.7" y="451.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.7" y="462.0"></text>
</g>
<g>
<title>byte[] (344 samples, 0.11%)</title><rect x="894.7" y="435.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="897.7" y="446.0"></text>
</g>
<g>
<title>java/net/URI.create (2,161 samples, 0.66%)</title><rect x="896.0" y="515.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.0" y="526.0"></text>
</g>
<g>
<title>java.net.URI (478 samples, 0.15%)</title><rect x="896.0" y="499.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="899.0" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,676 samples, 0.51%)</title><rect x="897.8" y="499.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.8" y="510.0"></text>
</g>
<g>
<title>java.net.URI$Parser (164 samples, 0.05%)</title><rect x="897.8" y="483.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="900.8" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,508 samples, 0.46%)</title><rect x="898.4" y="483.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (234 samples, 0.07%)</title><rect x="898.4" y="467.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (234 samples, 0.07%)</title><rect x="898.4" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (130 samples, 0.04%)</title><rect x="898.4" y="435.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="901.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (99 samples, 0.03%)</title><rect x="898.9" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.9" y="446.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.03%)</title><rect x="898.9" y="419.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="901.9" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,274 samples, 0.39%)</title><rect x="899.2" y="467.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (627 samples, 0.19%)</title><rect x="899.2" y="451.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="902.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (627 samples, 0.19%)</title><rect x="899.2" y="435.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (293 samples, 0.09%)</title><rect x="899.2" y="419.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="902.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (327 samples, 0.10%)</title><rect x="900.3" y="419.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.3" y="430.0"></text>
</g>
<g>
<title>byte[] (320 samples, 0.10%)</title><rect x="900.3" y="403.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="903.3" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (647 samples, 0.20%)</title><rect x="901.5" y="451.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="904.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (349 samples, 0.11%)</title><rect x="901.5" y="435.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (349 samples, 0.11%)</title><rect x="901.5" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (138 samples, 0.04%)</title><rect x="901.5" y="403.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="904.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (207 samples, 0.06%)</title><rect x="902.0" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.0" y="414.0"></text>
</g>
<g>
<title>byte[] (204 samples, 0.06%)</title><rect x="902.0" y="387.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="905.0" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (298 samples, 0.09%)</title><rect x="902.8" y="435.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.8" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (298 samples, 0.09%)</title><rect x="902.8" y="419.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (298 samples, 0.09%)</title><rect x="902.8" y="403.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (298 samples, 0.09%)</title><rect x="902.8" y="387.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.8" y="398.0"></text>
</g>
<g>
<title>java.lang.String (134 samples, 0.04%)</title><rect x="902.8" y="371.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="905.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (160 samples, 0.05%)</title><rect x="903.3" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.3" y="382.0"></text>
</g>
<g>
<title>byte[] (155 samples, 0.05%)</title><rect x="903.3" y="355.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="906.3" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (671 samples, 0.21%)</title><rect x="903.8" y="515.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (271 samples, 0.08%)</title><rect x="903.8" y="499.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="906.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (395 samples, 0.12%)</title><rect x="904.8" y="499.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (94 samples, 0.03%)</title><rect x="904.8" y="483.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="907.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (296 samples, 0.09%)</title><rect x="905.2" y="483.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.2" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (290 samples, 0.09%)</title><rect x="905.2" y="467.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="908.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (13,242 samples, 4.07%)</title><rect x="906.3" y="515.0" width="48.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.3" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (13,242 samples, 4.07%)</title><rect x="906.3" y="499.0" width="48.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.3" y="510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (13,242 samples, 4.07%)</title><rect x="906.3" y="483.0" width="48.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.3" y="494.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (13,242 samples, 4.07%)</title><rect x="906.3" y="467.0" width="48.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.3" y="478.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (119 samples, 0.04%)</title><rect x="906.3" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="909.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (119 samples, 0.04%)</title><rect x="906.3" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$125/6127307.get$Lambda (119 samples, 0.04%)</title><rect x="906.3" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$125 (113 samples, 0.03%)</title><rect x="906.3" y="403.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="909.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (344 samples, 0.11%)</title><rect x="906.7" y="451.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (344 samples, 0.11%)</title><rect x="906.7" y="435.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="909.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (193 samples, 0.06%)</title><rect x="906.7" y="419.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="909.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (146 samples, 0.04%)</title><rect x="907.4" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="910.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (146 samples, 0.04%)</title><rect x="907.4" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="910.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (141 samples, 0.04%)</title><rect x="907.4" y="387.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="910.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (409 samples, 0.13%)</title><rect x="907.9" y="451.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (409 samples, 0.13%)</title><rect x="907.9" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (197 samples, 0.06%)</title><rect x="907.9" y="419.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="910.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (208 samples, 0.06%)</title><rect x="908.7" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="911.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (208 samples, 0.06%)</title><rect x="908.7" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (204 samples, 0.06%)</title><rect x="908.7" y="387.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="911.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (346 samples, 0.11%)</title><rect x="909.4" y="451.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="912.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (631 samples, 0.19%)</title><rect x="910.7" y="451.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="913.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (6,639 samples, 2.04%)</title><rect x="913.0" y="451.0" width="24.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.0" y="462.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (668 samples, 0.21%)</title><rect x="913.0" y="435.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.0" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (549 samples, 0.17%)</title><rect x="913.0" y="419.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.0" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (227 samples, 0.07%)</title><rect x="913.0" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.0" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (219 samples, 0.07%)</title><rect x="913.0" y="387.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="916.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (322 samples, 0.10%)</title><rect x="913.9" y="403.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="916.9" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (312 samples, 0.10%)</title><rect x="913.9" y="387.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="916.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (119 samples, 0.04%)</title><rect x="915.0" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (119 samples, 0.04%)</title><rect x="915.0" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (119 samples, 0.04%)</title><rect x="915.0" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/2512844.get (119 samples, 0.04%)</title><rect x="915.0" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.0" y="382.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (111 samples, 0.03%)</title><rect x="915.0" y="355.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="918.0" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,499 samples, 0.77%)</title><rect x="915.5" y="435.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,499 samples, 0.77%)</title><rect x="915.5" y="419.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.5" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (110 samples, 0.03%)</title><rect x="915.5" y="403.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="918.5" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (154 samples, 0.05%)</title><rect x="915.9" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="918.9" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (272 samples, 0.08%)</title><rect x="916.5" y="403.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="919.5" y="414.0"></text>
</g>
<g>
<title>java.util.TreeSet (88 samples, 0.03%)</title><rect x="917.5" y="403.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="920.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (154 samples, 0.05%)</title><rect x="917.8" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="920.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (154 samples, 0.05%)</title><rect x="917.8" y="387.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.8" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.get$Lambda (154 samples, 0.05%)</title><rect x="917.8" y="371.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="920.8" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$109 (145 samples, 0.04%)</title><rect x="917.8" y="355.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="920.8" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,232 samples, 0.38%)</title><rect x="918.4" y="403.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="921.4" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,232 samples, 0.38%)</title><rect x="918.4" y="387.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (1,232 samples, 0.38%)</title><rect x="918.4" y="371.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="921.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,232 samples, 0.38%)</title><rect x="918.4" y="355.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (604 samples, 0.19%)</title><rect x="918.4" y="339.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.4" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (414 samples, 0.13%)</title><rect x="918.4" y="323.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.4" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (414 samples, 0.13%)</title><rect x="918.4" y="307.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="921.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (414 samples, 0.13%)</title><rect x="918.4" y="291.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.4" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (414 samples, 0.13%)</title><rect x="918.4" y="275.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.4" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (414 samples, 0.13%)</title><rect x="918.4" y="259.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (414 samples, 0.13%)</title><rect x="918.4" y="243.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (414 samples, 0.13%)</title><rect x="918.4" y="227.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="921.4" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (406 samples, 0.12%)</title><rect x="918.4" y="211.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="921.4" y="222.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (190 samples, 0.06%)</title><rect x="919.9" y="323.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.9" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (182 samples, 0.06%)</title><rect x="919.9" y="307.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="922.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (177 samples, 0.05%)</title><rect x="920.6" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (177 samples, 0.05%)</title><rect x="920.6" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="923.6" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.get$Lambda (177 samples, 0.05%)</title><rect x="920.6" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="923.6" y="318.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (170 samples, 0.05%)</title><rect x="920.6" y="291.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="923.6" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (210 samples, 0.06%)</title><rect x="921.2" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.2" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (210 samples, 0.06%)</title><rect x="921.2" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="924.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (113 samples, 0.03%)</title><rect x="921.2" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="924.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (113 samples, 0.03%)</title><rect x="921.2" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="924.2" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (106 samples, 0.03%)</title><rect x="921.2" y="275.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="924.2" y="286.0"></text>
</g>
<g>
<title>java/util/List.of (97 samples, 0.03%)</title><rect x="921.6" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.6" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (90 samples, 0.03%)</title><rect x="921.6" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="924.6" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (241 samples, 0.07%)</title><rect x="922.0" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="925.0" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (233 samples, 0.07%)</title><rect x="922.0" y="323.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="925.0" y="334.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (161 samples, 0.05%)</title><rect x="922.8" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="925.8" y="414.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (153 samples, 0.05%)</title><rect x="922.8" y="387.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="925.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (300 samples, 0.09%)</title><rect x="923.4" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.4" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (292 samples, 0.09%)</title><rect x="923.4" y="387.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="926.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (116 samples, 0.04%)</title><rect x="924.5" y="435.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="927.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (2,542 samples, 0.78%)</title><rect x="925.0" y="435.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="928.0" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (2,542 samples, 0.78%)</title><rect x="925.0" y="419.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.0" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2,385 samples, 0.73%)</title><rect x="925.0" y="403.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="928.0" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,385 samples, 0.73%)</title><rect x="925.0" y="387.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="928.0" y="398.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,385 samples, 0.73%)</title><rect x="925.0" y="371.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.0" y="382.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (544 samples, 0.17%)</title><rect x="925.0" y="355.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="928.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (674 samples, 0.21%)</title><rect x="927.0" y="355.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="930.0" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (674 samples, 0.21%)</title><rect x="927.0" y="339.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.0" y="350.0"></text>
</g>
<g>
<title>byte[] (653 samples, 0.20%)</title><rect x="927.0" y="323.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="930.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,145 samples, 0.35%)</title><rect x="929.5" y="355.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,145 samples, 0.35%)</title><rect x="929.5" y="339.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (486 samples, 0.15%)</title><rect x="929.5" y="323.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="932.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (639 samples, 0.20%)</title><rect x="931.3" y="323.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.3" y="334.0"></text>
</g>
<g>
<title>byte[] (616 samples, 0.19%)</title><rect x="931.3" y="307.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="934.3" y="318.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (149 samples, 0.05%)</title><rect x="933.6" y="403.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="936.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (328 samples, 0.10%)</title><rect x="934.2" y="435.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (319 samples, 0.10%)</title><rect x="934.2" y="419.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="937.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (478 samples, 0.15%)</title><rect x="935.4" y="435.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="938.4" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (156 samples, 0.05%)</title><rect x="935.4" y="419.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="938.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (91 samples, 0.03%)</title><rect x="936.0" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="939.0" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (83 samples, 0.03%)</title><rect x="936.0" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="939.0" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (221 samples, 0.07%)</title><rect x="936.3" y="419.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.3" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (213 samples, 0.07%)</title><rect x="936.3" y="403.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="939.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (3,097 samples, 0.95%)</title><rect x="937.1" y="451.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="940.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (111 samples, 0.03%)</title><rect x="937.1" y="435.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="940.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (454 samples, 0.14%)</title><rect x="937.5" y="435.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="940.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (116 samples, 0.04%)</title><rect x="939.2" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (109 samples, 0.03%)</title><rect x="939.2" y="419.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="942.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2,397 samples, 0.74%)</title><rect x="939.6" y="435.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2,397 samples, 0.74%)</title><rect x="939.6" y="419.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Class[] (234 samples, 0.07%)</title><rect x="939.6" y="403.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="942.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (218 samples, 0.07%)</title><rect x="940.6" y="403.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="943.6" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList (151 samples, 0.05%)</title><rect x="941.4" y="403.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="944.4" y="414.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1,031 samples, 0.32%)</title><rect x="942.0" y="403.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="945.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1,031 samples, 0.32%)</title><rect x="942.0" y="387.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="945.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1,031 samples, 0.32%)</title><rect x="942.0" y="371.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.0" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1,031 samples, 0.32%)</title><rect x="942.0" y="355.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="945.0" y="366.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (1,007 samples, 0.31%)</title><rect x="942.0" y="339.0" width="3.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="945.0" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (376 samples, 0.12%)</title><rect x="945.7" y="403.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="948.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (376 samples, 0.12%)</title><rect x="945.7" y="387.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (251 samples, 0.08%)</title><rect x="945.7" y="371.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="948.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (243 samples, 0.07%)</title><rect x="945.7" y="355.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="948.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (125 samples, 0.04%)</title><rect x="946.6" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="949.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (115 samples, 0.04%)</title><rect x="946.6" y="355.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="949.6" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (334 samples, 0.10%)</title><rect x="947.1" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.1" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (334 samples, 0.10%)</title><rect x="947.1" y="387.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.1" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (314 samples, 0.10%)</title><rect x="947.1" y="371.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="950.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,640 samples, 0.50%)</title><rect x="948.3" y="451.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (380 samples, 0.12%)</title><rect x="948.3" y="435.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (154 samples, 0.05%)</title><rect x="948.3" y="419.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="951.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (218 samples, 0.07%)</title><rect x="948.9" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (218 samples, 0.07%)</title><rect x="948.9" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (218 samples, 0.07%)</title><rect x="948.9" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (218 samples, 0.07%)</title><rect x="948.9" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="951.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (209 samples, 0.06%)</title><rect x="948.9" y="355.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="951.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (155 samples, 0.05%)</title><rect x="949.7" y="435.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="952.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1,099 samples, 0.34%)</title><rect x="950.3" y="435.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (247 samples, 0.08%)</title><rect x="950.3" y="419.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (247 samples, 0.08%)</title><rect x="950.3" y="403.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$120/18004023.get$Lambda (119 samples, 0.04%)</title><rect x="950.3" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$120 (112 samples, 0.03%)</title><rect x="950.3" y="371.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="953.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/33260527.get$Lambda (128 samples, 0.04%)</title><rect x="950.7" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$122 (122 samples, 0.04%)</title><rect x="950.7" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="953.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (852 samples, 0.26%)</title><rect x="951.2" y="419.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (852 samples, 0.26%)</title><rect x="951.2" y="403.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="954.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (457 samples, 0.14%)</title><rect x="951.2" y="387.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="954.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (379 samples, 0.12%)</title><rect x="952.9" y="387.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (379 samples, 0.12%)</title><rect x="952.9" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (366 samples, 0.11%)</title><rect x="952.9" y="355.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="955.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (3,035 samples, 0.93%)</title><rect x="954.3" y="515.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (297 samples, 0.09%)</title><rect x="954.3" y="499.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="957.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2,734 samples, 0.84%)</title><rect x="955.3" y="499.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,621 samples, 0.80%)</title><rect x="955.3" y="483.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="958.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,621 samples, 0.80%)</title><rect x="955.3" y="467.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="958.3" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (113 samples, 0.03%)</title><rect x="955.3" y="451.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="958.3" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (185 samples, 0.06%)</title><rect x="955.8" y="451.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="958.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (365 samples, 0.11%)</title><rect x="956.5" y="451.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="959.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (122 samples, 0.04%)</title><rect x="957.8" y="451.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="960.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (198 samples, 0.06%)</title><rect x="958.3" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="961.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (198 samples, 0.06%)</title><rect x="958.3" y="435.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="961.3" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.get$Lambda (198 samples, 0.06%)</title><rect x="958.3" y="419.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.3" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$109 (193 samples, 0.06%)</title><rect x="958.3" y="403.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="961.3" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (180 samples, 0.06%)</title><rect x="959.0" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="962.0" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (172 samples, 0.05%)</title><rect x="959.0" y="435.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="962.0" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,091 samples, 0.34%)</title><rect x="959.6" y="451.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (1,091 samples, 0.34%)</title><rect x="959.6" y="435.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="962.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,091 samples, 0.34%)</title><rect x="959.6" y="419.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (207 samples, 0.06%)</title><rect x="959.6" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="962.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (207 samples, 0.06%)</title><rect x="959.6" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="962.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.get$Lambda (207 samples, 0.06%)</title><rect x="959.6" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.6" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (202 samples, 0.06%)</title><rect x="959.6" y="355.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="962.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (414 samples, 0.13%)</title><rect x="960.4" y="403.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (414 samples, 0.13%)</title><rect x="960.4" y="387.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="963.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (414 samples, 0.13%)</title><rect x="960.4" y="371.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (414 samples, 0.13%)</title><rect x="960.4" y="355.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="963.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (414 samples, 0.13%)</title><rect x="960.4" y="339.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="963.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (414 samples, 0.13%)</title><rect x="960.4" y="323.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="963.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (414 samples, 0.13%)</title><rect x="960.4" y="307.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="963.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (414 samples, 0.13%)</title><rect x="960.4" y="291.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.4" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (409 samples, 0.13%)</title><rect x="960.4" y="275.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="963.4" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (247 samples, 0.08%)</title><rect x="961.9" y="403.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="964.9" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (247 samples, 0.08%)</title><rect x="961.9" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (137 samples, 0.04%)</title><rect x="961.9" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (137 samples, 0.04%)</title><rect x="961.9" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="964.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (133 samples, 0.04%)</title><rect x="961.9" y="339.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="964.9" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (110 samples, 0.03%)</title><rect x="962.4" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.4" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (106 samples, 0.03%)</title><rect x="962.4" y="355.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="965.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (223 samples, 0.07%)</title><rect x="962.8" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.8" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (218 samples, 0.07%)</title><rect x="962.8" y="387.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="965.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (347 samples, 0.11%)</title><rect x="963.6" y="451.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="966.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (342 samples, 0.11%)</title><rect x="963.6" y="435.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="966.6" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (113 samples, 0.03%)</title><rect x="964.8" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.8" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (113 samples, 0.03%)</title><rect x="964.8" y="467.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.8" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (107 samples, 0.03%)</title><rect x="964.8" y="451.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="967.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (502 samples, 0.15%)</title><rect x="965.3" y="515.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (502 samples, 0.15%)</title><rect x="965.3" y="499.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (502 samples, 0.15%)</title><rect x="965.3" y="483.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.3" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (167 samples, 0.05%)</title><rect x="965.3" y="467.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="968.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (115 samples, 0.04%)</title><rect x="965.9" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (111 samples, 0.03%)</title><rect x="965.9" y="451.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="968.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (215 samples, 0.07%)</title><rect x="966.3" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (211 samples, 0.06%)</title><rect x="966.3" y="451.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="969.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (19,505 samples, 5.99%)</title><rect x="967.1" y="691.0" width="70.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="970.1" y="702.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (438 samples, 0.13%)</title><rect x="967.1" y="675.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="970.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (438 samples, 0.13%)</title><rect x="967.1" y="659.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$185/16393933.get$Lambda (159 samples, 0.05%)</title><rect x="967.1" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$185 (151 samples, 0.05%)</title><rect x="967.1" y="627.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="970.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$193/33036464.get$Lambda (279 samples, 0.09%)</title><rect x="967.6" y="643.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="970.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$193 (269 samples, 0.08%)</title><rect x="967.6" y="627.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="970.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/4024442.linkToTargetMethod (505 samples, 0.16%)</title><rect x="968.7" y="675.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (505 samples, 0.16%)</title><rect x="968.7" y="659.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/32074257.get$Lambda (505 samples, 0.16%)</title><rect x="968.7" y="643.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$187 (496 samples, 0.15%)</title><rect x="968.7" y="627.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="971.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3,331 samples, 1.02%)</title><rect x="970.5" y="675.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1151031.accept (2,598 samples, 0.80%)</title><rect x="970.5" y="659.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (2,598 samples, 0.80%)</title><rect x="970.5" y="643.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="973.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (2,598 samples, 0.80%)</title><rect x="970.5" y="627.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="973.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (2,598 samples, 0.80%)</title><rect x="970.5" y="611.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (2,598 samples, 0.80%)</title><rect x="970.5" y="595.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (2,598 samples, 0.80%)</title><rect x="970.5" y="579.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="973.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,598 samples, 0.80%)</title><rect x="970.5" y="563.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,598 samples, 0.80%)</title><rect x="970.5" y="547.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,598 samples, 0.80%)</title><rect x="970.5" y="531.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2,598 samples, 0.80%)</title><rect x="970.5" y="515.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="973.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/19216263.run (2,598 samples, 0.80%)</title><rect x="970.5" y="499.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2,598 samples, 0.80%)</title><rect x="970.5" y="483.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,091 samples, 0.34%)</title><rect x="970.5" y="467.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,091 samples, 0.34%)</title><rect x="970.5" y="451.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1,091 samples, 0.34%)</title><rect x="970.5" y="435.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (511 samples, 0.16%)</title><rect x="970.5" y="419.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (511 samples, 0.16%)</title><rect x="970.5" y="403.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (511 samples, 0.16%)</title><rect x="970.5" y="387.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="973.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (511 samples, 0.16%)</title><rect x="970.5" y="371.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (504 samples, 0.15%)</title><rect x="970.5" y="355.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="973.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (580 samples, 0.18%)</title><rect x="972.3" y="419.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="975.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (580 samples, 0.18%)</title><rect x="972.3" y="403.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="975.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (580 samples, 0.18%)</title><rect x="972.3" y="387.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (580 samples, 0.18%)</title><rect x="972.3" y="371.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="975.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (580 samples, 0.18%)</title><rect x="972.3" y="355.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="975.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (580 samples, 0.18%)</title><rect x="972.3" y="339.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="975.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (580 samples, 0.18%)</title><rect x="972.3" y="323.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="975.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (573 samples, 0.18%)</title><rect x="972.3" y="307.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="975.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (204 samples, 0.06%)</title><rect x="974.4" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (204 samples, 0.06%)</title><rect x="974.4" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="977.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (204 samples, 0.06%)</title><rect x="974.4" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="977.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197/13890655.get$Lambda (204 samples, 0.06%)</title><rect x="974.4" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="977.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197 (195 samples, 0.06%)</title><rect x="974.4" y="403.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="977.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1,302 samples, 0.40%)</title><rect x="975.2" y="467.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="978.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1,121 samples, 0.34%)</title><rect x="975.2" y="451.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="978.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (806 samples, 0.25%)</title><rect x="975.2" y="435.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="978.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (796 samples, 0.24%)</title><rect x="975.2" y="419.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="978.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (315 samples, 0.10%)</title><rect x="978.1" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.1" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (315 samples, 0.10%)</title><rect x="978.1" y="419.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.1" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (307 samples, 0.09%)</title><rect x="978.1" y="403.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="981.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (181 samples, 0.06%)</title><rect x="979.2" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$150/2099919.get (181 samples, 0.06%)</title><rect x="979.2" y="435.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="982.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (181 samples, 0.06%)</title><rect x="979.2" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="982.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (181 samples, 0.06%)</title><rect x="979.2" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (177 samples, 0.05%)</title><rect x="979.3" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.3" y="398.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.05%)</title><rect x="979.3" y="371.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="982.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$194/32946704.accept (733 samples, 0.23%)</title><rect x="979.9" y="659.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="982.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (733 samples, 0.23%)</title><rect x="979.9" y="643.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/32074257.run (733 samples, 0.23%)</title><rect x="979.9" y="627.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="982.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (733 samples, 0.23%)</title><rect x="979.9" y="611.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (733 samples, 0.23%)</title><rect x="979.9" y="595.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (733 samples, 0.23%)</title><rect x="979.9" y="579.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="982.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (733 samples, 0.23%)</title><rect x="979.9" y="563.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.9" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (723 samples, 0.22%)</title><rect x="979.9" y="547.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="982.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (93 samples, 0.03%)</title><rect x="982.6" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.6" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (93 samples, 0.03%)</title><rect x="982.6" y="659.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="985.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (830 samples, 0.25%)</title><rect x="982.9" y="675.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="985.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (449 samples, 0.14%)</title><rect x="982.9" y="659.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="985.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (449 samples, 0.14%)</title><rect x="982.9" y="643.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="985.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (449 samples, 0.14%)</title><rect x="982.9" y="627.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="985.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (449 samples, 0.14%)</title><rect x="982.9" y="611.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="985.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (449 samples, 0.14%)</title><rect x="982.9" y="595.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="985.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (449 samples, 0.14%)</title><rect x="982.9" y="579.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="985.9" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (440 samples, 0.14%)</title><rect x="982.9" y="563.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="985.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (381 samples, 0.12%)</title><rect x="984.5" y="659.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.5" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (371 samples, 0.11%)</title><rect x="984.5" y="643.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="987.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (3,294 samples, 1.01%)</title><rect x="985.9" y="675.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/2810801.run (1,811 samples, 0.56%)</title><rect x="985.9" y="659.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1,811 samples, 0.56%)</title><rect x="985.9" y="643.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="988.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,811 samples, 0.56%)</title><rect x="985.9" y="627.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,811 samples, 0.56%)</title><rect x="985.9" y="611.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="988.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,811 samples, 0.56%)</title><rect x="985.9" y="595.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,811 samples, 0.56%)</title><rect x="985.9" y="579.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="988.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/19216263.run (1,811 samples, 0.56%)</title><rect x="985.9" y="563.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="988.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,811 samples, 0.56%)</title><rect x="985.9" y="547.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1,810 samples, 0.56%)</title><rect x="985.9" y="531.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1,810 samples, 0.56%)</title><rect x="985.9" y="515.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="988.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (929 samples, 0.29%)</title><rect x="985.9" y="499.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (929 samples, 0.29%)</title><rect x="985.9" y="483.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="988.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (929 samples, 0.29%)</title><rect x="985.9" y="467.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="988.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/31242245.linkToTargetMethod (622 samples, 0.19%)</title><rect x="985.9" y="451.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/987179.invoke (622 samples, 0.19%)</title><rect x="985.9" y="435.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (622 samples, 0.19%)</title><rect x="985.9" y="419.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="988.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (622 samples, 0.19%)</title><rect x="985.9" y="403.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (622 samples, 0.19%)</title><rect x="985.9" y="387.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="988.9" y="398.0"></text>
</g>
<g>
<title>byte[] (621 samples, 0.19%)</title><rect x="985.9" y="371.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="988.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (307 samples, 0.09%)</title><rect x="988.2" y="451.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="991.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (307 samples, 0.09%)</title><rect x="988.2" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (307 samples, 0.09%)</title><rect x="988.2" y="419.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="991.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197/13890655.get$Lambda (307 samples, 0.09%)</title><rect x="988.2" y="403.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="991.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197 (305 samples, 0.09%)</title><rect x="988.2" y="387.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="991.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (881 samples, 0.27%)</title><rect x="989.3" y="499.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (881 samples, 0.27%)</title><rect x="989.3" y="483.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (881 samples, 0.27%)</title><rect x="989.3" y="467.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (881 samples, 0.27%)</title><rect x="989.3" y="451.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (881 samples, 0.27%)</title><rect x="989.3" y="435.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (881 samples, 0.27%)</title><rect x="989.3" y="419.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (881 samples, 0.27%)</title><rect x="989.3" y="403.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (881 samples, 0.27%)</title><rect x="989.3" y="387.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (878 samples, 0.27%)</title><rect x="989.3" y="371.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="992.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$157/32552637.run (1,483 samples, 0.46%)</title><rect x="992.5" y="659.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="995.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1,483 samples, 0.46%)</title><rect x="992.5" y="643.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="995.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (414 samples, 0.13%)</title><rect x="992.5" y="627.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="995.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (414 samples, 0.13%)</title><rect x="992.5" y="611.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="995.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$196/11651460.get$Lambda (414 samples, 0.13%)</title><rect x="992.5" y="595.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="995.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$196 (409 samples, 0.13%)</title><rect x="992.5" y="579.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="995.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,069 samples, 0.33%)</title><rect x="994.0" y="627.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,069 samples, 0.33%)</title><rect x="994.0" y="611.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1,069 samples, 0.33%)</title><rect x="994.0" y="595.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,069 samples, 0.33%)</title><rect x="994.0" y="579.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,069 samples, 0.33%)</title><rect x="994.0" y="563.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,063 samples, 0.33%)</title><rect x="994.0" y="547.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="997.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (6,630 samples, 2.04%)</title><rect x="997.8" y="675.0" width="24.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.8" y="686.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (2,215 samples, 0.68%)</title><rect x="997.8" y="659.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.8" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2,215 samples, 0.68%)</title><rect x="997.8" y="643.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1000.8" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2,215 samples, 0.68%)</title><rect x="997.8" y="627.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.8" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (2,215 samples, 0.68%)</title><rect x="997.8" y="611.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1000.8" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (2,190 samples, 0.67%)</title><rect x="997.8" y="595.0" width="8.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1000.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (4,415 samples, 1.36%)</title><rect x="1005.9" y="659.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (699 samples, 0.21%)</title><rect x="1005.9" y="643.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1008.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (699 samples, 0.21%)</title><rect x="1005.9" y="627.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1008.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$233/17255282.get$Lambda (699 samples, 0.21%)</title><rect x="1005.9" y="611.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1008.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$233 (672 samples, 0.21%)</title><rect x="1005.9" y="595.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1008.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (3,716 samples, 1.14%)</title><rect x="1008.4" y="643.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1011.4" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,478 samples, 0.45%)</title><rect x="1008.4" y="627.0" width="5.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1011.4" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (2,210 samples, 0.68%)</title><rect x="1013.9" y="627.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1016.9" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (2,210 samples, 0.68%)</title><rect x="1013.9" y="611.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.9" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (2,182 samples, 0.67%)</title><rect x="1013.9" y="595.0" width="7.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1016.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (3,174 samples, 0.97%)</title><rect x="1021.9" y="675.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (348 samples, 0.11%)</title><rect x="1021.9" y="659.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1024.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (348 samples, 0.11%)</title><rect x="1021.9" y="643.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$179/26454431.get$Lambda (348 samples, 0.11%)</title><rect x="1021.9" y="627.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1024.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$179 (340 samples, 0.10%)</title><rect x="1021.9" y="611.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1024.9" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,534 samples, 0.47%)</title><rect x="1023.1" y="659.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1026.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (716 samples, 0.22%)</title><rect x="1023.1" y="643.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1026.1" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (709 samples, 0.22%)</title><rect x="1023.1" y="627.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1026.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (818 samples, 0.25%)</title><rect x="1025.7" y="643.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1028.7" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (810 samples, 0.25%)</title><rect x="1025.7" y="627.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1028.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1,292 samples, 0.40%)</title><rect x="1028.7" y="659.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1031.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1,055 samples, 0.32%)</title><rect x="1028.7" y="643.0" width="3.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1031.7" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (237 samples, 0.07%)</title><rect x="1032.5" y="643.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1035.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (701 samples, 0.22%)</title><rect x="1033.4" y="675.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1036.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (701 samples, 0.22%)</title><rect x="1033.4" y="659.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (701 samples, 0.22%)</title><rect x="1033.4" y="643.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1036.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (701 samples, 0.22%)</title><rect x="1033.4" y="627.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1036.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (701 samples, 0.22%)</title><rect x="1033.4" y="611.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1036.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (701 samples, 0.22%)</title><rect x="1033.4" y="595.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1036.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (701 samples, 0.22%)</title><rect x="1033.4" y="579.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1036.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (701 samples, 0.22%)</title><rect x="1033.4" y="563.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1036.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (701 samples, 0.22%)</title><rect x="1033.4" y="547.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (694 samples, 0.21%)</title><rect x="1033.4" y="531.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1036.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (509 samples, 0.16%)</title><rect x="1035.9" y="675.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1038.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (509 samples, 0.16%)</title><rect x="1035.9" y="659.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (509 samples, 0.16%)</title><rect x="1035.9" y="643.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.9" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (503 samples, 0.15%)</title><rect x="1035.9" y="627.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1038.9" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (42,020 samples, 12.90%)</title><rect x="1037.7" y="691.0" width="152.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.7" y="702.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (4,661 samples, 1.43%)</title><rect x="1037.7" y="675.0" width="16.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1040.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (3,277 samples, 1.01%)</title><rect x="1037.7" y="659.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1040.7" y="670.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (336 samples, 0.10%)</title><rect x="1037.7" y="643.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1040.7" y="654.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (412 samples, 0.13%)</title><rect x="1039.0" y="643.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1042.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2,526 samples, 0.78%)</title><rect x="1040.5" y="643.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2,526 samples, 0.78%)</title><rect x="1040.5" y="627.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2,526 samples, 0.78%)</title><rect x="1040.5" y="611.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.5" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2,524 samples, 0.78%)</title><rect x="1040.5" y="595.0" width="9.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1043.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,384 samples, 0.42%)</title><rect x="1049.6" y="659.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1052.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,384 samples, 0.42%)</title><rect x="1049.6" y="643.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1052.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,384 samples, 0.42%)</title><rect x="1049.6" y="627.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1052.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1,384 samples, 0.42%)</title><rect x="1049.6" y="611.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1,384 samples, 0.42%)</title><rect x="1049.6" y="595.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1052.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,384 samples, 0.42%)</title><rect x="1049.6" y="579.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,384 samples, 0.42%)</title><rect x="1049.6" y="563.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,384 samples, 0.42%)</title><rect x="1049.6" y="547.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1052.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,384 samples, 0.42%)</title><rect x="1049.6" y="531.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.6" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,380 samples, 0.42%)</title><rect x="1049.6" y="515.0" width="5.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1052.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (37,359 samples, 11.47%)</title><rect x="1054.6" y="675.0" width="135.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.6" y="686.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (37,359 samples, 11.47%)</title><rect x="1054.6" y="659.0" width="135.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1057.6" y="670.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36,868 samples, 11.32%)</title><rect x="1054.6" y="643.0" width="133.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.6" y="654.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6,918 samples, 2.12%)</title><rect x="1054.6" y="627.0" width="25.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.6" y="638.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6,918 samples, 2.12%)</title><rect x="1054.6" y="611.0" width="25.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1057.6" y="622.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,140 samples, 1.27%)</title><rect x="1054.6" y="595.0" width="15.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1057.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,469 samples, 0.45%)</title><rect x="1054.6" y="579.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,469 samples, 0.45%)</title><rect x="1054.6" y="563.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,469 samples, 0.45%)</title><rect x="1054.6" y="547.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1057.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (179 samples, 0.05%)</title><rect x="1054.6" y="531.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1057.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,260 samples, 0.39%)</title><rect x="1055.4" y="531.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1058.4" y="542.0"></text>
</g>
<g>
<title>byte[] (1,231 samples, 0.38%)</title><rect x="1055.4" y="515.0" width="4.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1058.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (2,671 samples, 0.82%)</title><rect x="1060.0" y="579.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1063.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/26745031.linkToTargetMethod (161 samples, 0.05%)</title><rect x="1060.0" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/28097020.invokeStatic (161 samples, 0.05%)</title><rect x="1060.0" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1063.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$106/10655556.get$Lambda (161 samples, 0.05%)</title><rect x="1060.0" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.0" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dogm.ServiceImpl$$Lambda$106 (131 samples, 0.04%)</title><rect x="1060.0" y="515.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1063.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,877 samples, 0.58%)</title><rect x="1060.5" y="563.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,877 samples, 0.58%)</title><rect x="1060.5" y="547.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,877 samples, 0.58%)</title><rect x="1060.5" y="531.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1,805 samples, 0.55%)</title><rect x="1060.5" y="515.0" width="6.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1063.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ReplicasFraction.parse (134 samples, 0.04%)</title><rect x="1067.4" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ReplicasFraction.quorumSized (134 samples, 0.04%)</title><rect x="1067.4" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1070.4" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dogm.ReplicasFraction (127 samples, 0.04%)</title><rect x="1067.4" y="531.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1070.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.executeAsync (475 samples, 0.15%)</title><rect x="1067.9" y="563.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (353 samples, 0.11%)</title><rect x="1067.9" y="547.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (353 samples, 0.11%)</title><rect x="1067.9" y="531.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$108/20693185.get$Lambda (353 samples, 0.11%)</title><rect x="1067.9" y="515.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.9" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dogm.ServiceImpl$$Lambda$108 (324 samples, 0.10%)</title><rect x="1067.9" y="499.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1070.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (122 samples, 0.04%)</title><rect x="1069.2" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (122 samples, 0.04%)</title><rect x="1069.2" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1072.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (94 samples, 0.03%)</title><rect x="1069.2" y="515.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1072.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,778 samples, 0.85%)</title><rect x="1069.6" y="595.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1072.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,778 samples, 0.85%)</title><rect x="1069.6" y="579.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1072.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,778 samples, 0.85%)</title><rect x="1069.6" y="563.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (182 samples, 0.06%)</title><rect x="1069.6" y="547.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1072.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,573 samples, 0.79%)</title><rect x="1070.4" y="547.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.4" y="558.0"></text>
</g>
<g>
<title>byte[] (2,532 samples, 0.78%)</title><rect x="1070.4" y="531.0" width="9.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1073.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7,411 samples, 2.28%)</title><rect x="1079.7" y="627.0" width="26.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.7" y="638.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (731 samples, 0.22%)</title><rect x="1079.7" y="611.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1082.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,256 samples, 1.00%)</title><rect x="1082.4" y="611.0" width="11.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (3,157 samples, 0.97%)</title><rect x="1082.4" y="595.0" width="11.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1085.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (99 samples, 0.03%)</title><rect x="1093.8" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1096.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,417 samples, 1.05%)</title><rect x="1094.2" y="611.0" width="12.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,417 samples, 1.05%)</title><rect x="1094.2" y="595.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.2" y="606.0"></text>
</g>
<g>
<title>char[] (684 samples, 0.21%)</title><rect x="1094.2" y="579.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1097.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (365 samples, 0.11%)</title><rect x="1096.7" y="579.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1099.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,356 samples, 0.72%)</title><rect x="1098.0" y="579.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,356 samples, 0.72%)</title><rect x="1098.0" y="563.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,356 samples, 0.72%)</title><rect x="1098.0" y="547.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1101.0" y="558.0"></text>
</g>
<g>
<title>byte[] (2,352 samples, 0.72%)</title><rect x="1098.0" y="531.0" width="8.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1101.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (259 samples, 0.08%)</title><rect x="1106.6" y="627.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1109.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (259 samples, 0.08%)</title><rect x="1106.6" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (259 samples, 0.08%)</title><rect x="1106.6" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1109.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (227 samples, 0.07%)</title><rect x="1106.6" y="579.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1109.6" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22,264 samples, 6.84%)</title><rect x="1107.5" y="627.0" width="80.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1110.5" y="638.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (22,264 samples, 6.84%)</title><rect x="1107.5" y="611.0" width="80.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.5" y="622.0">one/nio/u..</text>
</g>
<g>
<title>char[] (1,990 samples, 0.61%)</title><rect x="1107.5" y="595.0" width="7.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1110.5" y="606.0"></text>
</g>
<g>
<title>char[] (5,301 samples, 1.63%)</title><rect x="1114.8" y="595.0" width="19.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1117.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String (1,463 samples, 0.45%)</title><rect x="1134.0" y="595.0" width="5.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1137.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String (107 samples, 0.03%)</title><rect x="1139.3" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1142.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13,403 samples, 4.12%)</title><rect x="1139.7" y="595.0" width="48.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.7" y="606.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13,403 samples, 4.12%)</title><rect x="1139.7" y="579.0" width="48.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.7" y="590.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13,403 samples, 4.12%)</title><rect x="1139.7" y="563.0" width="48.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.7" y="574.0">java..</text>
</g>
<g>
<title>byte[] (11,440 samples, 3.51%)</title><rect x="1139.7" y="547.0" width="41.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1142.7" y="558.0">byt..</text>
</g>
<g>
<title>byte[] (1,963 samples, 0.60%)</title><rect x="1181.1" y="547.0" width="7.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1184.1" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (491 samples, 0.15%)</title><rect x="1188.2" y="643.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (491 samples, 0.15%)</title><rect x="1188.2" y="627.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (484 samples, 0.15%)</title><rect x="1188.2" y="611.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.2" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (482 samples, 0.15%)</title><rect x="1188.2" y="595.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1191.2" y="606.0"></text>
</g>
</g>
</svg>
