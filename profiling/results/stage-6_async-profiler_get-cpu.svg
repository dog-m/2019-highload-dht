<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1173"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1173"> </text>
<g id="frames">
<g>
<title>all (6,187 samples, 100.00%)</title><rect x="10.0" y="1139.0" width="1180.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="1150.0">all</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.05%)</title><rect x="10.0" y="1123.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (22 samples, 0.36%)</title><rect x="10.8" y="1123.0" width="4.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.8" y="1134.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (4 samples, 0.06%)</title><rect x="11.0" y="1107.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="14.0" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (4 samples, 0.06%)</title><rect x="11.0" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.0" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="11.0" y="1075.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.0" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="11.0" y="1059.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.0" y="1070.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (17 samples, 0.27%)</title><rect x="11.7" y="1107.0" width="3.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.7" y="1118.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (17 samples, 0.27%)</title><rect x="11.7" y="1091.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.7" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (17 samples, 0.27%)</title><rect x="11.7" y="1075.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.7" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (15 samples, 0.24%)</title><rect x="12.1" y="1059.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.1" y="1070.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (3 samples, 0.05%)</title><rect x="12.3" y="1043.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.3" y="1054.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (2 samples, 0.03%)</title><rect x="12.5" y="1027.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.5" y="1038.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (2 samples, 0.03%)</title><rect x="12.5" y="1011.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="15.5" y="1022.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (2 samples, 0.03%)</title><rect x="12.5" y="995.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.5" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.10%)</title><rect x="13.2" y="1043.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.2" y="1054.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.03%)</title><rect x="14.6" y="1043.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="17.6" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (15 samples, 0.24%)</title><rect x="15.0" y="1123.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="18.0" y="1134.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (14 samples, 0.23%)</title><rect x="15.1" y="1107.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.1" y="1118.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (13 samples, 0.21%)</title><rect x="15.3" y="1091.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="18.3" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (13 samples, 0.21%)</title><rect x="15.3" y="1075.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="18.3" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (13 samples, 0.21%)</title><rect x="15.3" y="1059.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="18.3" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.10%)</title><rect x="15.9" y="1043.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="18.9" y="1054.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (3 samples, 0.05%)</title><rect x="16.5" y="1027.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="19.5" y="1038.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.03%)</title><rect x="16.7" y="1011.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="19.7" y="1022.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (4 samples, 0.06%)</title><rect x="17.1" y="1043.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.1" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (89 samples, 1.44%)</title><rect x="17.8" y="1123.0" width="17.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="20.8" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.05%)</title><rect x="19.2" y="1107.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.2" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (69 samples, 1.12%)</title><rect x="19.9" y="1107.0" width="13.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="22.9" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (67 samples, 1.08%)</title><rect x="19.9" y="1091.0" width="12.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="22.9" y="1102.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (2 samples, 0.03%)</title><rect x="19.9" y="1075.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="22.9" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.03%)</title><rect x="20.3" y="1075.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="23.3" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (62 samples, 1.00%)</title><rect x="20.7" y="1075.0" width="11.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="23.7" y="1086.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (5 samples, 0.08%)</title><rect x="21.4" y="1059.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="24.4" y="1070.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (3 samples, 0.05%)</title><rect x="21.6" y="1043.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="24.6" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (3 samples, 0.05%)</title><rect x="22.4" y="1059.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="25.4" y="1070.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (3 samples, 0.05%)</title><rect x="23.0" y="1059.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="26.0" y="1070.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (2 samples, 0.03%)</title><rect x="23.7" y="1059.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="26.7" y="1070.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned int, Thread*) (2 samples, 0.03%)</title><rect x="24.1" y="1059.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="27.1" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.03%)</title><rect x="24.7" y="1059.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="27.7" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (30 samples, 0.48%)</title><rect x="25.1" y="1059.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="28.1" y="1070.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (4 samples, 0.06%)</title><rect x="26.4" y="1043.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="29.4" y="1054.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (12 samples, 0.19%)</title><rect x="27.2" y="1043.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="30.2" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (2 samples, 0.03%)</title><rect x="27.2" y="1027.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="30.2" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (10 samples, 0.16%)</title><rect x="27.5" y="1027.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="30.5" y="1038.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (5 samples, 0.08%)</title><rect x="28.3" y="1011.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.3" y="1022.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (2 samples, 0.03%)</title><rect x="28.9" y="995.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="31.9" y="1006.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (5 samples, 0.08%)</title><rect x="29.6" y="1043.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="32.6" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (3 samples, 0.05%)</title><rect x="30.0" y="1027.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="33.0" y="1038.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (7 samples, 0.11%)</title><rect x="30.8" y="1059.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="33.8" y="1070.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.03%)</title><rect x="32.1" y="1059.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="35.1" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="32.7" y="1091.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="35.7" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (5 samples, 0.08%)</title><rect x="33.1" y="1107.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="36.1" y="1118.0"></text>
</g>
<g>
<title>Klass::class_loader() const (4 samples, 0.06%)</title><rect x="33.3" y="1091.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="36.3" y="1102.0"></text>
</g>
<g>
<title>Klass::class_loader() const (4 samples, 0.06%)</title><rect x="34.0" y="1107.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="37.0" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.16%)</title><rect x="34.8" y="1123.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="37.8" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.16%)</title><rect x="34.8" y="1107.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="37.8" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.85] (9 samples, 0.15%)</title><rect x="35.0" y="1091.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="38.0" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (7 samples, 0.11%)</title><rect x="35.4" y="1075.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="38.4" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.63] (2 samples, 0.03%)</title><rect x="35.4" y="1059.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="38.4" y="1070.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.06%)</title><rect x="35.7" y="1059.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="38.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="35.7" y="1043.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="38.7" y="1054.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="35.7" y="1027.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="38.7" y="1038.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="35.7" y="1011.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="38.7" y="1022.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="35.7" y="995.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="38.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.06%)</title><rect x="35.7" y="979.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="38.7" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.06%)</title><rect x="35.7" y="963.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="38.7" y="974.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.06%)</title><rect x="35.7" y="947.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="38.7" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.06%)</title><rect x="35.7" y="931.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="38.7" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="35.9" y="915.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="38.9" y="926.0"></text>
</g>
<g>
<title>[not_walkable_Java] (37 samples, 0.60%)</title><rect x="36.9" y="1123.0" width="7.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="39.9" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="37.1" y="1107.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.1" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (22 samples, 0.36%)</title><rect x="37.5" y="1107.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="40.5" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (16 samples, 0.26%)</title><rect x="37.7" y="1091.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="40.7" y="1102.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.08%)</title><rect x="37.7" y="1075.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="40.7" y="1086.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="37.8" y="1059.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="40.8" y="1070.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="38.2" y="1059.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="41.2" y="1070.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (10 samples, 0.16%)</title><rect x="38.8" y="1075.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="41.8" y="1086.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (4 samples, 0.06%)</title><rect x="38.8" y="1059.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="41.8" y="1070.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (2 samples, 0.03%)</title><rect x="38.8" y="1043.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="41.8" y="1054.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (6 samples, 0.10%)</title><rect x="39.6" y="1059.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="42.6" y="1070.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.06%)</title><rect x="39.8" y="1043.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="42.8" y="1054.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.06%)</title><rect x="39.8" y="1027.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="42.8" y="1038.0"></text>
</g>
<g>
<title>frame::is_deoptimized_frame() const (2 samples, 0.03%)</title><rect x="41.1" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="44.1" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.15%)</title><rect x="41.7" y="1107.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="44.7" y="1118.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (5 samples, 0.08%)</title><rect x="41.7" y="1091.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="44.7" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (4 samples, 0.06%)</title><rect x="42.6" y="1091.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="45.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.18%)</title><rect x="43.9" y="1123.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="46.9" y="1134.0"></text>
</g>
<g>
<title>__kernel_vsyscall (8 samples, 0.13%)</title><rect x="44.1" y="1107.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="47.1" y="1118.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (8 samples, 0.13%)</title><rect x="44.1" y="1091.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.1" y="1102.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (8 samples, 0.13%)</title><rect x="44.1" y="1075.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="47.1" y="1086.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.13%)</title><rect x="44.1" y="1059.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="47.1" y="1070.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.13%)</title><rect x="44.1" y="1043.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="47.1" y="1054.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="44.1" y="1027.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="47.1" y="1038.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="44.1" y="1011.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="47.1" y="1022.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="44.1" y="995.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="47.1" y="1006.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="44.1" y="979.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="47.1" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="44.1" y="963.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="47.1" y="974.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.10%)</title><rect x="44.5" y="1027.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="47.5" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.10%)</title><rect x="44.5" y="1011.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="47.5" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.10%)</title><rect x="44.5" y="995.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="47.5" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.10%)</title><rect x="44.5" y="979.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="47.5" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (305 samples, 4.93%)</title><rect x="46.0" y="1123.0" width="58.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="49.0" y="1134.0">[unkno..</text>
</g>
<g>
<title>Thread::current() (4 samples, 0.06%)</title><rect x="100.4" y="1107.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="103.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.16%)</title><rect x="101.2" y="1107.0" width="1.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="104.2" y="1118.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.03%)</title><rect x="101.4" y="1091.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="104.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="101.7" y="1091.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="104.7" y="1102.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.03%)</title><rect x="101.7" y="1075.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="104.7" y="1086.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.06%)</title><rect x="102.1" y="1091.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="105.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="102.1" y="1075.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="105.1" y="1086.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="102.1" y="1059.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="105.1" y="1070.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="102.1" y="1043.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.1" y="1054.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="102.1" y="1027.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="105.1" y="1038.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="102.1" y="1011.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.1" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.06%)</title><rect x="102.1" y="995.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="105.1" y="1006.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.06%)</title><rect x="102.1" y="979.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="105.1" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.06%)</title><rect x="102.1" y="963.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.1" y="974.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.05%)</title><rect x="103.3" y="1107.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="106.3" y="1118.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.03%)</title><rect x="103.8" y="1107.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.8" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="103.8" y="1091.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.8" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="103.8" y="1075.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="106.8" y="1086.0"></text>
</g>
<g>
<title>clone (92 samples, 1.49%)</title><rect x="104.2" y="1123.0" width="17.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="107.2" y="1134.0"></text>
</g>
<g>
<title>start_thread (92 samples, 1.49%)</title><rect x="104.2" y="1107.0" width="17.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="107.2" y="1118.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (92 samples, 1.49%)</title><rect x="104.2" y="1091.0" width="17.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="107.2" y="1102.0"></text>
</g>
<g>
<title>Thread::call_run() (92 samples, 1.49%)</title><rect x="104.2" y="1075.0" width="17.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="107.2" y="1086.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.03%)</title><rect x="104.2" y="1059.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="107.2" y="1070.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.03%)</title><rect x="104.2" y="1043.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="107.2" y="1054.0"></text>
</g>
<g>
<title>VMThread::run() (83 samples, 1.34%)</title><rect x="104.8" y="1059.0" width="15.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="107.8" y="1070.0"></text>
</g>
<g>
<title>VMThread::loop() (83 samples, 1.34%)</title><rect x="104.8" y="1043.0" width="15.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="107.8" y="1054.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (44 samples, 0.71%)</title><rect x="105.0" y="1027.0" width="8.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="108.0" y="1038.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (5 samples, 0.08%)</title><rect x="108.8" y="1011.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="111.8" y="1022.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (5 samples, 0.08%)</title><rect x="108.8" y="995.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="111.8" y="1006.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (4 samples, 0.06%)</title><rect x="109.0" y="979.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="112.0" y="990.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.62] (3 samples, 0.05%)</title><rect x="109.0" y="963.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="112.0" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.05%)</title><rect x="109.0" y="947.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="112.0" y="958.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.03%)</title><rect x="109.2" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="112.2" y="942.0"></text>
</g>
<g>
<title>CodeBlob::oop_map_for_return_address(unsigned char*) (2 samples, 0.03%)</title><rect x="109.2" y="915.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="112.2" y="926.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (2 samples, 0.03%)</title><rect x="109.2" y="899.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="112.2" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (17 samples, 0.27%)</title><rect x="109.9" y="1011.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="112.9" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (16 samples, 0.26%)</title><rect x="110.1" y="995.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.1" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (16 samples, 0.26%)</title><rect x="110.1" y="979.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="113.1" y="990.0"></text>
</g>
<g>
<title>sys_mprotect (8 samples, 0.13%)</title><rect x="110.1" y="963.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="113.1" y="974.0"></text>
</g>
<g>
<title>mprotect_fixup (6 samples, 0.10%)</title><rect x="110.3" y="947.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.3" y="958.0"></text>
</g>
<g>
<title>change_protection (6 samples, 0.10%)</title><rect x="110.3" y="931.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="113.3" y="942.0"></text>
</g>
<g>
<title>change_protection_range (6 samples, 0.10%)</title><rect x="110.3" y="915.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="113.3" y="926.0"></text>
</g>
<g>
<title>__ptep_modify_prot_commit (2 samples, 0.03%)</title><rect x="110.3" y="899.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.3" y="910.0"></text>
</g>
<g>
<title>native_set_pte_at (2 samples, 0.03%)</title><rect x="110.3" y="883.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="113.3" y="894.0"></text>
</g>
<g>
<title>atomic64_xchg_cx8 (2 samples, 0.03%)</title><rect x="110.7" y="899.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="113.7" y="910.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (2 samples, 0.03%)</title><rect x="111.1" y="899.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="114.1" y="910.0"></text>
</g>
<g>
<title>native_flush_tlb_others (2 samples, 0.03%)</title><rect x="111.1" y="883.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.1" y="894.0"></text>
</g>
<g>
<title>smp_call_function_many (2 samples, 0.03%)</title><rect x="111.1" y="867.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.1" y="878.0"></text>
</g>
<g>
<title>smp_call_function_single (2 samples, 0.03%)</title><rect x="111.1" y="851.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="114.1" y="862.0"></text>
</g>
<g>
<title>sys_sched_yield (8 samples, 0.13%)</title><rect x="111.7" y="963.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="114.7" y="974.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.13%)</title><rect x="111.7" y="947.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="114.7" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (8 samples, 0.13%)</title><rect x="111.7" y="931.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="114.7" y="942.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (6 samples, 0.10%)</title><rect x="113.4" y="1027.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="116.4" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.06%)</title><rect x="113.8" y="1011.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="116.8" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="113.8" y="995.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="116.8" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="113.8" y="979.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="116.8" y="990.0"></text>
</g>
<g>
<title>sys_mprotect (4 samples, 0.06%)</title><rect x="113.8" y="963.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="116.8" y="974.0"></text>
</g>
<g>
<title>mprotect_fixup (4 samples, 0.06%)</title><rect x="113.8" y="947.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="116.8" y="958.0"></text>
</g>
<g>
<title>change_protection (4 samples, 0.06%)</title><rect x="113.8" y="931.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="116.8" y="942.0"></text>
</g>
<g>
<title>change_protection_range (4 samples, 0.06%)</title><rect x="113.8" y="915.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="116.8" y="926.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (4 samples, 0.06%)</title><rect x="113.8" y="899.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="116.8" y="910.0"></text>
</g>
<g>
<title>native_flush_tlb_others (4 samples, 0.06%)</title><rect x="113.8" y="883.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="116.8" y="894.0"></text>
</g>
<g>
<title>smp_call_function_many (4 samples, 0.06%)</title><rect x="113.8" y="867.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="116.8" y="878.0"></text>
</g>
<g>
<title>smp_call_function_single (4 samples, 0.06%)</title><rect x="113.8" y="851.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="116.8" y="862.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.61] (31 samples, 0.50%)</title><rect x="114.7" y="1027.0" width="5.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="117.7" y="1038.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (31 samples, 0.50%)</title><rect x="114.7" y="1011.0" width="5.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="117.7" y="1022.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (31 samples, 0.50%)</title><rect x="114.7" y="995.0" width="5.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="117.7" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned int, bool) (31 samples, 0.50%)</title><rect x="114.7" y="979.0" width="5.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="117.7" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned int, bool, GenCollectedHeap::GenerationType) (31 samples, 0.50%)</title><rect x="114.7" y="963.0" width="5.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="117.7" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned int, bool, bool, bool, bool) (30 samples, 0.48%)</title><rect x="114.7" y="947.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="117.7" y="958.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned int, bool) (29 samples, 0.47%)</title><rect x="114.7" y="931.0" width="5.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="117.7" y="942.0"></text>
</g>
<g>
<title>DefNewGeneration::FastEvacuateFollowersClosure::do_void() (5 samples, 0.08%)</title><rect x="114.7" y="915.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="117.7" y="926.0"></text>
</g>
<g>
<title>void ContiguousSpace::oop_since_save_marks_iterate&lt;FastScanClosure&gt;(FastScanClosure*) (5 samples, 0.08%)</title><rect x="114.7" y="899.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="117.7" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FastScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, oopDesc*&gt;(FastScanClosure*, oopDesc*, Klass*) (5 samples, 0.08%)</title><rect x="114.7" y="883.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="117.7" y="894.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (21 samples, 0.34%)</title><rect x="115.7" y="915.0" width="4.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="118.7" y="926.0"></text>
</g>
<g>
<title>CardGeneration::younger_refs_iterate(OopsInGenClosure*, unsigned int) (9 samples, 0.15%)</title><rect x="115.7" y="899.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="118.7" y="910.0"></text>
</g>
<g>
<title>CardTableRS::younger_refs_in_space_iterate(Space*, OopsInGenClosure*, unsigned int) (9 samples, 0.15%)</title><rect x="115.7" y="883.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="118.7" y="894.0"></text>
</g>
<g>
<title>ClearNoncleanCardWrapper::do_MemRegion(MemRegion) (9 samples, 0.15%)</title><rect x="115.7" y="867.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="118.7" y="878.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (9 samples, 0.15%)</title><rect x="115.7" y="851.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="118.7" y="862.0"></text>
</g>
<g>
<title>BlockOffsetArrayContigSpace::block_start_unsafe(void const*) const (5 samples, 0.08%)</title><rect x="115.7" y="835.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="118.7" y="846.0"></text>
</g>
<g>
<title>ContiguousSpace::block_size(HeapWord const*) const (4 samples, 0.06%)</title><rect x="115.9" y="819.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="118.9" y="830.0"></text>
</g>
<g>
<title>FilteringDCTOC::walk_mem_region(MemRegion, HeapWord*, HeapWord*) (3 samples, 0.05%)</title><rect x="116.6" y="835.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="119.6" y="846.0"></text>
</g>
<g>
<title>StringTable::oops_do(OopClosure*) (4 samples, 0.06%)</title><rect x="117.4" y="899.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="120.4" y="910.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(oopDesc**) (2 samples, 0.03%)</title><rect x="117.8" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="120.8" y="894.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (7 samples, 0.11%)</title><rect x="118.3" y="899.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="121.3" y="910.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (7 samples, 0.11%)</title><rect x="118.3" y="883.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="121.3" y="894.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (4 samples, 0.06%)</title><rect x="118.5" y="867.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="121.5" y="878.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (2 samples, 0.03%)</title><rect x="118.7" y="851.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="121.7" y="862.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (2 samples, 0.03%)</title><rect x="119.3" y="867.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="122.3" y="878.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (2 samples, 0.03%)</title><rect x="119.3" y="851.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="122.3" y="862.0"></text>
</g>
<g>
<title>WatcherThread::run() (6 samples, 0.10%)</title><rect x="120.6" y="1059.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="123.6" y="1070.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (5 samples, 0.08%)</title><rect x="120.8" y="1043.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="123.8" y="1054.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.08%)</title><rect x="120.8" y="1027.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="123.8" y="1038.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (4 samples, 0.06%)</title><rect x="121.0" y="1011.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="124.0" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.05%)</title><rect x="121.0" y="995.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="124.0" y="1006.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="121.2" y="979.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="124.2" y="990.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="121.2" y="963.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="124.2" y="974.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="121.2" y="947.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="124.2" y="958.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="121.2" y="931.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="124.2" y="942.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="121.2" y="915.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="124.2" y="926.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="121.2" y="899.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="124.2" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,338 samples, 70.11%)</title><rect x="121.8" y="1123.0" width="827.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.8" y="1134.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,338 samples, 70.11%)</title><rect x="121.8" y="1107.0" width="827.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.8" y="1118.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,338 samples, 70.11%)</title><rect x="121.8" y="1091.0" width="827.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.8" y="1102.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (396 samples, 6.40%)</title><rect x="123.5" y="1075.0" width="75.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.5" y="1086.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (395 samples, 6.38%)</title><rect x="123.7" y="1059.0" width="75.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.7" y="1070.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (393 samples, 6.35%)</title><rect x="124.1" y="1043.0" width="74.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.1" y="1054.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$120/18004023.apply (392 samples, 6.34%)</title><rect x="124.2" y="1027.0" width="74.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.2" y="1038.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (392 samples, 6.34%)</title><rect x="124.2" y="1011.0" width="74.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.2" y="1022.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (392 samples, 6.34%)</title><rect x="124.2" y="995.0" width="74.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.2" y="1006.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (286 samples, 4.62%)</title><rect x="124.6" y="979.0" width="54.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.6" y="990.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (286 samples, 4.62%)</title><rect x="124.6" y="963.0" width="54.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.6" y="974.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (286 samples, 4.62%)</title><rect x="124.6" y="947.0" width="54.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.6" y="958.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (134 samples, 2.17%)</title><rect x="124.6" y="931.0" width="25.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.6" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (134 samples, 2.17%)</title><rect x="124.6" y="915.0" width="25.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.6" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (134 samples, 2.17%)</title><rect x="124.6" y="899.0" width="25.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.6" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/5261040.apply (134 samples, 2.17%)</title><rect x="124.6" y="883.0" width="25.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.6" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (134 samples, 2.17%)</title><rect x="124.6" y="867.0" width="25.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.6" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (134 samples, 2.17%)</title><rect x="124.6" y="851.0" width="25.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.6" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/30595298.apply (132 samples, 2.13%)</title><rect x="125.0" y="835.0" width="25.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.0" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (132 samples, 2.13%)</title><rect x="125.0" y="819.0" width="25.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.0" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.03%)</title><rect x="125.0" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.03%)</title><rect x="125.0" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="125.4" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="125.4" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (128 samples, 2.07%)</title><rect x="125.8" y="803.0" width="24.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.8" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (115 samples, 1.86%)</title><rect x="126.0" y="787.0" width="21.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.0" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (115 samples, 1.86%)</title><rect x="126.0" y="771.0" width="21.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.0" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$176/5866496.apply (112 samples, 1.81%)</title><rect x="126.5" y="755.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.5" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (112 samples, 1.81%)</title><rect x="126.5" y="739.0" width="21.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.5" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.03%)</title><rect x="126.5" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="126.5" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.15%)</title><rect x="126.9" y="723.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (9 samples, 0.15%)</title><rect x="126.9" y="707.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="129.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.05%)</title><rect x="127.1" y="691.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (5 samples, 0.08%)</title><rect x="127.7" y="691.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (3 samples, 0.05%)</title><rect x="128.1" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.05%)</title><rect x="128.1" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.06%)</title><rect x="128.6" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.06%)</title><rect x="128.6" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.03%)</title><rect x="128.6" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.03%)</title><rect x="128.6" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.03%)</title><rect x="128.6" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="129.0" y="691.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="129.0" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.03%)</title><rect x="129.0" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.03%)</title><rect x="129.0" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.03%)</title><rect x="129.0" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.03%)</title><rect x="129.0" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (41 samples, 0.66%)</title><rect x="129.4" y="723.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (41 samples, 0.66%)</title><rect x="129.4" y="707.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5 samples, 0.08%)</title><rect x="129.4" y="691.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.08%)</title><rect x="129.4" y="675.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.08%)</title><rect x="129.4" y="659.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (3 samples, 0.05%)</title><rect x="129.8" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (36 samples, 0.58%)</title><rect x="130.3" y="691.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (36 samples, 0.58%)</title><rect x="130.3" y="675.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (32 samples, 0.52%)</title><rect x="130.5" y="659.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (32 samples, 0.52%)</title><rect x="130.5" y="643.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (32 samples, 0.52%)</title><rect x="130.5" y="627.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (31 samples, 0.50%)</title><rect x="130.7" y="611.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (29 samples, 0.47%)</title><rect x="131.1" y="595.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.1" y="606.0"></text>
</g>
<g>
<title>__kernel_vsyscall (29 samples, 0.47%)</title><rect x="131.1" y="579.0" width="5.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="134.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (29 samples, 0.47%)</title><rect x="131.1" y="563.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="134.1" y="574.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (29 samples, 0.47%)</title><rect x="131.1" y="547.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="134.1" y="558.0"></text>
</g>
<g>
<title>sys_write (29 samples, 0.47%)</title><rect x="131.1" y="531.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.1" y="542.0"></text>
</g>
<g>
<title>vfs_write (29 samples, 0.47%)</title><rect x="131.1" y="515.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.1" y="526.0"></text>
</g>
<g>
<title>__vfs_write (28 samples, 0.45%)</title><rect x="131.1" y="499.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="134.1" y="510.0"></text>
</g>
<g>
<title>new_sync_write (28 samples, 0.45%)</title><rect x="131.1" y="483.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="134.1" y="494.0"></text>
</g>
<g>
<title>pipe_write (28 samples, 0.45%)</title><rect x="131.1" y="467.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="134.1" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (28 samples, 0.45%)</title><rect x="131.1" y="451.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="134.1" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (28 samples, 0.45%)</title><rect x="131.1" y="435.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="134.1" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (28 samples, 0.45%)</title><rect x="131.1" y="419.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="134.1" y="430.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="136.1" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="139.1" y="414.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="136.1" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="139.1" y="398.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="136.1" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="139.1" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="136.1" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="139.1" y="366.0"></text>
</g>
<g>
<title>call_on_stack (2 samples, 0.03%)</title><rect x="136.1" y="339.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="139.1" y="350.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.03%)</title><rect x="136.1" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="139.1" y="334.0"></text>
</g>
<g>
<title>rcu_process_callbacks (2 samples, 0.03%)</title><rect x="136.1" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="139.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.05%)</title><rect x="136.6" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (56 samples, 0.91%)</title><rect x="137.2" y="723.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (43 samples, 0.70%)</title><rect x="137.4" y="707.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (3 samples, 0.05%)</title><rect x="137.4" y="691.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.4" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.05%)</title><rect x="137.4" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.4" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.05%)</title><rect x="137.4" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.05%)</title><rect x="137.4" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.05%)</title><rect x="137.4" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.05%)</title><rect x="137.4" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.05%)</title><rect x="137.4" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.05%)</title><rect x="137.4" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.05%)</title><rect x="137.4" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.05%)</title><rect x="137.4" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.4" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.05%)</title><rect x="137.4" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (19 samples, 0.31%)</title><rect x="138.0" y="691.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="140.3" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.3" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="140.3" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.3" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="140.3" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.3" y="654.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$195/19686375.test (4 samples, 0.06%)</title><rect x="140.8" y="675.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.8" y="686.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (3 samples, 0.05%)</title><rect x="141.0" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/13050421.test (3 samples, 0.05%)</title><rect x="141.0" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.05%)</title><rect x="141.0" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="144.0" y="638.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/4651926.test (3 samples, 0.05%)</title><rect x="141.0" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.0" y="622.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.05%)</title><rect x="141.0" y="595.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/23660417.test (3 samples, 0.05%)</title><rect x="141.0" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.05%)</title><rect x="141.0" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="141.0" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="141.0" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (21 samples, 0.34%)</title><rect x="141.6" y="691.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.6" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (21 samples, 0.34%)</title><rect x="141.6" y="675.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.6" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (21 samples, 0.34%)</title><rect x="141.6" y="659.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (21 samples, 0.34%)</title><rect x="141.6" y="643.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.6" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (19 samples, 0.31%)</title><rect x="141.8" y="627.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.8" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (19 samples, 0.31%)</title><rect x="141.8" y="611.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (7 samples, 0.11%)</title><rect x="142.2" y="595.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.2" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (4 samples, 0.06%)</title><rect x="142.7" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.7" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.06%)</title><rect x="142.7" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.16%)</title><rect x="143.5" y="595.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.5" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.06%)</title><rect x="144.7" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (5 samples, 0.08%)</title><rect x="145.8" y="707.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (5 samples, 0.08%)</title><rect x="145.8" y="691.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="145.8" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="146.2" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.05%)</title><rect x="146.2" y="659.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1682085.invoke (3 samples, 0.05%)</title><rect x="146.2" y="643.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/18823673.invoke (2 samples, 0.03%)</title><rect x="146.4" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (6 samples, 0.10%)</title><rect x="146.7" y="707.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.10%)</title><rect x="146.7" y="691.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (11 samples, 0.18%)</title><rect x="148.1" y="787.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (11 samples, 0.18%)</title><rect x="148.1" y="771.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.16%)</title><rect x="148.3" y="755.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.16%)</title><rect x="148.3" y="739.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.11%)</title><rect x="148.7" y="723.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.11%)</title><rect x="148.7" y="707.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.10%)</title><rect x="148.7" y="691.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (5 samples, 0.08%)</title><rect x="148.8" y="675.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.08%)</title><rect x="148.8" y="659.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.06%)</title><rect x="149.0" y="643.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (3 samples, 0.05%)</title><rect x="149.0" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (3 samples, 0.05%)</title><rect x="149.0" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="152.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (2 samples, 0.03%)</title><rect x="149.2" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (2 samples, 0.03%)</title><rect x="149.2" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.03%)</title><rect x="149.2" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="149.2" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="149.2" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="150.2" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="150.2" y="915.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (150 samples, 2.42%)</title><rect x="150.6" y="931.0" width="28.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.6" y="942.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="150.6" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="150.6" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="150.9" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="150.9" y="899.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.03%)</title><rect x="150.9" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (146 samples, 2.36%)</title><rect x="151.3" y="915.0" width="27.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.3" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (131 samples, 2.12%)</title><rect x="151.3" y="899.0" width="25.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.3" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (131 samples, 2.12%)</title><rect x="151.3" y="883.0" width="25.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.3" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (130 samples, 2.10%)</title><rect x="151.3" y="867.0" width="24.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.3" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$140/25694846.apply (130 samples, 2.10%)</title><rect x="151.3" y="851.0" width="24.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.3" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (130 samples, 2.10%)</title><rect x="151.3" y="835.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.3" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (130 samples, 2.10%)</title><rect x="151.3" y="819.0" width="24.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.3" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (54 samples, 0.87%)</title><rect x="151.3" y="803.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (54 samples, 0.87%)</title><rect x="151.3" y="787.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (54 samples, 0.87%)</title><rect x="151.3" y="771.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$162/23286967.apply (54 samples, 0.87%)</title><rect x="151.3" y="755.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (54 samples, 0.87%)</title><rect x="151.3" y="739.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (54 samples, 0.87%)</title><rect x="151.3" y="723.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (54 samples, 0.87%)</title><rect x="151.3" y="707.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (47 samples, 0.76%)</title><rect x="151.3" y="691.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.3" y="702.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (6 samples, 0.10%)</title><rect x="151.3" y="675.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.3" y="686.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (6 samples, 0.10%)</title><rect x="151.3" y="659.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.3" y="670.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (5 samples, 0.08%)</title><rect x="151.5" y="643.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (40 samples, 0.65%)</title><rect x="152.5" y="675.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (37 samples, 0.60%)</title><rect x="152.5" y="659.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (37 samples, 0.60%)</title><rect x="152.5" y="643.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.5" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (36 samples, 0.58%)</title><rect x="152.7" y="627.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.7" y="638.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (20 samples, 0.32%)</title><rect x="152.7" y="611.0" width="3.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="155.7" y="622.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (20 samples, 0.32%)</title><rect x="152.7" y="595.0" width="3.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="155.7" y="606.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.05%)</title><rect x="153.0" y="579.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="156.0" y="590.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.03%)</title><rect x="153.0" y="563.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="156.0" y="574.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.18%)</title><rect x="154.4" y="579.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="157.4" y="590.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (6 samples, 0.10%)</title><rect x="154.8" y="563.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="157.8" y="574.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (5 samples, 0.08%)</title><rect x="154.9" y="547.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="157.9" y="558.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.03%)</title><rect x="155.9" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="158.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/12533877.run (15 samples, 0.24%)</title><rect x="156.7" y="611.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (15 samples, 0.24%)</title><rect x="156.7" y="595.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.7" y="606.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (15 samples, 0.24%)</title><rect x="156.7" y="579.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.7" y="590.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (12 samples, 0.19%)</title><rect x="156.7" y="563.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.7" y="574.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (12 samples, 0.19%)</title><rect x="156.7" y="547.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.7" y="558.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (12 samples, 0.19%)</title><rect x="156.7" y="531.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (12 samples, 0.19%)</title><rect x="156.7" y="515.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.7" y="526.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.05%)</title><rect x="159.0" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.05%)</title><rect x="159.0" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (3 samples, 0.05%)</title><rect x="159.5" y="659.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (3 samples, 0.05%)</title><rect x="159.5" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/Http2Frame.&lt;init&gt; (3 samples, 0.05%)</title><rect x="159.5" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (7 samples, 0.11%)</title><rect x="160.3" y="691.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.08%)</title><rect x="160.7" y="675.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (76 samples, 1.23%)</title><rect x="161.6" y="803.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (76 samples, 1.23%)</title><rect x="161.6" y="787.0" width="14.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (4 samples, 0.06%)</title><rect x="161.6" y="771.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (4 samples, 0.06%)</title><rect x="161.6" y="755.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (4 samples, 0.06%)</title><rect x="161.6" y="739.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndAddLong (4 samples, 0.06%)</title><rect x="161.6" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.03%)</title><rect x="162.4" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="162.4" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="162.4" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="162.4" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.03%)</title><rect x="162.4" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.03%)</title><rect x="162.4" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (10 samples, 0.16%)</title><rect x="163.0" y="771.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (10 samples, 0.16%)</title><rect x="163.0" y="755.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (8 samples, 0.13%)</title><rect x="163.3" y="739.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.3" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.13%)</title><rect x="163.3" y="723.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="166.3" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="163.7" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.06%)</title><rect x="164.1" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="167.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (4 samples, 0.06%)</title><rect x="164.1" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.1" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.03%)</title><rect x="164.5" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.03%)</title><rect x="164.5" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (59 samples, 0.95%)</title><rect x="164.9" y="771.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.9" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (54 samples, 0.87%)</title><rect x="165.8" y="755.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.8" y="766.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.03%)</title><rect x="165.8" y="739.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="168.8" y="750.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (40 samples, 0.65%)</title><rect x="166.2" y="739.0" width="7.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="169.2" y="750.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.03%)</title><rect x="166.2" y="723.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="169.2" y="734.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (36 samples, 0.58%)</title><rect x="166.6" y="723.0" width="6.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="169.6" y="734.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.15%)</title><rect x="167.5" y="707.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="170.5" y="718.0"></text>
</g>
<g>
<title>.L409 (3 samples, 0.05%)</title><rect x="167.5" y="691.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="170.5" y="702.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.03%)</title><rect x="168.5" y="691.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="171.5" y="702.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (9 samples, 0.15%)</title><rect x="169.8" y="707.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="172.8" y="718.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.03%)</title><rect x="170.0" y="691.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="173.0" y="702.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.05%)</title><rect x="170.4" y="691.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="173.4" y="702.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="170.4" y="675.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="173.4" y="686.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="170.4" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="173.4" y="670.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.03%)</title><rect x="171.0" y="691.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="174.0" y="702.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.16%)</title><rect x="171.5" y="707.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="174.5" y="718.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.08%)</title><rect x="171.9" y="691.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="174.9" y="702.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.03%)</title><rect x="172.5" y="675.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="175.5" y="686.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.03%)</title><rect x="172.9" y="691.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="175.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/6963423.run (11 samples, 0.18%)</title><rect x="174.0" y="739.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (10 samples, 0.16%)</title><rect x="174.2" y="723.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.2" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (10 samples, 0.16%)</title><rect x="174.2" y="707.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.2" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (10 samples, 0.16%)</title><rect x="174.2" y="691.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.2" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.16%)</title><rect x="174.2" y="675.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.2" y="686.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.16%)</title><rect x="174.2" y="659.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.2" y="670.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (10 samples, 0.16%)</title><rect x="174.2" y="643.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (9 samples, 0.15%)</title><rect x="174.4" y="627.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (6 samples, 0.10%)</title><rect x="175.0" y="611.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (6 samples, 0.10%)</title><rect x="175.0" y="595.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="178.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (5 samples, 0.08%)</title><rect x="175.2" y="579.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="178.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (4 samples, 0.06%)</title><rect x="175.2" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (14 samples, 0.23%)</title><rect x="176.5" y="899.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (11 samples, 0.18%)</title><rect x="176.7" y="883.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.10%)</title><rect x="176.7" y="867.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.05%)</title><rect x="177.3" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (5 samples, 0.08%)</title><rect x="177.8" y="867.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/24430281.linkToTargetMethod (5 samples, 0.08%)</title><rect x="177.8" y="851.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.8" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22860378.invoke (5 samples, 0.08%)</title><rect x="177.8" y="835.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.8" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/32983193.invoke (5 samples, 0.08%)</title><rect x="177.8" y="819.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.8" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="177.8" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="178.8" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.03%)</title><rect x="178.8" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (89 samples, 1.44%)</title><rect x="179.2" y="979.0" width="16.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.2" y="990.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (2 samples, 0.03%)</title><rect x="179.2" y="963.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (87 samples, 1.41%)</title><rect x="179.6" y="963.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (87 samples, 1.41%)</title><rect x="179.6" y="947.0" width="16.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.6" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (87 samples, 1.41%)</title><rect x="179.6" y="931.0" width="16.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.6" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (85 samples, 1.37%)</title><rect x="179.7" y="915.0" width="16.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="182.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (85 samples, 1.37%)</title><rect x="179.7" y="899.0" width="16.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="182.7" y="910.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (85 samples, 1.37%)</title><rect x="179.7" y="883.0" width="16.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="182.7" y="894.0"></text>
</g>
<g>
<title>sys_write (84 samples, 1.36%)</title><rect x="179.7" y="867.0" width="16.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="182.7" y="878.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.05%)</title><rect x="179.9" y="851.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="182.9" y="862.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="179.9" y="835.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="182.9" y="846.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="179.9" y="819.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="182.9" y="830.0"></text>
</g>
<g>
<title>vfs_write (79 samples, 1.28%)</title><rect x="180.7" y="851.0" width="15.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="183.7" y="862.0"></text>
</g>
<g>
<title>__vfs_write (75 samples, 1.21%)</title><rect x="180.9" y="835.0" width="14.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.9" y="846.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="181.1" y="819.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="184.1" y="830.0"></text>
</g>
<g>
<title>new_sync_write (71 samples, 1.15%)</title><rect x="181.5" y="819.0" width="13.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="184.5" y="830.0"></text>
</g>
<g>
<title>kill_fasync (2 samples, 0.03%)</title><rect x="182.0" y="803.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="185.0" y="814.0"></text>
</g>
<g>
<title>pipe_write (66 samples, 1.07%)</title><rect x="182.4" y="803.0" width="12.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="185.4" y="814.0"></text>
</g>
<g>
<title>__wake_up_sync_key (60 samples, 0.97%)</title><rect x="182.6" y="787.0" width="11.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="185.6" y="798.0"></text>
</g>
<g>
<title>__wake_up_common_lock (60 samples, 0.97%)</title><rect x="182.6" y="771.0" width="11.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="185.6" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (60 samples, 0.97%)</title><rect x="182.6" y="755.0" width="11.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="185.6" y="766.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.03%)</title><rect x="194.4" y="787.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.4" y="798.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.05%)</title><rect x="195.2" y="835.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="198.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (6 samples, 0.10%)</title><rect x="196.3" y="979.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (2 samples, 0.03%)</title><rect x="197.1" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.03%)</title><rect x="197.1" y="947.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.1" y="958.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.03%)</title><rect x="197.1" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.1" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.03%)</title><rect x="197.1" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.1" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.03%)</title><rect x="197.1" y="899.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (8 samples, 0.13%)</title><rect x="197.5" y="979.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (8 samples, 0.13%)</title><rect x="197.5" y="963.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (8 samples, 0.13%)</title><rect x="197.5" y="947.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.5" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.08%)</title><rect x="197.5" y="931.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.5" y="942.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.08%)</title><rect x="197.5" y="915.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.5" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="198.4" y="931.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.4" y="942.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (3 samples, 0.05%)</title><rect x="198.4" y="915.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.4" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="198.4" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="201.4" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="198.4" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.4" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (3 samples, 0.05%)</title><rect x="198.4" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.4" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="198.4" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.4" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.05%)</title><rect x="198.4" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.4" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.05%)</title><rect x="198.4" y="819.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.05%)</title><rect x="199.0" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.05%)</title><rect x="199.0" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.05%)</title><rect x="199.0" y="1043.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.05%)</title><rect x="199.0" y="1027.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.05%)</title><rect x="199.0" y="1011.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.05%)</title><rect x="199.0" y="995.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (989 samples, 15.99%)</title><rect x="199.8" y="1075.0" width="188.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.8" y="1086.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (145 samples, 2.34%)</title><rect x="200.2" y="1059.0" width="27.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.2" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (142 samples, 2.30%)</title><rect x="200.2" y="1043.0" width="27.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.2" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (140 samples, 2.26%)</title><rect x="200.5" y="1027.0" width="26.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.5" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (140 samples, 2.26%)</title><rect x="200.5" y="1011.0" width="26.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.5" y="1022.0">j..</text>
</g>
<g>
<title>Unsafe_Park (15 samples, 0.24%)</title><rect x="200.9" y="995.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="203.9" y="1006.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.05%)</title><rect x="201.3" y="979.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="204.3" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="201.5" y="963.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="204.5" y="974.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (3 samples, 0.05%)</title><rect x="201.9" y="979.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="204.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.99%)</title><rect x="203.8" y="995.0" width="23.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="206.8" y="1006.0">[..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="203.8" y="979.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="206.8" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="203.8" y="963.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="206.8" y="974.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="203.8" y="947.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="206.8" y="958.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="203.8" y="931.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="206.8" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (118 samples, 1.91%)</title><rect x="204.3" y="979.0" width="22.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="207.3" y="990.0">_..</text>
</g>
<g>
<title>entry_SYSENTER_32 (116 samples, 1.87%)</title><rect x="204.7" y="963.0" width="22.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="207.7" y="974.0">e..</text>
</g>
<g>
<title>do_fast_syscall_32 (116 samples, 1.87%)</title><rect x="204.7" y="947.0" width="22.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="207.7" y="958.0">d..</text>
</g>
<g>
<title>sys_futex (116 samples, 1.87%)</title><rect x="204.7" y="931.0" width="22.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="207.7" y="942.0">s..</text>
</g>
<g>
<title>do_futex (114 samples, 1.84%)</title><rect x="205.1" y="915.0" width="21.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="208.1" y="926.0">d..</text>
</g>
<g>
<title>futex_wait (114 samples, 1.84%)</title><rect x="205.1" y="899.0" width="21.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="208.1" y="910.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (113 samples, 1.83%)</title><rect x="205.1" y="883.0" width="21.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="208.1" y="894.0">f..</text>
</g>
<g>
<title>schedule (112 samples, 1.81%)</title><rect x="205.3" y="867.0" width="21.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="208.3" y="878.0">s..</text>
</g>
<g>
<title>__sched_text_start (112 samples, 1.81%)</title><rect x="205.3" y="851.0" width="21.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="208.3" y="862.0">_..</text>
</g>
<g>
<title>finish_task_switch (112 samples, 1.81%)</title><rect x="205.3" y="835.0" width="21.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="208.3" y="846.0">f..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="227.4" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="227.4" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="227.4" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (842 samples, 13.61%)</title><rect x="227.8" y="1059.0" width="160.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.8" y="1070.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (836 samples, 13.51%)</title><rect x="228.9" y="1043.0" width="159.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.9" y="1054.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (817 samples, 13.21%)</title><rect x="231.4" y="1027.0" width="155.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.4" y="1038.0">java/util/concurrent..</text>
</g>
<g>
<title>__clock_gettime (291 samples, 4.70%)</title><rect x="232.6" y="1011.0" width="55.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="235.6" y="1022.0">__clo..</text>
</g>
<g>
<title>[unknown] (65 samples, 1.05%)</title><rect x="234.3" y="995.0" width="12.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="237.3" y="1006.0"></text>
</g>
<g>
<title>__kernel_vsyscall (65 samples, 1.05%)</title><rect x="234.3" y="979.0" width="12.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="237.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (65 samples, 1.05%)</title><rect x="234.3" y="963.0" width="12.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="237.3" y="974.0"></text>
</g>
<g>
<title>__get_user_4 (2 samples, 0.03%)</title><rect x="234.3" y="947.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="237.3" y="958.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (63 samples, 1.02%)</title><rect x="234.7" y="947.0" width="12.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="237.7" y="958.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="246.7" y="995.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="249.7" y="1006.0"></text>
</g>
<g>
<title>__kernel_vsyscall (204 samples, 3.30%)</title><rect x="247.3" y="995.0" width="38.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="250.3" y="1006.0">__k..</text>
</g>
<g>
<title>entry_SYSENTER_32 (139 samples, 2.25%)</title><rect x="259.7" y="979.0" width="26.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="262.7" y="990.0">e..</text>
</g>
<g>
<title>do_fast_syscall_32 (133 samples, 2.15%)</title><rect x="259.8" y="963.0" width="25.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="262.8" y="974.0">d..</text>
</g>
<g>
<title>clockid_to_kclock.part.3 (3 samples, 0.05%)</title><rect x="260.4" y="947.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="263.4" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="261.0" y="947.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="264.0" y="958.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="261.0" y="931.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="264.0" y="942.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="261.0" y="915.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="264.0" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="261.0" y="899.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="264.0" y="910.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (5 samples, 0.08%)</title><rect x="261.4" y="947.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="264.4" y="958.0"></text>
</g>
<g>
<title>put_timespec64 (2 samples, 0.03%)</title><rect x="262.3" y="947.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="265.3" y="958.0"></text>
</g>
<g>
<title>sys_clock_gettime (118 samples, 1.91%)</title><rect x="262.7" y="947.0" width="22.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="265.7" y="958.0">s..</text>
</g>
<g>
<title>posix_ktime_get_ts (79 samples, 1.28%)</title><rect x="264.2" y="931.0" width="15.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="267.2" y="942.0"></text>
</g>
<g>
<title>ktime_get_ts64 (72 samples, 1.16%)</title><rect x="265.0" y="915.0" width="13.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="268.0" y="926.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (55 samples, 0.89%)</title><rect x="268.0" y="899.0" width="10.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="271.0" y="910.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (51 samples, 0.82%)</title><rect x="268.8" y="883.0" width="9.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="271.8" y="894.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (3 samples, 0.05%)</title><rect x="278.7" y="915.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="281.7" y="926.0"></text>
</g>
<g>
<title>put_timespec64 (31 samples, 0.50%)</title><rect x="279.3" y="931.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="282.3" y="942.0"></text>
</g>
<g>
<title>_copy_to_user (26 samples, 0.42%)</title><rect x="280.3" y="915.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="283.3" y="926.0"></text>
</g>
<g>
<title>__copy_user_ll (26 samples, 0.42%)</title><rect x="280.3" y="899.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="283.3" y="910.0"></text>
</g>
<g>
<title>sys_clock_gettime (5 samples, 0.08%)</title><rect x="285.2" y="963.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="288.2" y="974.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (10 samples, 0.16%)</title><rect x="286.2" y="995.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="289.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.05%)</title><rect x="288.3" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (510 samples, 8.24%)</title><rect x="289.0" y="1011.0" width="97.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.0" y="1022.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (510 samples, 8.24%)</title><rect x="289.0" y="995.0" width="97.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.0" y="1006.0">jdk/interna..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.06%)</title><rect x="290.0" y="979.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="293.0" y="990.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (2 samples, 0.03%)</title><rect x="290.9" y="979.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="293.9" y="990.0"></text>
</g>
<g>
<title>Unsafe_Park (496 samples, 8.02%)</title><rect x="291.5" y="979.0" width="94.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="294.5" y="990.0">Unsafe_Park</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (6 samples, 0.10%)</title><rect x="292.8" y="963.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="295.8" y="974.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (33 samples, 0.53%)</title><rect x="294.2" y="963.0" width="6.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="297.2" y="974.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.06%)</title><rect x="295.9" y="947.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="298.9" y="958.0"></text>
</g>
<g>
<title>__clock_gettime (12 samples, 0.19%)</title><rect x="296.7" y="947.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="299.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="296.7" y="931.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="299.7" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.05%)</title><rect x="296.7" y="915.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="299.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.05%)</title><rect x="296.7" y="899.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="299.7" y="910.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.05%)</title><rect x="296.7" y="883.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="299.7" y="894.0"></text>
</g>
<g>
<title>__kernel_vsyscall (9 samples, 0.15%)</title><rect x="297.2" y="931.0" width="1.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="300.2" y="942.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.08%)</title><rect x="298.0" y="915.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.0" y="926.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.08%)</title><rect x="298.0" y="899.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="301.0" y="910.0"></text>
</g>
<g>
<title>sys_clock_gettime (4 samples, 0.06%)</title><rect x="298.2" y="883.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="301.2" y="894.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (3 samples, 0.05%)</title><rect x="298.2" y="867.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="301.2" y="878.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.05%)</title><rect x="298.2" y="851.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="301.2" y="862.0"></text>
</g>
<g>
<title>__divdi3 (3 samples, 0.05%)</title><rect x="298.9" y="947.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="301.9" y="958.0"></text>
</g>
<g>
<title>__moddi3 (2 samples, 0.03%)</title><rect x="299.5" y="947.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="302.5" y="958.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long long, bool) (3 samples, 0.05%)</title><rect x="299.9" y="947.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="302.9" y="958.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="300.5" y="963.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="303.5" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (2 samples, 0.03%)</title><rect x="300.9" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="303.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="301.2" y="963.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="304.2" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.05%)</title><rect x="301.2" y="947.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="304.2" y="958.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.05%)</title><rect x="301.2" y="931.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="304.2" y="942.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.05%)</title><rect x="301.2" y="915.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="304.2" y="926.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.05%)</title><rect x="301.8" y="963.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="304.8" y="974.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="302.4" y="963.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="305.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="302.4" y="947.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="305.4" y="958.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="302.4" y="931.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="305.4" y="942.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="302.4" y="915.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="305.4" y="926.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="302.4" y="899.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="305.4" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (419 samples, 6.77%)</title><rect x="302.9" y="963.0" width="80.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="305.9" y="974.0">__kernel_..</text>
</g>
<g>
<title>entry_SYSENTER_32 (416 samples, 6.72%)</title><rect x="303.5" y="947.0" width="79.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="306.5" y="958.0">entry_SYS..</text>
</g>
<g>
<title>do_fast_syscall_32 (416 samples, 6.72%)</title><rect x="303.5" y="931.0" width="79.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="306.5" y="942.0">do_fast_s..</text>
</g>
<g>
<title>sys_futex (414 samples, 6.69%)</title><rect x="303.9" y="915.0" width="79.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="306.9" y="926.0">sys_futex</text>
</g>
<g>
<title>do_futex (413 samples, 6.68%)</title><rect x="303.9" y="899.0" width="78.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.9" y="910.0">do_futex</text>
</g>
<g>
<title>futex_wait (412 samples, 6.66%)</title><rect x="303.9" y="883.0" width="78.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.9" y="894.0">futex_wait</text>
</g>
<g>
<title>futex_wait_queue_me (396 samples, 6.40%)</title><rect x="304.5" y="867.0" width="75.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="307.5" y="878.0">futex_wa..</text>
</g>
<g>
<title>hrtimer_start_range_ns (17 samples, 0.27%)</title><rect x="305.2" y="851.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="308.2" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.26%)</title><rect x="305.2" y="835.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="308.2" y="846.0"></text>
</g>
<g>
<title>schedule (374 samples, 6.04%)</title><rect x="308.7" y="851.0" width="71.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="311.7" y="862.0">schedule</text>
</g>
<g>
<title>__sched_text_start (373 samples, 6.03%)</title><rect x="308.9" y="835.0" width="71.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="311.9" y="846.0">__sched_..</text>
</g>
<g>
<title>finish_task_switch (372 samples, 6.01%)</title><rect x="309.1" y="819.0" width="70.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="312.1" y="830.0">finish_t..</text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.05%)</title><rect x="379.2" y="803.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="382.2" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.05%)</title><rect x="379.2" y="787.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="382.2" y="798.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.05%)</title><rect x="379.2" y="771.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="382.2" y="782.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.05%)</title><rect x="379.2" y="755.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="382.2" y="766.0"></text>
</g>
<g>
<title>call_on_stack (3 samples, 0.05%)</title><rect x="379.2" y="739.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="382.2" y="750.0"></text>
</g>
<g>
<title>__do_softirq (3 samples, 0.05%)</title><rect x="379.2" y="723.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="382.2" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.06%)</title><rect x="380.0" y="867.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="383.0" y="878.0"></text>
</g>
<g>
<title>hrtimer_cancel (5 samples, 0.08%)</title><rect x="380.8" y="867.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="383.8" y="878.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (5 samples, 0.08%)</title><rect x="380.8" y="851.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="383.8" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.08%)</title><rect x="380.8" y="835.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="383.8" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (9 samples, 0.15%)</title><rect x="383.1" y="963.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="386.1" y="974.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long long, bool) (2 samples, 0.03%)</title><rect x="385.7" y="963.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="388.7" y="974.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (4 samples, 0.06%)</title><rect x="386.3" y="1011.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="389.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (3 samples, 0.05%)</title><rect x="387.2" y="1027.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="387.4" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="387.4" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3 samples, 0.05%)</title><rect x="387.8" y="1027.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$196/11651460.run (318 samples, 5.14%)</title><rect x="388.6" y="1075.0" width="60.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.6" y="1086.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (318 samples, 5.14%)</title><rect x="388.6" y="1059.0" width="60.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.6" y="1070.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (318 samples, 5.14%)</title><rect x="388.6" y="1043.0" width="60.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.6" y="1054.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (318 samples, 5.14%)</title><rect x="388.6" y="1027.0" width="60.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.6" y="1038.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (318 samples, 5.14%)</title><rect x="388.6" y="1011.0" width="60.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.6" y="1022.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (318 samples, 5.14%)</title><rect x="388.6" y="995.0" width="60.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="391.6" y="1006.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (318 samples, 5.14%)</title><rect x="388.6" y="979.0" width="60.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.6" y="990.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (317 samples, 5.12%)</title><rect x="388.8" y="963.0" width="60.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.8" y="974.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (317 samples, 5.12%)</title><rect x="388.8" y="947.0" width="60.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.8" y="958.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (317 samples, 5.12%)</title><rect x="388.8" y="931.0" width="60.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.8" y="942.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (317 samples, 5.12%)</title><rect x="388.8" y="915.0" width="60.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.8" y="926.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (22 samples, 0.36%)</title><rect x="389.7" y="899.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (20 samples, 0.32%)</title><rect x="389.9" y="883.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="392.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.31%)</title><rect x="390.1" y="867.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (19 samples, 0.31%)</title><rect x="390.1" y="851.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 0.31%)</title><rect x="390.1" y="835.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5 samples, 0.08%)</title><rect x="390.7" y="819.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/20700430.apply (4 samples, 0.06%)</title><rect x="390.9" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.06%)</title><rect x="390.9" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.06%)</title><rect x="390.9" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.05%)</title><rect x="391.1" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.03%)</title><rect x="391.3" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.10%)</title><rect x="391.6" y="819.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.10%)</title><rect x="391.6" y="803.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="391.6" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.03%)</title><rect x="391.6" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="391.6" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (2 samples, 0.03%)</title><rect x="391.6" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/10502657.apply (4 samples, 0.06%)</title><rect x="392.0" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (4 samples, 0.06%)</title><rect x="392.0" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 0.06%)</title><rect x="392.0" y="755.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="395.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/10627322.apply (4 samples, 0.06%)</title><rect x="392.0" y="739.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (4 samples, 0.06%)</title><rect x="392.0" y="723.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2 samples, 0.03%)</title><rect x="392.4" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="392.4" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="392.4" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.03%)</title><rect x="392.4" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="395.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.03%)</title><rect x="392.4" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.03%)</title><rect x="392.4" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.08%)</title><rect x="392.8" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.08%)</title><rect x="392.8" y="803.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.08%)</title><rect x="392.8" y="787.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (5 samples, 0.08%)</title><rect x="392.8" y="771.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="395.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.start (5 samples, 0.08%)</title><rect x="392.8" y="755.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (5 samples, 0.08%)</title><rect x="392.8" y="739.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="392.8" y="723.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="395.8" y="734.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="393.0" y="707.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="396.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="393.0" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="396.0" y="702.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="393.0" y="675.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="396.0" y="686.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="393.0" y="659.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="396.0" y="670.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="393.0" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="396.0" y="654.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="393.0" y="627.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="396.0" y="638.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="393.0" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="396.0" y="622.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="393.0" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="396.0" y="606.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="393.0" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="396.0" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="393.0" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="396.0" y="574.0"></text>
</g>
<g>
<title>clone (2 samples, 0.03%)</title><rect x="393.4" y="707.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="396.4" y="718.0"></text>
</g>
<g>
<title>restore_all (2 samples, 0.03%)</title><rect x="393.4" y="691.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="396.4" y="702.0"></text>
</g>
<g>
<title>do_int80_syscall_32 (2 samples, 0.03%)</title><rect x="393.4" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="396.4" y="686.0"></text>
</g>
<g>
<title>sys_clone (2 samples, 0.03%)</title><rect x="393.4" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="396.4" y="670.0"></text>
</g>
<g>
<title>_do_fork (2 samples, 0.03%)</title><rect x="393.4" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="396.4" y="654.0"></text>
</g>
<g>
<title>copy_process.part.42 (2 samples, 0.03%)</title><rect x="393.4" y="627.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="396.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (290 samples, 4.69%)</title><rect x="393.9" y="899.0" width="55.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.9" y="910.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (290 samples, 4.69%)</title><rect x="393.9" y="883.0" width="55.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.9" y="894.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (290 samples, 4.69%)</title><rect x="393.9" y="867.0" width="55.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.9" y="878.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (290 samples, 4.69%)</title><rect x="393.9" y="851.0" width="55.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.9" y="862.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (287 samples, 4.64%)</title><rect x="394.1" y="835.0" width="54.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.1" y="846.0">jdk/i..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (283 samples, 4.57%)</title><rect x="394.1" y="819.0" width="54.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.1" y="830.0">java/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (283 samples, 4.57%)</title><rect x="394.1" y="803.0" width="54.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.1" y="814.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (283 samples, 4.57%)</title><rect x="394.1" y="787.0" width="54.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.1" y="798.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (280 samples, 4.53%)</title><rect x="394.7" y="771.0" width="53.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.7" y="782.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (3 samples, 0.05%)</title><rect x="394.7" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.05%)</title><rect x="394.7" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.05%)</title><rect x="394.7" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (277 samples, 4.48%)</title><rect x="395.3" y="755.0" width="52.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.3" y="766.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (268 samples, 4.33%)</title><rect x="397.0" y="739.0" width="51.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.0" y="750.0">sun/n..</text>
</g>
<g>
<title>__kernel_vsyscall (262 samples, 4.23%)</title><rect x="397.7" y="723.0" width="50.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="400.7" y="734.0">__ker..</text>
</g>
<g>
<title>entry_SYSENTER_32 (260 samples, 4.20%)</title><rect x="398.1" y="707.0" width="49.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.1" y="718.0">entry..</text>
</g>
<g>
<title>do_fast_syscall_32 (260 samples, 4.20%)</title><rect x="398.1" y="691.0" width="49.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="401.1" y="702.0">do_fa..</text>
</g>
<g>
<title>sys_writev (257 samples, 4.15%)</title><rect x="398.7" y="675.0" width="49.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.7" y="686.0">sys_w..</text>
</g>
<g>
<title>do_writev (255 samples, 4.12%)</title><rect x="398.7" y="659.0" width="48.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="401.7" y="670.0">do_w..</text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.06%)</title><rect x="398.7" y="643.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="401.7" y="654.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="398.7" y="627.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="401.7" y="638.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="398.9" y="611.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.9" y="622.0"></text>
</g>
<g>
<title>do_iter_write (2 samples, 0.03%)</title><rect x="399.5" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="402.5" y="654.0"></text>
</g>
<g>
<title>vfs_writev (249 samples, 4.02%)</title><rect x="399.8" y="643.0" width="47.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="402.8" y="654.0">vfs_..</text>
</g>
<g>
<title>do_iter_write (244 samples, 3.94%)</title><rect x="400.0" y="627.0" width="46.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="403.0" y="638.0">do_i..</text>
</g>
<g>
<title>do_iter_readv_writev (238 samples, 3.85%)</title><rect x="400.2" y="611.0" width="45.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="403.2" y="622.0">do_i..</text>
</g>
<g>
<title>sock_write_iter (237 samples, 3.83%)</title><rect x="400.4" y="595.0" width="45.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="403.4" y="606.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.03%)</title><rect x="400.8" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="403.8" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (233 samples, 3.77%)</title><rect x="401.2" y="579.0" width="44.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="404.2" y="590.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (229 samples, 3.70%)</title><rect x="401.2" y="563.0" width="43.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="404.2" y="574.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (227 samples, 3.67%)</title><rect x="401.6" y="547.0" width="43.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="404.6" y="558.0">tcp_..</text>
</g>
<g>
<title>tcp_sendmsg_locked (221 samples, 3.57%)</title><rect x="402.7" y="531.0" width="42.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="405.7" y="542.0">tcp_..</text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.03%)</title><rect x="403.5" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="406.5" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.13%)</title><rect x="404.2" y="515.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="407.2" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.06%)</title><rect x="404.4" y="499.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="407.4" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (3 samples, 0.05%)</title><rect x="404.4" y="483.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="407.4" y="494.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (3 samples, 0.05%)</title><rect x="404.4" y="467.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="407.4" y="478.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="405.4" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="408.4" y="510.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="405.9" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="408.9" y="526.0"></text>
</g>
<g>
<title>tcp_push (195 samples, 3.15%)</title><rect x="406.3" y="515.0" width="37.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="409.3" y="526.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (195 samples, 3.15%)</title><rect x="406.3" y="499.0" width="37.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="409.3" y="510.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (193 samples, 3.12%)</title><rect x="406.7" y="483.0" width="36.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="409.7" y="494.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (184 samples, 2.97%)</title><rect x="407.1" y="467.0" width="35.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="410.1" y="478.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (176 samples, 2.84%)</title><rect x="408.4" y="451.0" width="33.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="411.4" y="462.0">ip..</text>
</g>
<g>
<title>ip_local_out (174 samples, 2.81%)</title><rect x="408.6" y="435.0" width="33.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="411.6" y="446.0">ip..</text>
</g>
<g>
<title>ip_output (173 samples, 2.80%)</title><rect x="408.8" y="419.0" width="33.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="411.8" y="430.0">ip..</text>
</g>
<g>
<title>ip_finish_output (173 samples, 2.80%)</title><rect x="408.8" y="403.0" width="33.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="411.8" y="414.0">ip..</text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.05%)</title><rect x="409.2" y="387.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="412.2" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (168 samples, 2.72%)</title><rect x="409.8" y="387.0" width="32.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="412.8" y="398.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (141 samples, 2.28%)</title><rect x="410.3" y="371.0" width="26.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="413.3" y="382.0">_..</text>
</g>
<g>
<title>do_softirq.part.15 (141 samples, 2.28%)</title><rect x="410.3" y="355.0" width="26.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="413.3" y="366.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (140 samples, 2.26%)</title><rect x="410.5" y="339.0" width="26.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="413.5" y="350.0">d..</text>
</g>
<g>
<title>call_on_stack (140 samples, 2.26%)</title><rect x="410.5" y="323.0" width="26.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="413.5" y="334.0">c..</text>
</g>
<g>
<title>__do_softirq (140 samples, 2.26%)</title><rect x="410.5" y="307.0" width="26.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="413.5" y="318.0">_..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="411.3" y="291.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="414.3" y="302.0"></text>
</g>
<g>
<title>net_rx_action (134 samples, 2.17%)</title><rect x="411.7" y="291.0" width="25.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="414.7" y="302.0">n..</text>
</g>
<g>
<title>process_backlog (133 samples, 2.15%)</title><rect x="411.9" y="275.0" width="25.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="414.9" y="286.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (131 samples, 2.12%)</title><rect x="412.2" y="259.0" width="25.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="415.2" y="270.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (131 samples, 2.12%)</title><rect x="412.2" y="243.0" width="25.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="415.2" y="254.0">_..</text>
</g>
<g>
<title>ip_rcv (131 samples, 2.12%)</title><rect x="412.2" y="227.0" width="25.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="415.2" y="238.0">i..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="412.2" y="211.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="415.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (129 samples, 2.09%)</title><rect x="412.6" y="211.0" width="24.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="415.6" y="222.0">i..</text>
</g>
<g>
<title>ip_local_deliver (126 samples, 2.04%)</title><rect x="413.0" y="195.0" width="24.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="416.0" y="206.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (125 samples, 2.02%)</title><rect x="413.0" y="179.0" width="23.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="416.0" y="190.0">i..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="413.0" y="163.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="416.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (121 samples, 1.96%)</title><rect x="413.8" y="163.0" width="23.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="416.8" y="174.0">t..</text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.06%)</title><rect x="415.3" y="147.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="418.3" y="158.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="415.5" y="131.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="418.5" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (108 samples, 1.75%)</title><rect x="416.2" y="147.0" width="20.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="419.2" y="158.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="416.4" y="131.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="419.4" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (105 samples, 1.70%)</title><rect x="416.8" y="131.0" width="20.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="419.8" y="142.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.15%)</title><rect x="417.2" y="115.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="420.2" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.13%)</title><rect x="417.4" y="99.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="420.4" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.10%)</title><rect x="417.8" y="83.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="420.8" y="94.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.10%)</title><rect x="417.8" y="67.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="420.8" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.10%)</title><rect x="417.8" y="51.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="420.8" y="62.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="419.1" y="115.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="422.1" y="126.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.03%)</title><rect x="419.1" y="99.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="422.1" y="110.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (2 samples, 0.03%)</title><rect x="419.1" y="83.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="422.1" y="94.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="419.1" y="67.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="422.1" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.16%)</title><rect x="419.5" y="115.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="422.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.16%)</title><rect x="419.5" y="99.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="422.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.16%)</title><rect x="419.5" y="83.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="422.5" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.16%)</title><rect x="419.5" y="67.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="422.5" y="78.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 0.26%)</title><rect x="421.4" y="115.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="424.4" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.13%)</title><rect x="422.7" y="99.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="425.7" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.10%)</title><rect x="422.9" y="83.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="425.9" y="94.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="422.9" y="67.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="425.9" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="423.1" y="51.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="426.1" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="423.7" y="67.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="426.7" y="78.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="423.7" y="51.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="426.7" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="423.7" y="35.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="426.7" y="46.0"></text>
</g>
<g>
<title>tcp_data_queue (61 samples, 0.99%)</title><rect x="424.4" y="115.0" width="11.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="427.4" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (58 samples, 0.94%)</title><rect x="424.8" y="99.0" width="11.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="427.8" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (56 samples, 0.91%)</title><rect x="425.2" y="83.0" width="10.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.2" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (56 samples, 0.91%)</title><rect x="425.2" y="67.0" width="10.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="428.2" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (56 samples, 0.91%)</title><rect x="425.2" y="51.0" width="10.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="428.2" y="62.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="436.1" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="439.1" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (24 samples, 0.39%)</title><rect x="437.2" y="371.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="440.2" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (23 samples, 0.37%)</title><rect x="437.2" y="355.0" width="4.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="440.2" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.16%)</title><rect x="438.0" y="339.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="441.0" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.13%)</title><rect x="438.2" y="323.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="441.2" y="334.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.10%)</title><rect x="438.4" y="307.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="441.4" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="438.4" y="291.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.4" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.06%)</title><rect x="438.7" y="291.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="441.7" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.06%)</title><rect x="438.7" y="275.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="441.7" y="286.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="440.3" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="443.3" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="440.7" y="339.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="443.7" y="350.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="440.8" y="323.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.8" y="334.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="441.2" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="444.2" y="350.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.03%)</title><rect x="442.6" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="445.6" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.05%)</title><rect x="442.9" y="467.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="445.9" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.05%)</title><rect x="442.9" y="451.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="445.9" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (3 samples, 0.05%)</title><rect x="442.9" y="435.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="445.9" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="443.1" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="446.1" y="430.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="443.1" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="446.1" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.11%)</title><rect x="443.5" y="515.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="446.5" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="444.3" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="447.3" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.06%)</title><rect x="444.8" y="563.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="447.8" y="574.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.05%)</title><rect x="445.0" y="547.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.0" y="558.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="445.0" y="531.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.0" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.05%)</title><rect x="445.8" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="448.8" y="622.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="446.0" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="449.0" y="606.0"></text>
</g>
<g>
<title>import_iovec (2 samples, 0.03%)</title><rect x="446.6" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="449.6" y="638.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (2 samples, 0.03%)</title><rect x="446.9" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="449.9" y="638.0"></text>
</g>
<g>
<title>vfs_writev (2 samples, 0.03%)</title><rect x="447.3" y="659.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="450.3" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.06%)</title><rect x="448.1" y="819.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.03%)</title><rect x="448.9" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,297 samples, 20.96%)</title><rect x="449.2" y="1075.0" width="247.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="452.2" y="1086.0">jdk/internal/net/http/common/Sequ..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,296 samples, 20.95%)</title><rect x="449.4" y="1059.0" width="247.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.4" y="1070.0">jdk/internal/net/http/common/Sequ..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (165 samples, 2.67%)</title><rect x="449.4" y="1043.0" width="31.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.4" y="1054.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (165 samples, 2.67%)</title><rect x="449.4" y="1027.0" width="31.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.4" y="1038.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (165 samples, 2.67%)</title><rect x="449.4" y="1011.0" width="31.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.4" y="1022.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (35 samples, 0.57%)</title><rect x="449.6" y="995.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (35 samples, 0.57%)</title><rect x="449.6" y="979.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (35 samples, 0.57%)</title><rect x="449.6" y="963.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (35 samples, 0.57%)</title><rect x="449.6" y="947.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (34 samples, 0.55%)</title><rect x="449.6" y="931.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="452.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (34 samples, 0.55%)</title><rect x="449.6" y="915.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (34 samples, 0.55%)</title><rect x="449.6" y="899.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (30 samples, 0.48%)</title><rect x="450.4" y="883.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (30 samples, 0.48%)</title><rect x="450.4" y="867.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (30 samples, 0.48%)</title><rect x="450.4" y="851.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (30 samples, 0.48%)</title><rect x="450.4" y="835.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.4" y="846.0"></text>
</g>
<g>
<title>__kernel_vsyscall (30 samples, 0.48%)</title><rect x="450.4" y="819.0" width="5.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="453.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (30 samples, 0.48%)</title><rect x="450.4" y="803.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="453.4" y="814.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (30 samples, 0.48%)</title><rect x="450.4" y="787.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="453.4" y="798.0"></text>
</g>
<g>
<title>sys_write (30 samples, 0.48%)</title><rect x="450.4" y="771.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="453.4" y="782.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="450.4" y="755.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="453.4" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="450.4" y="739.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="453.4" y="750.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="450.4" y="723.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="453.4" y="734.0"></text>
</g>
<g>
<title>vfs_write (28 samples, 0.45%)</title><rect x="450.8" y="755.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="453.8" y="766.0"></text>
</g>
<g>
<title>__vfs_write (28 samples, 0.45%)</title><rect x="450.8" y="739.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="453.8" y="750.0"></text>
</g>
<g>
<title>new_sync_write (28 samples, 0.45%)</title><rect x="450.8" y="723.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="453.8" y="734.0"></text>
</g>
<g>
<title>pipe_write (28 samples, 0.45%)</title><rect x="450.8" y="707.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="453.8" y="718.0"></text>
</g>
<g>
<title>__wake_up_sync_key (23 samples, 0.37%)</title><rect x="451.1" y="691.0" width="4.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="454.1" y="702.0"></text>
</g>
<g>
<title>__wake_up_common_lock (23 samples, 0.37%)</title><rect x="451.1" y="675.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="454.1" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.37%)</title><rect x="451.1" y="659.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="454.1" y="670.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.03%)</title><rect x="455.5" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="458.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.05%)</title><rect x="456.3" y="995.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="456.3" y="979.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="456.3" y="963.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$170/25985558.get$Lambda (3 samples, 0.05%)</title><rect x="456.3" y="947.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (126 samples, 2.04%)</title><rect x="456.9" y="995.0" width="24.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="459.9" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (126 samples, 2.04%)</title><rect x="456.9" y="979.0" width="24.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.9" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (125 samples, 2.02%)</title><rect x="457.1" y="963.0" width="23.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.1" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (125 samples, 2.02%)</title><rect x="457.1" y="947.0" width="23.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="460.1" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (82 samples, 1.33%)</title><rect x="457.1" y="931.0" width="15.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (82 samples, 1.33%)</title><rect x="457.1" y="915.0" width="15.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (81 samples, 1.31%)</title><rect x="457.2" y="899.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (80 samples, 1.29%)</title><rect x="457.4" y="883.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (80 samples, 1.29%)</title><rect x="457.4" y="867.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (77 samples, 1.24%)</title><rect x="457.6" y="851.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (77 samples, 1.24%)</title><rect x="457.6" y="835.0" width="14.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (70 samples, 1.13%)</title><rect x="457.6" y="819.0" width="13.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="460.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (70 samples, 1.13%)</title><rect x="457.6" y="803.0" width="13.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (61 samples, 0.99%)</title><rect x="458.4" y="787.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/9963887.apply (3 samples, 0.05%)</title><rect x="458.8" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (3 samples, 0.05%)</title><rect x="458.8" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (3 samples, 0.05%)</title><rect x="458.8" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.05%)</title><rect x="458.8" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.05%)</title><rect x="458.8" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.05%)</title><rect x="458.8" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/33260527.apply (47 samples, 0.76%)</title><rect x="459.3" y="771.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (47 samples, 0.76%)</title><rect x="459.3" y="755.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.03%)</title><rect x="459.3" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (45 samples, 0.73%)</title><rect x="459.7" y="739.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (45 samples, 0.73%)</title><rect x="459.7" y="723.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.7" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$113/18506235.apply (5 samples, 0.08%)</title><rect x="459.7" y="707.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.7" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (5 samples, 0.08%)</title><rect x="459.7" y="691.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.7" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (5 samples, 0.08%)</title><rect x="459.7" y="675.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (5 samples, 0.08%)</title><rect x="459.7" y="659.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.08%)</title><rect x="459.7" y="643.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.7" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (5 samples, 0.08%)</title><rect x="459.7" y="627.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.7" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (5 samples, 0.08%)</title><rect x="459.7" y="611.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (40 samples, 0.65%)</title><rect x="460.7" y="707.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.7" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (14 samples, 0.23%)</title><rect x="461.4" y="691.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.4" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.06%)</title><rect x="461.4" y="675.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.4" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.06%)</title><rect x="461.4" y="659.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.06%)</title><rect x="461.4" y="643.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.06%)</title><rect x="461.4" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (2 samples, 0.03%)</title><rect x="461.4" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.4" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.03%)</title><rect x="461.8" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="461.8" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="461.8" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="461.8" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.8" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="461.8" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="461.8" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (9 samples, 0.15%)</title><rect x="462.4" y="675.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.15%)</title><rect x="462.4" y="659.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.06%)</title><rect x="462.4" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.06%)</title><rect x="462.4" y="627.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.05%)</title><rect x="462.4" y="611.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.05%)</title><rect x="462.4" y="595.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="465.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.05%)</title><rect x="462.4" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (5 samples, 0.08%)</title><rect x="463.2" y="643.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (5 samples, 0.08%)</title><rect x="463.2" y="627.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.08%)</title><rect x="463.2" y="611.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.06%)</title><rect x="463.2" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.2" y="606.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.03%)</title><rect x="463.5" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="464.1" y="691.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.32%)</title><rect x="464.5" y="691.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/10621704.run (20 samples, 0.32%)</title><rect x="464.5" y="675.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (20 samples, 0.32%)</title><rect x="464.5" y="659.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (7 samples, 0.11%)</title><rect x="464.7" y="643.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.05%)</title><rect x="464.9" y="627.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.05%)</title><rect x="464.9" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.05%)</title><rect x="465.4" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.05%)</title><rect x="465.4" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (10 samples, 0.16%)</title><rect x="466.2" y="643.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (10 samples, 0.16%)</title><rect x="466.2" y="627.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="469.2" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (9 samples, 0.15%)</title><rect x="466.4" y="611.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="469.4" y="622.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (9 samples, 0.15%)</title><rect x="466.4" y="595.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.4" y="606.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (9 samples, 0.15%)</title><rect x="466.4" y="579.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.4" y="590.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (5 samples, 0.08%)</title><rect x="466.8" y="563.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="469.8" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="467.4" y="547.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="470.4" y="558.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.03%)</title><rect x="467.7" y="563.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="470.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/21539894.apply (9 samples, 0.15%)</title><rect x="468.3" y="771.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (9 samples, 0.15%)</title><rect x="468.3" y="755.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (8 samples, 0.13%)</title><rect x="468.3" y="739.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (5 samples, 0.08%)</title><rect x="468.7" y="723.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (5 samples, 0.08%)</title><rect x="468.7" y="707.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.7" y="718.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (5 samples, 0.08%)</title><rect x="468.7" y="691.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.06%)</title><rect x="470.0" y="787.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.06%)</title><rect x="470.0" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$186/6790542.apply (4 samples, 0.06%)</title><rect x="470.0" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="473.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (4 samples, 0.06%)</title><rect x="470.0" y="739.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (3 samples, 0.05%)</title><rect x="470.0" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (3 samples, 0.05%)</title><rect x="470.0" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$206/5014188.apply (7 samples, 0.11%)</title><rect x="471.0" y="819.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (7 samples, 0.11%)</title><rect x="471.0" y="803.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (7 samples, 0.11%)</title><rect x="471.0" y="787.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="474.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.11%)</title><rect x="471.0" y="771.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.11%)</title><rect x="471.0" y="755.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.11%)</title><rect x="471.0" y="739.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="472.3" y="851.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="472.3" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.03%)</title><rect x="472.3" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.03%)</title><rect x="472.3" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.03%)</title><rect x="472.3" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (43 samples, 0.70%)</title><rect x="472.7" y="931.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (4 samples, 0.06%)</title><rect x="474.2" y="915.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (10 samples, 0.16%)</title><rect x="475.0" y="915.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.0" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.16%)</title><rect x="475.0" y="899.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="478.0" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.16%)</title><rect x="475.0" y="883.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.0" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (7 samples, 0.11%)</title><rect x="475.6" y="867.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.6" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (6 samples, 0.10%)</title><rect x="475.7" y="851.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.7" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.10%)</title><rect x="475.7" y="835.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.7" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.06%)</title><rect x="475.7" y="819.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.7" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (3 samples, 0.05%)</title><rect x="475.9" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.9" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.05%)</title><rect x="475.9" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.9" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="476.5" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (21 samples, 0.34%)</title><rect x="476.9" y="915.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (21 samples, 0.34%)</title><rect x="476.9" y="899.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (11 samples, 0.18%)</title><rect x="478.2" y="883.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (11 samples, 0.18%)</title><rect x="478.2" y="867.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.05%)</title><rect x="480.3" y="883.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.05%)</title><rect x="480.3" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,131 samples, 18.28%)</title><rect x="480.9" y="1043.0" width="215.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.9" y="1054.0">jdk/internal/net/http/common..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,131 samples, 18.28%)</title><rect x="480.9" y="1027.0" width="215.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.9" y="1038.0">jdk/internal/net/http/common..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,130 samples, 18.26%)</title><rect x="480.9" y="1011.0" width="215.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.9" y="1022.0">jdk/internal/net/http/common..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (1,130 samples, 18.26%)</title><rect x="480.9" y="995.0" width="215.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.9" y="1006.0">jdk/internal/net/http/Http1A..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,129 samples, 18.25%)</title><rect x="481.1" y="979.0" width="215.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.1" y="990.0">jdk/internal/net/http/Http1A..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (189 samples, 3.05%)</title><rect x="481.5" y="963.0" width="36.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.5" y="974.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (188 samples, 3.04%)</title><rect x="481.5" y="947.0" width="35.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.5" y="958.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (188 samples, 3.04%)</title><rect x="481.5" y="931.0" width="35.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.5" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/16991611.run (25 samples, 0.40%)</title><rect x="481.5" y="915.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (25 samples, 0.40%)</title><rect x="481.5" y="899.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (25 samples, 0.40%)</title><rect x="481.5" y="883.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.5" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.05%)</title><rect x="481.5" y="867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.5" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.03%)</title><rect x="481.5" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.5" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.03%)</title><rect x="481.5" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.5" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.03%)</title><rect x="481.5" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.5" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="481.5" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (22 samples, 0.36%)</title><rect x="482.0" y="867.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.0" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.03%)</title><rect x="482.0" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.0" y="862.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.03%)</title><rect x="482.0" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (20 samples, 0.32%)</title><rect x="482.4" y="851.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.03%)</title><rect x="482.4" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (17 samples, 0.27%)</title><rect x="483.0" y="835.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (17 samples, 0.27%)</title><rect x="483.0" y="819.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (17 samples, 0.27%)</title><rect x="483.0" y="803.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (17 samples, 0.27%)</title><rect x="483.0" y="787.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (17 samples, 0.27%)</title><rect x="483.0" y="771.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (17 samples, 0.27%)</title><rect x="483.0" y="755.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="486.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.27%)</title><rect x="483.0" y="739.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (17 samples, 0.27%)</title><rect x="483.0" y="723.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (16 samples, 0.26%)</title><rect x="483.2" y="707.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.2" y="718.0"></text>
</g>
<g>
<title>__kernel_vsyscall (15 samples, 0.24%)</title><rect x="483.4" y="691.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="486.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (15 samples, 0.24%)</title><rect x="483.4" y="675.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="486.4" y="686.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (15 samples, 0.24%)</title><rect x="483.4" y="659.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.4" y="670.0"></text>
</g>
<g>
<title>sys_write (15 samples, 0.24%)</title><rect x="483.4" y="643.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.4" y="654.0"></text>
</g>
<g>
<title>vfs_write (15 samples, 0.24%)</title><rect x="483.4" y="627.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="486.4" y="638.0"></text>
</g>
<g>
<title>__vfs_write (14 samples, 0.23%)</title><rect x="483.4" y="611.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="486.4" y="622.0"></text>
</g>
<g>
<title>new_sync_write (14 samples, 0.23%)</title><rect x="483.4" y="595.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="486.4" y="606.0"></text>
</g>
<g>
<title>pipe_write (14 samples, 0.23%)</title><rect x="483.4" y="579.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="486.4" y="590.0"></text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 0.19%)</title><rect x="483.6" y="563.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="486.6" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.19%)</title><rect x="483.6" y="547.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="486.6" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.19%)</title><rect x="483.6" y="531.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="486.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/1920882.accept (9 samples, 0.15%)</title><rect x="486.2" y="915.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (9 samples, 0.15%)</title><rect x="486.2" y="899.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (9 samples, 0.15%)</title><rect x="486.2" y="883.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8 samples, 0.13%)</title><rect x="486.2" y="867.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.13%)</title><rect x="486.2" y="851.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.08%)</title><rect x="486.8" y="835.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.08%)</title><rect x="486.8" y="819.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/20534699.accept (2 samples, 0.03%)</title><rect x="487.0" y="803.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (2 samples, 0.03%)</title><rect x="487.0" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (2 samples, 0.03%)</title><rect x="487.0" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (2 samples, 0.03%)</title><rect x="487.0" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (2 samples, 0.03%)</title><rect x="487.0" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$223/21000255.accept (2 samples, 0.03%)</title><rect x="487.4" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.03%)</title><rect x="487.4" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.03%)</title><rect x="487.4" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.4" y="782.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.03%)</title><rect x="487.4" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (151 samples, 2.44%)</title><rect x="488.0" y="915.0" width="28.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.0" y="926.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (151 samples, 2.44%)</title><rect x="488.0" y="899.0" width="28.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.0" y="910.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (151 samples, 2.44%)</title><rect x="488.0" y="883.0" width="28.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.0" y="894.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (151 samples, 2.44%)</title><rect x="488.0" y="867.0" width="28.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.0" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (151 samples, 2.44%)</title><rect x="488.0" y="851.0" width="28.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.0" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (149 samples, 2.41%)</title><rect x="488.3" y="835.0" width="28.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.3" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (149 samples, 2.41%)</title><rect x="488.3" y="819.0" width="28.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.3" y="830.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/27658891.accept (149 samples, 2.41%)</title><rect x="488.3" y="803.0" width="28.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.3" y="814.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (148 samples, 2.39%)</title><rect x="488.5" y="787.0" width="28.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.5" y="798.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (148 samples, 2.39%)</title><rect x="488.5" y="771.0" width="28.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.5" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (148 samples, 2.39%)</title><rect x="488.5" y="755.0" width="28.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.5" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (148 samples, 2.39%)</title><rect x="488.5" y="739.0" width="28.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.5" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (148 samples, 2.39%)</title><rect x="488.5" y="723.0" width="28.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.5" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (147 samples, 2.38%)</title><rect x="488.5" y="707.0" width="28.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.5" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (147 samples, 2.38%)</title><rect x="488.5" y="691.0" width="28.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.5" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (28 samples, 0.45%)</title><rect x="488.7" y="675.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="488.7" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.7" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="488.7" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (2 samples, 0.03%)</title><rect x="488.7" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (26 samples, 0.42%)</title><rect x="489.1" y="659.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="492.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (26 samples, 0.42%)</title><rect x="489.1" y="643.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.1" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (25 samples, 0.40%)</title><rect x="489.3" y="627.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.3" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (25 samples, 0.40%)</title><rect x="489.3" y="611.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="492.3" y="622.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_getStackAccessControlContext (24 samples, 0.39%)</title><rect x="489.5" y="595.0" width="4.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="492.5" y="606.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (23 samples, 0.37%)</title><rect x="489.5" y="579.0" width="4.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="492.5" y="590.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (3 samples, 0.05%)</title><rect x="490.2" y="563.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="493.2" y="574.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;573526ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)3, 573526ull&gt;::oop_access_barrier(oopDesc*, int) (3 samples, 0.05%)</title><rect x="490.8" y="563.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="493.8" y="574.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (8 samples, 0.13%)</title><rect x="492.3" y="563.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="495.3" y="574.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.03%)</title><rect x="493.1" y="547.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="496.1" y="558.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="493.5" y="547.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="496.5" y="558.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (2 samples, 0.03%)</title><rect x="493.5" y="531.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="496.5" y="542.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="493.5" y="515.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="496.5" y="526.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="493.5" y="499.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="496.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.start (118 samples, 1.91%)</title><rect x="494.1" y="675.0" width="22.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.1" y="686.0">j..</text>
</g>
<g>
<title>java/lang/Thread.start0 (118 samples, 1.91%)</title><rect x="494.1" y="659.0" width="22.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.1" y="670.0">j..</text>
</g>
<g>
<title>JVM_StartThread (25 samples, 0.40%)</title><rect x="494.2" y="643.0" width="4.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="497.2" y="654.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned int) (14 samples, 0.23%)</title><rect x="494.2" y="627.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="497.2" y="638.0"></text>
</g>
<g>
<title>Thread::Thread() (5 samples, 0.08%)</title><rect x="494.4" y="611.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="497.4" y="622.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (2 samples, 0.03%)</title><rect x="494.6" y="595.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="497.6" y="606.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned int, AllocFailStrategy::AllocFailEnum) (2 samples, 0.03%)</title><rect x="494.6" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="497.6" y="590.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned int) (7 samples, 0.11%)</title><rect x="495.6" y="611.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="498.6" y="622.0"></text>
</g>
<g>
<title>__pthread_create_2_1 (4 samples, 0.06%)</title><rect x="495.6" y="595.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="498.6" y="606.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (6 samples, 0.10%)</title><rect x="497.1" y="627.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="500.1" y="638.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (4 samples, 0.06%)</title><rect x="497.3" y="611.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="500.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.45%)</title><rect x="499.2" y="643.0" width="17.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="502.2" y="654.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.06%)</title><rect x="499.2" y="627.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="502.2" y="638.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (2 samples, 0.03%)</title><rect x="500.0" y="627.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="503.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="500.0" y="611.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="503.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="500.0" y="595.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="503.0" y="606.0"></text>
</g>
<g>
<title>__vsnprintf_chk (2 samples, 0.03%)</title><rect x="500.0" y="579.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="503.0" y="590.0"></text>
</g>
<g>
<title>__kernel_vsyscall (40 samples, 0.65%)</title><rect x="500.3" y="627.0" width="7.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="503.3" y="638.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (40 samples, 0.65%)</title><rect x="500.3" y="611.0" width="7.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="503.3" y="622.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (39 samples, 0.63%)</title><rect x="500.3" y="595.0" width="7.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="503.3" y="606.0"></text>
</g>
<g>
<title>sys_futex (39 samples, 0.63%)</title><rect x="500.3" y="579.0" width="7.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="503.3" y="590.0"></text>
</g>
<g>
<title>do_futex (39 samples, 0.63%)</title><rect x="500.3" y="563.0" width="7.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="503.3" y="574.0"></text>
</g>
<g>
<title>futex_wait (21 samples, 0.34%)</title><rect x="500.3" y="547.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="503.3" y="558.0"></text>
</g>
<g>
<title>futex_wait_queue_me (21 samples, 0.34%)</title><rect x="500.3" y="531.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="503.3" y="542.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.32%)</title><rect x="500.5" y="515.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="503.5" y="526.0"></text>
</g>
<g>
<title>__sched_text_start (20 samples, 0.32%)</title><rect x="500.5" y="499.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="503.5" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (20 samples, 0.32%)</title><rect x="500.5" y="483.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="503.5" y="494.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.29%)</title><rect x="504.4" y="547.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="507.4" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="504.4" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="507.4" y="542.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.26%)</title><rect x="504.7" y="531.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="507.7" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.26%)</title><rect x="504.7" y="515.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="507.7" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.26%)</title><rect x="504.7" y="499.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.7" y="510.0"></text>
</g>
<g>
<title>_dl_allocate_tls_init (2 samples, 0.03%)</title><rect x="508.0" y="627.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="511.0" y="638.0"></text>
</g>
<g>
<title>clone (41 samples, 0.66%)</title><rect x="508.4" y="627.0" width="7.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="511.4" y="638.0"></text>
</g>
<g>
<title>restore_all (40 samples, 0.65%)</title><rect x="508.5" y="611.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="511.5" y="622.0"></text>
</g>
<g>
<title>do_int80_syscall_32 (40 samples, 0.65%)</title><rect x="508.5" y="595.0" width="7.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="511.5" y="606.0"></text>
</g>
<g>
<title>sys_clone (40 samples, 0.65%)</title><rect x="508.5" y="579.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="511.5" y="590.0"></text>
</g>
<g>
<title>_do_fork (40 samples, 0.65%)</title><rect x="508.5" y="563.0" width="7.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="511.5" y="574.0"></text>
</g>
<g>
<title>copy_process.part.42 (27 samples, 0.44%)</title><rect x="508.9" y="547.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="511.9" y="558.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="509.5" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="512.5" y="542.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="509.5" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="512.5" y="526.0"></text>
</g>
<g>
<title>__delayacct_tsk_init (2 samples, 0.03%)</title><rect x="509.9" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.9" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="509.9" y="515.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.9" y="526.0"></text>
</g>
<g>
<title>alloc_pid (2 samples, 0.03%)</title><rect x="510.5" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="513.5" y="542.0"></text>
</g>
<g>
<title>cgroup_can_fork (2 samples, 0.03%)</title><rect x="511.0" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="514.0" y="542.0"></text>
</g>
<g>
<title>cgroup_post_fork (2 samples, 0.03%)</title><rect x="511.4" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="514.4" y="542.0"></text>
</g>
<g>
<title>get_random_u32 (4 samples, 0.06%)</title><rect x="512.2" y="531.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="515.2" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="512.2" y="515.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="515.2" y="526.0"></text>
</g>
<g>
<title>sched_fork (3 samples, 0.05%)</title><rect x="513.1" y="531.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="516.1" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="513.3" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="516.3" y="526.0"></text>
</g>
<g>
<title>wake_up_new_task (11 samples, 0.18%)</title><rect x="514.1" y="547.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="517.1" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.18%)</title><rect x="514.1" y="531.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="517.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (3 samples, 0.05%)</title><rect x="516.7" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (3 samples, 0.05%)</title><rect x="516.7" y="899.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.05%)</title><rect x="516.7" y="883.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.05%)</title><rect x="516.7" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.05%)</title><rect x="516.7" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (938 samples, 15.16%)</title><rect x="517.5" y="963.0" width="178.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="520.5" y="974.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (938 samples, 15.16%)</title><rect x="517.5" y="947.0" width="178.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.5" y="958.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (937 samples, 15.14%)</title><rect x="517.5" y="931.0" width="178.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.5" y="942.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (937 samples, 15.14%)</title><rect x="517.5" y="915.0" width="178.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.5" y="926.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (937 samples, 15.14%)</title><rect x="517.5" y="899.0" width="178.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.5" y="910.0">jdk/internal/net/http/R..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (936 samples, 15.13%)</title><rect x="517.7" y="883.0" width="178.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.7" y="894.0">jdk/internal/net/http/R..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/16991611.run (113 samples, 1.83%)</title><rect x="517.9" y="867.0" width="21.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.9" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (113 samples, 1.83%)</title><rect x="517.9" y="851.0" width="21.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.9" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (113 samples, 1.83%)</title><rect x="517.9" y="835.0" width="21.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.9" y="846.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.13%)</title><rect x="517.9" y="819.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.9" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (7 samples, 0.11%)</title><rect x="517.9" y="803.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="520.9" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (7 samples, 0.11%)</title><rect x="517.9" y="787.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.9" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.11%)</title><rect x="517.9" y="771.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.9" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.11%)</title><rect x="517.9" y="755.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.9" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (7 samples, 0.11%)</title><rect x="517.9" y="739.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (105 samples, 1.70%)</title><rect x="519.4" y="819.0" width="20.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.4" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.05%)</title><rect x="519.4" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.4" y="814.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.05%)</title><rect x="519.4" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.05%)</title><rect x="519.4" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.4" y="782.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.05%)</title><rect x="519.4" y="755.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="522.4" y="766.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long long&amp;, long long&amp;) (2 samples, 0.03%)</title><rect x="519.6" y="739.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="522.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (102 samples, 1.65%)</title><rect x="520.0" y="803.0" width="19.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (12 samples, 0.19%)</title><rect x="520.2" y="787.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.2" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="521.1" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.1" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (3 samples, 0.05%)</title><rect x="521.1" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.1" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="521.1" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.1" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.05%)</title><rect x="521.1" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.1" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.05%)</title><rect x="521.1" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.1" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (4 samples, 0.06%)</title><rect x="521.7" y="771.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.7" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (4 samples, 0.06%)</title><rect x="521.7" y="755.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.7" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.06%)</title><rect x="521.7" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.7" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.06%)</title><rect x="521.7" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.7" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.create (4 samples, 0.06%)</title><rect x="521.7" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (5 samples, 0.08%)</title><rect x="522.5" y="787.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.08%)</title><rect x="522.5" y="771.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.06%)</title><rect x="522.5" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.05%)</title><rect x="522.7" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.7" y="750.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.05%)</title><rect x="522.7" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.7" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (3 samples, 0.05%)</title><rect x="522.7" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (84 samples, 1.36%)</title><rect x="523.4" y="787.0" width="16.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (84 samples, 1.36%)</title><rect x="523.4" y="771.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (83 samples, 1.34%)</title><rect x="523.6" y="755.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (83 samples, 1.34%)</title><rect x="523.6" y="739.0" width="15.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (78 samples, 1.26%)</title><rect x="524.4" y="723.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="527.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (78 samples, 1.26%)</title><rect x="524.4" y="707.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (78 samples, 1.26%)</title><rect x="524.4" y="691.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (77 samples, 1.24%)</title><rect x="524.6" y="675.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="527.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (74 samples, 1.20%)</title><rect x="525.1" y="659.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="528.1" y="670.0"></text>
</g>
<g>
<title>__kernel_vsyscall (73 samples, 1.18%)</title><rect x="525.1" y="643.0" width="14.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="528.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (73 samples, 1.18%)</title><rect x="525.1" y="627.0" width="14.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="528.1" y="638.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (73 samples, 1.18%)</title><rect x="525.1" y="611.0" width="14.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="528.1" y="622.0"></text>
</g>
<g>
<title>sys_write (73 samples, 1.18%)</title><rect x="525.1" y="595.0" width="14.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="528.1" y="606.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.05%)</title><rect x="525.1" y="579.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="528.1" y="590.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="525.1" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="528.1" y="574.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="525.3" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="528.3" y="558.0"></text>
</g>
<g>
<title>vfs_write (70 samples, 1.13%)</title><rect x="525.7" y="579.0" width="13.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="528.7" y="590.0"></text>
</g>
<g>
<title>__vfs_write (70 samples, 1.13%)</title><rect x="525.7" y="563.0" width="13.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="528.7" y="574.0"></text>
</g>
<g>
<title>new_sync_write (69 samples, 1.12%)</title><rect x="525.7" y="547.0" width="13.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="528.7" y="558.0"></text>
</g>
<g>
<title>pipe_write (67 samples, 1.08%)</title><rect x="526.1" y="531.0" width="12.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="529.1" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (60 samples, 0.97%)</title><rect x="526.7" y="515.0" width="11.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="529.7" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (60 samples, 0.97%)</title><rect x="526.7" y="499.0" width="11.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="529.7" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (60 samples, 0.97%)</title><rect x="526.7" y="483.0" width="11.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="529.7" y="494.0"></text>
</g>
<g>
<title>copy_page_from_iter (2 samples, 0.03%)</title><rect x="538.1" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="541.1" y="526.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.03%)</title><rect x="538.5" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="541.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/1920882.accept (28 samples, 0.45%)</title><rect x="539.4" y="867.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="542.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (28 samples, 0.45%)</title><rect x="539.4" y="851.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (28 samples, 0.45%)</title><rect x="539.4" y="835.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="542.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (28 samples, 0.45%)</title><rect x="539.4" y="819.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (28 samples, 0.45%)</title><rect x="539.4" y="803.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (16 samples, 0.26%)</title><rect x="541.7" y="787.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (16 samples, 0.26%)</title><rect x="541.7" y="771.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/20534699.accept (6 samples, 0.10%)</title><rect x="541.9" y="755.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (6 samples, 0.10%)</title><rect x="541.9" y="739.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (6 samples, 0.10%)</title><rect x="541.9" y="723.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (6 samples, 0.10%)</title><rect x="541.9" y="707.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (5 samples, 0.08%)</title><rect x="542.1" y="691.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$223/21000255.accept (9 samples, 0.15%)</title><rect x="543.1" y="755.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (9 samples, 0.15%)</title><rect x="543.1" y="739.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (9 samples, 0.15%)</title><rect x="543.1" y="723.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.1" y="734.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (8 samples, 0.13%)</title><rect x="543.3" y="707.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.3" y="718.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (7 samples, 0.11%)</title><rect x="543.5" y="691.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (792 samples, 12.80%)</title><rect x="544.8" y="867.0" width="151.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.8" y="878.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (792 samples, 12.80%)</title><rect x="544.8" y="851.0" width="151.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.8" y="862.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (792 samples, 12.80%)</title><rect x="544.8" y="835.0" width="151.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.8" y="846.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (786 samples, 12.70%)</title><rect x="544.8" y="819.0" width="149.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.8" y="830.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (786 samples, 12.70%)</title><rect x="544.8" y="803.0" width="149.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.8" y="814.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (785 samples, 12.69%)</title><rect x="545.0" y="787.0" width="149.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.0" y="798.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (784 samples, 12.67%)</title><rect x="545.2" y="771.0" width="149.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.2" y="782.0">java/util/concurren..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/27658891.accept (783 samples, 12.66%)</title><rect x="545.4" y="755.0" width="149.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="548.4" y="766.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (781 samples, 12.62%)</title><rect x="545.7" y="739.0" width="149.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.7" y="750.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (781 samples, 12.62%)</title><rect x="545.7" y="723.0" width="149.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.7" y="734.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (781 samples, 12.62%)</title><rect x="545.7" y="707.0" width="149.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.7" y="718.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (778 samples, 12.57%)</title><rect x="546.3" y="691.0" width="148.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.3" y="702.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (776 samples, 12.54%)</title><rect x="546.7" y="675.0" width="148.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="549.7" y="686.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (771 samples, 12.46%)</title><rect x="546.7" y="659.0" width="147.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.7" y="670.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (769 samples, 12.43%)</title><rect x="547.1" y="643.0" width="146.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="550.1" y="654.0">java/util/concurre..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (129 samples, 2.09%)</title><rect x="547.1" y="627.0" width="24.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.1" y="638.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.06%)</title><rect x="547.1" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.1" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.06%)</title><rect x="547.1" y="595.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.1" y="606.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (4 samples, 0.06%)</title><rect x="547.1" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (125 samples, 2.02%)</title><rect x="547.8" y="611.0" width="23.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.8" y="622.0">j..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (123 samples, 1.99%)</title><rect x="548.2" y="595.0" width="23.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.2" y="606.0">j..</text>
</g>
<g>
<title>java/lang/Thread.setPriority (2 samples, 0.03%)</title><rect x="548.6" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (2 samples, 0.03%)</title><rect x="548.6" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.6" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (119 samples, 1.92%)</title><rect x="549.0" y="579.0" width="22.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.0" y="590.0">j..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (4 samples, 0.06%)</title><rect x="549.0" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.0" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (2 samples, 0.03%)</title><rect x="549.4" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.4" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (115 samples, 1.86%)</title><rect x="549.7" y="563.0" width="22.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.7" y="574.0">j..</text>
</g>
<g>
<title>Java_java_security_AccessController_getStackAccessControlContext (112 samples, 1.81%)</title><rect x="550.3" y="547.0" width="21.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="553.3" y="558.0">J..</text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.03%)</title><rect x="550.7" y="531.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="553.7" y="542.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (103 samples, 1.66%)</title><rect x="551.1" y="531.0" width="19.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="554.1" y="542.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (6 samples, 0.10%)</title><rect x="555.5" y="515.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="558.5" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;573526ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)3, 573526ull&gt;::oop_access_barrier(oopDesc*, int) (5 samples, 0.08%)</title><rect x="556.6" y="515.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="559.6" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::protection_domain() const (3 samples, 0.05%)</title><rect x="557.8" y="515.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="560.8" y="526.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (2 samples, 0.03%)</title><rect x="557.9" y="499.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="560.9" y="510.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (3 samples, 0.05%)</title><rect x="558.9" y="515.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="561.9" y="526.0"></text>
</g>
<g>
<title>frame::interpreter_frame_method() const (2 samples, 0.03%)</title><rect x="559.5" y="515.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="562.5" y="526.0"></text>
</g>
<g>
<title>java_security_AccessControlContext::create(objArrayHandle, bool, Handle, Thread*) (2 samples, 0.03%)</title><rect x="559.9" y="515.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="562.9" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="559.9" y="499.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="562.9" y="510.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (10 samples, 0.16%)</title><rect x="560.2" y="515.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="563.2" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.11%)</title><rect x="560.4" y="499.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="563.4" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (4 samples, 0.06%)</title><rect x="560.6" y="483.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="563.6" y="494.0"></text>
</g>
<g>
<title>ObjArrayKlass::array_klass_impl(bool, int, Thread*) (2 samples, 0.03%)</title><rect x="561.4" y="483.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="564.4" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (2 samples, 0.03%)</title><rect x="561.8" y="499.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="564.8" y="510.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (11 samples, 0.18%)</title><rect x="562.3" y="515.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="565.3" y="526.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="562.5" y="499.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="565.5" y="510.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (8 samples, 0.13%)</title><rect x="562.9" y="499.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="565.9" y="510.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.06%)</title><rect x="563.1" y="483.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="566.1" y="494.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.05%)</title><rect x="563.3" y="467.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="566.3" y="478.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (3 samples, 0.05%)</title><rect x="563.9" y="483.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="566.9" y="494.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (33 samples, 0.53%)</title><rect x="564.4" y="515.0" width="6.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="567.4" y="526.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (22 samples, 0.36%)</title><rect x="566.5" y="499.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="569.5" y="510.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (20 samples, 0.32%)</title><rect x="566.9" y="483.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="569.9" y="494.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (15 samples, 0.24%)</title><rect x="567.5" y="467.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="570.5" y="478.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (15 samples, 0.24%)</title><rect x="567.5" y="451.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="570.5" y="462.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.03%)</title><rect x="570.3" y="467.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="573.3" y="478.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.05%)</title><rect x="571.1" y="531.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="574.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.start (640 samples, 10.34%)</title><rect x="571.7" y="627.0" width="122.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.7" y="638.0">java/lang/Threa..</text>
</g>
<g>
<title>java/lang/Thread.start0 (639 samples, 10.33%)</title><rect x="571.9" y="611.0" width="121.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.9" y="622.0">java/lang/Threa..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (16 samples, 0.26%)</title><rect x="572.6" y="595.0" width="3.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="575.6" y="606.0"></text>
</g>
<g>
<title>JVM_StartThread (162 samples, 2.62%)</title><rect x="575.7" y="595.0" width="30.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="578.7" y="606.0">JV..</text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned int) (84 samples, 1.36%)</title><rect x="576.4" y="579.0" width="16.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="579.4" y="590.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (3 samples, 0.05%)</title><rect x="577.4" y="563.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="580.4" y="574.0"></text>
</g>
<g>
<title>Thread::Thread() (22 samples, 0.36%)</title><rect x="578.2" y="563.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="581.2" y="574.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (3 samples, 0.05%)</title><rect x="578.9" y="547.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="581.9" y="558.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned int, AllocFailStrategy::AllocFailEnum) (2 samples, 0.03%)</title><rect x="579.1" y="531.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="582.1" y="542.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType, unsigned int) (2 samples, 0.03%)</title><rect x="579.5" y="547.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="582.5" y="558.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (5 samples, 0.08%)</title><rect x="580.3" y="547.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="583.3" y="558.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="580.3" y="531.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="583.3" y="542.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="580.6" y="515.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="583.6" y="526.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="580.6" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="583.6" y="510.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="580.6" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="583.6" y="494.0"></text>
</g>
<g>
<title>sys_clock_gettime (2 samples, 0.03%)</title><rect x="580.6" y="467.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="583.6" y="478.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (2 samples, 0.03%)</title><rect x="580.6" y="451.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.6" y="462.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.03%)</title><rect x="580.6" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="583.6" y="446.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (3 samples, 0.05%)</title><rect x="581.2" y="547.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="584.2" y="558.0"></text>
</g>
<g>
<title>__pthread_create_2_1 (4 samples, 0.06%)</title><rect x="582.7" y="563.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="585.7" y="574.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned int) (41 samples, 0.66%)</title><rect x="583.9" y="563.0" width="7.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="586.9" y="574.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.06%)</title><rect x="584.3" y="547.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="587.3" y="558.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (6 samples, 0.10%)</title><rect x="585.0" y="547.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="588.0" y="558.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (6 samples, 0.10%)</title><rect x="585.0" y="531.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="588.0" y="542.0"></text>
</g>
<g>
<title>OSThread::OSThread(int (*)(void*), void*) (2 samples, 0.03%)</title><rect x="586.2" y="547.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="589.2" y="558.0"></text>
</g>
<g>
<title>__pthread_create_2_1 (21 samples, 0.34%)</title><rect x="586.6" y="547.0" width="4.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="589.6" y="558.0"></text>
</g>
<g>
<title>_dl_allocate_tls_init (2 samples, 0.03%)</title><rect x="590.7" y="547.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="593.7" y="558.0"></text>
</g>
<g>
<title>create_thread (2 samples, 0.03%)</title><rect x="591.1" y="547.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="594.1" y="558.0"></text>
</g>
<g>
<title>pthread_attr_init (2 samples, 0.03%)</title><rect x="591.7" y="563.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="594.7" y="574.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (39 samples, 0.63%)</title><rect x="592.5" y="579.0" width="7.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="595.5" y="590.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (6 samples, 0.10%)</title><rect x="592.5" y="563.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="595.5" y="574.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="592.5" y="547.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="595.5" y="558.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="592.7" y="531.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="595.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="592.7" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="595.7" y="526.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="592.7" y="499.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="595.7" y="510.0"></text>
</g>
<g>
<title>os::vsnprintf(char*, unsigned int, char const*, char*) (2 samples, 0.03%)</title><rect x="593.2" y="547.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="596.2" y="558.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (3 samples, 0.05%)</title><rect x="593.6" y="563.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="596.6" y="574.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (24 samples, 0.39%)</title><rect x="594.2" y="563.0" width="4.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="597.2" y="574.0"></text>
</g>
<g>
<title>Threads::non_java_threads_do(ThreadClosure*) (2 samples, 0.03%)</title><rect x="598.0" y="547.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="601.0" y="558.0"></text>
</g>
<g>
<title>ScanHazardPtrGatherThreadsListClosure::do_thread(Thread*) (2 samples, 0.03%)</title><rect x="598.0" y="531.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="601.0" y="542.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.03%)</title><rect x="598.4" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="601.4" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="598.4" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="601.4" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="598.4" y="515.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="601.4" y="526.0"></text>
</g>
<g>
<title>jio_vsnprintf (2 samples, 0.03%)</title><rect x="598.8" y="563.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="601.8" y="574.0"></text>
</g>
<g>
<title>os::set_priority(Thread*, ThreadPriority) (2 samples, 0.03%)</title><rect x="599.5" y="563.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="602.5" y="574.0"></text>
</g>
<g>
<title>Monitor::lock() (9 samples, 0.15%)</title><rect x="599.9" y="579.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="602.9" y="590.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (7 samples, 0.11%)</title><rect x="600.1" y="563.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="603.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="600.5" y="547.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="603.5" y="558.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="600.5" y="531.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="603.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="600.5" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="603.5" y="526.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="600.5" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="603.5" y="510.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned int, bool, MemoryType) (4 samples, 0.06%)</title><rect x="602.0" y="579.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="605.0" y="590.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned int, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (2 samples, 0.03%)</title><rect x="602.2" y="563.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="605.2" y="574.0"></text>
</g>
<g>
<title>Thread::start(Thread*) (4 samples, 0.06%)</title><rect x="602.8" y="579.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="605.8" y="590.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (3 samples, 0.05%)</title><rect x="603.0" y="563.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="606.0" y="574.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.05%)</title><rect x="603.0" y="547.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="606.0" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.10%)</title><rect x="603.5" y="579.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="606.5" y="590.0"></text>
</g>
<g>
<title>ThreadSafepointState::create(JavaThread*) (3 samples, 0.05%)</title><rect x="604.7" y="579.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="607.7" y="590.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="605.6" y="579.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="608.6" y="590.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned int) (2 samples, 0.03%)</title><rect x="606.0" y="579.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="609.0" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="606.6" y="595.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="609.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (449 samples, 7.26%)</title><rect x="607.0" y="595.0" width="85.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="610.0" y="606.0">[unknown]</text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (2 samples, 0.03%)</title><rect x="607.0" y="579.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="610.0" y="590.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (22 samples, 0.36%)</title><rect x="607.3" y="579.0" width="4.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="610.3" y="590.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (15 samples, 0.24%)</title><rect x="611.5" y="579.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="614.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.24%)</title><rect x="611.5" y="563.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="614.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.24%)</title><rect x="611.5" y="547.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="614.5" y="558.0"></text>
</g>
<g>
<title>__vsnprintf_chk (13 samples, 0.21%)</title><rect x="611.9" y="531.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="614.9" y="542.0"></text>
</g>
<g>
<title>_IO_padn (2 samples, 0.03%)</title><rect x="611.9" y="515.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="614.9" y="526.0"></text>
</g>
<g>
<title>_IO_vfprintf (11 samples, 0.18%)</title><rect x="612.3" y="515.0" width="2.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="615.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="614.4" y="579.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="617.4" y="590.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="614.4" y="563.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="617.4" y="574.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="614.4" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="617.4" y="558.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="614.4" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="617.4" y="542.0"></text>
</g>
<g>
<title>__kernel_vsyscall (179 samples, 2.89%)</title><rect x="614.8" y="579.0" width="34.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="617.8" y="590.0">__..</text>
</g>
<g>
<title>entry_SYSENTER_32 (177 samples, 2.86%)</title><rect x="615.2" y="563.0" width="33.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="618.2" y="574.0">en..</text>
</g>
<g>
<title>do_fast_syscall_32 (177 samples, 2.86%)</title><rect x="615.2" y="547.0" width="33.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="618.2" y="558.0">do..</text>
</g>
<g>
<title>sys_futex (176 samples, 2.84%)</title><rect x="615.4" y="531.0" width="33.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="618.4" y="542.0">sy..</text>
</g>
<g>
<title>do_futex (175 samples, 2.83%)</title><rect x="615.5" y="515.0" width="33.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="618.5" y="526.0">do..</text>
</g>
<g>
<title>futex_wait (117 samples, 1.89%)</title><rect x="615.7" y="499.0" width="22.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="618.7" y="510.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (116 samples, 1.87%)</title><rect x="615.7" y="483.0" width="22.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="618.7" y="494.0">f..</text>
</g>
<g>
<title>plist_add (3 samples, 0.05%)</title><rect x="615.9" y="467.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="618.9" y="478.0"></text>
</g>
<g>
<title>schedule (112 samples, 1.81%)</title><rect x="616.5" y="467.0" width="21.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="619.5" y="478.0">s..</text>
</g>
<g>
<title>__sched_text_start (112 samples, 1.81%)</title><rect x="616.5" y="451.0" width="21.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="619.5" y="462.0">_..</text>
</g>
<g>
<title>finish_task_switch (111 samples, 1.79%)</title><rect x="616.7" y="435.0" width="21.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="619.7" y="446.0">f..</text>
</g>
<g>
<title>futex_wake (57 samples, 0.92%)</title><rect x="638.0" y="499.0" width="10.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="641.0" y="510.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="638.4" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="641.4" y="494.0"></text>
</g>
<g>
<title>wake_up_q (52 samples, 0.84%)</title><rect x="639.0" y="483.0" width="9.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="642.0" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (51 samples, 0.82%)</title><rect x="639.2" y="467.0" width="9.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="642.2" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (51 samples, 0.82%)</title><rect x="639.2" y="451.0" width="9.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="642.2" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="649.1" y="579.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="652.1" y="590.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="649.5" y="579.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="652.5" y="590.0"></text>
</g>
<g>
<title>_dl_allocate_tls_init (2 samples, 0.03%)</title><rect x="649.9" y="579.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="652.9" y="590.0"></text>
</g>
<g>
<title>clone (211 samples, 3.41%)</title><rect x="650.3" y="579.0" width="40.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="653.3" y="590.0">clone</text>
</g>
<g>
<title>restore_all (210 samples, 3.39%)</title><rect x="650.4" y="563.0" width="40.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="653.4" y="574.0">res..</text>
</g>
<g>
<title>do_int80_syscall_32 (209 samples, 3.38%)</title><rect x="650.6" y="547.0" width="39.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="653.6" y="558.0">do_..</text>
</g>
<g>
<title>sys_clone (209 samples, 3.38%)</title><rect x="650.6" y="531.0" width="39.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="653.6" y="542.0">sys..</text>
</g>
<g>
<title>_do_fork (208 samples, 3.36%)</title><rect x="650.6" y="515.0" width="39.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="653.6" y="526.0">_do..</text>
</g>
<g>
<title>copy_creds (3 samples, 0.05%)</title><rect x="651.6" y="499.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.6" y="510.0"></text>
</g>
<g>
<title>copy_process.part.42 (122 samples, 1.97%)</title><rect x="652.2" y="499.0" width="23.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="655.2" y="510.0">c..</text>
</g>
<g>
<title>__alloc_pages_nodemask (13 samples, 0.21%)</title><rect x="653.5" y="483.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="656.5" y="494.0"></text>
</g>
<g>
<title>get_page_from_freelist (12 samples, 0.19%)</title><rect x="653.7" y="467.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="656.7" y="478.0"></text>
</g>
<g>
<title>__delayacct_tsk_init (3 samples, 0.05%)</title><rect x="656.0" y="483.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="659.0" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="656.2" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="659.2" y="478.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="656.9" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="659.9" y="494.0"></text>
</g>
<g>
<title>_warn_unseeded_randomness (2 samples, 0.03%)</title><rect x="657.3" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="660.3" y="494.0"></text>
</g>
<g>
<title>alloc_pid (8 samples, 0.13%)</title><rect x="657.7" y="483.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="660.7" y="494.0"></text>
</g>
<g>
<title>arch_dup_task_struct (12 samples, 0.19%)</title><rect x="659.2" y="483.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="662.2" y="494.0"></text>
</g>
<g>
<title>memcpy (11 samples, 0.18%)</title><rect x="659.4" y="467.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="662.4" y="478.0"></text>
</g>
<g>
<title>arch_local_irq_enable (9 samples, 0.15%)</title><rect x="661.5" y="483.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="664.5" y="494.0"></text>
</g>
<g>
<title>cgroup_can_fork (6 samples, 0.10%)</title><rect x="663.2" y="483.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="666.2" y="494.0"></text>
</g>
<g>
<title>pids_can_fork (3 samples, 0.05%)</title><rect x="663.8" y="467.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="666.8" y="478.0"></text>
</g>
<g>
<title>cgroup_post_fork (6 samples, 0.10%)</title><rect x="664.4" y="483.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="667.4" y="494.0"></text>
</g>
<g>
<title>cpu_cgroup_fork (4 samples, 0.06%)</title><rect x="664.8" y="467.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="667.8" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.06%)</title><rect x="664.8" y="451.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="667.8" y="462.0"></text>
</g>
<g>
<title>copy_creds (2 samples, 0.03%)</title><rect x="665.5" y="483.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="668.5" y="494.0"></text>
</g>
<g>
<title>copy_thread_tls (5 samples, 0.08%)</title><rect x="666.1" y="483.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="669.1" y="494.0"></text>
</g>
<g>
<title>do_set_thread_area (2 samples, 0.03%)</title><rect x="666.3" y="467.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="669.3" y="478.0"></text>
</g>
<g>
<title>get_random_u32 (2 samples, 0.03%)</title><rect x="667.6" y="483.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="670.6" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="667.6" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="670.6" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc (5 samples, 0.08%)</title><rect x="668.2" y="483.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="671.2" y="494.0"></text>
</g>
<g>
<title>__slab_alloc.constprop.83 (5 samples, 0.08%)</title><rect x="668.2" y="467.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="671.2" y="478.0"></text>
</g>
<g>
<title>ktime_get_with_offset (2 samples, 0.03%)</title><rect x="669.1" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="672.1" y="494.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.05%)</title><rect x="669.7" y="483.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="672.7" y="494.0"></text>
</g>
<g>
<title>perf_event_init_task (3 samples, 0.05%)</title><rect x="670.3" y="483.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="673.3" y="494.0"></text>
</g>
<g>
<title>perf_event_task (2 samples, 0.03%)</title><rect x="670.9" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="673.9" y="494.0"></text>
</g>
<g>
<title>sched_fork (13 samples, 0.21%)</title><rect x="671.2" y="483.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="674.2" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.16%)</title><rect x="671.2" y="467.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="674.2" y="478.0"></text>
</g>
<g>
<title>__sched_fork.isra.67 (2 samples, 0.03%)</title><rect x="673.1" y="467.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="676.1" y="478.0"></text>
</g>
<g>
<title>security_task_alloc (7 samples, 0.11%)</title><rect x="673.7" y="483.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="676.7" y="494.0"></text>
</g>
<g>
<title>lsm_task_alloc (5 samples, 0.08%)</title><rect x="673.9" y="467.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="676.9" y="478.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.05%)</title><rect x="674.1" y="451.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="677.1" y="462.0"></text>
</g>
<g>
<title>copy_thread_tls (2 samples, 0.03%)</title><rect x="675.6" y="499.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="678.6" y="510.0"></text>
</g>
<g>
<title>perf_event_init_task (2 samples, 0.03%)</title><rect x="676.4" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="679.4" y="510.0"></text>
</g>
<g>
<title>security_task_alloc (2 samples, 0.03%)</title><rect x="677.1" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="680.1" y="510.0"></text>
</g>
<g>
<title>wake_up_new_task (66 samples, 1.07%)</title><rect x="677.7" y="499.0" width="12.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.7" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (66 samples, 1.07%)</title><rect x="677.7" y="483.0" width="12.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="680.7" y="494.0"></text>
</g>
<g>
<title>malloc (11 samples, 0.18%)</title><rect x="690.5" y="579.0" width="2.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="693.5" y="590.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.06%)</title><rect x="692.8" y="595.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="695.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$228/32211625.accept (3 samples, 0.05%)</title><rect x="693.7" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (2 samples, 0.03%)</title><rect x="693.9" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$125/6127307.accept (2 samples, 0.03%)</title><rect x="694.3" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (2 samples, 0.03%)</title><rect x="694.3" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (2 samples, 0.03%)</title><rect x="694.3" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (2 samples, 0.03%)</title><rect x="694.3" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (6 samples, 0.10%)</title><rect x="694.7" y="819.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.03%)</title><rect x="695.8" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.03%)</title><rect x="695.8" y="851.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.03%)</title><rect x="695.8" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.03%)</title><rect x="695.8" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$108/20693185.run (1,324 samples, 21.40%)</title><rect x="696.6" y="1075.0" width="252.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.6" y="1086.0">ru/mail/polis/service/dogm/Service..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$2 (1,324 samples, 21.40%)</title><rect x="696.6" y="1059.0" width="252.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.6" y="1070.0">ru/mail/polis/service/dogm/Service..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (431 samples, 6.97%)</title><rect x="696.6" y="1043.0" width="82.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.6" y="1054.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (425 samples, 6.87%)</title><rect x="696.8" y="1027.0" width="81.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.8" y="1038.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.16%)</title><rect x="696.8" y="1011.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="698.3" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="698.3" y="979.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.3" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="698.3" y="963.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="698.3" y="947.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (415 samples, 6.71%)</title><rect x="698.7" y="1011.0" width="79.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.7" y="1022.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (415 samples, 6.71%)</title><rect x="698.7" y="995.0" width="79.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.7" y="1006.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (414 samples, 6.69%)</title><rect x="698.9" y="979.0" width="78.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.9" y="990.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (414 samples, 6.69%)</title><rect x="698.9" y="963.0" width="78.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.9" y="974.0">one/nio/n..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="698.9" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.9" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="698.9" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.9" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="698.9" y="915.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.9" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="698.9" y="899.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.9" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="698.9" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (412 samples, 6.66%)</title><rect x="699.3" y="947.0" width="78.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.3" y="958.0">sun/nio/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.05%)</title><rect x="699.3" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.05%)</title><rect x="699.3" y="915.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.05%)</title><rect x="699.3" y="899.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.05%)</title><rect x="699.3" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.19%)</title><rect x="699.8" y="931.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.19%)</title><rect x="699.8" y="915.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.19%)</title><rect x="699.8" y="899.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (12 samples, 0.19%)</title><rect x="699.8" y="883.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="702.8" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (12 samples, 0.19%)</title><rect x="699.8" y="867.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (12 samples, 0.19%)</title><rect x="699.8" y="851.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.8" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.15%)</title><rect x="700.4" y="835.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="703.4" y="846.0"></text>
</g>
<g>
<title>__kernel_vsyscall (7 samples, 0.11%)</title><rect x="700.6" y="819.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="703.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (7 samples, 0.11%)</title><rect x="700.6" y="803.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="703.6" y="814.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (6 samples, 0.10%)</title><rect x="700.6" y="787.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="703.6" y="798.0"></text>
</g>
<g>
<title>sys_gettimeofday (4 samples, 0.06%)</title><rect x="701.0" y="771.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="704.0" y="782.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.03%)</title><rect x="701.0" y="755.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="704.0" y="766.0"></text>
</g>
<g>
<title>do_gettimeofday (2 samples, 0.03%)</title><rect x="701.4" y="755.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="704.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (397 samples, 6.42%)</title><rect x="702.1" y="931.0" width="75.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.1" y="942.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (396 samples, 6.40%)</title><rect x="702.3" y="915.0" width="75.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.3" y="926.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (396 samples, 6.40%)</title><rect x="702.3" y="899.0" width="75.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.3" y="910.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (2 samples, 0.03%)</title><rect x="702.3" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.3" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (394 samples, 6.37%)</title><rect x="702.7" y="883.0" width="75.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.7" y="894.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (386 samples, 6.24%)</title><rect x="704.2" y="867.0" width="73.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.2" y="878.0">sun/nio/..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.06%)</title><rect x="704.2" y="851.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="707.2" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (377 samples, 6.09%)</title><rect x="705.2" y="851.0" width="71.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="708.2" y="862.0">__kernel..</text>
</g>
<g>
<title>entry_SYSENTER_32 (377 samples, 6.09%)</title><rect x="705.2" y="835.0" width="71.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="708.2" y="846.0">entry_SY..</text>
</g>
<g>
<title>do_fast_syscall_32 (376 samples, 6.08%)</title><rect x="705.2" y="819.0" width="71.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="708.2" y="830.0">do_fast_..</text>
</g>
<g>
<title>exit_to_usermode_loop (13 samples, 0.21%)</title><rect x="705.2" y="803.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="708.2" y="814.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.21%)</title><rect x="705.2" y="787.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="708.2" y="798.0"></text>
</g>
<g>
<title>__sched_text_start (13 samples, 0.21%)</title><rect x="705.2" y="771.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="708.2" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.21%)</title><rect x="705.2" y="755.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="708.2" y="766.0"></text>
</g>
<g>
<title>sys_write (363 samples, 5.87%)</title><rect x="707.7" y="803.0" width="69.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="710.7" y="814.0">sys_write</text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.06%)</title><rect x="707.9" y="787.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="710.9" y="798.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="707.9" y="771.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="710.9" y="782.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="708.2" y="755.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.2" y="766.0"></text>
</g>
<g>
<title>vfs_write (355 samples, 5.74%)</title><rect x="709.2" y="787.0" width="67.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="712.2" y="798.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (344 samples, 5.56%)</title><rect x="709.6" y="771.0" width="65.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="712.6" y="782.0">__vfs_w..</text>
</g>
<g>
<title>new_sync_write (344 samples, 5.56%)</title><rect x="709.6" y="755.0" width="65.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="712.6" y="766.0">new_syn..</text>
</g>
<g>
<title>sock_write_iter (343 samples, 5.54%)</title><rect x="709.8" y="739.0" width="65.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="712.8" y="750.0">sock_wr..</text>
</g>
<g>
<title>sock_sendmsg (342 samples, 5.53%)</title><rect x="710.0" y="723.0" width="65.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="713.0" y="734.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (339 samples, 5.48%)</title><rect x="710.0" y="707.0" width="64.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="713.0" y="718.0">inet_se..</text>
</g>
<g>
<title>tcp_sendmsg (338 samples, 5.46%)</title><rect x="710.0" y="691.0" width="64.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="713.0" y="702.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="710.0" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="713.0" y="686.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.03%)</title><rect x="710.5" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="713.5" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="710.9" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="713.9" y="686.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="711.3" y="675.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="714.3" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (328 samples, 5.30%)</title><rect x="711.9" y="675.0" width="62.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="714.9" y="686.0">tcp_se..</text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="713.0" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="716.0" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.19%)</title><rect x="713.4" y="659.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="716.4" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.18%)</title><rect x="713.6" y="643.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="716.6" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (6 samples, 0.10%)</title><rect x="714.0" y="627.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="717.0" y="638.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (5 samples, 0.08%)</title><rect x="714.1" y="611.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="717.1" y="622.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.05%)</title><rect x="715.1" y="627.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="718.1" y="638.0"></text>
</g>
<g>
<title>tcp_push (303 samples, 4.90%)</title><rect x="715.9" y="659.0" width="57.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="718.9" y="670.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (303 samples, 4.90%)</title><rect x="715.9" y="643.0" width="57.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="718.9" y="654.0">__tcp_..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.28 (2 samples, 0.03%)</title><rect x="716.4" y="627.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="719.4" y="638.0"></text>
</g>
<g>
<title>tcp_write_xmit (297 samples, 4.80%)</title><rect x="717.0" y="627.0" width="56.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="720.0" y="638.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (278 samples, 4.49%)</title><rect x="718.0" y="611.0" width="53.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="721.0" y="622.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (266 samples, 4.30%)</title><rect x="718.9" y="595.0" width="50.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="721.9" y="606.0">ip_qu..</text>
</g>
<g>
<title>ip_local_out (262 samples, 4.23%)</title><rect x="719.3" y="579.0" width="50.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="722.3" y="590.0">ip_lo..</text>
</g>
<g>
<title>ip_output (261 samples, 4.22%)</title><rect x="719.5" y="563.0" width="49.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="722.5" y="574.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (260 samples, 4.20%)</title><rect x="719.7" y="547.0" width="49.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="722.7" y="558.0">ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (258 samples, 4.17%)</title><rect x="720.1" y="531.0" width="49.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="723.1" y="542.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (239 samples, 3.86%)</title><rect x="720.4" y="515.0" width="45.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="723.4" y="526.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.15 (238 samples, 3.85%)</title><rect x="720.6" y="499.0" width="45.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="723.6" y="510.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (238 samples, 3.85%)</title><rect x="720.6" y="483.0" width="45.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="723.6" y="494.0">do_s..</text>
</g>
<g>
<title>call_on_stack (238 samples, 3.85%)</title><rect x="720.6" y="467.0" width="45.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="723.6" y="478.0">call..</text>
</g>
<g>
<title>__do_softirq (238 samples, 3.85%)</title><rect x="720.6" y="451.0" width="45.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="723.6" y="462.0">__do..</text>
</g>
<g>
<title>net_rx_action (231 samples, 3.73%)</title><rect x="722.0" y="435.0" width="44.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="725.0" y="446.0">net_..</text>
</g>
<g>
<title>process_backlog (229 samples, 3.70%)</title><rect x="722.3" y="419.0" width="43.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="725.3" y="430.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (229 samples, 3.70%)</title><rect x="722.3" y="403.0" width="43.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="725.3" y="414.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (228 samples, 3.69%)</title><rect x="722.3" y="387.0" width="43.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="725.3" y="398.0">__ne..</text>
</g>
<g>
<title>ip_rcv (225 samples, 3.64%)</title><rect x="722.7" y="371.0" width="42.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="725.7" y="382.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="723.1" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="726.1" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (221 samples, 3.57%)</title><rect x="723.5" y="355.0" width="42.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="726.5" y="366.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (220 samples, 3.56%)</title><rect x="723.7" y="339.0" width="41.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.7" y="350.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (219 samples, 3.54%)</title><rect x="723.7" y="323.0" width="41.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="726.7" y="334.0">ip_..</text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.05%)</title><rect x="724.3" y="307.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="727.3" y="318.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="725.0" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="728.0" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (210 samples, 3.39%)</title><rect x="725.4" y="307.0" width="40.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="728.4" y="318.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.05%)</title><rect x="726.0" y="291.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="729.0" y="302.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.05%)</title><rect x="726.7" y="291.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="729.7" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.10%)</title><rect x="727.3" y="291.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.3" y="302.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.05%)</title><rect x="727.9" y="275.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="730.9" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (192 samples, 3.10%)</title><rect x="728.6" y="291.0" width="36.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="731.6" y="302.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (192 samples, 3.10%)</title><rect x="728.6" y="275.0" width="36.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="731.6" y="286.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.10%)</title><rect x="729.8" y="259.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="732.8" y="270.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.10%)</title><rect x="729.8" y="243.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="732.8" y="254.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="730.2" y="227.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="733.2" y="238.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.06%)</title><rect x="730.2" y="211.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="733.2" y="222.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.06%)</title><rect x="730.2" y="195.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="733.2" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (9 samples, 0.15%)</title><rect x="731.5" y="259.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="734.5" y="270.0"></text>
</g>
<g>
<title>__wake_up_sync_key (9 samples, 0.15%)</title><rect x="731.5" y="243.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="734.5" y="254.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.15%)</title><rect x="731.5" y="227.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="734.5" y="238.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.15%)</title><rect x="731.5" y="211.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="734.5" y="222.0"></text>
</g>
<g>
<title>tcp_ack (36 samples, 0.58%)</title><rect x="733.2" y="259.0" width="6.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="736.2" y="270.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (2 samples, 0.03%)</title><rect x="735.1" y="243.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="738.1" y="254.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (20 samples, 0.32%)</title><rect x="735.5" y="243.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="738.5" y="254.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.10%)</title><rect x="736.3" y="227.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="739.3" y="238.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="736.5" y="211.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="739.5" y="222.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="736.5" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="739.5" y="206.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="736.8" y="211.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="739.8" y="222.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (7 samples, 0.11%)</title><rect x="737.4" y="227.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="740.4" y="238.0"></text>
</g>
<g>
<title>minmax_subwin_update (2 samples, 0.03%)</title><rect x="738.4" y="211.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="741.4" y="222.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.05%)</title><rect x="738.8" y="227.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="741.8" y="238.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="739.7" y="243.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="742.7" y="254.0"></text>
</g>
<g>
<title>tcp_data_queue (127 samples, 2.05%)</title><rect x="740.3" y="259.0" width="24.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="743.3" y="270.0">t..</text>
</g>
<g>
<title>sock_def_readable (123 samples, 1.99%)</title><rect x="740.7" y="243.0" width="23.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="743.7" y="254.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (120 samples, 1.94%)</title><rect x="741.2" y="227.0" width="22.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="744.2" y="238.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (120 samples, 1.94%)</title><rect x="741.2" y="211.0" width="22.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="744.2" y="222.0">_..</text>
</g>
<g>
<title>__lock_text_start (120 samples, 1.94%)</title><rect x="741.2" y="195.0" width="22.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="744.2" y="206.0">_..</text>
</g>
<g>
<title>dev_queue_xmit (17 samples, 0.27%)</title><rect x="766.0" y="515.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="769.0" y="526.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.23%)</title><rect x="766.0" y="499.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="769.0" y="510.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.10%)</title><rect x="766.6" y="483.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="769.6" y="494.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.05%)</title><rect x="767.0" y="467.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="770.0" y="478.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="767.2" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="770.2" y="462.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="767.2" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="770.2" y="446.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="767.2" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="770.2" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="767.7" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="770.7" y="494.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="768.3" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="771.3" y="494.0"></text>
</g>
<g>
<title>netdev_pick_tx (2 samples, 0.03%)</title><rect x="768.9" y="499.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="771.9" y="510.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.06%)</title><rect x="769.6" y="595.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="772.6" y="606.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="770.0" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="773.0" y="590.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="771.0" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="774.0" y="622.0"></text>
</g>
<g>
<title>sched_clock_cpu (3 samples, 0.05%)</title><rect x="771.6" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="774.6" y="622.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.05%)</title><rect x="771.6" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="774.6" y="606.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="771.7" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="774.7" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="772.1" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="775.1" y="622.0"></text>
</g>
<g>
<title>tcp_tso_segs (2 samples, 0.03%)</title><rect x="772.9" y="611.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="775.9" y="622.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="773.3" y="611.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="776.3" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.05%)</title><rect x="773.7" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="776.7" y="670.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="773.8" y="643.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="776.8" y="654.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.05%)</title><rect x="774.6" y="707.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="777.6" y="718.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.06%)</title><rect x="775.2" y="771.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="778.2" y="782.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.08%)</title><rect x="775.9" y="771.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="778.9" y="782.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="776.5" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="779.5" y="766.0"></text>
</g>
<g>
<title>__write (2 samples, 0.03%)</title><rect x="777.1" y="851.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="780.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.08%)</title><rect x="777.8" y="1027.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="778.4" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="778.4" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$106/10655556.act (893 samples, 14.43%)</title><rect x="778.8" y="1043.0" width="170.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.8" y="1054.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$0 (893 samples, 14.43%)</title><rect x="778.8" y="1027.0" width="170.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.8" y="1038.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.processEntityRequest (893 samples, 14.43%)</title><rect x="778.8" y="1011.0" width="170.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.8" y="1022.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.11%)</title><rect x="779.0" y="995.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.11%)</title><rect x="779.0" y="979.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet.processEntityDirectly (133 samples, 2.15%)</title><rect x="780.3" y="995.0" width="25.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.3" y="1006.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.10%)</title><rect x="780.3" y="979.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.10%)</title><rect x="780.3" y="963.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="783.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.10%)</title><rect x="780.3" y="947.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.3" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.10%)</title><rect x="780.3" y="931.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.3" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/RocksDAO.getWithTimestamp (127 samples, 2.05%)</title><rect x="781.5" y="979.0" width="24.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.5" y="990.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (126 samples, 2.04%)</title><rect x="781.5" y="963.0" width="24.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.5" y="974.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (122 samples, 1.97%)</title><rect x="782.2" y="947.0" width="23.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.2" y="958.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (114 samples, 1.84%)</title><rect x="782.6" y="931.0" width="21.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="785.6" y="942.0">J..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="782.6" y="915.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="785.6" y="926.0"></text>
</g>
<g>
<title>free (5 samples, 0.08%)</title><rect x="783.2" y="915.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="786.2" y="926.0"></text>
</g>
<g>
<title>operator new(unsigned int) (4 samples, 0.06%)</title><rect x="784.1" y="915.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="787.1" y="926.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned int) (3 samples, 0.05%)</title><rect x="784.9" y="915.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="787.9" y="926.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (95 samples, 1.54%)</title><rect x="785.5" y="915.0" width="18.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="788.5" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="786.4" y="899.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="789.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (79 samples, 1.28%)</title><rect x="787.0" y="899.0" width="15.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="790.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.03%)</title><rect x="787.4" y="883.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="790.4" y="894.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (75 samples, 1.21%)</title><rect x="787.8" y="883.0" width="14.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="790.8" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (73 samples, 1.18%)</title><rect x="788.0" y="867.0" width="13.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="791.0" y="878.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.05%)</title><rect x="788.0" y="851.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="791.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (67 samples, 1.08%)</title><rect x="788.7" y="851.0" width="12.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="791.7" y="862.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.05%)</title><rect x="789.7" y="835.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="792.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.03%)</title><rect x="790.6" y="835.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="793.6" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (4 samples, 0.06%)</title><rect x="791.2" y="835.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="794.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.05%)</title><rect x="791.2" y="819.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="794.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (3 samples, 0.05%)</title><rect x="791.2" y="803.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="794.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.03%)</title><rect x="791.4" y="787.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="794.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (42 samples, 0.68%)</title><rect x="792.2" y="835.0" width="8.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="795.2" y="846.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9151950321374915066.so (41 samples, 0.66%)</title><rect x="792.3" y="819.0" width="7.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="795.3" y="830.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9151950321374915066.so (4 samples, 0.06%)</title><rect x="792.5" y="803.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="795.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (32 samples, 0.52%)</title><rect x="793.3" y="803.0" width="6.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="796.3" y="814.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.03%)</title><rect x="797.7" y="787.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="800.7" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="797.7" y="771.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="800.7" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="797.7" y="755.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="800.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.11%)</title><rect x="798.1" y="787.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="801.1" y="798.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.05%)</title><rect x="798.3" y="771.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="801.3" y="782.0"></text>
</g>
<g>
<title>___tls_get_addr (2 samples, 0.03%)</title><rect x="799.0" y="771.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="802.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTableRep::KeyComparator::decode_key(char const*) const (2 samples, 0.03%)</title><rect x="799.4" y="803.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="802.4" y="814.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned int) (2 samples, 0.03%)</title><rect x="799.8" y="803.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="802.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long long, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="800.5" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="803.5" y="846.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*) (2 samples, 0.03%)</title><rect x="801.1" y="835.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="804.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned int) (8 samples, 0.13%)</title><rect x="802.1" y="899.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="805.1" y="910.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.10%)</title><rect x="802.5" y="883.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="805.5" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.05%)</title><rect x="803.0" y="867.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="806.0" y="878.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.03%)</title><rect x="803.8" y="915.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="806.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.06%)</title><rect x="804.4" y="931.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="807.4" y="942.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.05%)</title><rect x="804.4" y="915.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="807.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet.processEntityRequest (752 samples, 12.15%)</title><rect x="805.7" y="995.0" width="143.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.7" y="1006.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (6 samples, 0.10%)</title><rect x="805.9" y="979.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (6 samples, 0.10%)</title><rect x="805.9" y="963.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.&lt;init&gt; (4 samples, 0.06%)</title><rect x="805.9" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.06%)</title><rect x="805.9" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (4 samples, 0.06%)</title><rect x="805.9" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="806.6" y="947.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="806.6" y="931.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.03%)</title><rect x="806.6" y="915.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="809.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (70 samples, 1.13%)</title><rect x="807.0" y="979.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.timedGet (70 samples, 1.13%)</title><rect x="807.0" y="963.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.&lt;init&gt; (12 samples, 0.19%)</title><rect x="807.2" y="947.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (12 samples, 0.19%)</title><rect x="807.2" y="931.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.&lt;init&gt; (12 samples, 0.19%)</title><rect x="807.2" y="915.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (57 samples, 0.92%)</title><rect x="809.5" y="947.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (57 samples, 0.92%)</title><rect x="809.5" y="931.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.isReleasable (2 samples, 0.03%)</title><rect x="809.5" y="915.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.5" y="926.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="809.5" y="899.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="812.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (55 samples, 0.89%)</title><rect x="809.9" y="915.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (54 samples, 0.87%)</title><rect x="810.1" y="899.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.1" y="910.0"></text>
</g>
<g>
<title>Unsafe_Park (53 samples, 0.86%)</title><rect x="810.3" y="883.0" width="10.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="813.3" y="894.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (10 samples, 0.16%)</title><rect x="810.5" y="867.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="813.5" y="878.0"></text>
</g>
<g>
<title>__divdi3 (3 samples, 0.05%)</title><rect x="811.8" y="851.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="814.8" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (38 samples, 0.61%)</title><rect x="812.8" y="867.0" width="7.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="815.8" y="878.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (37 samples, 0.60%)</title><rect x="812.9" y="851.0" width="7.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="815.9" y="862.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (36 samples, 0.58%)</title><rect x="812.9" y="835.0" width="6.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="815.9" y="846.0"></text>
</g>
<g>
<title>sys_futex (35 samples, 0.57%)</title><rect x="813.1" y="819.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="816.1" y="830.0"></text>
</g>
<g>
<title>do_futex (35 samples, 0.57%)</title><rect x="813.1" y="803.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="816.1" y="814.0"></text>
</g>
<g>
<title>futex_wait (35 samples, 0.57%)</title><rect x="813.1" y="787.0" width="6.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="816.1" y="798.0"></text>
</g>
<g>
<title>futex_wait_queue_me (33 samples, 0.53%)</title><rect x="813.3" y="771.0" width="6.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="816.3" y="782.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.03%)</title><rect x="813.3" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="816.3" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="813.3" y="739.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="816.3" y="750.0"></text>
</g>
<g>
<title>schedule (31 samples, 0.50%)</title><rect x="813.7" y="755.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="816.7" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (31 samples, 0.50%)</title><rect x="813.7" y="739.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="816.7" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (30 samples, 0.48%)</title><rect x="813.9" y="723.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="816.9" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="820.0" y="867.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="823.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (441 samples, 7.13%)</title><rect x="820.4" y="979.0" width="84.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.4" y="990.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (441 samples, 7.13%)</title><rect x="820.4" y="963.0" width="84.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.4" y="974.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (441 samples, 7.13%)</title><rect x="820.4" y="947.0" width="84.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.4" y="958.0">java/util/..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (87 samples, 1.41%)</title><rect x="820.4" y="931.0" width="16.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="820.4" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.06%)</title><rect x="820.8" y="915.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.8" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.06%)</title><rect x="820.8" y="899.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.8" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.06%)</title><rect x="820.8" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.8" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="820.8" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.8" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (80 samples, 1.29%)</title><rect x="821.5" y="915.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.5" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (80 samples, 1.29%)</title><rect x="821.5" y="899.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.5" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority (3 samples, 0.05%)</title><rect x="821.5" y="883.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (3 samples, 0.05%)</title><rect x="821.5" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.5" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="821.7" y="851.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="824.7" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (76 samples, 1.23%)</title><rect x="822.3" y="883.0" width="14.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.3" y="894.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (7 samples, 0.11%)</title><rect x="822.3" y="867.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.3" y="878.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (2 samples, 0.03%)</title><rect x="822.7" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.7" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (3 samples, 0.05%)</title><rect x="823.0" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.0" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (69 samples, 1.12%)</title><rect x="823.6" y="867.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.6" y="878.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (2 samples, 0.03%)</title><rect x="823.6" y="851.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="826.6" y="862.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_getStackAccessControlContext (67 samples, 1.08%)</title><rect x="824.0" y="851.0" width="12.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="827.0" y="862.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (58 samples, 0.94%)</title><rect x="824.6" y="835.0" width="11.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="827.6" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (5 samples, 0.08%)</title><rect x="827.4" y="819.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="830.4" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;573526ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)3, 573526ull&gt;::oop_access_barrier(oopDesc*, int) (5 samples, 0.08%)</title><rect x="828.8" y="819.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="831.8" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::protection_domain() const (3 samples, 0.05%)</title><rect x="829.7" y="819.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="832.7" y="830.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (3 samples, 0.05%)</title><rect x="829.7" y="803.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="832.7" y="814.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (4 samples, 0.06%)</title><rect x="831.3" y="819.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="834.3" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (4 samples, 0.06%)</title><rect x="831.3" y="803.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="834.3" y="814.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.06%)</title><rect x="832.0" y="819.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="835.0" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.06%)</title><rect x="832.0" y="803.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="835.0" y="814.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (3 samples, 0.05%)</title><rect x="832.2" y="787.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="835.2" y="798.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (15 samples, 0.24%)</title><rect x="832.8" y="819.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="835.8" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.10%)</title><rect x="834.3" y="803.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="837.3" y="814.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (5 samples, 0.08%)</title><rect x="834.5" y="787.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="837.5" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.05%)</title><rect x="834.7" y="771.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="837.7" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.05%)</title><rect x="834.7" y="755.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="837.7" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.start (354 samples, 5.72%)</title><rect x="837.0" y="931.0" width="67.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.0" y="942.0">java/la..</text>
</g>
<g>
<title>java/lang/Thread.start0 (354 samples, 5.72%)</title><rect x="837.0" y="915.0" width="67.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.0" y="926.0">java/la..</text>
</g>
<g>
<title>JVM_StartThread (88 samples, 1.42%)</title><rect x="837.7" y="899.0" width="16.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="840.7" y="910.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned int) (54 samples, 0.87%)</title><rect x="837.9" y="883.0" width="10.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="840.9" y="894.0"></text>
</g>
<g>
<title>Parker::Allocate(JavaThread*) (2 samples, 0.03%)</title><rect x="838.9" y="867.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="841.9" y="878.0"></text>
</g>
<g>
<title>Thread::Thread() (20 samples, 0.32%)</title><rect x="839.3" y="867.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="842.3" y="878.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.06%)</title><rect x="839.3" y="851.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="842.3" y="862.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (3 samples, 0.05%)</title><rect x="840.0" y="851.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="843.0" y="862.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned int, AllocFailStrategy::AllocFailEnum) (2 samples, 0.03%)</title><rect x="840.0" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="843.0" y="846.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.03%)</title><rect x="840.0" y="819.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="843.0" y="830.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (2 samples, 0.03%)</title><rect x="840.8" y="851.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="843.8" y="862.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (2 samples, 0.03%)</title><rect x="841.4" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="844.4" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.10%)</title><rect x="841.7" y="851.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="844.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="841.7" y="835.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="844.7" y="846.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="841.7" y="819.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="844.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="841.7" y="803.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="844.7" y="814.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="841.7" y="787.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="844.7" y="798.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.06%)</title><rect x="842.1" y="835.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="845.1" y="846.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="842.1" y="819.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="845.1" y="830.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.05%)</title><rect x="842.1" y="803.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="845.1" y="814.0"></text>
</g>
<g>
<title>ThreadStatistics::ThreadStatistics() (2 samples, 0.03%)</title><rect x="843.1" y="867.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="846.1" y="878.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned int) (24 samples, 0.39%)</title><rect x="843.5" y="867.0" width="4.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="846.5" y="878.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.06%)</title><rect x="843.5" y="851.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="846.5" y="862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.05%)</title><rect x="844.6" y="851.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="847.6" y="862.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (2 samples, 0.03%)</title><rect x="844.8" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="847.8" y="846.0"></text>
</g>
<g>
<title>__pthread_create_2_1 (11 samples, 0.18%)</title><rect x="845.4" y="851.0" width="2.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="848.4" y="862.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (24 samples, 0.39%)</title><rect x="848.2" y="883.0" width="4.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="851.2" y="894.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (9 samples, 0.15%)</title><rect x="848.2" y="867.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="851.2" y="878.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="848.8" y="851.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="851.8" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="848.8" y="835.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="851.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="848.8" y="819.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="851.8" y="830.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="848.8" y="803.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="851.8" y="814.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (12 samples, 0.19%)</title><rect x="850.1" y="867.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="853.1" y="878.0"></text>
</g>
<g>
<title>Monitor::lock() (2 samples, 0.03%)</title><rect x="852.8" y="883.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="855.8" y="894.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.03%)</title><rect x="852.8" y="867.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="855.8" y="878.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="853.2" y="883.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="856.2" y="894.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (2 samples, 0.03%)</title><rect x="853.2" y="867.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="856.2" y="878.0"></text>
</g>
<g>
<title>Thread::start(Thread*) (2 samples, 0.03%)</title><rect x="853.8" y="883.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="856.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (258 samples, 4.17%)</title><rect x="854.5" y="899.0" width="49.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="857.5" y="910.0">[unkn..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (16 samples, 0.26%)</title><rect x="854.5" y="883.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="857.5" y="894.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (12 samples, 0.19%)</title><rect x="857.6" y="883.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="860.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.19%)</title><rect x="857.6" y="867.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="860.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.19%)</title><rect x="857.6" y="851.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="860.6" y="862.0"></text>
</g>
<g>
<title>_IO_vfprintf (2 samples, 0.03%)</title><rect x="857.6" y="835.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="860.6" y="846.0"></text>
</g>
<g>
<title>__vsnprintf_chk (10 samples, 0.16%)</title><rect x="858.0" y="835.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="861.0" y="846.0"></text>
</g>
<g>
<title>_IO_vfprintf (7 samples, 0.11%)</title><rect x="858.3" y="819.0" width="1.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="861.3" y="830.0"></text>
</g>
<g>
<title>__kernel_vsyscall (108 samples, 1.75%)</title><rect x="859.9" y="883.0" width="20.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="862.9" y="894.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (106 samples, 1.71%)</title><rect x="860.2" y="867.0" width="20.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="863.2" y="878.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (106 samples, 1.71%)</title><rect x="860.2" y="851.0" width="20.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="863.2" y="862.0"></text>
</g>
<g>
<title>sys_futex (105 samples, 1.70%)</title><rect x="860.4" y="835.0" width="20.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="863.4" y="846.0"></text>
</g>
<g>
<title>do_futex (104 samples, 1.68%)</title><rect x="860.6" y="819.0" width="19.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="863.6" y="830.0"></text>
</g>
<g>
<title>futex_wait (67 samples, 1.08%)</title><rect x="860.6" y="803.0" width="12.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="863.6" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (66 samples, 1.07%)</title><rect x="860.6" y="787.0" width="12.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="863.6" y="798.0"></text>
</g>
<g>
<title>schedule (64 samples, 1.03%)</title><rect x="861.0" y="771.0" width="12.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="864.0" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (64 samples, 1.03%)</title><rect x="861.0" y="755.0" width="12.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="864.0" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (64 samples, 1.03%)</title><rect x="861.0" y="739.0" width="12.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="864.0" y="750.0"></text>
</g>
<g>
<title>futex_wake (37 samples, 0.60%)</title><rect x="873.4" y="803.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="876.4" y="814.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 0.60%)</title><rect x="873.4" y="787.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="876.4" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (37 samples, 0.60%)</title><rect x="873.4" y="771.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="876.4" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (37 samples, 0.60%)</title><rect x="873.4" y="755.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="876.4" y="766.0"></text>
</g>
<g>
<title>_dl_allocate_tls_init (4 samples, 0.06%)</title><rect x="880.6" y="883.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="883.6" y="894.0"></text>
</g>
<g>
<title>clone (114 samples, 1.84%)</title><rect x="881.4" y="883.0" width="21.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="884.4" y="894.0">c..</text>
</g>
<g>
<title>restore_all (113 samples, 1.83%)</title><rect x="881.6" y="867.0" width="21.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="884.6" y="878.0">r..</text>
</g>
<g>
<title>do_int80_syscall_32 (113 samples, 1.83%)</title><rect x="881.6" y="851.0" width="21.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="884.6" y="862.0">d..</text>
</g>
<g>
<title>sys_clone (112 samples, 1.81%)</title><rect x="881.8" y="835.0" width="21.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="884.8" y="846.0">s..</text>
</g>
<g>
<title>_do_fork (110 samples, 1.78%)</title><rect x="881.8" y="819.0" width="21.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="884.8" y="830.0"></text>
</g>
<g>
<title>copy_process.part.42 (63 samples, 1.02%)</title><rect x="882.7" y="803.0" width="12.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="885.7" y="814.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (8 samples, 0.13%)</title><rect x="883.3" y="787.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="886.3" y="798.0"></text>
</g>
<g>
<title>get_page_from_freelist (7 samples, 0.11%)</title><rect x="883.5" y="771.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="886.5" y="782.0"></text>
</g>
<g>
<title>alloc_pid (9 samples, 0.15%)</title><rect x="885.6" y="787.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="888.6" y="798.0"></text>
</g>
<g>
<title>arch_dup_task_struct (4 samples, 0.06%)</title><rect x="887.3" y="787.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="890.3" y="798.0"></text>
</g>
<g>
<title>memcpy (4 samples, 0.06%)</title><rect x="887.3" y="771.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="890.3" y="782.0"></text>
</g>
<g>
<title>arch_local_irq_enable (3 samples, 0.05%)</title><rect x="888.1" y="787.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="891.1" y="798.0"></text>
</g>
<g>
<title>cgroup_can_fork (2 samples, 0.03%)</title><rect x="888.7" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="891.7" y="798.0"></text>
</g>
<g>
<title>pids_can_fork (2 samples, 0.03%)</title><rect x="888.7" y="771.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="891.7" y="782.0"></text>
</g>
<g>
<title>cgroup_post_fork (5 samples, 0.08%)</title><rect x="889.0" y="787.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="892.0" y="798.0"></text>
</g>
<g>
<title>cpu_cgroup_fork (3 samples, 0.05%)</title><rect x="889.4" y="771.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="892.4" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="889.4" y="755.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="892.4" y="766.0"></text>
</g>
<g>
<title>copy_creds (3 samples, 0.05%)</title><rect x="890.0" y="787.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="893.0" y="798.0"></text>
</g>
<g>
<title>copy_thread_tls (2 samples, 0.03%)</title><rect x="890.8" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="893.8" y="798.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.05%)</title><rect x="891.3" y="787.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="894.3" y="798.0"></text>
</g>
<g>
<title>sched_fork (7 samples, 0.11%)</title><rect x="892.9" y="787.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="895.9" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.06%)</title><rect x="892.9" y="771.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="895.9" y="782.0"></text>
</g>
<g>
<title>init_dl_task_timer (2 samples, 0.03%)</title><rect x="893.8" y="771.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="896.8" y="782.0"></text>
</g>
<g>
<title>security_task_alloc (3 samples, 0.05%)</title><rect x="894.2" y="787.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="897.2" y="798.0"></text>
</g>
<g>
<title>lsm_task_alloc (3 samples, 0.05%)</title><rect x="894.2" y="771.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="897.2" y="782.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="895.0" y="803.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="898.0" y="814.0"></text>
</g>
<g>
<title>wake_up_new_task (38 samples, 0.61%)</title><rect x="895.5" y="803.0" width="7.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="898.5" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (38 samples, 0.61%)</title><rect x="895.5" y="787.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="898.5" y="798.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.05%)</title><rect x="903.2" y="883.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="906.2" y="894.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.03%)</title><rect x="904.1" y="899.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="907.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (8 samples, 0.13%)</title><rect x="904.5" y="979.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (8 samples, 0.13%)</title><rect x="904.5" y="963.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.&lt;init&gt; (2 samples, 0.03%)</title><rect x="904.5" y="947.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.03%)</title><rect x="904.5" y="931.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (2 samples, 0.03%)</title><rect x="904.5" y="915.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.10%)</title><rect x="904.9" y="947.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.10%)</title><rect x="904.9" y="931.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (6 samples, 0.10%)</title><rect x="904.9" y="915.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.9" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorGet.resolveSuitableGetResponse (3 samples, 0.05%)</title><rect x="906.0" y="979.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="909.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/DataWithTimestamp.fromAbsent (3 samples, 0.05%)</title><rect x="906.0" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.0" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor.processEntityRemotely (223 samples, 3.60%)</title><rect x="906.6" y="979.0" width="42.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.6" y="990.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/Bridges.sendRequestTo (221 samples, 3.57%)</title><rect x="907.0" y="963.0" width="42.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.0" y="974.0">ru/m..</text>
</g>
<g>
<title>java/net/URI.create (29 samples, 0.47%)</title><rect x="907.0" y="947.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.0" y="958.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (29 samples, 0.47%)</title><rect x="907.0" y="931.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="910.0" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (29 samples, 0.47%)</title><rect x="907.0" y="915.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.0" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (10 samples, 0.16%)</title><rect x="907.3" y="899.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.3" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (10 samples, 0.16%)</title><rect x="907.3" y="883.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.3" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (10 samples, 0.16%)</title><rect x="907.3" y="867.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.3" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (16 samples, 0.26%)</title><rect x="909.4" y="899.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="912.4" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (6 samples, 0.10%)</title><rect x="909.4" y="883.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.4" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.10%)</title><rect x="909.4" y="867.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.4" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (10 samples, 0.16%)</title><rect x="910.6" y="883.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.6" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2 samples, 0.03%)</title><rect x="911.0" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.0" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.10%)</title><rect x="911.4" y="867.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="912.5" y="947.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="915.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="912.5" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (174 samples, 2.81%)</title><rect x="912.9" y="947.0" width="33.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.9" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (174 samples, 2.81%)</title><rect x="912.9" y="931.0" width="33.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.9" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (172 samples, 2.78%)</title><rect x="913.3" y="915.0" width="32.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="916.3" y="926.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (172 samples, 2.78%)</title><rect x="913.3" y="899.0" width="32.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="916.3" y="910.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.03%)</title><rect x="913.6" y="883.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="916.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="913.6" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (2 samples, 0.03%)</title><rect x="913.6" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (75 samples, 1.21%)</title><rect x="914.0" y="883.0" width="14.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (13 samples, 0.21%)</title><rect x="914.0" y="867.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.0" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.03%)</title><rect x="914.0" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="917.0" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.03%)</title><rect x="914.0" y="835.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.0" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.03%)</title><rect x="914.0" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="917.0" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="914.0" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.0" y="814.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.10%)</title><rect x="914.4" y="851.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.4" y="862.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.06%)</title><rect x="914.4" y="835.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.4" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.03%)</title><rect x="915.2" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.03%)</title><rect x="915.2" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.characteristics (2 samples, 0.03%)</title><rect x="915.2" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.2" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.08%)</title><rect x="915.6" y="851.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.6" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.03%)</title><rect x="916.1" y="835.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.03%)</title><rect x="916.1" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.1" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.03%)</title><rect x="916.1" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.03%)</title><rect x="916.1" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.1" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.03%)</title><rect x="916.1" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (2 samples, 0.03%)</title><rect x="916.1" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.1" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.10%)</title><rect x="916.5" y="867.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.5" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.10%)</title><rect x="916.5" y="851.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="919.5" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (4 samples, 0.06%)</title><rect x="916.9" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.9" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4 samples, 0.06%)</title><rect x="916.9" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.9" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (3 samples, 0.05%)</title><rect x="917.1" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.1" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.05%)</title><rect x="917.1" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.05%)</title><rect x="917.1" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="920.1" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (2 samples, 0.03%)</title><rect x="917.3" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.3" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="917.3" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="920.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (55 samples, 0.89%)</title><rect x="917.6" y="867.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.6" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (55 samples, 0.89%)</title><rect x="917.6" y="851.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="920.6" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (53 samples, 0.86%)</title><rect x="918.0" y="835.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.0" y="846.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (32 samples, 0.52%)</title><rect x="918.0" y="819.0" width="6.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="921.0" y="830.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (26 samples, 0.42%)</title><rect x="918.4" y="803.0" width="5.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="921.4" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.05%)</title><rect x="918.8" y="787.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="921.8" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.224] (2 samples, 0.03%)</title><rect x="918.8" y="771.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="921.8" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.06%)</title><rect x="919.4" y="787.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="922.4" y="798.0"></text>
</g>
<g>
<title>.L409 (2 samples, 0.03%)</title><rect x="919.4" y="771.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="922.4" y="782.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (5 samples, 0.08%)</title><rect x="921.3" y="787.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="924.3" y="798.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.05%)</title><rect x="921.3" y="771.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="924.3" y="782.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.03%)</title><rect x="921.8" y="771.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="924.8" y="782.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (6 samples, 0.10%)</title><rect x="922.2" y="787.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="925.2" y="798.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.03%)</title><rect x="922.4" y="771.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="925.4" y="782.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.05%)</title><rect x="922.8" y="771.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="925.8" y="782.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (2 samples, 0.03%)</title><rect x="923.0" y="755.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="926.0" y="766.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="923.0" y="739.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="926.0" y="750.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="923.0" y="723.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="926.0" y="734.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (2 samples, 0.03%)</title><rect x="923.4" y="803.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="926.4" y="814.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="923.8" y="803.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="926.8" y="814.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (20 samples, 0.32%)</title><rect x="924.3" y="819.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="927.3" y="830.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (20 samples, 0.32%)</title><rect x="924.3" y="803.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="927.3" y="814.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (11 samples, 0.18%)</title><rect x="926.0" y="787.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.0" y="798.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (11 samples, 0.18%)</title><rect x="926.0" y="771.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="929.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (11 samples, 0.18%)</title><rect x="926.0" y="755.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (17 samples, 0.27%)</title><rect x="928.3" y="883.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (17 samples, 0.27%)</title><rect x="928.3" y="867.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="931.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (17 samples, 0.27%)</title><rect x="928.3" y="851.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="931.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (5 samples, 0.08%)</title><rect x="929.1" y="835.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="932.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (3 samples, 0.05%)</title><rect x="929.5" y="819.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="932.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (3 samples, 0.05%)</title><rect x="929.5" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="932.5" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (8 samples, 0.13%)</title><rect x="930.0" y="835.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.0" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (5 samples, 0.08%)</title><rect x="930.0" y="819.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="933.0" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (5 samples, 0.08%)</title><rect x="930.0" y="803.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.0" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (5 samples, 0.08%)</title><rect x="930.0" y="787.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (2 samples, 0.03%)</title><rect x="930.6" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (3 samples, 0.05%)</title><rect x="931.0" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (76 samples, 1.23%)</title><rect x="931.6" y="883.0" width="14.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="934.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (74 samples, 1.20%)</title><rect x="931.8" y="867.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (74 samples, 1.20%)</title><rect x="931.8" y="851.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="934.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (74 samples, 1.20%)</title><rect x="931.8" y="835.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="934.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (74 samples, 1.20%)</title><rect x="931.8" y="819.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="934.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (72 samples, 1.16%)</title><rect x="931.8" y="803.0" width="13.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="934.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (71 samples, 1.15%)</title><rect x="932.0" y="787.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="935.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (71 samples, 1.15%)</title><rect x="932.0" y="771.0" width="13.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.0" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.13%)</title><rect x="932.0" y="755.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="935.0" y="766.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.03%)</title><rect x="932.5" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="935.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.02%)</title><rect x="933.5" y="755.0" width="12.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="936.5" y="766.0"></text>
</g>
<g>
<title>__kernel_vsyscall (61 samples, 0.99%)</title><rect x="933.7" y="739.0" width="11.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="936.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (60 samples, 0.97%)</title><rect x="933.9" y="723.0" width="11.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="936.9" y="734.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (60 samples, 0.97%)</title><rect x="933.9" y="707.0" width="11.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="936.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="933.9" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="936.9" y="702.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="933.9" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="936.9" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="933.9" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="936.9" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="933.9" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="936.9" y="654.0"></text>
</g>
<g>
<title>sys_futex (58 samples, 0.94%)</title><rect x="934.2" y="691.0" width="11.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="937.2" y="702.0"></text>
</g>
<g>
<title>do_futex (58 samples, 0.94%)</title><rect x="934.2" y="675.0" width="11.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="937.2" y="686.0"></text>
</g>
<g>
<title>futex_wake (57 samples, 0.92%)</title><rect x="934.4" y="659.0" width="10.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="937.4" y="670.0"></text>
</g>
<g>
<title>wake_up_q (54 samples, 0.87%)</title><rect x="935.0" y="643.0" width="10.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="938.0" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (54 samples, 0.87%)</title><rect x="935.0" y="627.0" width="10.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="938.0" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (54 samples, 0.87%)</title><rect x="935.0" y="611.0" width="10.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="938.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (2 samples, 0.03%)</title><rect x="945.5" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (9 samples, 0.15%)</title><rect x="946.1" y="947.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="949.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (9 samples, 0.15%)</title><rect x="946.1" y="931.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="949.1" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.15%)</title><rect x="946.1" y="915.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="949.1" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.15%)</title><rect x="946.1" y="899.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="949.1" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8 samples, 0.13%)</title><rect x="946.3" y="883.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="949.3" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (8 samples, 0.13%)</title><rect x="946.3" y="867.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.3" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.13%)</title><rect x="946.3" y="851.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.3" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (7 samples, 0.11%)</title><rect x="946.4" y="835.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="949.4" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (5 samples, 0.08%)</title><rect x="946.8" y="819.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.8" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.08%)</title><rect x="946.8" y="803.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="949.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (5 samples, 0.08%)</title><rect x="947.8" y="947.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="950.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (5 samples, 0.08%)</title><rect x="947.8" y="931.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (5 samples, 0.08%)</title><rect x="947.8" y="915.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="950.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/827193.test (5 samples, 0.08%)</title><rect x="947.8" y="899.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (5 samples, 0.08%)</title><rect x="947.8" y="883.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.8" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (5 samples, 0.08%)</title><rect x="947.8" y="867.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.8" y="878.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (5 samples, 0.08%)</title><rect x="947.8" y="851.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.8" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (5 samples, 0.08%)</title><rect x="947.8" y="835.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.8" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.08%)</title><rect x="947.8" y="819.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="950.8" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.03%)</title><rect x="948.4" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="951.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.03%)</title><rect x="948.7" y="947.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="951.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.03%)</title><rect x="948.7" y="931.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.03%)</title><rect x="948.7" y="915.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.03%)</title><rect x="948.7" y="899.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="951.7" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="948.7" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.7" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (2 samples, 0.03%)</title><rect x="949.1" y="1123.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.1" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (2 samples, 0.03%)</title><rect x="949.1" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.1" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.03%)</title><rect x="949.1" y="1091.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.1" y="1102.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.03%)</title><rect x="949.1" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.1" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.03%)</title><rect x="949.1" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.1" y="1070.0"></text>
</g>
<g>
<title>__moddi3 (2 samples, 0.03%)</title><rect x="949.1" y="1043.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="952.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.03%)</title><rect x="949.7" y="1123.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="952.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (810 samples, 13.09%)</title><rect x="950.5" y="1123.0" width="154.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.5" y="1134.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (140 samples, 2.26%)</title><rect x="952.4" y="1107.0" width="26.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.4" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1151031.accept (136 samples, 2.20%)</title><rect x="952.4" y="1091.0" width="25.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="955.4" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (136 samples, 2.20%)</title><rect x="952.4" y="1075.0" width="25.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.4" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (136 samples, 2.20%)</title><rect x="952.4" y="1059.0" width="25.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.4" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (136 samples, 2.20%)</title><rect x="952.4" y="1043.0" width="25.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.4" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (136 samples, 2.20%)</title><rect x="952.4" y="1027.0" width="25.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.4" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.05%)</title><rect x="952.4" y="1011.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="955.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.03%)</title><rect x="952.6" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (133 samples, 2.15%)</title><rect x="952.9" y="1011.0" width="25.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.9" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (133 samples, 2.15%)</title><rect x="952.9" y="995.0" width="25.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.9" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (133 samples, 2.15%)</title><rect x="952.9" y="979.0" width="25.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.9" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (132 samples, 2.13%)</title><rect x="953.1" y="963.0" width="25.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.1" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (132 samples, 2.13%)</title><rect x="953.1" y="947.0" width="25.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="956.1" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/19216263.run (131 samples, 2.12%)</title><rect x="953.3" y="931.0" width="25.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="956.3" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (130 samples, 2.10%)</title><rect x="953.5" y="915.0" width="24.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="956.5" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (76 samples, 1.23%)</title><rect x="953.9" y="899.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="956.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (76 samples, 1.23%)</title><rect x="953.9" y="883.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (76 samples, 1.23%)</title><rect x="953.9" y="867.0" width="14.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (2 samples, 0.03%)</title><rect x="953.9" y="851.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="956.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.03%)</title><rect x="953.9" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="956.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.03%)</title><rect x="953.9" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="956.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 1.20%)</title><rect x="954.3" y="851.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 1.20%)</title><rect x="954.3" y="835.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (74 samples, 1.20%)</title><rect x="954.3" y="819.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (74 samples, 1.20%)</title><rect x="954.3" y="803.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="957.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="954.3" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="957.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.03%)</title><rect x="954.3" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="957.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.03%)</title><rect x="954.3" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.03%)</title><rect x="954.3" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (72 samples, 1.16%)</title><rect x="954.6" y="787.0" width="13.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="957.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (72 samples, 1.16%)</title><rect x="954.6" y="771.0" width="13.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (71 samples, 1.15%)</title><rect x="954.6" y="755.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (71 samples, 1.15%)</title><rect x="954.6" y="739.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (71 samples, 1.15%)</title><rect x="954.6" y="723.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="957.6" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="954.8" y="707.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="957.8" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.13%)</title><rect x="955.2" y="707.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="958.2" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="955.6" y="691.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="958.6" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="956.4" y="691.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="959.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.97%)</title><rect x="956.7" y="707.0" width="11.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="959.7" y="718.0"></text>
</g>
<g>
<title>__kernel_vsyscall (59 samples, 0.95%)</title><rect x="956.9" y="691.0" width="11.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="959.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (59 samples, 0.95%)</title><rect x="956.9" y="675.0" width="11.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="959.9" y="686.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (59 samples, 0.95%)</title><rect x="956.9" y="659.0" width="11.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="959.9" y="670.0"></text>
</g>
<g>
<title>sys_futex (59 samples, 0.95%)</title><rect x="956.9" y="643.0" width="11.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="959.9" y="654.0"></text>
</g>
<g>
<title>do_futex (59 samples, 0.95%)</title><rect x="956.9" y="627.0" width="11.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="959.9" y="638.0"></text>
</g>
<g>
<title>futex_wake (58 samples, 0.94%)</title><rect x="957.1" y="611.0" width="11.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="960.1" y="622.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="957.7" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="960.7" y="606.0"></text>
</g>
<g>
<title>wake_q_add (2 samples, 0.03%)</title><rect x="957.7" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="960.7" y="590.0"></text>
</g>
<g>
<title>wake_up_q (52 samples, 0.84%)</title><rect x="958.3" y="595.0" width="9.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="961.3" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (52 samples, 0.84%)</title><rect x="958.3" y="579.0" width="9.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="961.3" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (52 samples, 0.84%)</title><rect x="958.3" y="563.0" width="9.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="961.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.05%)</title><rect x="968.4" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.05%)</title><rect x="968.4" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.03%)</title><rect x="968.6" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (49 samples, 0.79%)</title><rect x="969.0" y="899.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="972.0" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (46 samples, 0.74%)</title><rect x="969.5" y="883.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.05%)</title><rect x="969.5" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.05%)</title><rect x="969.5" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="972.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.05%)</title><rect x="969.5" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (43 samples, 0.70%)</title><rect x="970.1" y="867.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (43 samples, 0.70%)</title><rect x="970.1" y="851.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (40 samples, 0.65%)</title><rect x="970.7" y="835.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (40 samples, 0.65%)</title><rect x="970.7" y="819.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (34 samples, 0.55%)</title><rect x="971.8" y="803.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="974.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="972.2" y="787.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="975.2" y="798.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="972.2" y="771.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="975.2" y="782.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="972.2" y="755.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="975.2" y="766.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="972.2" y="739.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="975.2" y="750.0"></text>
</g>
<g>
<title>__kernel_vsyscall (28 samples, 0.45%)</title><rect x="972.6" y="787.0" width="5.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="975.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (28 samples, 0.45%)</title><rect x="972.6" y="771.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="975.6" y="782.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (28 samples, 0.45%)</title><rect x="972.6" y="755.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="975.6" y="766.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="972.6" y="739.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="975.6" y="750.0"></text>
</g>
<g>
<title>sys_read (26 samples, 0.42%)</title><rect x="973.0" y="739.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="976.0" y="750.0"></text>
</g>
<g>
<title>vfs_read (26 samples, 0.42%)</title><rect x="973.0" y="723.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="976.0" y="734.0"></text>
</g>
<g>
<title>__vfs_read (20 samples, 0.32%)</title><rect x="973.0" y="707.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="976.0" y="718.0"></text>
</g>
<g>
<title>new_sync_read (20 samples, 0.32%)</title><rect x="973.0" y="691.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="976.0" y="702.0"></text>
</g>
<g>
<title>sock_read_iter (19 samples, 0.31%)</title><rect x="973.1" y="675.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="976.1" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (18 samples, 0.29%)</title><rect x="973.3" y="659.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="976.3" y="670.0"></text>
</g>
<g>
<title>inet_recvmsg (16 samples, 0.26%)</title><rect x="973.5" y="643.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="976.5" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (15 samples, 0.24%)</title><rect x="973.7" y="627.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="976.7" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="973.9" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="976.9" y="622.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.08%)</title><rect x="974.3" y="611.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="977.3" y="622.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.06%)</title><rect x="974.5" y="595.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="977.5" y="606.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 0.11%)</title><rect x="975.2" y="611.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="978.2" y="622.0"></text>
</g>
<g>
<title>tcp_send_ack (7 samples, 0.11%)</title><rect x="975.2" y="595.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="978.2" y="606.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.38 (7 samples, 0.11%)</title><rect x="975.2" y="579.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="978.2" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.10%)</title><rect x="975.4" y="563.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="978.4" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 0.10%)</title><rect x="975.4" y="547.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="978.4" y="558.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.10%)</title><rect x="975.4" y="531.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="978.4" y="542.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.10%)</title><rect x="975.4" y="515.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="978.4" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.10%)</title><rect x="975.4" y="499.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="978.4" y="510.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 0.10%)</title><rect x="975.4" y="483.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="978.4" y="494.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.06%)</title><rect x="975.4" y="467.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="978.4" y="478.0"></text>
</g>
<g>
<title>do_softirq.part.15 (4 samples, 0.06%)</title><rect x="975.4" y="451.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="978.4" y="462.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.06%)</title><rect x="975.4" y="435.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="978.4" y="446.0"></text>
</g>
<g>
<title>call_on_stack (4 samples, 0.06%)</title><rect x="975.4" y="419.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="978.4" y="430.0"></text>
</g>
<g>
<title>__do_softirq (4 samples, 0.06%)</title><rect x="975.4" y="403.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="978.4" y="414.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.06%)</title><rect x="975.4" y="387.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="978.4" y="398.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.06%)</title><rect x="975.4" y="371.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="978.4" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.06%)</title><rect x="975.4" y="355.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="978.4" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.06%)</title><rect x="975.4" y="339.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="978.4" y="350.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.06%)</title><rect x="975.4" y="323.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="978.4" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.06%)</title><rect x="975.4" y="307.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="978.4" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.06%)</title><rect x="975.4" y="291.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="978.4" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.06%)</title><rect x="975.4" y="275.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="978.4" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.06%)</title><rect x="975.4" y="259.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="978.4" y="270.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="975.4" y="243.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="978.4" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="975.8" y="243.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="978.8" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="975.8" y="227.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="978.8" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="976.2" y="467.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="979.2" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="976.2" y="451.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="979.2" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="976.2" y="435.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="979.2" y="446.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.10%)</title><rect x="976.8" y="707.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="979.8" y="718.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.06%)</title><rect x="977.2" y="691.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$194/32946704.accept (4 samples, 0.06%)</title><rect x="978.3" y="1091.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (4 samples, 0.06%)</title><rect x="978.3" y="1075.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/32074257.run (4 samples, 0.06%)</title><rect x="978.3" y="1059.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="981.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (4 samples, 0.06%)</title><rect x="978.3" y="1043.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.05%)</title><rect x="978.5" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.5" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (14 samples, 0.23%)</title><rect x="979.1" y="1107.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.1" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.11%)</title><rect x="980.4" y="1091.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.4" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (6 samples, 0.10%)</title><rect x="980.6" y="1075.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.6" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (6 samples, 0.10%)</title><rect x="980.6" y="1059.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="983.6" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.10%)</title><rect x="980.6" y="1043.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="983.6" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.05%)</title><rect x="980.6" y="1027.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="983.6" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (2 samples, 0.03%)</title><rect x="980.8" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.8" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.05%)</title><rect x="981.2" y="1027.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="984.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (193 samples, 3.12%)</title><rect x="981.7" y="1107.0" width="36.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="984.7" y="1118.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/2810801.run (94 samples, 1.52%)</title><rect x="981.7" y="1091.0" width="18.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="984.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (94 samples, 1.52%)</title><rect x="981.7" y="1075.0" width="18.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (94 samples, 1.52%)</title><rect x="981.7" y="1059.0" width="18.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (94 samples, 1.52%)</title><rect x="981.7" y="1043.0" width="18.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="984.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (94 samples, 1.52%)</title><rect x="981.7" y="1027.0" width="18.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="984.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (94 samples, 1.52%)</title><rect x="981.7" y="1011.0" width="18.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/19216263.run (94 samples, 1.52%)</title><rect x="981.7" y="995.0" width="18.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="984.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (91 samples, 1.47%)</title><rect x="982.3" y="979.0" width="17.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (91 samples, 1.47%)</title><rect x="982.3" y="963.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="985.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (88 samples, 1.42%)</title><rect x="982.9" y="947.0" width="16.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="985.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (8 samples, 0.13%)</title><rect x="982.9" y="931.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (8 samples, 0.13%)</title><rect x="982.9" y="915.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (8 samples, 0.13%)</title><rect x="982.9" y="899.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="985.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.13%)</title><rect x="982.9" y="883.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="985.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (8 samples, 0.13%)</title><rect x="982.9" y="867.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="985.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (8 samples, 0.13%)</title><rect x="982.9" y="851.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="985.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.10%)</title><rect x="983.3" y="835.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.05%)</title><rect x="983.8" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="986.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (80 samples, 1.29%)</title><rect x="984.4" y="931.0" width="15.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (80 samples, 1.29%)</title><rect x="984.4" y="915.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (80 samples, 1.29%)</title><rect x="984.4" y="899.0" width="15.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="987.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (80 samples, 1.29%)</title><rect x="984.4" y="883.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="987.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (80 samples, 1.29%)</title><rect x="984.4" y="867.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="987.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (80 samples, 1.29%)</title><rect x="984.4" y="851.0" width="15.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="987.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (80 samples, 1.29%)</title><rect x="984.4" y="835.0" width="15.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="987.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (79 samples, 1.28%)</title><rect x="984.6" y="819.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="987.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (79 samples, 1.28%)</title><rect x="984.6" y="803.0" width="15.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (78 samples, 1.26%)</title><rect x="984.8" y="787.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="987.8" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.15%)</title><rect x="985.2" y="771.0" width="1.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="988.2" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="986.1" y="755.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="989.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 1.08%)</title><rect x="986.9" y="771.0" width="12.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="989.9" y="782.0"></text>
</g>
<g>
<title>__kernel_vsyscall (65 samples, 1.05%)</title><rect x="987.1" y="755.0" width="12.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="990.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (63 samples, 1.02%)</title><rect x="987.5" y="739.0" width="12.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="990.5" y="750.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (63 samples, 1.02%)</title><rect x="987.5" y="723.0" width="12.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="990.5" y="734.0"></text>
</g>
<g>
<title>sys_futex (63 samples, 1.02%)</title><rect x="987.5" y="707.0" width="12.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="990.5" y="718.0"></text>
</g>
<g>
<title>do_futex (62 samples, 1.00%)</title><rect x="987.6" y="691.0" width="11.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="990.6" y="702.0"></text>
</g>
<g>
<title>futex_wake (61 samples, 0.99%)</title><rect x="987.8" y="675.0" width="11.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="990.8" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="989.0" y="659.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="992.0" y="670.0"></text>
</g>
<g>
<title>wake_up_q (53 samples, 0.86%)</title><rect x="989.4" y="659.0" width="10.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="992.4" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (53 samples, 0.86%)</title><rect x="989.4" y="643.0" width="10.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="992.4" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (53 samples, 0.86%)</title><rect x="989.4" y="627.0" width="10.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="992.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$157/32552637.run (99 samples, 1.60%)</title><rect x="999.7" y="1091.0" width="18.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1002.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (99 samples, 1.60%)</title><rect x="999.7" y="1075.0" width="18.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1002.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (92 samples, 1.49%)</title><rect x="1001.0" y="1059.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1004.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (92 samples, 1.49%)</title><rect x="1001.0" y="1043.0" width="17.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1004.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (91 samples, 1.47%)</title><rect x="1001.2" y="1027.0" width="17.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (91 samples, 1.47%)</title><rect x="1001.2" y="1011.0" width="17.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1004.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (91 samples, 1.47%)</title><rect x="1001.2" y="995.0" width="17.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (89 samples, 1.44%)</title><rect x="1001.6" y="979.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1004.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (88 samples, 1.42%)</title><rect x="1001.8" y="963.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.8" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.16%)</title><rect x="1001.9" y="947.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1004.9" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.10%)</title><rect x="1002.5" y="931.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1005.5" y="942.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="1003.3" y="915.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1006.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 1.24%)</title><rect x="1003.9" y="947.0" width="14.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1006.9" y="958.0"></text>
</g>
<g>
<title>__kernel_vsyscall (76 samples, 1.23%)</title><rect x="1003.9" y="931.0" width="14.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1006.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (76 samples, 1.23%)</title><rect x="1003.9" y="915.0" width="14.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1006.9" y="926.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (76 samples, 1.23%)</title><rect x="1003.9" y="899.0" width="14.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1006.9" y="910.0"></text>
</g>
<g>
<title>sys_futex (76 samples, 1.23%)</title><rect x="1003.9" y="883.0" width="14.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1006.9" y="894.0"></text>
</g>
<g>
<title>do_futex (74 samples, 1.20%)</title><rect x="1003.9" y="867.0" width="14.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1006.9" y="878.0"></text>
</g>
<g>
<title>futex_wake (73 samples, 1.18%)</title><rect x="1004.0" y="851.0" width="14.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1007.0" y="862.0"></text>
</g>
<g>
<title>wake_up_q (69 samples, 1.12%)</title><rect x="1004.8" y="835.0" width="13.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1007.8" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (69 samples, 1.12%)</title><rect x="1004.8" y="819.0" width="13.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1007.8" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (69 samples, 1.12%)</title><rect x="1004.8" y="803.0" width="13.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1007.8" y="814.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1018.0" y="867.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1021.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (31 samples, 0.50%)</title><rect x="1018.5" y="1107.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.5" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (10 samples, 0.16%)</title><rect x="1019.3" y="1091.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1022.3" y="1102.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (10 samples, 0.16%)</title><rect x="1019.3" y="1075.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1022.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (9 samples, 0.15%)</title><rect x="1019.5" y="1059.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1022.5" y="1070.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (8 samples, 0.13%)</title><rect x="1019.7" y="1043.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1022.7" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long long&amp;, long long&amp;) (7 samples, 0.11%)</title><rect x="1019.9" y="1027.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1022.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1019.9" y="1011.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1022.9" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="1019.9" y="995.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1022.9" y="1006.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="1019.9" y="979.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1022.9" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.08%)</title><rect x="1020.3" y="1011.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1023.3" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="1020.4" y="995.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1023.4" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="1020.4" y="979.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1023.4" y="990.0"></text>
</g>
<g>
<title>sys_gettimeofday (3 samples, 0.05%)</title><rect x="1020.6" y="963.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1023.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (17 samples, 0.27%)</title><rect x="1021.2" y="1091.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1024.2" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (14 samples, 0.23%)</title><rect x="1021.8" y="1075.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1024.8" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementAt (3 samples, 0.05%)</title><rect x="1023.9" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1026.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.03%)</title><rect x="1024.5" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1027.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (19 samples, 0.31%)</title><rect x="1024.8" y="1107.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1027.8" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (15 samples, 0.24%)</title><rect x="1024.8" y="1091.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1027.8" y="1102.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (15 samples, 0.24%)</title><rect x="1024.8" y="1075.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1027.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (14 samples, 0.23%)</title><rect x="1025.0" y="1059.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1028.0" y="1070.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (13 samples, 0.21%)</title><rect x="1025.2" y="1043.0" width="2.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1028.2" y="1054.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.03%)</title><rect x="1025.4" y="1027.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1028.4" y="1038.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long long&amp;, long long&amp;) (9 samples, 0.15%)</title><rect x="1026.0" y="1027.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1029.0" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (9 samples, 0.15%)</title><rect x="1026.0" y="1011.0" width="1.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1029.0" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (8 samples, 0.13%)</title><rect x="1026.2" y="995.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1029.2" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (8 samples, 0.13%)</title><rect x="1026.2" y="979.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1029.2" y="990.0"></text>
</g>
<g>
<title>sys_gettimeofday (6 samples, 0.10%)</title><rect x="1026.6" y="963.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1029.6" y="974.0"></text>
</g>
<g>
<title>do_gettimeofday (5 samples, 0.08%)</title><rect x="1026.7" y="947.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1029.7" y="958.0"></text>
</g>
<g>
<title>__getnstimeofday64 (5 samples, 0.08%)</title><rect x="1026.7" y="931.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1029.7" y="942.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (5 samples, 0.08%)</title><rect x="1026.7" y="915.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.7" y="926.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (5 samples, 0.08%)</title><rect x="1026.7" y="899.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1029.7" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (3 samples, 0.05%)</title><rect x="1027.7" y="1091.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.7" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.05%)</title><rect x="1027.7" y="1075.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.7" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.05%)</title><rect x="1027.7" y="1059.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (393 samples, 6.35%)</title><rect x="1028.5" y="1107.0" width="74.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1031.5" y="1118.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (393 samples, 6.35%)</title><rect x="1028.5" y="1091.0" width="74.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1031.5" y="1102.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (392 samples, 6.34%)</title><rect x="1028.6" y="1075.0" width="74.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1031.6" y="1086.0">sun/nio/..</text>
</g>
<g>
<title>__clock_gettime (9 samples, 0.15%)</title><rect x="1029.2" y="1059.0" width="1.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1032.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1029.2" y="1043.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1032.2" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="1029.2" y="1027.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1032.2" y="1038.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="1029.2" y="1011.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1032.2" y="1022.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="1029.2" y="995.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1032.2" y="1006.0"></text>
</g>
<g>
<title>__kernel_vsyscall (7 samples, 0.11%)</title><rect x="1029.6" y="1043.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1032.6" y="1054.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (6 samples, 0.10%)</title><rect x="1029.8" y="1027.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1032.8" y="1038.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (6 samples, 0.10%)</title><rect x="1029.8" y="1011.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1032.8" y="1022.0"></text>
</g>
<g>
<title>sys_clock_gettime (5 samples, 0.08%)</title><rect x="1030.0" y="995.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1033.0" y="1006.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (4 samples, 0.06%)</title><rect x="1030.2" y="979.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1033.2" y="990.0"></text>
</g>
<g>
<title>ktime_get_ts64 (4 samples, 0.06%)</title><rect x="1030.2" y="963.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1033.2" y="974.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.03%)</title><rect x="1030.6" y="947.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1033.6" y="958.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="1030.6" y="931.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1033.6" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (305 samples, 4.93%)</title><rect x="1031.3" y="1059.0" width="58.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1034.3" y="1070.0">sun/ni..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1033.0" y="1043.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1036.0" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="1033.0" y="1027.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1036.0" y="1038.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="1033.0" y="1011.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1036.0" y="1022.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="1033.0" y="995.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1036.0" y="1006.0"></text>
</g>
<g>
<title>__kernel_vsyscall (289 samples, 4.67%)</title><rect x="1033.4" y="1043.0" width="55.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1036.4" y="1054.0">__ker..</text>
</g>
<g>
<title>entry_SYSENTER_32 (284 samples, 4.59%)</title><rect x="1034.4" y="1027.0" width="54.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1037.4" y="1038.0">entry..</text>
</g>
<g>
<title>do_fast_syscall_32 (284 samples, 4.59%)</title><rect x="1034.4" y="1011.0" width="54.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1037.4" y="1022.0">do_fa..</text>
</g>
<g>
<title>sys_epoll_wait (282 samples, 4.56%)</title><rect x="1034.8" y="995.0" width="53.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1037.8" y="1006.0">sys_e..</text>
</g>
<g>
<title>ep_poll (278 samples, 4.49%)</title><rect x="1035.3" y="979.0" width="53.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1038.3" y="990.0">ep_poll</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="1035.7" y="963.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1038.7" y="974.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.16 (8 samples, 0.13%)</title><rect x="1036.1" y="963.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1039.1" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.10%)</title><rect x="1036.3" y="947.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1039.3" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (2 samples, 0.03%)</title><rect x="1036.8" y="931.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1039.8" y="942.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.05%)</title><rect x="1037.6" y="963.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1040.6" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (257 samples, 4.15%)</title><rect x="1038.4" y="963.0" width="49.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1041.4" y="974.0">sched..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (256 samples, 4.14%)</title><rect x="1038.6" y="947.0" width="48.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1041.6" y="958.0">sche..</text>
</g>
<g>
<title>hrtimer_start_range_ns (16 samples, 0.26%)</title><rect x="1039.1" y="931.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1042.1" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.24%)</title><rect x="1039.1" y="915.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1042.1" y="926.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.05%)</title><rect x="1042.2" y="931.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1045.2" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="1042.2" y="915.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1045.2" y="926.0"></text>
</g>
<g>
<title>schedule (234 samples, 3.78%)</title><rect x="1042.8" y="931.0" width="44.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1045.8" y="942.0">sche..</text>
</g>
<g>
<title>__sched_text_start (233 samples, 3.77%)</title><rect x="1043.0" y="915.0" width="44.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1046.0" y="926.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (233 samples, 3.77%)</title><rect x="1043.0" y="899.0" width="44.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1046.0" y="910.0">fini..</text>
</g>
<g>
<title>timespec64_add_safe (2 samples, 0.03%)</title><rect x="1088.0" y="963.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1091.0" y="974.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.08%)</title><rect x="1088.5" y="1043.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1091.5" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (54 samples, 0.87%)</title><rect x="1089.5" y="1059.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.5" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="1089.5" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.5" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="1089.5" y="1027.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.5" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (47 samples, 0.76%)</title><rect x="1089.9" y="1043.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.9" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (47 samples, 0.76%)</title><rect x="1089.9" y="1027.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.9" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (43 samples, 0.70%)</title><rect x="1090.4" y="1011.0" width="8.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1093.4" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (40 samples, 0.65%)</title><rect x="1091.0" y="995.0" width="7.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1094.0" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (39 samples, 0.63%)</title><rect x="1091.0" y="979.0" width="7.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1094.0" y="990.0"></text>
</g>
<g>
<title>sys_read (39 samples, 0.63%)</title><rect x="1091.0" y="963.0" width="7.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1094.0" y="974.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.05%)</title><rect x="1091.2" y="947.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1094.2" y="958.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="1091.2" y="931.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1094.2" y="942.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="1091.2" y="915.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1094.2" y="926.0"></text>
</g>
<g>
<title>vfs_read (35 samples, 0.57%)</title><rect x="1091.8" y="947.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1094.8" y="958.0"></text>
</g>
<g>
<title>__vfs_read (30 samples, 0.48%)</title><rect x="1091.8" y="931.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1094.8" y="942.0"></text>
</g>
<g>
<title>new_sync_read (26 samples, 0.42%)</title><rect x="1092.0" y="915.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1095.0" y="926.0"></text>
</g>
<g>
<title>pipe_read (21 samples, 0.34%)</title><rect x="1092.5" y="899.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1095.5" y="910.0"></text>
</g>
<g>
<title>__atime_needs_update (2 samples, 0.03%)</title><rect x="1092.7" y="883.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1095.7" y="894.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.10%)</title><rect x="1094.1" y="883.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1097.1" y="894.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.03%)</title><rect x="1094.3" y="867.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1097.3" y="878.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.03%)</title><rect x="1094.3" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1097.3" y="862.0"></text>
</g>
<g>
<title>kmap_atomic (3 samples, 0.05%)</title><rect x="1094.6" y="867.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1097.6" y="878.0"></text>
</g>
<g>
<title>kmap_atomic_prot (3 samples, 0.05%)</title><rect x="1094.6" y="851.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1097.6" y="862.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="1095.4" y="883.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1098.4" y="894.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.06%)</title><rect x="1095.8" y="883.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1098.8" y="894.0"></text>
</g>
<g>
<title>__atime_needs_update (2 samples, 0.03%)</title><rect x="1095.8" y="867.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1098.8" y="878.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="1095.8" y="851.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1098.8" y="862.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.03%)</title><rect x="1096.5" y="899.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1099.5" y="910.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.05%)</title><rect x="1096.9" y="915.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1099.9" y="926.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.03%)</title><rect x="1097.5" y="931.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1100.5" y="942.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.05%)</title><rect x="1097.9" y="931.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1100.9" y="942.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.05%)</title><rect x="1097.9" y="915.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1100.9" y="926.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="1097.9" y="899.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1100.9" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.08%)</title><rect x="1098.8" y="1043.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.08%)</title><rect x="1098.8" y="1027.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1101.8" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.08%)</title><rect x="1098.8" y="1011.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.08%)</title><rect x="1098.8" y="995.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.8" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (5 samples, 0.08%)</title><rect x="1099.8" y="1059.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1102.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (4 samples, 0.06%)</title><rect x="1100.0" y="1043.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1103.0" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.05%)</title><rect x="1100.0" y="1027.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1103.0" y="1038.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.05%)</title><rect x="1100.0" y="1011.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1103.0" y="1022.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.05%)</title><rect x="1100.0" y="995.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1103.0" y="1006.0"></text>
</g>
<g>
<title>sys_epoll_ctl (3 samples, 0.05%)</title><rect x="1100.0" y="979.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1103.0" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (6 samples, 0.10%)</title><rect x="1100.7" y="1059.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1103.7" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (6 samples, 0.10%)</title><rect x="1100.7" y="1043.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1103.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.06%)</title><rect x="1100.7" y="1027.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="1101.5" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1104.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="1101.5" y="1011.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="1101.5" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1104.5" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (5 samples, 0.08%)</title><rect x="1101.9" y="1059.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.9" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (4 samples, 0.06%)</title><rect x="1102.1" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.1" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.06%)</title><rect x="1102.1" y="1027.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1105.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.05%)</title><rect x="1102.3" y="1011.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.05%)</title><rect x="1102.3" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1105.3" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.05%)</title><rect x="1102.8" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (8 samples, 0.13%)</title><rect x="1103.4" y="1107.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.4" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (8 samples, 0.13%)</title><rect x="1103.4" y="1091.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.4" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (7 samples, 0.11%)</title><rect x="1103.4" y="1075.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.4" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (5 samples, 0.08%)</title><rect x="1103.4" y="1059.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.4" y="1070.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.03%)</title><rect x="1104.0" y="1043.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1107.0" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.03%)</title><rect x="1104.4" y="1059.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (440 samples, 7.11%)</title><rect x="1105.3" y="1123.0" width="83.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1108.3" y="1134.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (197 samples, 3.18%)</title><rect x="1106.1" y="1107.0" width="37.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1109.1" y="1118.0">one..</text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="1106.1" y="1091.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1109.1" y="1102.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.05%)</title><rect x="1106.1" y="1075.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1109.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (6 samples, 0.10%)</title><rect x="1106.7" y="1091.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.7" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (3 samples, 0.05%)</title><rect x="1107.2" y="1075.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.2" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.05%)</title><rect x="1107.2" y="1059.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.2" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (187 samples, 3.02%)</title><rect x="1108.0" y="1091.0" width="35.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.0" y="1102.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (187 samples, 3.02%)</title><rect x="1108.0" y="1075.0" width="35.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.0" y="1086.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (185 samples, 2.99%)</title><rect x="1108.4" y="1059.0" width="35.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.4" y="1070.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (163 samples, 2.63%)</title><rect x="1108.8" y="1043.0" width="31.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1111.8" y="1054.0">su..</text>
</g>
<g>
<title>__kernel_vsyscall (158 samples, 2.55%)</title><rect x="1109.5" y="1027.0" width="30.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1112.5" y="1038.0">__..</text>
</g>
<g>
<title>entry_SYSENTER_32 (153 samples, 2.47%)</title><rect x="1110.5" y="1011.0" width="29.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1113.5" y="1022.0">en..</text>
</g>
<g>
<title>do_fast_syscall_32 (153 samples, 2.47%)</title><rect x="1110.5" y="995.0" width="29.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1113.5" y="1006.0">do..</text>
</g>
<g>
<title>sys_epoll_wait (152 samples, 2.46%)</title><rect x="1110.7" y="979.0" width="28.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1113.7" y="990.0">sy..</text>
</g>
<g>
<title>ep_poll (146 samples, 2.36%)</title><rect x="1111.0" y="963.0" width="27.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1114.0" y="974.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.16 (15 samples, 0.24%)</title><rect x="1111.4" y="947.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1114.4" y="958.0"></text>
</g>
<g>
<title>ep_send_events_proc (12 samples, 0.19%)</title><rect x="1111.6" y="931.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1114.6" y="942.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (10 samples, 0.16%)</title><rect x="1111.8" y="915.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1114.8" y="926.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.15%)</title><rect x="1111.8" y="899.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1114.8" y="910.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.06%)</title><rect x="1112.6" y="883.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1115.6" y="894.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="1113.9" y="931.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.9" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (129 samples, 2.09%)</title><rect x="1114.3" y="947.0" width="24.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1117.3" y="958.0">s..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (129 samples, 2.09%)</title><rect x="1114.3" y="931.0" width="24.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1117.3" y="942.0">s..</text>
</g>
<g>
<title>schedule (129 samples, 2.09%)</title><rect x="1114.3" y="915.0" width="24.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1117.3" y="926.0">s..</text>
</g>
<g>
<title>__sched_text_start (129 samples, 2.09%)</title><rect x="1114.3" y="899.0" width="24.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1117.3" y="910.0">_..</text>
</g>
<g>
<title>finish_task_switch (127 samples, 2.05%)</title><rect x="1114.7" y="883.0" width="24.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1117.7" y="894.0">f..</text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="1138.5" y="867.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1141.5" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="1138.5" y="851.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1141.5" y="862.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="1138.5" y="835.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1141.5" y="846.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="1138.5" y="819.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1141.5" y="830.0"></text>
</g>
<g>
<title>call_on_stack (2 samples, 0.03%)</title><rect x="1138.5" y="803.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1141.5" y="814.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.03%)</title><rect x="1138.5" y="787.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1141.5" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="1138.5" y="771.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1141.5" y="782.0"></text>
</g>
<g>
<title>rebalance_domains (2 samples, 0.03%)</title><rect x="1138.5" y="755.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1141.5" y="766.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="1138.5" y="739.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1141.5" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="1138.5" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1141.5" y="734.0"></text>
</g>
<g>
<title>fput (4 samples, 0.06%)</title><rect x="1138.9" y="963.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1141.9" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (9 samples, 0.15%)</title><rect x="1139.8" y="1043.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.10%)</title><rect x="1139.8" y="1027.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.8" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.10%)</title><rect x="1139.8" y="1011.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.8" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.05%)</title><rect x="1141.0" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.05%)</title><rect x="1141.0" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.05%)</title><rect x="1141.0" y="995.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.05%)</title><rect x="1141.0" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.0" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.05%)</title><rect x="1141.0" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.0" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.03%)</title><rect x="1141.6" y="1043.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (3 samples, 0.05%)</title><rect x="1141.9" y="1043.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (3 samples, 0.05%)</title><rect x="1141.9" y="1027.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.05%)</title><rect x="1141.9" y="1011.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.9" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.03%)</title><rect x="1142.5" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.03%)</title><rect x="1142.5" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="1142.5" y="1011.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1145.5" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 0.06%)</title><rect x="1142.9" y="1043.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (236 samples, 3.81%)</title><rect x="1143.7" y="1107.0" width="45.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.7" y="1118.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (236 samples, 3.81%)</title><rect x="1143.7" y="1091.0" width="45.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.7" y="1102.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (158 samples, 2.55%)</title><rect x="1143.7" y="1075.0" width="30.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.7" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (119 samples, 1.92%)</title><rect x="1144.0" y="1059.0" width="22.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1147.0" y="1070.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (118 samples, 1.91%)</title><rect x="1144.2" y="1043.0" width="22.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.2" y="1054.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (109 samples, 1.76%)</title><rect x="1144.6" y="1027.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.10%)</title><rect x="1144.6" y="1011.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.05%)</title><rect x="1145.2" y="995.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1148.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (103 samples, 1.66%)</title><rect x="1145.8" y="1011.0" width="19.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.executeAsync (102 samples, 1.65%)</title><rect x="1145.9" y="995.0" width="19.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1148.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (100 samples, 1.62%)</title><rect x="1146.3" y="979.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (98 samples, 1.58%)</title><rect x="1146.3" y="963.0" width="18.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (97 samples, 1.57%)</title><rect x="1146.3" y="947.0" width="18.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.08%)</title><rect x="1146.3" y="931.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.08%)</title><rect x="1146.3" y="915.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.08%)</title><rect x="1146.3" y="899.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (92 samples, 1.49%)</title><rect x="1147.3" y="931.0" width="17.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1150.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (92 samples, 1.49%)</title><rect x="1147.3" y="915.0" width="17.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (92 samples, 1.49%)</title><rect x="1147.3" y="899.0" width="17.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (91 samples, 1.47%)</title><rect x="1147.5" y="883.0" width="17.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (91 samples, 1.47%)</title><rect x="1147.5" y="867.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1150.5" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.21%)</title><rect x="1147.9" y="851.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1150.9" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.05%)</title><rect x="1148.6" y="835.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.6" y="846.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="1148.8" y="819.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.8" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.03%)</title><rect x="1149.2" y="835.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1152.2" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="1149.8" y="835.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1152.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 1.23%)</title><rect x="1150.3" y="851.0" width="14.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1153.3" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (74 samples, 1.20%)</title><rect x="1150.3" y="835.0" width="14.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1153.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (74 samples, 1.20%)</title><rect x="1150.3" y="819.0" width="14.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1153.3" y="830.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (74 samples, 1.20%)</title><rect x="1150.3" y="803.0" width="14.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1153.3" y="814.0"></text>
</g>
<g>
<title>sys_futex (74 samples, 1.20%)</title><rect x="1150.3" y="787.0" width="14.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1153.3" y="798.0"></text>
</g>
<g>
<title>do_futex (74 samples, 1.20%)</title><rect x="1150.3" y="771.0" width="14.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1153.3" y="782.0"></text>
</g>
<g>
<title>futex_wake (74 samples, 1.20%)</title><rect x="1150.3" y="755.0" width="14.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1153.3" y="766.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.08%)</title><rect x="1150.7" y="739.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1153.7" y="750.0"></text>
</g>
<g>
<title>wake_up_q (67 samples, 1.08%)</title><rect x="1151.7" y="739.0" width="12.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1154.7" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (67 samples, 1.08%)</title><rect x="1151.7" y="723.0" width="12.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1154.7" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (67 samples, 1.08%)</title><rect x="1151.7" y="707.0" width="12.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1154.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="1164.4" y="835.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1167.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (2 samples, 0.03%)</title><rect x="1165.0" y="963.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1168.0" y="974.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.11%)</title><rect x="1165.4" y="1027.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1168.4" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.11%)</title><rect x="1165.4" y="1011.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1168.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.11%)</title><rect x="1165.4" y="995.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1168.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (37 samples, 0.60%)</title><rect x="1166.7" y="1059.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1169.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.16%)</title><rect x="1171.9" y="1043.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1174.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.16%)</title><rect x="1171.9" y="1027.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1174.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (78 samples, 1.26%)</title><rect x="1173.8" y="1075.0" width="14.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (78 samples, 1.26%)</title><rect x="1173.8" y="1059.0" width="14.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="1173.8" y="1043.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.8" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="1173.8" y="1027.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.8" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="1173.8" y="1011.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1176.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="1173.8" y="995.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1176.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="1173.8" y="979.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.8" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="1173.8" y="963.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1176.8" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (74 samples, 1.20%)</title><rect x="1174.6" y="1043.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.05%)</title><rect x="1174.6" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.05%)</title><rect x="1174.6" y="1011.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1177.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.05%)</title><rect x="1174.6" y="995.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.6" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (71 samples, 1.15%)</title><rect x="1175.1" y="1027.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1178.1" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (71 samples, 1.15%)</title><rect x="1175.1" y="1011.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1178.1" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (70 samples, 1.13%)</title><rect x="1175.3" y="995.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1178.3" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (70 samples, 1.13%)</title><rect x="1175.3" y="979.0" width="13.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.3" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (65 samples, 1.05%)</title><rect x="1176.3" y="963.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.3" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (57 samples, 0.92%)</title><rect x="1176.8" y="947.0" width="10.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1179.8" y="958.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (57 samples, 0.92%)</title><rect x="1176.8" y="931.0" width="10.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1179.8" y="942.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (57 samples, 0.92%)</title><rect x="1176.8" y="915.0" width="10.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1179.8" y="926.0"></text>
</g>
<g>
<title>sys_read (56 samples, 0.91%)</title><rect x="1176.8" y="899.0" width="10.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1179.8" y="910.0"></text>
</g>
<g>
<title>vfs_read (53 samples, 0.86%)</title><rect x="1177.4" y="883.0" width="10.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.4" y="894.0"></text>
</g>
<g>
<title>__vfs_read (48 samples, 0.78%)</title><rect x="1177.6" y="867.0" width="9.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1180.6" y="878.0"></text>
</g>
<g>
<title>new_sync_read (47 samples, 0.76%)</title><rect x="1177.8" y="851.0" width="9.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.8" y="862.0"></text>
</g>
<g>
<title>sock_read_iter (44 samples, 0.71%)</title><rect x="1178.4" y="835.0" width="8.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1181.4" y="846.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.03%)</title><rect x="1178.6" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1181.6" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (41 samples, 0.66%)</title><rect x="1178.9" y="819.0" width="7.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1181.9" y="830.0"></text>
</g>
<g>
<title>inet_recvmsg (36 samples, 0.58%)</title><rect x="1179.3" y="803.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1182.3" y="814.0"></text>
</g>
<g>
<title>tcp_recvmsg (31 samples, 0.50%)</title><rect x="1180.3" y="787.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1183.3" y="798.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.06%)</title><rect x="1180.7" y="771.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1183.7" y="782.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.05%)</title><rect x="1180.7" y="755.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1183.7" y="766.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="1181.8" y="771.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1184.8" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1182.0" y="755.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1185.0" y="766.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (2 samples, 0.03%)</title><rect x="1182.0" y="739.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1185.0" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.18%)</title><rect x="1182.4" y="771.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1185.4" y="782.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.06%)</title><rect x="1182.8" y="755.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1185.8" y="766.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.06%)</title><rect x="1183.5" y="755.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1186.5" y="766.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.06%)</title><rect x="1183.5" y="739.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1186.5" y="750.0"></text>
</g>
<g>
<title>__copy_user_ll (3 samples, 0.05%)</title><rect x="1183.7" y="723.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.7" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (8 samples, 0.13%)</title><rect x="1184.5" y="771.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1187.5" y="782.0"></text>
</g>
<g>
<title>tcp_send_ack (7 samples, 0.11%)</title><rect x="1184.7" y="755.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1187.7" y="766.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.38 (7 samples, 0.11%)</title><rect x="1184.7" y="739.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1187.7" y="750.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 0.11%)</title><rect x="1184.7" y="723.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1187.7" y="734.0"></text>
</g>
<g>
<title>ip_queue_xmit (7 samples, 0.11%)</title><rect x="1184.7" y="707.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1187.7" y="718.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 0.11%)</title><rect x="1184.7" y="691.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1187.7" y="702.0"></text>
</g>
<g>
<title>ip_output (7 samples, 0.11%)</title><rect x="1184.7" y="675.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1187.7" y="686.0"></text>
</g>
<g>
<title>ip_finish_output (7 samples, 0.11%)</title><rect x="1184.7" y="659.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1187.7" y="670.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 0.10%)</title><rect x="1184.9" y="643.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1187.9" y="654.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.08%)</title><rect x="1184.9" y="627.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1187.9" y="638.0"></text>
</g>
<g>
<title>do_softirq.part.15 (5 samples, 0.08%)</title><rect x="1184.9" y="611.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1187.9" y="622.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 0.08%)</title><rect x="1184.9" y="595.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1187.9" y="606.0"></text>
</g>
<g>
<title>call_on_stack (5 samples, 0.08%)</title><rect x="1184.9" y="579.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1187.9" y="590.0"></text>
</g>
<g>
<title>__do_softirq (5 samples, 0.08%)</title><rect x="1184.9" y="563.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1187.9" y="574.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.08%)</title><rect x="1184.9" y="547.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1187.9" y="558.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.08%)</title><rect x="1184.9" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1187.9" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.08%)</title><rect x="1184.9" y="515.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1187.9" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.08%)</title><rect x="1184.9" y="499.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1187.9" y="510.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.06%)</title><rect x="1185.0" y="483.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1188.0" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.06%)</title><rect x="1185.0" y="467.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1188.0" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.06%)</title><rect x="1185.0" y="451.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1188.0" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.06%)</title><rect x="1185.0" y="435.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1188.0" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.06%)</title><rect x="1185.0" y="419.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1188.0" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.06%)</title><rect x="1185.0" y="403.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1188.0" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.06%)</title><rect x="1185.0" y="387.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1188.0" y="398.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.03%)</title><rect x="1185.2" y="371.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1188.2" y="382.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.03%)</title><rect x="1186.2" y="803.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1189.2" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1186.2" y="787.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1189.2" y="798.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.06%)</title><rect x="1186.8" y="867.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1189.8" y="878.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.05%)</title><rect x="1186.9" y="851.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1189.9" y="862.0"></text>
</g>
<g>
<title>read (3 samples, 0.05%)</title><rect x="1188.1" y="947.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1191.1" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="1188.7" y="1107.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.7" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2 samples, 0.03%)</title><rect x="1189.6" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.6" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.03%)</title><rect x="1189.6" y="1107.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.6" y="1118.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.03%)</title><rect x="1189.6" y="1091.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1192.6" y="1102.0"></text>
</g>
</g>
</svg>
