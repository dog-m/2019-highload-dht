<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (331,817 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (270,397 samples, 81.49%)</title><rect x="10.0" y="803.0" width="961.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (18,296 samples, 5.51%)</title><rect x="10.0" y="787.0" width="65.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor$$Lambda$241/21780503.get (18,296 samples, 5.51%)</title><rect x="10.0" y="771.0" width="65.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="782.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor.lambda$processEntityRequestOnClusterEmptyResult$0 (18,296 samples, 5.51%)</title><rect x="10.0" y="755.0" width="65.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorPut.processEntityDirectly (18,296 samples, 5.51%)</title><rect x="10.0" y="739.0" width="65.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="750.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (17,990 samples, 5.42%)</title><rect x="10.0" y="723.0" width="64.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/la..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (17,990 samples, 5.42%)</title><rect x="10.0" y="707.0" width="64.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/la..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17,990 samples, 5.42%)</title><rect x="10.0" y="691.0" width="64.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/la..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (17,990 samples, 5.42%)</title><rect x="10.0" y="675.0" width="64.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/ut..</text>
</g>
<g>
<title>byte[] (17,878 samples, 5.39%)</title><rect x="10.0" y="659.0" width="63.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="13.0" y="670.0">byte[]</text>
</g>
<g>
<title>byte[] (112 samples, 0.03%)</title><rect x="73.6" y="659.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="76.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (147 samples, 0.04%)</title><rect x="74.0" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (147 samples, 0.04%)</title><rect x="74.0" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.0" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (87 samples, 0.03%)</title><rect x="74.0" y="691.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="77.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (36,385 samples, 10.97%)</title><rect x="75.1" y="787.0" width="129.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.1" y="798.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (36,385 samples, 10.97%)</title><rect x="75.1" y="771.0" width="129.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.1" y="782.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (36,385 samples, 10.97%)</title><rect x="75.1" y="755.0" width="129.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.1" y="766.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36,385 samples, 10.97%)</title><rect x="75.1" y="739.0" width="129.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.1" y="750.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (36,385 samples, 10.97%)</title><rect x="75.1" y="723.0" width="129.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.1" y="734.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor$$Lambda$128/2576403.apply (36,385 samples, 10.97%)</title><rect x="75.1" y="707.0" width="129.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.1" y="718.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor.lambda$processEntityRemotely$3 (36,385 samples, 10.97%)</title><rect x="75.1" y="691.0" width="129.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.1" y="702.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/lang/String.valueOf (242 samples, 0.07%)</title><rect x="75.1" y="675.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (242 samples, 0.07%)</title><rect x="75.1" y="659.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.1" y="670.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.04%)</title><rect x="75.1" y="643.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="78.1" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (35,803 samples, 10.79%)</title><rect x="75.9" y="675.0" width="127.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="78.9" y="686.0">one.nio.http.Res..</text>
</g>
<g>
<title>one.nio.http.Response (179 samples, 0.05%)</title><rect x="203.3" y="675.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="206.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (161 samples, 0.05%)</title><rect x="203.9" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (215,716 samples, 65.01%)</title><rect x="204.5" y="787.0" width="767.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.5" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (215,716 samples, 65.01%)</title><rect x="204.5" y="771.0" width="767.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.5" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (97,419 samples, 29.36%)</title><rect x="204.5" y="755.0" width="346.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.5" y="766.0">java/util/concurrent/CompletableFuture$AsyncSup..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (97,419 samples, 29.36%)</title><rect x="204.5" y="739.0" width="346.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.5" y="750.0">java/util/concurrent/CompletableFuture.postComp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (97,412 samples, 29.36%)</title><rect x="204.5" y="723.0" width="346.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.5" y="734.0">java/util/concurrent/CompletableFuture$UniCompo..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (304 samples, 0.09%)</title><rect x="204.5" y="707.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="207.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$120/18004023.apply (97,082 samples, 29.26%)</title><rect x="205.6" y="707.0" width="345.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.6" y="718.0">jdk/internal/net/http/MultiExchange$$Lambda$120..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (97,082 samples, 29.26%)</title><rect x="205.6" y="691.0" width="345.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.6" y="702.0">jdk/internal/net/http/MultiExchange.lambda$resp..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (97,082 samples, 29.26%)</title><rect x="205.6" y="675.0" width="345.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.6" y="686.0">jdk/internal/net/http/MultiExchange.responseAsy..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (373 samples, 0.11%)</title><rect x="205.6" y="659.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (373 samples, 0.11%)</title><rect x="205.6" y="643.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/21539894.get$Lambda (204 samples, 0.06%)</title><rect x="205.6" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.6" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$182 (197 samples, 0.06%)</title><rect x="205.6" y="611.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="208.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$186/6790542.get$Lambda (169 samples, 0.05%)</title><rect x="206.3" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.3" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$186 (162 samples, 0.05%)</title><rect x="206.3" y="611.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="209.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (731 samples, 0.22%)</title><rect x="206.9" y="659.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (731 samples, 0.22%)</title><rect x="206.9" y="643.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (351 samples, 0.11%)</title><rect x="206.9" y="627.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="209.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (370 samples, 0.11%)</title><rect x="208.2" y="627.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (370 samples, 0.11%)</title><rect x="208.2" y="611.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (363 samples, 0.11%)</title><rect x="208.2" y="595.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="211.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,393 samples, 0.42%)</title><rect x="209.5" y="659.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,393 samples, 0.42%)</title><rect x="209.5" y="643.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (678 samples, 0.20%)</title><rect x="209.5" y="627.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="212.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (699 samples, 0.21%)</title><rect x="212.0" y="627.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (699 samples, 0.21%)</title><rect x="212.0" y="611.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (683 samples, 0.21%)</title><rect x="212.0" y="595.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="215.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (91,771 samples, 27.66%)</title><rect x="214.5" y="659.0" width="326.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="217.5" y="670.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (91,771 samples, 27.66%)</title><rect x="214.5" y="643.0" width="326.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.5" y="654.0">jdk/internal/net/http/Exchange.responseAsync..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (91,771 samples, 27.66%)</title><rect x="214.5" y="627.0" width="326.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.5" y="638.0">jdk/internal/net/http/Exchange.responseAsync..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (784 samples, 0.24%)</title><rect x="214.5" y="611.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (784 samples, 0.24%)</title><rect x="214.5" y="595.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/10627322.get$Lambda (331 samples, 0.10%)</title><rect x="214.5" y="579.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$135 (328 samples, 0.10%)</title><rect x="214.5" y="563.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="217.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/30595298.get$Lambda (299 samples, 0.09%)</title><rect x="215.6" y="579.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$136 (296 samples, 0.09%)</title><rect x="215.6" y="563.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="218.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/5261040.get$Lambda (154 samples, 0.05%)</title><rect x="216.7" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$166 (144 samples, 0.04%)</title><rect x="216.7" y="563.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="219.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (64,366 samples, 19.40%)</title><rect x="217.2" y="611.0" width="228.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.2" y="622.0">java/util/concurrent/Completab..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (64,366 samples, 19.40%)</title><rect x="217.2" y="595.0" width="228.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.2" y="606.0">java/util/concurrent/Completab..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (63,806 samples, 19.23%)</title><rect x="217.2" y="579.0" width="227.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.2" y="590.0">java/util/concurrent/Completab..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/5261040.apply (63,806 samples, 19.23%)</title><rect x="217.2" y="563.0" width="227.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.2" y="574.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (63,806 samples, 19.23%)</title><rect x="217.2" y="547.0" width="227.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="220.2" y="558.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (63,806 samples, 19.23%)</title><rect x="217.2" y="531.0" width="227.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.2" y="542.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/30595298.apply (63,806 samples, 19.23%)</title><rect x="217.2" y="515.0" width="227.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.2" y="526.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (63,806 samples, 19.23%)</title><rect x="217.2" y="499.0" width="227.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.2" y="510.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (493 samples, 0.15%)</title><rect x="217.2" y="483.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (493 samples, 0.15%)</title><rect x="217.2" y="467.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/10502657.get$Lambda (493 samples, 0.15%)</title><rect x="217.2" y="451.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$180 (486 samples, 0.15%)</title><rect x="217.2" y="435.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="220.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,979 samples, 0.90%)</title><rect x="219.0" y="483.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,979 samples, 0.90%)</title><rect x="219.0" y="467.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1,442 samples, 0.43%)</title><rect x="219.0" y="451.0" width="5.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="222.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (440 samples, 0.13%)</title><rect x="224.2" y="451.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/10502657.apply (440 samples, 0.13%)</title><rect x="224.2" y="435.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (440 samples, 0.13%)</title><rect x="224.2" y="419.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (440 samples, 0.13%)</title><rect x="224.2" y="403.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/10627322.apply (440 samples, 0.13%)</title><rect x="224.2" y="387.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (440 samples, 0.13%)</title><rect x="224.2" y="371.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (346 samples, 0.10%)</title><rect x="224.5" y="355.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (154 samples, 0.05%)</title><rect x="224.5" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (154 samples, 0.05%)</title><rect x="224.5" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (154 samples, 0.05%)</title><rect x="224.5" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$238/480874.accept (89 samples, 0.03%)</title><rect x="224.7" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (89 samples, 0.03%)</title><rect x="224.7" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (89 samples, 0.03%)</title><rect x="224.7" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (89 samples, 0.03%)</title><rect x="224.7" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (89 samples, 0.03%)</title><rect x="224.7" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (89 samples, 0.03%)</title><rect x="224.7" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (89 samples, 0.03%)</title><rect x="224.7" y="195.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (89 samples, 0.03%)</title><rect x="224.7" y="179.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (89 samples, 0.03%)</title><rect x="224.7" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="227.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (89 samples, 0.03%)</title><rect x="224.7" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (175 samples, 0.05%)</title><rect x="225.1" y="339.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (144 samples, 0.04%)</title><rect x="225.2" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (86 samples, 0.03%)</title><rect x="225.2" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,090 samples, 0.33%)</title><rect x="225.7" y="451.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="228.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,090 samples, 0.33%)</title><rect x="225.7" y="435.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,082 samples, 0.33%)</title><rect x="225.7" y="419.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="228.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (944 samples, 0.28%)</title><rect x="229.6" y="483.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (944 samples, 0.28%)</title><rect x="229.6" y="467.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (483 samples, 0.15%)</title><rect x="229.6" y="451.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="232.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (410 samples, 0.12%)</title><rect x="231.5" y="451.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (410 samples, 0.12%)</title><rect x="231.5" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (403 samples, 0.12%)</title><rect x="231.5" y="419.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="234.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (59,390 samples, 17.90%)</title><rect x="233.0" y="483.0" width="211.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.0" y="494.0">jdk/internal/net/http/Http1E..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (716 samples, 0.22%)</title><rect x="233.0" y="467.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (716 samples, 0.22%)</title><rect x="233.0" y="451.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$176/5866496.get$Lambda (246 samples, 0.07%)</title><rect x="233.0" y="435.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$176 (239 samples, 0.07%)</title><rect x="233.0" y="419.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="236.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/12928094.get$Lambda (470 samples, 0.14%)</title><rect x="233.8" y="435.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$178 (466 samples, 0.14%)</title><rect x="233.8" y="419.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="236.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (51,517 samples, 15.53%)</title><rect x="235.5" y="467.0" width="183.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.5" y="478.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (51,517 samples, 15.53%)</title><rect x="235.5" y="451.0" width="183.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.5" y="462.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,049 samples, 0.32%)</title><rect x="235.5" y="435.0" width="3.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="238.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$176/5866496.apply (48,986 samples, 14.76%)</title><rect x="239.2" y="435.0" width="174.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.2" y="446.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (48,986 samples, 14.76%)</title><rect x="239.2" y="419.0" width="174.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.2" y="430.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (212 samples, 0.06%)</title><rect x="239.2" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (212 samples, 0.06%)</title><rect x="239.2" y="387.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$192/4915853.get$Lambda (212 samples, 0.06%)</title><rect x="239.2" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$192 (206 samples, 0.06%)</title><rect x="239.2" y="355.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="242.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (725 samples, 0.22%)</title><rect x="240.0" y="403.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (725 samples, 0.22%)</title><rect x="240.0" y="387.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (383 samples, 0.12%)</title><rect x="240.0" y="371.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="243.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (336 samples, 0.10%)</title><rect x="241.4" y="371.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (336 samples, 0.10%)</title><rect x="241.4" y="355.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (330 samples, 0.10%)</title><rect x="241.4" y="339.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="244.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (295 samples, 0.09%)</title><rect x="242.6" y="403.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="245.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1,549 samples, 0.47%)</title><rect x="243.6" y="403.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (501 samples, 0.15%)</title><rect x="243.6" y="387.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="246.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1,043 samples, 0.31%)</title><rect x="245.4" y="387.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (891 samples, 0.27%)</title><rect x="245.4" y="371.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (891 samples, 0.27%)</title><rect x="245.4" y="355.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (891 samples, 0.27%)</title><rect x="245.4" y="339.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (891 samples, 0.27%)</title><rect x="245.4" y="323.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (887 samples, 0.27%)</title><rect x="245.4" y="307.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="248.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (152 samples, 0.05%)</title><rect x="248.6" y="371.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (152 samples, 0.05%)</title><rect x="248.6" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (152 samples, 0.05%)</title><rect x="248.6" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (152 samples, 0.05%)</title><rect x="248.6" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (151 samples, 0.05%)</title><rect x="248.6" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (151 samples, 0.05%)</title><rect x="248.6" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (98 samples, 0.03%)</title><rect x="248.6" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (77 samples, 0.02%)</title><rect x="248.7" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (75 samples, 0.02%)</title><rect x="248.7" y="243.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="251.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1,029 samples, 0.31%)</title><rect x="249.2" y="403.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,029 samples, 0.31%)</title><rect x="249.2" y="387.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (273 samples, 0.08%)</title><rect x="249.2" y="371.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (273 samples, 0.08%)</title><rect x="249.2" y="355.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (273 samples, 0.08%)</title><rect x="249.2" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (265 samples, 0.08%)</title><rect x="249.2" y="323.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="252.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (756 samples, 0.23%)</title><rect x="250.1" y="371.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (756 samples, 0.23%)</title><rect x="250.1" y="355.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (445 samples, 0.13%)</title><rect x="250.1" y="339.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="253.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (305 samples, 0.09%)</title><rect x="251.7" y="339.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (298 samples, 0.09%)</title><rect x="251.7" y="323.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="254.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (45,170 samples, 13.61%)</title><rect x="252.8" y="403.0" width="160.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.8" y="414.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java.lang.StringBuilder (308 samples, 0.09%)</title><rect x="252.8" y="387.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="255.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (598 samples, 0.18%)</title><rect x="253.9" y="387.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="256.9" y="398.0"></text>
</g>
<g>
<title>byte[] (293 samples, 0.09%)</title><rect x="253.9" y="371.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="256.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (291 samples, 0.09%)</title><rect x="255.0" y="371.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="258.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6,251 samples, 1.88%)</title><rect x="256.1" y="387.0" width="22.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.1" y="398.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (6,251 samples, 1.88%)</title><rect x="256.1" y="371.0" width="22.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.1" y="382.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (6,251 samples, 1.88%)</title><rect x="256.1" y="355.0" width="22.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.1" y="366.0">j..</text>
</g>
<g>
<title>byte[] (1,051 samples, 0.32%)</title><rect x="256.1" y="339.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="259.1" y="350.0"></text>
</g>
<g>
<title>byte[] (5,200 samples, 1.57%)</title><rect x="259.8" y="339.0" width="18.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="262.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,389 samples, 0.42%)</title><rect x="278.3" y="387.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="281.3" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,389 samples, 0.42%)</title><rect x="278.3" y="371.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.3" y="382.0"></text>
</g>
<g>
<title>byte[] (880 samples, 0.27%)</title><rect x="278.3" y="355.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="281.3" y="366.0"></text>
</g>
<g>
<title>byte[] (509 samples, 0.15%)</title><rect x="281.4" y="355.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="284.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5,094 samples, 1.54%)</title><rect x="283.2" y="387.0" width="18.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,094 samples, 1.54%)</title><rect x="283.2" y="371.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String (578 samples, 0.17%)</title><rect x="283.2" y="355.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="286.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,508 samples, 1.36%)</title><rect x="285.3" y="355.0" width="16.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.3" y="366.0"></text>
</g>
<g>
<title>byte[] (1,650 samples, 0.50%)</title><rect x="285.3" y="339.0" width="5.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="288.3" y="350.0"></text>
</g>
<g>
<title>byte[] (2,858 samples, 0.86%)</title><rect x="291.2" y="339.0" width="10.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="294.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (733 samples, 0.22%)</title><rect x="301.3" y="387.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (733 samples, 0.22%)</title><rect x="301.3" y="371.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.3" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (727 samples, 0.22%)</title><rect x="301.3" y="355.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="304.3" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (339 samples, 0.10%)</title><rect x="303.9" y="387.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.9" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (335 samples, 0.10%)</title><rect x="303.9" y="371.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="306.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (25,915 samples, 7.81%)</title><rect x="305.2" y="387.0" width="92.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.2" y="398.0">jdk/interna..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (300 samples, 0.09%)</title><rect x="305.2" y="371.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (300 samples, 0.09%)</title><rect x="305.2" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (300 samples, 0.09%)</title><rect x="305.2" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.2" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$195/19686375.get$Lambda (300 samples, 0.09%)</title><rect x="305.2" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.2" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$195 (292 samples, 0.09%)</title><rect x="305.2" y="307.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="308.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (15,434 samples, 4.65%)</title><rect x="306.2" y="371.0" width="54.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.2" y="382.0">jdk/i..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (7,214 samples, 2.17%)</title><rect x="306.2" y="355.0" width="25.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.2" y="366.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7,214 samples, 2.17%)</title><rect x="306.2" y="339.0" width="25.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.2" y="350.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7,214 samples, 2.17%)</title><rect x="306.2" y="323.0" width="25.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="309.2" y="334.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (7,214 samples, 2.17%)</title><rect x="306.2" y="307.0" width="25.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.2" y="318.0">j..</text>
</g>
<g>
<title>byte[] (2,716 samples, 0.82%)</title><rect x="306.2" y="291.0" width="9.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="309.2" y="302.0"></text>
</g>
<g>
<title>byte[] (4,498 samples, 1.36%)</title><rect x="315.9" y="291.0" width="16.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="318.9" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1,500 samples, 0.45%)</title><rect x="331.9" y="355.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.9" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1,500 samples, 0.45%)</title><rect x="331.9" y="339.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1,500 samples, 0.45%)</title><rect x="331.9" y="323.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1,486 samples, 0.45%)</title><rect x="331.9" y="307.0" width="5.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="334.9" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1,181 samples, 0.36%)</title><rect x="337.2" y="355.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.2" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (533 samples, 0.16%)</title><rect x="337.2" y="339.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="340.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (638 samples, 0.19%)</title><rect x="339.1" y="339.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.1" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (626 samples, 0.19%)</title><rect x="339.1" y="323.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="342.1" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$195/19686375.test (5,539 samples, 1.67%)</title><rect x="341.4" y="355.0" width="19.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.4" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (5,539 samples, 1.67%)</title><rect x="341.4" y="339.0" width="19.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/13050421.test (5,539 samples, 1.67%)</title><rect x="341.4" y="323.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (5,539 samples, 1.67%)</title><rect x="341.4" y="307.0" width="19.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.4" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/4651926.test (5,539 samples, 1.67%)</title><rect x="341.4" y="291.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.4" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (5,539 samples, 1.67%)</title><rect x="341.4" y="275.0" width="19.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="344.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/23660417.test (5,539 samples, 1.67%)</title><rect x="341.4" y="259.0" width="19.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (5,539 samples, 1.67%)</title><rect x="341.4" y="243.0" width="19.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,539 samples, 1.67%)</title><rect x="341.4" y="227.0" width="19.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,539 samples, 1.67%)</title><rect x="341.4" y="211.0" width="19.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (2,682 samples, 0.81%)</title><rect x="341.4" y="195.0" width="9.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="344.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,818 samples, 0.85%)</title><rect x="351.1" y="195.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="354.1" y="206.0"></text>
</g>
<g>
<title>byte[] (2,776 samples, 0.84%)</title><rect x="351.1" y="179.0" width="9.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="354.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (10,181 samples, 3.07%)</title><rect x="361.1" y="371.0" width="36.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.1" y="382.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10,181 samples, 3.07%)</title><rect x="361.1" y="355.0" width="36.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="364.1" y="366.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10,181 samples, 3.07%)</title><rect x="361.1" y="339.0" width="36.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="364.1" y="350.0">jav..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (189 samples, 0.06%)</title><rect x="361.1" y="323.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="364.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (371 samples, 0.11%)</title><rect x="361.8" y="323.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="364.8" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (622 samples, 0.19%)</title><rect x="363.1" y="323.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="366.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (185 samples, 0.06%)</title><rect x="365.4" y="323.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="368.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (304 samples, 0.09%)</title><rect x="366.1" y="323.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="369.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (304 samples, 0.09%)</title><rect x="366.1" y="307.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.1" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.get$Lambda (304 samples, 0.09%)</title><rect x="366.1" y="291.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.1" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$109 (297 samples, 0.09%)</title><rect x="366.1" y="275.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="369.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (338 samples, 0.10%)</title><rect x="367.1" y="323.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.1" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (334 samples, 0.10%)</title><rect x="367.1" y="307.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="370.1" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7,459 samples, 2.25%)</title><rect x="368.3" y="323.0" width="26.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.3" y="334.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (7,459 samples, 2.25%)</title><rect x="368.3" y="307.0" width="26.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.3" y="318.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7,459 samples, 2.25%)</title><rect x="368.3" y="291.0" width="26.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.3" y="302.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,896 samples, 0.57%)</title><rect x="368.3" y="275.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,896 samples, 0.57%)</title><rect x="368.3" y="259.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.get$Lambda (1,896 samples, 0.57%)</title><rect x="368.3" y="243.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.3" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (1,865 samples, 0.56%)</title><rect x="368.3" y="227.0" width="6.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="371.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (692 samples, 0.21%)</title><rect x="375.1" y="275.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.1" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (692 samples, 0.21%)</title><rect x="375.1" y="259.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (692 samples, 0.21%)</title><rect x="375.1" y="243.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.1" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (692 samples, 0.21%)</title><rect x="375.1" y="227.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (692 samples, 0.21%)</title><rect x="375.1" y="211.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="378.1" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (692 samples, 0.21%)</title><rect x="375.1" y="195.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.1" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (692 samples, 0.21%)</title><rect x="375.1" y="179.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.1" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (692 samples, 0.21%)</title><rect x="375.1" y="163.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.1" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (659 samples, 0.20%)</title><rect x="375.1" y="147.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="378.1" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,313 samples, 0.70%)</title><rect x="377.5" y="275.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.5" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,313 samples, 0.70%)</title><rect x="377.5" y="259.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="380.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,123 samples, 0.34%)</title><rect x="377.5" y="243.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,123 samples, 0.34%)</title><rect x="377.5" y="227.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.5" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,092 samples, 0.33%)</title><rect x="377.5" y="211.0" width="3.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="380.5" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (1,190 samples, 0.36%)</title><rect x="381.5" y="243.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.5" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,160 samples, 0.35%)</title><rect x="381.5" y="227.0" width="4.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="384.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,558 samples, 0.77%)</title><rect x="385.8" y="275.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.8" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,528 samples, 0.76%)</title><rect x="385.8" y="259.0" width="9.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="388.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (689 samples, 0.21%)</title><rect x="394.9" y="323.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (679 samples, 0.20%)</title><rect x="394.9" y="307.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="397.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1,150 samples, 0.35%)</title><rect x="397.3" y="387.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (223 samples, 0.07%)</title><rect x="397.3" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.3" y="382.0"></text>
</g>
<g>
<title>byte[] (217 samples, 0.07%)</title><rect x="397.3" y="355.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="400.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (927 samples, 0.28%)</title><rect x="398.1" y="371.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (927 samples, 0.28%)</title><rect x="398.1" y="355.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1682085.invoke (927 samples, 0.28%)</title><rect x="398.1" y="339.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (927 samples, 0.28%)</title><rect x="398.1" y="323.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (591 samples, 0.18%)</title><rect x="398.1" y="307.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (584 samples, 0.18%)</title><rect x="398.1" y="291.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="401.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (336 samples, 0.10%)</title><rect x="400.2" y="307.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (336 samples, 0.10%)</title><rect x="400.2" y="291.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.2" y="302.0"></text>
</g>
<g>
<title>byte[] (328 samples, 0.10%)</title><rect x="400.2" y="275.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="403.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1,086 samples, 0.33%)</title><rect x="401.4" y="387.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1,086 samples, 0.33%)</title><rect x="401.4" y="371.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="404.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,086 samples, 0.33%)</title><rect x="401.4" y="355.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,086 samples, 0.33%)</title><rect x="401.4" y="339.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="404.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1682085.invoke (1,086 samples, 0.33%)</title><rect x="401.4" y="323.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,086 samples, 0.33%)</title><rect x="401.4" y="307.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (537 samples, 0.16%)</title><rect x="401.4" y="291.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (531 samples, 0.16%)</title><rect x="401.4" y="275.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="404.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (549 samples, 0.17%)</title><rect x="403.3" y="291.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (549 samples, 0.17%)</title><rect x="403.3" y="275.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.3" y="286.0"></text>
</g>
<g>
<title>byte[] (541 samples, 0.16%)</title><rect x="403.3" y="259.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="406.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,302 samples, 0.69%)</title><rect x="405.3" y="387.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.3" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,021 samples, 0.31%)</title><rect x="405.3" y="371.0" width="3.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="408.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (433 samples, 0.13%)</title><rect x="408.9" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (420 samples, 0.13%)</title><rect x="408.9" y="355.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="411.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (834 samples, 0.25%)</title><rect x="410.5" y="371.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.5" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (821 samples, 0.25%)</title><rect x="410.5" y="355.0" width="2.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="413.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,477 samples, 0.45%)</title><rect x="413.4" y="435.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,477 samples, 0.45%)</title><rect x="413.4" y="419.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,465 samples, 0.44%)</title><rect x="413.4" y="403.0" width="5.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="416.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (1,092 samples, 0.33%)</title><rect x="418.7" y="467.0" width="3.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="421.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (347 samples, 0.10%)</title><rect x="422.6" y="467.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="425.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (333 samples, 0.10%)</title><rect x="423.8" y="467.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="426.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (5,378 samples, 1.62%)</title><rect x="425.0" y="467.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="428.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (423 samples, 0.13%)</title><rect x="425.0" y="451.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="428.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (423 samples, 0.13%)</title><rect x="425.0" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$168/20307824.get$Lambda (191 samples, 0.06%)</title><rect x="425.0" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$168 (186 samples, 0.06%)</title><rect x="425.0" y="403.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="428.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$169/30399944.get$Lambda (232 samples, 0.07%)</title><rect x="425.7" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="428.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$169 (224 samples, 0.07%)</title><rect x="425.7" y="403.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="428.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (504 samples, 0.15%)</title><rect x="426.5" y="451.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="429.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (703 samples, 0.21%)</title><rect x="428.4" y="451.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="431.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (751 samples, 0.23%)</title><rect x="430.9" y="451.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="433.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1,351 samples, 0.41%)</title><rect x="433.6" y="451.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,351 samples, 0.41%)</title><rect x="433.6" y="435.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,351 samples, 0.41%)</title><rect x="433.6" y="419.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,351 samples, 0.41%)</title><rect x="433.6" y="403.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,351 samples, 0.41%)</title><rect x="433.6" y="387.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,351 samples, 0.41%)</title><rect x="433.6" y="371.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (1,351 samples, 0.41%)</title><rect x="433.6" y="355.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,351 samples, 0.41%)</title><rect x="433.6" y="339.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,351 samples, 0.41%)</title><rect x="433.6" y="323.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (505 samples, 0.15%)</title><rect x="433.6" y="307.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (505 samples, 0.15%)</title><rect x="433.6" y="291.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$170/25985558.get$Lambda (213 samples, 0.06%)</title><rect x="433.6" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$170 (207 samples, 0.06%)</title><rect x="433.6" y="259.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="436.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$171/33271481.get$Lambda (292 samples, 0.09%)</title><rect x="434.3" y="275.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$171 (287 samples, 0.09%)</title><rect x="434.3" y="259.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="437.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (296 samples, 0.09%)</title><rect x="435.4" y="307.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="438.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (544 samples, 0.16%)</title><rect x="436.4" y="307.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (544 samples, 0.16%)</title><rect x="436.4" y="291.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (317 samples, 0.10%)</title><rect x="436.4" y="275.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="439.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (221 samples, 0.07%)</title><rect x="437.6" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (215 samples, 0.06%)</title><rect x="437.6" y="259.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="440.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1,172 samples, 0.35%)</title><rect x="438.4" y="451.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.4" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (425 samples, 0.13%)</title><rect x="438.4" y="435.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="441.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (409 samples, 0.12%)</title><rect x="439.9" y="435.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="442.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (325 samples, 0.10%)</title><rect x="441.4" y="435.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.4" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (325 samples, 0.10%)</title><rect x="441.4" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.4" y="430.0"></text>
</g>
<g>
<title>byte[] (318 samples, 0.10%)</title><rect x="441.4" y="403.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="444.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (452 samples, 0.14%)</title><rect x="442.5" y="451.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (446 samples, 0.13%)</title><rect x="442.5" y="435.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="445.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (560 samples, 0.17%)</title><rect x="444.2" y="579.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (560 samples, 0.17%)</title><rect x="444.2" y="563.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (550 samples, 0.17%)</title><rect x="444.2" y="547.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="447.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (717 samples, 0.22%)</title><rect x="446.1" y="611.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (717 samples, 0.22%)</title><rect x="446.1" y="595.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (384 samples, 0.12%)</title><rect x="446.1" y="579.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="449.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (325 samples, 0.10%)</title><rect x="447.5" y="579.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (325 samples, 0.10%)</title><rect x="447.5" y="563.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (318 samples, 0.10%)</title><rect x="447.5" y="547.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="450.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (25,904 samples, 7.81%)</title><rect x="448.7" y="611.0" width="92.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.7" y="622.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (551 samples, 0.17%)</title><rect x="448.7" y="595.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (551 samples, 0.17%)</title><rect x="448.7" y="579.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/8874350.get$Lambda (232 samples, 0.07%)</title><rect x="448.7" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$163 (220 samples, 0.07%)</title><rect x="448.7" y="547.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="451.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$165/28758116.get$Lambda (319 samples, 0.10%)</title><rect x="449.5" y="563.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$165 (308 samples, 0.09%)</title><rect x="449.5" y="547.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="452.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (692 samples, 0.21%)</title><rect x="450.7" y="595.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (692 samples, 0.21%)</title><rect x="450.7" y="579.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$165/28758116.apply (436 samples, 0.13%)</title><rect x="450.7" y="563.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (436 samples, 0.13%)</title><rect x="450.7" y="547.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (436 samples, 0.13%)</title><rect x="450.7" y="531.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (426 samples, 0.13%)</title><rect x="450.7" y="515.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="453.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (256 samples, 0.08%)</title><rect x="452.2" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (256 samples, 0.08%)</title><rect x="452.2" y="547.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (247 samples, 0.07%)</title><rect x="452.2" y="531.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="455.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (415 samples, 0.13%)</title><rect x="453.1" y="595.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (415 samples, 0.13%)</title><rect x="453.1" y="579.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (415 samples, 0.13%)</title><rect x="453.1" y="563.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (415 samples, 0.13%)</title><rect x="453.1" y="547.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (405 samples, 0.12%)</title><rect x="453.1" y="531.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="456.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (24,246 samples, 7.31%)</title><rect x="454.6" y="595.0" width="86.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.6" y="606.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (229 samples, 0.07%)</title><rect x="454.6" y="579.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (229 samples, 0.07%)</title><rect x="454.6" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$140/25694846.get$Lambda (229 samples, 0.07%)</title><rect x="454.6" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$140 (223 samples, 0.07%)</title><rect x="454.6" y="531.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="457.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (22,491 samples, 6.78%)</title><rect x="455.4" y="579.0" width="80.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.4" y="590.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (22,491 samples, 6.78%)</title><rect x="455.4" y="563.0" width="80.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.4" y="574.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (22,090 samples, 6.66%)</title><rect x="455.4" y="547.0" width="78.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.4" y="558.0">java/util..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$140/25694846.apply (22,090 samples, 6.66%)</title><rect x="455.4" y="531.0" width="78.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.4" y="542.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (22,090 samples, 6.66%)</title><rect x="455.4" y="515.0" width="78.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.4" y="526.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (22,090 samples, 6.66%)</title><rect x="455.4" y="499.0" width="78.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.4" y="510.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (260 samples, 0.08%)</title><rect x="455.4" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (260 samples, 0.08%)</title><rect x="455.4" y="467.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$162/23286967.get$Lambda (260 samples, 0.08%)</title><rect x="455.4" y="451.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$162 (250 samples, 0.08%)</title><rect x="455.4" y="435.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="458.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (8,513 samples, 2.57%)</title><rect x="456.3" y="483.0" width="30.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.3" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8,513 samples, 2.57%)</title><rect x="456.3" y="467.0" width="30.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.3" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (8,513 samples, 2.57%)</title><rect x="456.3" y="451.0" width="30.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.3" y="462.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$162/23286967.apply (8,265 samples, 2.49%)</title><rect x="456.3" y="435.0" width="29.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.3" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (8,265 samples, 2.49%)</title><rect x="456.3" y="419.0" width="29.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.3" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (8,265 samples, 2.49%)</title><rect x="456.3" y="403.0" width="29.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.3" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (8,265 samples, 2.49%)</title><rect x="456.3" y="387.0" width="29.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.3" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (5,494 samples, 1.66%)</title><rect x="456.3" y="371.0" width="19.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.3" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1,400 samples, 0.42%)</title><rect x="456.3" y="355.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (262 samples, 0.08%)</title><rect x="456.3" y="339.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="459.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (614 samples, 0.19%)</title><rect x="457.3" y="339.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="460.3" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (614 samples, 0.19%)</title><rect x="457.3" y="323.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.3" y="334.0"></text>
</g>
<g>
<title>byte[] (547 samples, 0.16%)</title><rect x="457.3" y="307.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="460.3" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (512 samples, 0.15%)</title><rect x="459.5" y="339.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.5" y="350.0"></text>
</g>
<g>
<title>byte[] (477 samples, 0.14%)</title><rect x="459.5" y="323.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="462.5" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (282 samples, 0.08%)</title><rect x="461.3" y="355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.3" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (270 samples, 0.08%)</title><rect x="461.3" y="339.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="464.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2,675 samples, 0.81%)</title><rect x="462.3" y="355.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (297 samples, 0.09%)</title><rect x="462.3" y="339.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="465.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (1,803 samples, 0.54%)</title><rect x="463.4" y="339.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (1,803 samples, 0.54%)</title><rect x="463.4" y="323.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/4024442.linkToTargetMethod (1,140 samples, 0.34%)</title><rect x="463.4" y="307.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,140 samples, 0.34%)</title><rect x="463.4" y="291.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/12533877.get$Lambda (1,140 samples, 0.34%)</title><rect x="463.4" y="275.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$66 (1,077 samples, 0.32%)</title><rect x="463.4" y="259.0" width="3.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="466.4" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (663 samples, 0.20%)</title><rect x="467.5" y="307.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/12533877.run (663 samples, 0.20%)</title><rect x="467.5" y="291.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (663 samples, 0.20%)</title><rect x="467.5" y="275.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.5" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (663 samples, 0.20%)</title><rect x="467.5" y="259.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.5" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (663 samples, 0.20%)</title><rect x="467.5" y="243.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.5" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (625 samples, 0.19%)</title><rect x="467.5" y="227.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="470.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (563 samples, 0.17%)</title><rect x="469.8" y="339.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (563 samples, 0.17%)</title><rect x="469.8" y="323.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.8" y="334.0"></text>
</g>
<g>
<title>int[] (548 samples, 0.17%)</title><rect x="469.8" y="307.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="472.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1,137 samples, 0.34%)</title><rect x="471.8" y="355.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.8" y="366.0"></text>
</g>
<g>
<title>byte[] (613 samples, 0.18%)</title><rect x="471.8" y="339.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="474.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (509 samples, 0.15%)</title><rect x="474.1" y="339.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (509 samples, 0.15%)</title><rect x="474.1" y="323.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.1" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (497 samples, 0.15%)</title><rect x="474.1" y="307.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="477.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,771 samples, 0.84%)</title><rect x="475.9" y="371.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.9" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (866 samples, 0.26%)</title><rect x="475.9" y="355.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="478.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (708 samples, 0.21%)</title><rect x="479.0" y="355.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (678 samples, 0.20%)</title><rect x="479.0" y="339.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="482.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,168 samples, 0.35%)</title><rect x="481.6" y="355.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.6" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,140 samples, 0.34%)</title><rect x="481.6" y="339.0" width="4.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="484.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (248 samples, 0.07%)</title><rect x="485.7" y="435.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (248 samples, 0.07%)</title><rect x="485.7" y="419.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (237 samples, 0.07%)</title><rect x="485.7" y="403.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="488.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (13,317 samples, 4.01%)</title><rect x="486.6" y="483.0" width="47.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.6" y="494.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (724 samples, 0.22%)</title><rect x="486.6" y="467.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="489.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (256 samples, 0.08%)</title><rect x="489.2" y="467.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="492.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (12,064 samples, 3.64%)</title><rect x="490.1" y="467.0" width="42.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.1" y="478.0">jdk/..</text>
</g>
<g>
<title>java.lang.Object (119 samples, 0.04%)</title><rect x="490.1" y="451.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="493.1" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (376 samples, 0.11%)</title><rect x="490.5" y="451.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="493.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (190 samples, 0.06%)</title><rect x="491.9" y="451.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="494.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (629 samples, 0.19%)</title><rect x="492.6" y="451.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.6" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (629 samples, 0.19%)</title><rect x="492.6" y="435.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.6" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (609 samples, 0.18%)</title><rect x="492.6" y="419.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="495.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (366 samples, 0.11%)</title><rect x="494.8" y="451.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (359 samples, 0.11%)</title><rect x="494.8" y="435.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="497.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (759 samples, 0.23%)</title><rect x="496.1" y="451.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="499.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (293 samples, 0.09%)</title><rect x="498.8" y="451.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="501.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (706 samples, 0.21%)</title><rect x="499.9" y="451.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="502.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (759 samples, 0.23%)</title><rect x="502.4" y="451.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="505.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (618 samples, 0.19%)</title><rect x="505.2" y="451.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="508.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3,571 samples, 1.08%)</title><rect x="507.4" y="451.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="510.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (222 samples, 0.07%)</title><rect x="507.4" y="435.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="510.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (180 samples, 0.05%)</title><rect x="508.3" y="435.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="511.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (257 samples, 0.08%)</title><rect x="508.9" y="435.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="511.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (160 samples, 0.05%)</title><rect x="509.9" y="435.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="512.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (288 samples, 0.09%)</title><rect x="510.5" y="435.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (288 samples, 0.09%)</title><rect x="510.5" y="419.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.get$Lambda (288 samples, 0.09%)</title><rect x="510.5" y="403.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="513.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$161 (278 samples, 0.08%)</title><rect x="510.5" y="387.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="513.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (282 samples, 0.08%)</title><rect x="511.5" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (270 samples, 0.08%)</title><rect x="511.5" y="419.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="514.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (313 samples, 0.09%)</title><rect x="512.5" y="435.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="515.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (303 samples, 0.09%)</title><rect x="513.6" y="435.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="516.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,515 samples, 0.46%)</title><rect x="514.7" y="435.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (203 samples, 0.06%)</title><rect x="514.7" y="419.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="517.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (512 samples, 0.15%)</title><rect x="515.5" y="419.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="518.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (87 samples, 0.03%)</title><rect x="517.4" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (77 samples, 0.02%)</title><rect x="517.4" y="403.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="520.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (692 samples, 0.21%)</title><rect x="517.7" y="419.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (222 samples, 0.07%)</title><rect x="517.7" y="403.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="520.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (205 samples, 0.06%)</title><rect x="518.5" y="403.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="521.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (233 samples, 0.07%)</title><rect x="519.3" y="403.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="522.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2,009 samples, 0.61%)</title><rect x="520.1" y="451.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (202 samples, 0.06%)</title><rect x="520.1" y="435.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="523.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (215 samples, 0.06%)</title><rect x="520.9" y="435.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="523.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (217 samples, 0.07%)</title><rect x="521.7" y="435.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="524.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (177 samples, 0.05%)</title><rect x="522.5" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (168 samples, 0.05%)</title><rect x="522.5" y="419.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="525.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,173 samples, 0.35%)</title><rect x="523.1" y="435.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (198 samples, 0.06%)</title><rect x="523.1" y="419.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="526.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (271 samples, 0.08%)</title><rect x="523.8" y="419.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="526.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (96 samples, 0.03%)</title><rect x="524.8" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (88 samples, 0.03%)</title><rect x="524.8" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="527.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (590 samples, 0.18%)</title><rect x="525.2" y="419.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (164 samples, 0.05%)</title><rect x="525.2" y="403.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="528.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (178 samples, 0.05%)</title><rect x="525.8" y="403.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="528.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (222 samples, 0.07%)</title><rect x="526.4" y="403.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="529.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (395 samples, 0.12%)</title><rect x="527.3" y="451.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="530.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (395 samples, 0.12%)</title><rect x="527.3" y="435.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (395 samples, 0.12%)</title><rect x="527.3" y="419.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (395 samples, 0.12%)</title><rect x="527.3" y="403.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.3" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (395 samples, 0.12%)</title><rect x="527.3" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (395 samples, 0.12%)</title><rect x="527.3" y="371.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (385 samples, 0.12%)</title><rect x="527.3" y="355.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="530.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1,213 samples, 0.37%)</title><rect x="528.7" y="451.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/4024442.linkToTargetMethod (155 samples, 0.05%)</title><rect x="528.7" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (155 samples, 0.05%)</title><rect x="528.7" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/6963423.get$Lambda (155 samples, 0.05%)</title><rect x="528.7" y="403.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$144 (145 samples, 0.04%)</title><rect x="528.7" y="387.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="531.7" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,058 samples, 0.32%)</title><rect x="529.2" y="435.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/6963423.run (1,058 samples, 0.32%)</title><rect x="529.2" y="419.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1,058 samples, 0.32%)</title><rect x="529.2" y="403.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.2" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (423 samples, 0.13%)</title><rect x="529.2" y="387.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="532.2" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (623 samples, 0.19%)</title><rect x="530.8" y="387.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.8" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (391 samples, 0.12%)</title><rect x="530.8" y="371.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="533.8" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (221 samples, 0.07%)</title><rect x="532.2" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.2" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (221 samples, 0.07%)</title><rect x="532.2" y="355.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.2" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (221 samples, 0.07%)</title><rect x="532.2" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.2" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (221 samples, 0.07%)</title><rect x="532.2" y="323.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.2" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (209 samples, 0.06%)</title><rect x="532.2" y="307.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="535.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (273 samples, 0.08%)</title><rect x="533.0" y="467.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (264 samples, 0.08%)</title><rect x="533.0" y="451.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="536.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (401 samples, 0.12%)</title><rect x="534.0" y="547.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (401 samples, 0.12%)</title><rect x="534.0" y="531.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (395 samples, 0.12%)</title><rect x="534.0" y="515.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="537.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (314 samples, 0.09%)</title><rect x="535.4" y="579.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (314 samples, 0.09%)</title><rect x="535.4" y="563.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (314 samples, 0.09%)</title><rect x="535.4" y="547.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (314 samples, 0.09%)</title><rect x="535.4" y="531.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (304 samples, 0.09%)</title><rect x="535.4" y="515.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="538.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1,212 samples, 0.37%)</title><rect x="536.5" y="579.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (864 samples, 0.26%)</title><rect x="536.5" y="563.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (864 samples, 0.26%)</title><rect x="536.5" y="547.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/24430281.linkToTargetMethod (864 samples, 0.26%)</title><rect x="536.5" y="531.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22860378.invoke (864 samples, 0.26%)</title><rect x="536.5" y="515.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/32983193.invoke (864 samples, 0.26%)</title><rect x="536.5" y="499.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (864 samples, 0.26%)</title><rect x="536.5" y="483.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (340 samples, 0.10%)</title><rect x="536.5" y="467.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="539.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (335 samples, 0.10%)</title><rect x="536.5" y="451.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="539.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (524 samples, 0.16%)</title><rect x="537.7" y="467.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="540.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (524 samples, 0.16%)</title><rect x="537.7" y="451.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.7" y="462.0"></text>
</g>
<g>
<title>byte[] (520 samples, 0.16%)</title><rect x="537.7" y="435.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="540.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (348 samples, 0.10%)</title><rect x="539.6" y="563.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (343 samples, 0.10%)</title><rect x="539.6" y="547.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="542.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (671 samples, 0.20%)</title><rect x="540.8" y="659.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.8" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (671 samples, 0.20%)</title><rect x="540.8" y="643.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (671 samples, 0.20%)</title><rect x="540.8" y="627.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (667 samples, 0.20%)</title><rect x="540.8" y="611.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="543.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2,143 samples, 0.65%)</title><rect x="543.2" y="659.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (1,097 samples, 0.33%)</title><rect x="543.2" y="643.0" width="3.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="546.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (1,045 samples, 0.31%)</title><rect x="547.1" y="643.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (1,045 samples, 0.31%)</title><rect x="547.1" y="627.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.1" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.now (586 samples, 0.18%)</title><rect x="547.1" y="611.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.1" y="622.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (586 samples, 0.18%)</title><rect x="547.1" y="595.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.1" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (586 samples, 0.18%)</title><rect x="547.1" y="579.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.1" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.create (586 samples, 0.18%)</title><rect x="547.1" y="563.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.1" y="574.0"></text>
</g>
<g>
<title>java.time.Instant (583 samples, 0.18%)</title><rect x="547.1" y="547.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="550.1" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (459 samples, 0.14%)</title><rect x="549.2" y="611.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.2" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (459 samples, 0.14%)</title><rect x="549.2" y="595.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.2" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (459 samples, 0.14%)</title><rect x="549.2" y="579.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.2" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (459 samples, 0.14%)</title><rect x="549.2" y="563.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.2" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (459 samples, 0.14%)</title><rect x="549.2" y="547.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.2" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (459 samples, 0.14%)</title><rect x="549.2" y="531.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.2" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (459 samples, 0.14%)</title><rect x="549.2" y="515.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (459 samples, 0.14%)</title><rect x="549.2" y="499.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.2" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (456 samples, 0.14%)</title><rect x="549.2" y="483.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="552.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4,397 samples, 1.33%)</title><rect x="550.9" y="755.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (873 samples, 0.26%)</title><rect x="550.9" y="739.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (873 samples, 0.26%)</title><rect x="550.9" y="723.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (873 samples, 0.26%)</title><rect x="550.9" y="707.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.9" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (862 samples, 0.26%)</title><rect x="550.9" y="691.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="553.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (3,524 samples, 1.06%)</title><rect x="554.0" y="739.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (3,524 samples, 1.06%)</title><rect x="554.0" y="723.0" width="12.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3,524 samples, 1.06%)</title><rect x="554.0" y="707.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.0" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (3,471 samples, 1.05%)</title><rect x="554.0" y="691.0" width="12.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="557.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$196/11651460.run (15,969 samples, 4.81%)</title><rect x="566.5" y="755.0" width="56.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.5" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (15,969 samples, 4.81%)</title><rect x="566.5" y="739.0" width="56.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.5" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (15,969 samples, 4.81%)</title><rect x="566.5" y="723.0" width="56.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.5" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (15,969 samples, 4.81%)</title><rect x="566.5" y="707.0" width="56.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.5" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15,969 samples, 4.81%)</title><rect x="566.5" y="691.0" width="56.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.5" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15,969 samples, 4.81%)</title><rect x="566.5" y="675.0" width="56.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.5" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15,969 samples, 4.81%)</title><rect x="566.5" y="659.0" width="56.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.5" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15,969 samples, 4.81%)</title><rect x="566.5" y="643.0" width="56.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.5" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15,969 samples, 4.81%)</title><rect x="566.5" y="627.0" width="56.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.5" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (15,968 samples, 4.81%)</title><rect x="566.5" y="611.0" width="56.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.5" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (15,968 samples, 4.81%)</title><rect x="566.5" y="595.0" width="56.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.5" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (14,941 samples, 4.50%)</title><rect x="566.5" y="579.0" width="53.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.5" y="590.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,762 samples, 0.53%)</title><rect x="566.5" y="563.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,762 samples, 0.53%)</title><rect x="566.5" y="547.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$199/1566432.get$Lambda (1,410 samples, 0.42%)</title><rect x="566.5" y="531.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$199 (1,410 samples, 0.42%)</title><rect x="566.5" y="515.0" width="5.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="569.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$204/20864052.get$Lambda (181 samples, 0.05%)</title><rect x="571.6" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$204 (172 samples, 0.05%)</title><rect x="571.6" y="515.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="574.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$239/27378486.get$Lambda (171 samples, 0.05%)</title><rect x="572.2" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$239 (161 samples, 0.05%)</title><rect x="572.2" y="515.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="575.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (13,179 samples, 3.97%)</title><rect x="572.8" y="563.0" width="46.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.8" y="574.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (620 samples, 0.19%)</title><rect x="572.8" y="547.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="575.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12,549 samples, 3.78%)</title><rect x="575.0" y="547.0" width="44.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.0" y="558.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12,549 samples, 3.78%)</title><rect x="575.0" y="531.0" width="44.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.0" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12,549 samples, 3.78%)</title><rect x="575.0" y="515.0" width="44.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.0" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,067 samples, 0.62%)</title><rect x="575.0" y="499.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (810 samples, 0.24%)</title><rect x="575.0" y="483.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="578.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/20700430.apply (1,180 samples, 0.36%)</title><rect x="578.0" y="483.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1,180 samples, 0.36%)</title><rect x="578.0" y="467.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1,180 samples, 0.36%)</title><rect x="578.0" y="451.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (305 samples, 0.09%)</title><rect x="578.0" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="581.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (305 samples, 0.09%)</title><rect x="578.0" y="419.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.0" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (295 samples, 0.09%)</title><rect x="578.0" y="403.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="581.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (875 samples, 0.26%)</title><rect x="579.1" y="435.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="582.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (188 samples, 0.06%)</title><rect x="579.1" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (188 samples, 0.06%)</title><rect x="579.1" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$206/5014188.get$Lambda (188 samples, 0.06%)</title><rect x="579.1" y="387.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$206 (178 samples, 0.05%)</title><rect x="579.1" y="371.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="582.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (687 samples, 0.21%)</title><rect x="579.8" y="419.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (687 samples, 0.21%)</title><rect x="579.8" y="403.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (388 samples, 0.12%)</title><rect x="579.8" y="387.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="582.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (289 samples, 0.09%)</title><rect x="581.2" y="387.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (289 samples, 0.09%)</title><rect x="581.2" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (279 samples, 0.08%)</title><rect x="581.2" y="355.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="584.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (10,464 samples, 3.15%)</title><rect x="582.4" y="499.0" width="37.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.4" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10,464 samples, 3.15%)</title><rect x="582.4" y="483.0" width="37.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.4" y="494.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/10502657.apply (10,464 samples, 3.15%)</title><rect x="582.4" y="467.0" width="37.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.4" y="478.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (10,464 samples, 3.15%)</title><rect x="582.4" y="451.0" width="37.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.4" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (10,464 samples, 3.15%)</title><rect x="582.4" y="435.0" width="37.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.4" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/10627322.apply (10,464 samples, 3.15%)</title><rect x="582.4" y="419.0" width="37.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="585.4" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (10,464 samples, 3.15%)</title><rect x="582.4" y="403.0" width="37.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.4" y="414.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (183 samples, 0.06%)</title><rect x="582.4" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (183 samples, 0.06%)</title><rect x="582.4" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/20700430.get$Lambda (183 samples, 0.06%)</title><rect x="582.4" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$200 (174 samples, 0.05%)</title><rect x="582.4" y="339.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="585.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (859 samples, 0.26%)</title><rect x="583.0" y="387.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (859 samples, 0.26%)</title><rect x="583.0" y="371.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (454 samples, 0.14%)</title><rect x="583.0" y="355.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="586.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (395 samples, 0.12%)</title><rect x="584.7" y="355.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (395 samples, 0.12%)</title><rect x="584.7" y="339.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (386 samples, 0.12%)</title><rect x="584.7" y="323.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="587.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1,010 samples, 0.30%)</title><rect x="586.1" y="387.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (204 samples, 0.06%)</title><rect x="586.1" y="371.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (204 samples, 0.06%)</title><rect x="586.1" y="355.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/9963887.get$Lambda (204 samples, 0.06%)</title><rect x="586.1" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$201 (195 samples, 0.06%)</title><rect x="586.1" y="323.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="589.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (806 samples, 0.24%)</title><rect x="586.8" y="371.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="589.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (806 samples, 0.24%)</title><rect x="586.8" y="355.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (461 samples, 0.14%)</title><rect x="586.8" y="339.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="589.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (337 samples, 0.10%)</title><rect x="588.5" y="339.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (337 samples, 0.10%)</title><rect x="588.5" y="323.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (327 samples, 0.10%)</title><rect x="588.5" y="307.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="591.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (8,412 samples, 2.54%)</title><rect x="589.7" y="387.0" width="29.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.7" y="398.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (410 samples, 0.12%)</title><rect x="589.7" y="371.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (410 samples, 0.12%)</title><rect x="589.7" y="355.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/16510633.get$Lambda (200 samples, 0.06%)</title><rect x="589.7" y="339.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$236 (196 samples, 0.06%)</title><rect x="589.7" y="323.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="592.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$238/480874.get$Lambda (210 samples, 0.06%)</title><rect x="590.4" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$238 (202 samples, 0.06%)</title><rect x="590.4" y="323.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="593.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (2,523 samples, 0.76%)</title><rect x="591.2" y="371.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (2,523 samples, 0.76%)</title><rect x="591.2" y="355.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (2,523 samples, 0.76%)</title><rect x="591.2" y="339.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/16510633.accept (705 samples, 0.21%)</title><rect x="591.2" y="323.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (705 samples, 0.21%)</title><rect x="591.2" y="307.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (705 samples, 0.21%)</title><rect x="591.2" y="291.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (143 samples, 0.04%)</title><rect x="591.2" y="275.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (143 samples, 0.04%)</title><rect x="591.2" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$237/12143959.get$Lambda (143 samples, 0.04%)</title><rect x="591.2" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$237 (139 samples, 0.04%)</title><rect x="591.2" y="227.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="594.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (562 samples, 0.17%)</title><rect x="591.7" y="275.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (562 samples, 0.17%)</title><rect x="591.7" y="259.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (284 samples, 0.09%)</title><rect x="591.7" y="243.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="594.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (270 samples, 0.08%)</title><rect x="592.7" y="243.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (270 samples, 0.08%)</title><rect x="592.7" y="227.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (264 samples, 0.08%)</title><rect x="592.7" y="211.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="595.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$238/480874.accept (1,296 samples, 0.39%)</title><rect x="593.7" y="323.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1,296 samples, 0.39%)</title><rect x="593.7" y="307.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1,296 samples, 0.39%)</title><rect x="593.7" y="291.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1,296 samples, 0.39%)</title><rect x="593.7" y="275.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1,296 samples, 0.39%)</title><rect x="593.7" y="259.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,296 samples, 0.39%)</title><rect x="593.7" y="243.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,296 samples, 0.39%)</title><rect x="593.7" y="227.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,296 samples, 0.39%)</title><rect x="593.7" y="211.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="596.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,296 samples, 0.39%)</title><rect x="593.7" y="195.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1,296 samples, 0.39%)</title><rect x="593.7" y="179.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (591 samples, 0.18%)</title><rect x="593.7" y="163.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (591 samples, 0.18%)</title><rect x="593.7" y="147.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.7" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (179 samples, 0.05%)</title><rect x="593.7" y="131.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="596.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (403 samples, 0.12%)</title><rect x="594.3" y="131.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (403 samples, 0.12%)</title><rect x="594.3" y="115.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (403 samples, 0.12%)</title><rect x="594.3" y="99.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (403 samples, 0.12%)</title><rect x="594.3" y="83.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (403 samples, 0.12%)</title><rect x="594.3" y="67.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.3" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (394 samples, 0.12%)</title><rect x="594.3" y="51.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="597.3" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (705 samples, 0.21%)</title><rect x="595.8" y="163.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (705 samples, 0.21%)</title><rect x="595.8" y="147.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.8" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (192 samples, 0.06%)</title><rect x="595.8" y="131.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (184 samples, 0.06%)</title><rect x="595.8" y="115.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="598.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (513 samples, 0.15%)</title><rect x="596.4" y="131.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.4" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (188 samples, 0.06%)</title><rect x="596.4" y="115.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="599.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (316 samples, 0.10%)</title><rect x="597.1" y="115.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (316 samples, 0.10%)</title><rect x="597.1" y="99.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (316 samples, 0.10%)</title><rect x="597.1" y="83.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (316 samples, 0.10%)</title><rect x="597.1" y="67.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (316 samples, 0.10%)</title><rect x="597.1" y="51.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (307 samples, 0.09%)</title><rect x="597.1" y="35.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="600.1" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (522 samples, 0.16%)</title><rect x="598.3" y="323.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (522 samples, 0.16%)</title><rect x="598.3" y="307.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (511 samples, 0.15%)</title><rect x="598.3" y="291.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="601.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (5,479 samples, 1.65%)</title><rect x="600.1" y="371.0" width="19.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (598 samples, 0.18%)</title><rect x="600.1" y="355.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="603.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (366 samples, 0.11%)</title><rect x="602.3" y="355.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (366 samples, 0.11%)</title><rect x="602.3" y="339.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (364 samples, 0.11%)</title><rect x="602.3" y="323.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="605.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (4,513 samples, 1.36%)</title><rect x="603.6" y="355.0" width="16.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (149 samples, 0.04%)</title><rect x="603.6" y="339.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="606.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (2,324 samples, 0.70%)</title><rect x="604.1" y="339.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="607.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (270 samples, 0.08%)</title><rect x="604.1" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (261 samples, 0.08%)</title><rect x="604.1" y="307.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="607.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (617 samples, 0.19%)</title><rect x="605.1" y="323.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="608.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1,428 samples, 0.43%)</title><rect x="607.3" y="323.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (161 samples, 0.05%)</title><rect x="607.3" y="307.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="610.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (194 samples, 0.06%)</title><rect x="607.9" y="307.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="610.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (295 samples, 0.09%)</title><rect x="608.6" y="307.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="611.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (174 samples, 0.05%)</title><rect x="609.7" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (169 samples, 0.05%)</title><rect x="609.7" y="291.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="612.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (582 samples, 0.18%)</title><rect x="610.3" y="307.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (185 samples, 0.06%)</title><rect x="610.3" y="291.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="613.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (174 samples, 0.05%)</title><rect x="611.0" y="291.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="614.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (204 samples, 0.06%)</title><rect x="611.6" y="291.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="614.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (2,033 samples, 0.61%)</title><rect x="612.4" y="339.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.4" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (378 samples, 0.11%)</title><rect x="612.4" y="323.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="615.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (940 samples, 0.28%)</title><rect x="613.7" y="323.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (614 samples, 0.19%)</title><rect x="613.7" y="307.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="616.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (320 samples, 0.10%)</title><rect x="615.9" y="307.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.9" y="318.0"></text>
</g>
<g>
<title>byte[] (313 samples, 0.09%)</title><rect x="615.9" y="291.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="618.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (711 samples, 0.21%)</title><rect x="617.1" y="323.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (711 samples, 0.21%)</title><rect x="617.1" y="307.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (711 samples, 0.21%)</title><rect x="617.1" y="291.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (711 samples, 0.21%)</title><rect x="617.1" y="275.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (711 samples, 0.21%)</title><rect x="617.1" y="259.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (640 samples, 0.19%)</title><rect x="617.1" y="243.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="620.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (71 samples, 0.02%)</title><rect x="619.4" y="243.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="622.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,027 samples, 0.31%)</title><rect x="619.7" y="579.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,027 samples, 0.31%)</title><rect x="619.7" y="563.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,027 samples, 0.31%)</title><rect x="619.7" y="547.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="622.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,027 samples, 0.31%)</title><rect x="619.7" y="531.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,027 samples, 0.31%)</title><rect x="619.7" y="515.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.7" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1,025 samples, 0.31%)</title><rect x="619.7" y="499.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.7" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (449 samples, 0.14%)</title><rect x="619.7" y="483.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.7" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (429 samples, 0.13%)</title><rect x="619.7" y="467.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="622.7" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (576 samples, 0.17%)</title><rect x="621.3" y="483.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.3" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (555 samples, 0.17%)</title><rect x="621.3" y="467.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="624.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (60,001 samples, 18.08%)</title><rect x="623.3" y="755.0" width="213.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.3" y="766.0">jdk/internal/net/http/common..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (60,001 samples, 18.08%)</title><rect x="623.3" y="739.0" width="213.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.3" y="750.0">jdk/internal/net/http/common..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (43,297 samples, 13.05%)</title><rect x="623.3" y="723.0" width="154.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.3" y="734.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (43,297 samples, 13.05%)</title><rect x="623.3" y="707.0" width="154.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.3" y="718.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (43,297 samples, 13.05%)</title><rect x="623.3" y="691.0" width="154.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.3" y="702.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1,038 samples, 0.31%)</title><rect x="623.3" y="675.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1,038 samples, 0.31%)</title><rect x="623.3" y="659.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="626.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,038 samples, 0.31%)</title><rect x="623.3" y="643.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,038 samples, 0.31%)</title><rect x="623.3" y="627.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/31242245.linkToTargetMethod (411 samples, 0.12%)</title><rect x="623.3" y="611.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/987179.invoke (411 samples, 0.12%)</title><rect x="623.3" y="595.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (411 samples, 0.12%)</title><rect x="623.3" y="579.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (411 samples, 0.12%)</title><rect x="623.3" y="563.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (411 samples, 0.12%)</title><rect x="623.3" y="547.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.3" y="558.0"></text>
</g>
<g>
<title>byte[] (402 samples, 0.12%)</title><rect x="623.3" y="531.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="626.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (627 samples, 0.19%)</title><rect x="624.8" y="611.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (627 samples, 0.19%)</title><rect x="624.8" y="595.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (627 samples, 0.19%)</title><rect x="624.8" y="579.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197/13890655.get$Lambda (627 samples, 0.19%)</title><rect x="624.8" y="563.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197 (621 samples, 0.19%)</title><rect x="624.8" y="547.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="627.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (42,259 samples, 12.74%)</title><rect x="627.0" y="675.0" width="150.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.0" y="686.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (42,259 samples, 12.74%)</title><rect x="627.0" y="659.0" width="150.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.0" y="670.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (42,259 samples, 12.74%)</title><rect x="627.0" y="643.0" width="150.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.0" y="654.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (42,259 samples, 12.74%)</title><rect x="627.0" y="627.0" width="150.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.0" y="638.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (20,014 samples, 6.03%)</title><rect x="627.0" y="611.0" width="71.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.0" y="622.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (20,014 samples, 6.03%)</title><rect x="627.0" y="595.0" width="71.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.0" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (20,014 samples, 6.03%)</title><rect x="627.0" y="579.0" width="71.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.0" y="590.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (20,014 samples, 6.03%)</title><rect x="627.0" y="563.0" width="71.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.0" y="574.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20,014 samples, 6.03%)</title><rect x="627.0" y="547.0" width="71.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.0" y="558.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (20,014 samples, 6.03%)</title><rect x="627.0" y="531.0" width="71.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.0" y="542.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (20,014 samples, 6.03%)</title><rect x="627.0" y="515.0" width="71.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.0" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (19,478 samples, 5.87%)</title><rect x="627.0" y="499.0" width="69.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.0" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19,478 samples, 5.87%)</title><rect x="627.0" y="483.0" width="69.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.0" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (19,144 samples, 5.77%)</title><rect x="627.0" y="467.0" width="68.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.0" y="478.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (530 samples, 0.16%)</title><rect x="627.0" y="451.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="630.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/9963887.apply (429 samples, 0.13%)</title><rect x="628.9" y="451.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (429 samples, 0.13%)</title><rect x="628.9" y="435.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="631.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (429 samples, 0.13%)</title><rect x="628.9" y="419.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (429 samples, 0.13%)</title><rect x="628.9" y="403.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (419 samples, 0.13%)</title><rect x="628.9" y="387.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="631.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/33260527.apply (17,354 samples, 5.23%)</title><rect x="630.5" y="451.0" width="61.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.5" y="462.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (17,354 samples, 5.23%)</title><rect x="630.5" y="435.0" width="61.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.5" y="446.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (467 samples, 0.14%)</title><rect x="630.5" y="419.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (467 samples, 0.14%)</title><rect x="630.5" y="403.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$230/28785153.get$Lambda (467 samples, 0.14%)</title><rect x="630.5" y="387.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$230 (458 samples, 0.14%)</title><rect x="630.5" y="371.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="633.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (941 samples, 0.28%)</title><rect x="632.1" y="419.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (941 samples, 0.28%)</title><rect x="632.1" y="403.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (522 samples, 0.16%)</title><rect x="632.1" y="387.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="635.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (409 samples, 0.12%)</title><rect x="634.0" y="387.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (409 samples, 0.12%)</title><rect x="634.0" y="371.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (399 samples, 0.12%)</title><rect x="634.0" y="355.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="637.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (15,946 samples, 4.81%)</title><rect x="635.5" y="419.0" width="56.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.5" y="430.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (157 samples, 0.05%)</title><rect x="635.5" y="403.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (157 samples, 0.05%)</title><rect x="635.5" y="387.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$228/32211625.get$Lambda (157 samples, 0.05%)</title><rect x="635.5" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$228 (148 samples, 0.04%)</title><rect x="635.5" y="355.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="638.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (943 samples, 0.28%)</title><rect x="636.0" y="403.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (943 samples, 0.28%)</title><rect x="636.0" y="387.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (527 samples, 0.16%)</title><rect x="636.0" y="371.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="639.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (406 samples, 0.12%)</title><rect x="637.9" y="371.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (406 samples, 0.12%)</title><rect x="637.9" y="355.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (395 samples, 0.12%)</title><rect x="637.9" y="339.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="640.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (14,846 samples, 4.47%)</title><rect x="639.4" y="403.0" width="52.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.4" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$113/18506235.apply (989 samples, 0.30%)</title><rect x="639.4" y="387.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (989 samples, 0.30%)</title><rect x="639.4" y="371.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (989 samples, 0.30%)</title><rect x="639.4" y="355.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (380 samples, 0.11%)</title><rect x="639.4" y="339.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="642.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (603 samples, 0.18%)</title><rect x="640.8" y="339.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.8" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (310 samples, 0.09%)</title><rect x="640.8" y="323.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="643.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (286 samples, 0.09%)</title><rect x="641.9" y="323.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="644.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (13,857 samples, 4.18%)</title><rect x="642.9" y="387.0" width="49.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.9" y="398.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (301 samples, 0.09%)</title><rect x="642.9" y="371.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (301 samples, 0.09%)</title><rect x="642.9" y="355.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/27658891.get$Lambda (158 samples, 0.05%)</title><rect x="642.9" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$224 (148 samples, 0.04%)</title><rect x="642.9" y="323.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="645.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$226/19484360.get$Lambda (143 samples, 0.04%)</title><rect x="643.5" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$226 (134 samples, 0.04%)</title><rect x="643.5" y="323.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="646.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/4191488.linkToTargetMethod (451 samples, 0.14%)</title><rect x="644.0" y="371.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/19430543.invokeStatic (451 samples, 0.14%)</title><rect x="644.0" y="355.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/10621704.get$Lambda (451 samples, 0.14%)</title><rect x="644.0" y="339.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$216 (444 samples, 0.13%)</title><rect x="644.0" y="323.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="647.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2,817 samples, 0.85%)</title><rect x="645.6" y="371.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.6" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,083 samples, 0.33%)</title><rect x="645.6" y="355.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.6" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (415 samples, 0.13%)</title><rect x="645.6" y="339.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.6" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (412 samples, 0.12%)</title><rect x="645.6" y="323.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="648.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (668 samples, 0.20%)</title><rect x="647.0" y="339.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (663 samples, 0.20%)</title><rect x="647.0" y="323.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="650.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (873 samples, 0.26%)</title><rect x="649.4" y="355.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (873 samples, 0.26%)</title><rect x="649.4" y="339.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (873 samples, 0.26%)</title><rect x="649.4" y="323.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (387 samples, 0.12%)</title><rect x="649.4" y="307.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (387 samples, 0.12%)</title><rect x="649.4" y="291.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (387 samples, 0.12%)</title><rect x="649.4" y="275.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.4" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (383 samples, 0.12%)</title><rect x="649.4" y="259.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="652.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$213/32572125.get (155 samples, 0.05%)</title><rect x="650.8" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.8" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (151 samples, 0.05%)</title><rect x="650.8" y="291.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="653.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (331 samples, 0.10%)</title><rect x="651.3" y="307.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (331 samples, 0.10%)</title><rect x="651.3" y="291.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.3" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (331 samples, 0.10%)</title><rect x="651.3" y="275.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.3" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (325 samples, 0.10%)</title><rect x="651.3" y="259.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="654.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (861 samples, 0.26%)</title><rect x="652.5" y="355.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (781 samples, 0.24%)</title><rect x="652.5" y="339.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="655.5" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (80 samples, 0.02%)</title><rect x="655.3" y="339.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="658.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,881 samples, 0.57%)</title><rect x="655.6" y="371.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,031 samples, 0.31%)</title><rect x="655.6" y="355.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (786 samples, 0.24%)</title><rect x="655.6" y="339.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="658.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (236 samples, 0.07%)</title><rect x="658.4" y="339.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (236 samples, 0.07%)</title><rect x="658.4" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (226 samples, 0.07%)</title><rect x="658.4" y="307.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="661.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (850 samples, 0.26%)</title><rect x="659.3" y="355.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (850 samples, 0.26%)</title><rect x="659.3" y="339.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (488 samples, 0.15%)</title><rect x="659.3" y="323.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="662.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (353 samples, 0.11%)</title><rect x="661.0" y="323.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (353 samples, 0.11%)</title><rect x="661.0" y="307.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (344 samples, 0.10%)</title><rect x="661.0" y="291.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="664.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (416 samples, 0.13%)</title><rect x="662.3" y="371.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="665.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (280 samples, 0.08%)</title><rect x="663.8" y="371.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="666.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (291 samples, 0.09%)</title><rect x="664.8" y="371.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="667.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (195 samples, 0.06%)</title><rect x="665.8" y="371.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (192 samples, 0.06%)</title><rect x="665.8" y="355.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="668.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7,213 samples, 2.17%)</title><rect x="666.5" y="371.0" width="25.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.5" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/10621704.run (7,213 samples, 2.17%)</title><rect x="666.5" y="355.0" width="25.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.5" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (7,213 samples, 2.17%)</title><rect x="666.5" y="339.0" width="25.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.5" y="350.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,212 samples, 0.37%)</title><rect x="666.5" y="323.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,212 samples, 0.37%)</title><rect x="666.5" y="307.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/16991611.get$Lambda (232 samples, 0.07%)</title><rect x="666.5" y="291.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$217 (225 samples, 0.07%)</title><rect x="666.5" y="275.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="669.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/1920882.get$Lambda (457 samples, 0.14%)</title><rect x="667.3" y="291.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$219 (447 samples, 0.13%)</title><rect x="667.3" y="275.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="670.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/20534699.get$Lambda (523 samples, 0.16%)</title><rect x="669.0" y="291.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="672.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$222 (510 samples, 0.15%)</title><rect x="669.0" y="275.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="672.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (953 samples, 0.29%)</title><rect x="670.8" y="323.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (953 samples, 0.29%)</title><rect x="670.8" y="307.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (418 samples, 0.13%)</title><rect x="670.8" y="291.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="673.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (522 samples, 0.16%)</title><rect x="672.4" y="291.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="675.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (522 samples, 0.16%)</title><rect x="672.4" y="275.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (511 samples, 0.15%)</title><rect x="672.4" y="259.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="675.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (494 samples, 0.15%)</title><rect x="674.2" y="323.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="677.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (356 samples, 0.11%)</title><rect x="676.0" y="323.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (345 samples, 0.10%)</title><rect x="676.0" y="307.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="679.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (774 samples, 0.23%)</title><rect x="677.3" y="323.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (774 samples, 0.23%)</title><rect x="677.3" y="307.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (226 samples, 0.07%)</title><rect x="677.3" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (226 samples, 0.07%)</title><rect x="677.3" y="275.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$223/21000255.get$Lambda (226 samples, 0.07%)</title><rect x="677.3" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$223 (214 samples, 0.06%)</title><rect x="677.3" y="243.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="680.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (548 samples, 0.17%)</title><rect x="678.1" y="291.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (548 samples, 0.17%)</title><rect x="678.1" y="275.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (548 samples, 0.17%)</title><rect x="678.1" y="259.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (307 samples, 0.09%)</title><rect x="678.1" y="243.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="681.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (229 samples, 0.07%)</title><rect x="679.2" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (229 samples, 0.07%)</title><rect x="679.2" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (217 samples, 0.07%)</title><rect x="679.2" y="211.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="682.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1,135 samples, 0.34%)</title><rect x="680.0" y="323.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,135 samples, 0.34%)</title><rect x="680.0" y="307.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/10735952.invoke (1,135 samples, 0.34%)</title><rect x="680.0" y="291.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,135 samples, 0.34%)</title><rect x="680.0" y="275.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="683.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (347 samples, 0.10%)</title><rect x="680.0" y="259.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (337 samples, 0.10%)</title><rect x="680.0" y="243.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="683.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (788 samples, 0.24%)</title><rect x="681.3" y="259.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="684.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (788 samples, 0.24%)</title><rect x="681.3" y="243.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.3" y="254.0"></text>
</g>
<g>
<title>byte[] (694 samples, 0.21%)</title><rect x="681.3" y="227.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="684.3" y="238.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.03%)</title><rect x="683.7" y="227.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="686.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2,281 samples, 0.69%)</title><rect x="684.1" y="323.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (739 samples, 0.22%)</title><rect x="684.1" y="307.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="687.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1,531 samples, 0.46%)</title><rect x="686.7" y="307.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,531 samples, 0.46%)</title><rect x="686.7" y="291.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/10735952.invoke (1,531 samples, 0.46%)</title><rect x="686.7" y="275.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,531 samples, 0.46%)</title><rect x="686.7" y="259.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (324 samples, 0.10%)</title><rect x="686.7" y="243.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.7" y="254.0"></text>
</g>
<g>
<title>java.lang.String (313 samples, 0.09%)</title><rect x="686.7" y="227.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="689.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,207 samples, 0.36%)</title><rect x="687.9" y="243.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,207 samples, 0.36%)</title><rect x="687.9" y="227.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.9" y="238.0"></text>
</g>
<g>
<title>byte[] (847 samples, 0.26%)</title><rect x="687.9" y="211.0" width="3.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="690.9" y="222.0"></text>
</g>
<g>
<title>byte[] (360 samples, 0.11%)</title><rect x="690.9" y="211.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="693.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/21539894.apply (822 samples, 0.25%)</title><rect x="692.2" y="451.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (822 samples, 0.25%)</title><rect x="692.2" y="435.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (467 samples, 0.14%)</title><rect x="692.2" y="419.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.2" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (467 samples, 0.14%)</title><rect x="692.2" y="403.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.2" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (467 samples, 0.14%)</title><rect x="692.2" y="387.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.2" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (458 samples, 0.14%)</title><rect x="692.2" y="371.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="695.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (355 samples, 0.11%)</title><rect x="693.8" y="419.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="696.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (346 samples, 0.10%)</title><rect x="693.8" y="403.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="696.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (334 samples, 0.10%)</title><rect x="695.1" y="467.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (334 samples, 0.10%)</title><rect x="695.1" y="451.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$186/6790542.apply (334 samples, 0.10%)</title><rect x="695.1" y="435.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (334 samples, 0.10%)</title><rect x="695.1" y="419.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (334 samples, 0.10%)</title><rect x="695.1" y="403.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (328 samples, 0.10%)</title><rect x="695.1" y="387.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="698.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$206/5014188.apply (536 samples, 0.16%)</title><rect x="696.3" y="499.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (536 samples, 0.16%)</title><rect x="696.3" y="483.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (524 samples, 0.16%)</title><rect x="696.3" y="467.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="699.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (22,245 samples, 6.70%)</title><rect x="698.2" y="611.0" width="79.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="701.2" y="622.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1,143 samples, 0.34%)</title><rect x="698.2" y="595.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,143 samples, 0.34%)</title><rect x="698.2" y="579.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,143 samples, 0.34%)</title><rect x="698.2" y="563.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,143 samples, 0.34%)</title><rect x="698.2" y="547.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,143 samples, 0.34%)</title><rect x="698.2" y="531.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.2" y="542.0"></text>
</g>
<g>
<title>byte[] (1,129 samples, 0.34%)</title><rect x="698.2" y="515.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="701.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (835 samples, 0.25%)</title><rect x="702.3" y="595.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (835 samples, 0.25%)</title><rect x="702.3" y="579.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (835 samples, 0.25%)</title><rect x="702.3" y="563.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.3" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (835 samples, 0.25%)</title><rect x="702.3" y="547.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (835 samples, 0.25%)</title><rect x="702.3" y="531.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.3" y="542.0"></text>
</g>
<g>
<title>byte[] (831 samples, 0.25%)</title><rect x="702.3" y="515.0" width="2.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="705.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1,570 samples, 0.47%)</title><rect x="705.2" y="595.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.2" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (283 samples, 0.09%)</title><rect x="705.2" y="579.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="708.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (209 samples, 0.06%)</title><rect x="706.2" y="579.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (209 samples, 0.06%)</title><rect x="706.2" y="563.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (209 samples, 0.06%)</title><rect x="706.2" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.2" y="558.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.06%)</title><rect x="706.2" y="531.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="709.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (355 samples, 0.11%)</title><rect x="707.0" y="579.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (355 samples, 0.11%)</title><rect x="707.0" y="563.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.0" y="574.0"></text>
</g>
<g>
<title>byte[] (349 samples, 0.11%)</title><rect x="707.0" y="547.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="710.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (718 samples, 0.22%)</title><rect x="708.3" y="579.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (718 samples, 0.22%)</title><rect x="708.3" y="563.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (322 samples, 0.10%)</title><rect x="708.3" y="547.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="711.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (394 samples, 0.12%)</title><rect x="709.4" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.4" y="558.0"></text>
</g>
<g>
<title>byte[] (389 samples, 0.12%)</title><rect x="709.4" y="531.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="712.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (6,062 samples, 1.83%)</title><rect x="710.8" y="595.0" width="21.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.8" y="606.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6,062 samples, 1.83%)</title><rect x="710.8" y="579.0" width="21.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.8" y="590.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6,062 samples, 1.83%)</title><rect x="710.8" y="563.0" width="21.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.8" y="574.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (275 samples, 0.08%)</title><rect x="710.8" y="547.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="713.8" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (226 samples, 0.07%)</title><rect x="711.8" y="547.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="714.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (586 samples, 0.18%)</title><rect x="712.6" y="547.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="715.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (250 samples, 0.08%)</title><rect x="714.8" y="547.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="717.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (272 samples, 0.08%)</title><rect x="715.7" y="547.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (272 samples, 0.08%)</title><rect x="715.7" y="531.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.get$Lambda (272 samples, 0.08%)</title><rect x="715.7" y="515.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.7" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$109 (266 samples, 0.08%)</title><rect x="715.7" y="499.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="718.7" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (453 samples, 0.14%)</title><rect x="716.7" y="547.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.7" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (444 samples, 0.13%)</title><rect x="716.7" y="531.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="719.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3,428 samples, 1.03%)</title><rect x="718.3" y="547.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (3,428 samples, 1.03%)</title><rect x="718.3" y="531.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,428 samples, 1.03%)</title><rect x="718.3" y="515.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (810 samples, 0.24%)</title><rect x="718.3" y="499.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (810 samples, 0.24%)</title><rect x="718.3" y="483.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.get$Lambda (810 samples, 0.24%)</title><rect x="718.3" y="467.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.3" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (795 samples, 0.24%)</title><rect x="718.3" y="451.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="721.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (751 samples, 0.23%)</title><rect x="721.2" y="499.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (751 samples, 0.23%)</title><rect x="721.2" y="483.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (751 samples, 0.23%)</title><rect x="721.2" y="467.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (751 samples, 0.23%)</title><rect x="721.2" y="451.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (751 samples, 0.23%)</title><rect x="721.2" y="435.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (751 samples, 0.23%)</title><rect x="721.2" y="419.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="724.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (751 samples, 0.23%)</title><rect x="721.2" y="403.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (751 samples, 0.23%)</title><rect x="721.2" y="387.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (678 samples, 0.20%)</title><rect x="721.2" y="371.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="724.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (73 samples, 0.02%)</title><rect x="723.6" y="371.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="726.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (852 samples, 0.26%)</title><rect x="723.8" y="499.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.8" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (852 samples, 0.26%)</title><rect x="723.8" y="483.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (387 samples, 0.12%)</title><rect x="723.8" y="467.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (387 samples, 0.12%)</title><rect x="723.8" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (373 samples, 0.11%)</title><rect x="723.8" y="435.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="726.8" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (465 samples, 0.14%)</title><rect x="725.2" y="467.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="728.2" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (447 samples, 0.13%)</title><rect x="725.2" y="451.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="728.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,015 samples, 0.31%)</title><rect x="726.9" y="499.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.9" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (997 samples, 0.30%)</title><rect x="726.9" y="483.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="729.9" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (536 samples, 0.16%)</title><rect x="730.5" y="547.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.5" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (527 samples, 0.16%)</title><rect x="730.5" y="531.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="733.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (12,635 samples, 3.81%)</title><rect x="732.4" y="595.0" width="44.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.4" y="606.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (653 samples, 0.20%)</title><rect x="732.4" y="579.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="735.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (908 samples, 0.27%)</title><rect x="734.7" y="579.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (908 samples, 0.27%)</title><rect x="734.7" y="563.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.7" y="574.0"></text>
</g>
<g>
<title>byte[] (893 samples, 0.27%)</title><rect x="734.7" y="547.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="737.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2,068 samples, 0.62%)</title><rect x="738.0" y="579.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,068 samples, 0.62%)</title><rect x="738.0" y="563.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (916 samples, 0.28%)</title><rect x="738.0" y="547.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="741.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,139 samples, 0.34%)</title><rect x="741.3" y="547.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.3" y="558.0"></text>
</g>
<g>
<title>byte[] (1,123 samples, 0.34%)</title><rect x="741.3" y="531.0" width="4.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="744.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (8,992 samples, 2.71%)</title><rect x="745.3" y="579.0" width="32.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.3" y="590.0">jd..</text>
</g>
<g>
<title>java/lang/String.substring (2,475 samples, 0.75%)</title><rect x="745.3" y="563.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,475 samples, 0.75%)</title><rect x="745.3" y="547.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,276 samples, 0.38%)</title><rect x="745.3" y="531.0" width="4.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="748.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,165 samples, 0.35%)</title><rect x="750.0" y="531.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.0" y="542.0"></text>
</g>
<g>
<title>byte[] (1,131 samples, 0.34%)</title><rect x="750.0" y="515.0" width="4.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="753.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1,205 samples, 0.36%)</title><rect x="754.1" y="563.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1,205 samples, 0.36%)</title><rect x="754.1" y="547.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.1" y="558.0"></text>
</g>
<g>
<title>byte[] (607 samples, 0.18%)</title><rect x="754.1" y="531.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="757.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (566 samples, 0.17%)</title><rect x="756.3" y="531.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="759.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (1,090 samples, 0.33%)</title><rect x="758.4" y="563.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1,090 samples, 0.33%)</title><rect x="758.4" y="547.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,090 samples, 0.33%)</title><rect x="758.4" y="531.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (546 samples, 0.16%)</title><rect x="758.4" y="515.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="761.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (529 samples, 0.16%)</title><rect x="760.4" y="515.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.4" y="526.0"></text>
</g>
<g>
<title>byte[] (514 samples, 0.15%)</title><rect x="760.4" y="499.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="763.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,874 samples, 0.56%)</title><rect x="762.3" y="563.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.3" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,874 samples, 0.56%)</title><rect x="762.3" y="547.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="765.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,874 samples, 0.56%)</title><rect x="762.3" y="531.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,874 samples, 0.56%)</title><rect x="762.3" y="515.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,874 samples, 0.56%)</title><rect x="762.3" y="499.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,790 samples, 0.54%)</title><rect x="762.3" y="483.0" width="6.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="765.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (84 samples, 0.03%)</title><rect x="768.6" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="771.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2,348 samples, 0.71%)</title><rect x="768.9" y="563.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.9" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (552 samples, 0.17%)</title><rect x="768.9" y="547.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (537 samples, 0.16%)</title><rect x="768.9" y="531.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="771.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1,013 samples, 0.31%)</title><rect x="770.9" y="547.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (562 samples, 0.17%)</title><rect x="770.9" y="531.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="773.9" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (451 samples, 0.14%)</title><rect x="772.9" y="531.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="775.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$209/11032278.apply (783 samples, 0.24%)</title><rect x="774.5" y="547.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (783 samples, 0.24%)</title><rect x="774.5" y="531.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.5" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (765 samples, 0.23%)</title><rect x="774.5" y="515.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="777.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (16,704 samples, 5.03%)</title><rect x="777.3" y="723.0" width="59.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.3" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (16,704 samples, 5.03%)</title><rect x="777.3" y="707.0" width="59.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.3" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (16,704 samples, 5.03%)</title><rect x="777.3" y="691.0" width="59.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.3" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (16,704 samples, 5.03%)</title><rect x="777.3" y="675.0" width="59.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.3" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (16,704 samples, 5.03%)</title><rect x="777.3" y="659.0" width="59.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.3" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (16,685 samples, 5.03%)</title><rect x="777.3" y="643.0" width="59.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.3" y="654.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (387 samples, 0.12%)</title><rect x="777.3" y="627.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (387 samples, 0.12%)</title><rect x="777.3" y="611.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$170/25985558.get$Lambda (213 samples, 0.06%)</title><rect x="777.3" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$170 (205 samples, 0.06%)</title><rect x="777.3" y="579.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="780.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$171/33271481.get$Lambda (174 samples, 0.05%)</title><rect x="778.1" y="595.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$171 (167 samples, 0.05%)</title><rect x="778.1" y="579.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="781.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (416 samples, 0.13%)</title><rect x="778.7" y="627.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="781.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (391 samples, 0.12%)</title><rect x="780.2" y="627.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (391 samples, 0.12%)</title><rect x="780.2" y="611.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (156 samples, 0.05%)</title><rect x="780.2" y="595.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="783.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (227 samples, 0.07%)</title><rect x="780.8" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (219 samples, 0.07%)</title><rect x="780.8" y="579.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="783.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (15,482 samples, 4.67%)</title><rect x="781.6" y="627.0" width="55.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="784.6" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (15,482 samples, 4.67%)</title><rect x="781.6" y="611.0" width="55.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.6" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/16991611.run (5,533 samples, 1.67%)</title><rect x="781.6" y="595.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (5,533 samples, 1.67%)</title><rect x="781.6" y="579.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (5,533 samples, 1.67%)</title><rect x="781.6" y="563.0" width="19.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,621 samples, 0.49%)</title><rect x="781.6" y="547.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,003 samples, 0.30%)</title><rect x="781.6" y="531.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.6" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (407 samples, 0.12%)</title><rect x="781.6" y="515.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.6" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (399 samples, 0.12%)</title><rect x="781.6" y="499.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="784.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (596 samples, 0.18%)</title><rect x="783.0" y="515.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.0" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (587 samples, 0.18%)</title><rect x="783.0" y="499.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="786.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (618 samples, 0.19%)</title><rect x="785.1" y="531.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (618 samples, 0.19%)</title><rect x="785.1" y="515.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (618 samples, 0.19%)</title><rect x="785.1" y="499.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/2512844.get (405 samples, 0.12%)</title><rect x="785.1" y="483.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="788.1" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (396 samples, 0.12%)</title><rect x="785.1" y="467.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="788.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (213 samples, 0.06%)</title><rect x="786.6" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (213 samples, 0.06%)</title><rect x="786.6" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.6" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (213 samples, 0.06%)</title><rect x="786.6" y="451.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.6" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (204 samples, 0.06%)</title><rect x="786.6" y="435.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="789.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3,912 samples, 1.18%)</title><rect x="787.3" y="547.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.3" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (256 samples, 0.08%)</title><rect x="787.3" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.3" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (256 samples, 0.08%)</title><rect x="787.3" y="515.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (256 samples, 0.08%)</title><rect x="787.3" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="790.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (256 samples, 0.08%)</title><rect x="787.3" y="483.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.3" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (247 samples, 0.07%)</title><rect x="787.3" y="467.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="790.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3,656 samples, 1.10%)</title><rect x="788.3" y="531.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1,519 samples, 0.46%)</title><rect x="788.3" y="515.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (270 samples, 0.08%)</title><rect x="788.3" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (270 samples, 0.08%)</title><rect x="788.3" y="483.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (270 samples, 0.08%)</title><rect x="788.3" y="467.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (270 samples, 0.08%)</title><rect x="788.3" y="451.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (270 samples, 0.08%)</title><rect x="788.3" y="435.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.3" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (261 samples, 0.08%)</title><rect x="788.3" y="419.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="791.3" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (249 samples, 0.08%)</title><rect x="789.2" y="499.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.2" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (249 samples, 0.08%)</title><rect x="789.2" y="483.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (249 samples, 0.08%)</title><rect x="789.2" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (249 samples, 0.08%)</title><rect x="789.2" y="451.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (249 samples, 0.08%)</title><rect x="789.2" y="435.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.2" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (239 samples, 0.07%)</title><rect x="789.2" y="419.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="792.2" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (442 samples, 0.13%)</title><rect x="790.1" y="499.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.1" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (442 samples, 0.13%)</title><rect x="790.1" y="483.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.1" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (432 samples, 0.13%)</title><rect x="790.1" y="467.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="793.1" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (406 samples, 0.12%)</title><rect x="791.7" y="499.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (406 samples, 0.12%)</title><rect x="791.7" y="483.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (398 samples, 0.12%)</title><rect x="791.7" y="467.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="794.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (133 samples, 0.04%)</title><rect x="793.1" y="499.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="796.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (749 samples, 0.23%)</title><rect x="793.7" y="515.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="796.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (213 samples, 0.06%)</title><rect x="793.7" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (213 samples, 0.06%)</title><rect x="793.7" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="796.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (213 samples, 0.06%)</title><rect x="793.7" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (202 samples, 0.06%)</title><rect x="793.7" y="451.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="796.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (356 samples, 0.11%)</title><rect x="794.4" y="499.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (356 samples, 0.11%)</title><rect x="794.4" y="483.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (345 samples, 0.10%)</title><rect x="794.4" y="467.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="797.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (180 samples, 0.05%)</title><rect x="795.7" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (169 samples, 0.05%)</title><rect x="795.7" y="483.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="798.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1,388 samples, 0.42%)</title><rect x="796.3" y="515.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (247 samples, 0.07%)</title><rect x="796.3" y="499.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="799.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,131 samples, 0.34%)</title><rect x="797.2" y="499.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="800.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (495 samples, 0.15%)</title><rect x="797.2" y="483.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (495 samples, 0.15%)</title><rect x="797.2" y="467.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (495 samples, 0.15%)</title><rect x="797.2" y="451.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (484 samples, 0.15%)</title><rect x="797.2" y="435.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="800.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (636 samples, 0.19%)</title><rect x="799.0" y="483.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (636 samples, 0.19%)</title><rect x="799.0" y="467.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (455 samples, 0.14%)</title><rect x="799.0" y="451.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="802.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (172 samples, 0.05%)</title><rect x="800.6" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (162 samples, 0.05%)</title><rect x="800.6" y="435.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="803.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (9,949 samples, 3.00%)</title><rect x="801.3" y="595.0" width="35.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="804.3" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (9,949 samples, 3.00%)</title><rect x="801.3" y="579.0" width="35.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.3" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (9,949 samples, 3.00%)</title><rect x="801.3" y="563.0" width="35.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.3" y="574.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9,736 samples, 2.93%)</title><rect x="801.3" y="547.0" width="34.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.3" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,736 samples, 2.93%)</title><rect x="801.3" y="531.0" width="34.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.3" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9,736 samples, 2.93%)</title><rect x="801.3" y="515.0" width="34.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.3" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9,736 samples, 2.93%)</title><rect x="801.3" y="499.0" width="34.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.3" y="510.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/27658891.accept (9,736 samples, 2.93%)</title><rect x="801.3" y="483.0" width="34.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.3" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (9,736 samples, 2.93%)</title><rect x="801.3" y="467.0" width="34.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.3" y="478.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9,736 samples, 2.93%)</title><rect x="801.3" y="451.0" width="34.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.3" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,736 samples, 2.93%)</title><rect x="801.3" y="435.0" width="34.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.3" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (730 samples, 0.22%)</title><rect x="801.3" y="419.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$230/28785153.apply (730 samples, 0.22%)</title><rect x="801.3" y="403.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (730 samples, 0.22%)</title><rect x="801.3" y="387.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (694 samples, 0.21%)</title><rect x="801.3" y="371.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="804.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9,006 samples, 2.71%)</title><rect x="803.8" y="419.0" width="32.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.8" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9,006 samples, 2.71%)</title><rect x="803.8" y="403.0" width="32.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.8" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9,006 samples, 2.71%)</title><rect x="803.8" y="387.0" width="32.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="806.8" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (9,006 samples, 2.71%)</title><rect x="803.8" y="371.0" width="32.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.8" y="382.0">ja..</text>
</g>
<g>
<title>java.lang.Thread (917 samples, 0.28%)</title><rect x="803.8" y="355.0" width="3.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="806.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Thread (4,540 samples, 1.37%)</title><rect x="807.1" y="355.0" width="16.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="810.1" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (3,549 samples, 1.07%)</title><rect x="823.3" y="355.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (347 samples, 0.10%)</title><rect x="823.3" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.3" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (347 samples, 0.10%)</title><rect x="823.3" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.3" y="334.0"></text>
</g>
<g>
<title>byte[] (342 samples, 0.10%)</title><rect x="823.3" y="307.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="826.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,281 samples, 0.39%)</title><rect x="824.5" y="339.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,281 samples, 0.39%)</title><rect x="824.5" y="323.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (336 samples, 0.10%)</title><rect x="824.5" y="307.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="827.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (940 samples, 0.28%)</title><rect x="825.7" y="307.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.7" y="318.0"></text>
</g>
<g>
<title>byte[] (935 samples, 0.28%)</title><rect x="825.7" y="291.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="828.7" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1,921 samples, 0.58%)</title><rect x="829.0" y="339.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="832.0" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1,921 samples, 0.58%)</title><rect x="829.0" y="323.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.0" y="334.0"></text>
</g>
<g>
<title>java.lang.Object (172 samples, 0.05%)</title><rect x="829.0" y="307.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="832.0" y="318.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (1,744 samples, 0.53%)</title><rect x="829.7" y="307.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.7" y="318.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (225 samples, 0.07%)</title><rect x="829.7" y="291.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.7" y="302.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (225 samples, 0.07%)</title><rect x="829.7" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.7" y="286.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (224 samples, 0.07%)</title><rect x="829.7" y="259.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="832.7" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (1,519 samples, 0.46%)</title><rect x="830.5" y="291.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.5" y="302.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (840 samples, 0.25%)</title><rect x="830.5" y="275.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="833.5" y="286.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (668 samples, 0.20%)</title><rect x="833.5" y="275.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="836.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (213 samples, 0.06%)</title><rect x="835.9" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.9" y="558.0"></text>
</g>
<g>
<title>byte[] (205 samples, 0.06%)</title><rect x="835.9" y="531.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="838.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$108/20693185.run (37,930 samples, 11.43%)</title><rect x="836.7" y="755.0" width="134.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.7" y="766.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$2 (37,930 samples, 11.43%)</title><rect x="836.7" y="739.0" width="134.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.7" y="750.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6,135 samples, 1.85%)</title><rect x="836.7" y="723.0" width="21.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.7" y="734.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4,316 samples, 1.30%)</title><rect x="836.7" y="707.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="839.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,087 samples, 0.63%)</title><rect x="836.7" y="691.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,087 samples, 0.63%)</title><rect x="836.7" y="675.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.7" y="686.0"></text>
</g>
<g>
<title>byte[] (1,297 samples, 0.39%)</title><rect x="836.7" y="659.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="839.7" y="670.0"></text>
</g>
<g>
<title>byte[] (790 samples, 0.24%)</title><rect x="841.3" y="659.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="844.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,229 samples, 0.67%)</title><rect x="844.1" y="691.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.1" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,030 samples, 0.31%)</title><rect x="844.1" y="675.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="847.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,189 samples, 0.36%)</title><rect x="847.8" y="675.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,189 samples, 0.36%)</title><rect x="847.8" y="659.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.8" y="670.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (1,189 samples, 0.36%)</title><rect x="847.8" y="643.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,189 samples, 0.36%)</title><rect x="847.8" y="627.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.8" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,178 samples, 0.36%)</title><rect x="847.8" y="611.0" width="4.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="850.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,819 samples, 0.55%)</title><rect x="852.0" y="707.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,819 samples, 0.55%)</title><rect x="852.0" y="691.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,819 samples, 0.55%)</title><rect x="852.0" y="675.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (967 samples, 0.29%)</title><rect x="852.0" y="659.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="855.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (844 samples, 0.25%)</title><rect x="855.5" y="659.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.5" y="670.0"></text>
</g>
<g>
<title>byte[] (837 samples, 0.25%)</title><rect x="855.5" y="643.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="858.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$106/10655556.act (31,795 samples, 9.58%)</title><rect x="858.5" y="723.0" width="113.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.5" y="734.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$0 (31,795 samples, 9.58%)</title><rect x="858.5" y="707.0" width="113.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.5" y="718.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.processEntityRequest (31,795 samples, 9.58%)</title><rect x="858.5" y="691.0" width="113.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.5" y="702.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorPut.processEntityDirectly (4,304 samples, 1.30%)</title><rect x="858.5" y="675.0" width="15.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,002 samples, 0.30%)</title><rect x="858.5" y="659.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,002 samples, 0.30%)</title><rect x="858.5" y="643.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,002 samples, 0.30%)</title><rect x="858.5" y="627.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.5" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,002 samples, 0.30%)</title><rect x="858.5" y="611.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="861.5" y="622.0"></text>
</g>
<g>
<title>byte[] (1,002 samples, 0.30%)</title><rect x="858.5" y="595.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="861.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,281 samples, 0.39%)</title><rect x="862.1" y="659.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,281 samples, 0.39%)</title><rect x="862.1" y="643.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.1" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,273 samples, 0.38%)</title><rect x="862.1" y="627.0" width="4.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="865.1" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Response (849 samples, 0.26%)</title><rect x="866.6" y="659.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="869.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (922 samples, 0.28%)</title><rect x="869.7" y="659.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="872.7" y="670.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.02%)</title><rect x="869.7" y="643.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="872.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (767 samples, 0.23%)</title><rect x="870.0" y="643.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="873.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/RocksDAO.upsertWithTimestamp (239 samples, 0.07%)</title><rect x="873.0" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/ByteBufferUtils.restoreByteArray (132 samples, 0.04%)</title><rect x="873.0" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/ByteBufferUtils.getByteArray (132 samples, 0.04%)</title><rect x="873.0" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.0" y="638.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.04%)</title><rect x="873.0" y="611.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="876.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/DataWithTimestamp.toBytes (107 samples, 0.03%)</title><rect x="873.4" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (107 samples, 0.03%)</title><rect x="873.4" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (107 samples, 0.03%)</title><rect x="873.4" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.4" y="622.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.03%)</title><rect x="873.4" y="595.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="876.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorPut.processEntityRequest (27,491 samples, 8.28%)</title><rect x="873.8" y="675.0" width="97.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.8" y="686.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor.processEntityRequestOnClusterEmptyResult (27,491 samples, 8.28%)</title><rect x="873.8" y="659.0" width="97.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.8" y="670.0">ru/mail/pol..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (150 samples, 0.05%)</title><rect x="874.0" y="643.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="877.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (441 samples, 0.13%)</title><rect x="874.6" y="643.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (441 samples, 0.13%)</title><rect x="874.6" y="627.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="877.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor$$Lambda$240/1239265.get$Lambda (347 samples, 0.10%)</title><rect x="874.6" y="611.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.6" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dogm.processors.SimpleRequestProcessor$$Lambda$240 (340 samples, 0.10%)</title><rect x="874.6" y="595.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="877.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor$$Lambda$241/21780503.get$Lambda (94 samples, 0.03%)</title><rect x="875.8" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="878.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dogm.processors.SimpleRequestProcessor$$Lambda$241 (91 samples, 0.03%)</title><rect x="875.8" y="595.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="878.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/10950438.linkToTargetMethod (442 samples, 0.13%)</title><rect x="876.2" y="643.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="879.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/17275614.invokeStatic (442 samples, 0.13%)</title><rect x="876.2" y="627.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor$$Lambda$235/3791258.get$Lambda (442 samples, 0.13%)</title><rect x="876.2" y="611.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="879.2" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dogm.processors.SimpleRequestProcessor$$Lambda$235 (429 samples, 0.13%)</title><rect x="876.2" y="595.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="879.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (681 samples, 0.21%)</title><rect x="877.7" y="643.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="880.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (681 samples, 0.21%)</title><rect x="877.7" y="627.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (405 samples, 0.12%)</title><rect x="877.7" y="611.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="880.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (119 samples, 0.04%)</title><rect x="879.2" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="882.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (116 samples, 0.03%)</title><rect x="879.2" y="595.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="882.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.04%)</title><rect x="879.6" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="882.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (149 samples, 0.04%)</title><rect x="879.6" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (144 samples, 0.04%)</title><rect x="879.6" y="579.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="882.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (163 samples, 0.05%)</title><rect x="880.2" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.timedGet (163 samples, 0.05%)</title><rect x="880.2" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (159 samples, 0.05%)</title><rect x="880.2" y="611.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="883.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (2,470 samples, 0.74%)</title><rect x="880.7" y="643.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="883.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (2,470 samples, 0.74%)</title><rect x="880.7" y="627.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (84 samples, 0.03%)</title><rect x="880.7" y="611.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="883.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (2,313 samples, 0.70%)</title><rect x="881.3" y="611.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Thread (321 samples, 0.10%)</title><rect x="881.3" y="595.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="884.3" y="606.0"></text>
</g>
<g>
<title>java.lang.Thread (1,007 samples, 0.30%)</title><rect x="882.4" y="595.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="885.4" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (985 samples, 0.30%)</title><rect x="886.0" y="595.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (103 samples, 0.03%)</title><rect x="886.0" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (103 samples, 0.03%)</title><rect x="886.0" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.0" y="574.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.03%)</title><rect x="886.0" y="547.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="889.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (221 samples, 0.07%)</title><rect x="886.4" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (221 samples, 0.07%)</title><rect x="886.4" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (103 samples, 0.03%)</title><rect x="886.4" y="547.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="889.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (115 samples, 0.03%)</title><rect x="886.8" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.8" y="558.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.03%)</title><rect x="886.8" y="531.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="889.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (661 samples, 0.20%)</title><rect x="887.2" y="579.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (661 samples, 0.20%)</title><rect x="887.2" y="563.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.2" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (615 samples, 0.19%)</title><rect x="887.3" y="547.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.3" y="558.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (218 samples, 0.07%)</title><rect x="887.3" y="531.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.3" y="542.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (218 samples, 0.07%)</title><rect x="887.3" y="515.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.3" y="526.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (216 samples, 0.07%)</title><rect x="887.3" y="499.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="890.3" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (397 samples, 0.12%)</title><rect x="888.1" y="531.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="891.1" y="542.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (276 samples, 0.08%)</title><rect x="888.1" y="515.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="891.1" y="526.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (115 samples, 0.03%)</title><rect x="889.1" y="515.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="892.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (718 samples, 0.22%)</title><rect x="889.5" y="643.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (718 samples, 0.22%)</title><rect x="889.5" y="627.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (414 samples, 0.12%)</title><rect x="889.5" y="611.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="892.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (137 samples, 0.04%)</title><rect x="891.0" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (134 samples, 0.04%)</title><rect x="891.0" y="595.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="894.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (158 samples, 0.05%)</title><rect x="891.5" y="611.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (158 samples, 0.05%)</title><rect x="891.5" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (153 samples, 0.05%)</title><rect x="891.5" y="579.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="894.5" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (357 samples, 0.11%)</title><rect x="892.1" y="643.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="895.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (322 samples, 0.10%)</title><rect x="893.4" y="643.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.4" y="654.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.04%)</title><rect x="893.4" y="627.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="896.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String[] (112 samples, 0.03%)</title><rect x="893.8" y="627.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="896.8" y="638.0"></text>
</g>
<g>
<title>java.lang.String (73 samples, 0.02%)</title><rect x="894.2" y="627.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="897.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/BasicTopology.nodesFor (179 samples, 0.05%)</title><rect x="894.5" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.5" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (74 samples, 0.02%)</title><rect x="894.5" y="627.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="897.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (100 samples, 0.03%)</title><rect x="894.8" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.8" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.03%)</title><rect x="894.8" y="611.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="897.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor.processEntityRemotely (21,498 samples, 6.48%)</title><rect x="895.1" y="643.0" width="76.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.1" y="654.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (344 samples, 0.10%)</title><rect x="895.1" y="627.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (344 samples, 0.10%)</title><rect x="895.1" y="611.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (179 samples, 0.05%)</title><rect x="895.1" y="595.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="898.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (160 samples, 0.05%)</title><rect x="895.8" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (160 samples, 0.05%)</title><rect x="895.8" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (155 samples, 0.05%)</title><rect x="895.8" y="563.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="898.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/Bridges.sendRequestTo (21,154 samples, 6.38%)</title><rect x="896.4" y="627.0" width="75.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.4" y="638.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (561 samples, 0.17%)</title><rect x="896.4" y="611.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/13107155.invoke (561 samples, 0.17%)</title><rect x="896.4" y="595.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (561 samples, 0.17%)</title><rect x="896.4" y="579.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (178 samples, 0.05%)</title><rect x="896.4" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (172 samples, 0.05%)</title><rect x="896.4" y="547.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="899.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (383 samples, 0.12%)</title><rect x="897.0" y="563.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (383 samples, 0.12%)</title><rect x="897.0" y="547.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.0" y="558.0"></text>
</g>
<g>
<title>byte[] (377 samples, 0.11%)</title><rect x="897.0" y="531.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="900.0" y="542.0"></text>
</g>
<g>
<title>java/net/URI.create (2,235 samples, 0.67%)</title><rect x="898.4" y="611.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.4" y="622.0"></text>
</g>
<g>
<title>java.net.URI (456 samples, 0.14%)</title><rect x="898.4" y="595.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="901.4" y="606.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,774 samples, 0.53%)</title><rect x="900.0" y="595.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.0" y="606.0"></text>
</g>
<g>
<title>java.net.URI$Parser (155 samples, 0.05%)</title><rect x="900.0" y="579.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="903.0" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,614 samples, 0.49%)</title><rect x="900.6" y="579.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="903.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (248 samples, 0.07%)</title><rect x="900.6" y="563.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="903.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (248 samples, 0.07%)</title><rect x="900.6" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="903.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (143 samples, 0.04%)</title><rect x="900.6" y="531.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="903.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (98 samples, 0.03%)</title><rect x="901.1" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.1" y="542.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.03%)</title><rect x="901.1" y="515.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="904.1" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,366 samples, 0.41%)</title><rect x="901.4" y="563.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (718 samples, 0.22%)</title><rect x="901.4" y="547.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (718 samples, 0.22%)</title><rect x="901.4" y="531.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (327 samples, 0.10%)</title><rect x="901.4" y="515.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="904.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (373 samples, 0.11%)</title><rect x="902.7" y="515.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.7" y="526.0"></text>
</g>
<g>
<title>byte[] (354 samples, 0.11%)</title><rect x="902.7" y="499.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="905.7" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (648 samples, 0.20%)</title><rect x="904.0" y="547.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (344 samples, 0.10%)</title><rect x="904.0" y="531.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (344 samples, 0.10%)</title><rect x="904.0" y="515.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (145 samples, 0.04%)</title><rect x="904.0" y="499.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="907.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (191 samples, 0.06%)</title><rect x="904.5" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.5" y="510.0"></text>
</g>
<g>
<title>byte[] (183 samples, 0.06%)</title><rect x="904.5" y="483.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="907.5" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (304 samples, 0.09%)</title><rect x="905.2" y="531.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (304 samples, 0.09%)</title><rect x="905.2" y="515.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (304 samples, 0.09%)</title><rect x="905.2" y="499.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (304 samples, 0.09%)</title><rect x="905.2" y="483.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (148 samples, 0.04%)</title><rect x="905.2" y="467.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="908.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (148 samples, 0.04%)</title><rect x="905.8" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.8" y="478.0"></text>
</g>
<g>
<title>byte[] (139 samples, 0.04%)</title><rect x="905.8" y="451.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="908.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (241 samples, 0.07%)</title><rect x="906.3" y="611.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (229 samples, 0.07%)</title><rect x="906.3" y="595.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="909.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (786 samples, 0.24%)</title><rect x="907.2" y="611.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (340 samples, 0.10%)</title><rect x="907.2" y="595.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="910.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (434 samples, 0.13%)</title><rect x="908.4" y="595.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (115 samples, 0.03%)</title><rect x="908.4" y="579.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="911.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (312 samples, 0.09%)</title><rect x="908.8" y="579.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.8" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (305 samples, 0.09%)</title><rect x="908.8" y="563.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="911.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (13,584 samples, 4.09%)</title><rect x="910.0" y="611.0" width="48.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.0" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (13,584 samples, 4.09%)</title><rect x="910.0" y="595.0" width="48.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.0" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (13,584 samples, 4.09%)</title><rect x="910.0" y="579.0" width="48.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="913.0" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (13,584 samples, 4.09%)</title><rect x="910.0" y="563.0" width="48.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.0" y="574.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (113 samples, 0.03%)</title><rect x="910.0" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (113 samples, 0.03%)</title><rect x="910.0" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$125/6127307.get$Lambda (113 samples, 0.03%)</title><rect x="910.0" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$125 (109 samples, 0.03%)</title><rect x="910.0" y="499.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="913.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (350 samples, 0.11%)</title><rect x="910.4" y="547.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (350 samples, 0.11%)</title><rect x="910.4" y="531.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="913.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (192 samples, 0.06%)</title><rect x="910.4" y="515.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="913.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.05%)</title><rect x="911.1" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.05%)</title><rect x="911.1" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (149 samples, 0.04%)</title><rect x="911.1" y="483.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="914.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (386 samples, 0.12%)</title><rect x="911.6" y="547.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (386 samples, 0.12%)</title><rect x="911.6" y="531.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (199 samples, 0.06%)</title><rect x="911.6" y="515.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="914.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (182 samples, 0.05%)</title><rect x="912.3" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (182 samples, 0.05%)</title><rect x="912.3" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="915.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (177 samples, 0.05%)</title><rect x="912.3" y="483.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="915.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (350 samples, 0.11%)</title><rect x="913.0" y="547.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="916.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (646 samples, 0.19%)</title><rect x="914.3" y="547.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="917.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (7,102 samples, 2.14%)</title><rect x="916.6" y="547.0" width="25.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="919.6" y="558.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (704 samples, 0.21%)</title><rect x="916.6" y="531.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.6" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (581 samples, 0.18%)</title><rect x="916.6" y="515.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.6" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (246 samples, 0.07%)</title><rect x="916.6" y="499.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.6" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (231 samples, 0.07%)</title><rect x="916.6" y="483.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="919.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (335 samples, 0.10%)</title><rect x="917.5" y="499.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.5" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (321 samples, 0.10%)</title><rect x="917.5" y="483.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="920.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (123 samples, 0.04%)</title><rect x="918.6" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (123 samples, 0.04%)</title><rect x="918.6" y="499.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (123 samples, 0.04%)</title><rect x="918.6" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="921.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/2512844.get (123 samples, 0.04%)</title><rect x="918.6" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.6" y="478.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (110 samples, 0.03%)</title><rect x="918.6" y="451.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="921.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,537 samples, 0.76%)</title><rect x="919.1" y="531.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,537 samples, 0.76%)</title><rect x="919.1" y="515.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.1" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (106 samples, 0.03%)</title><rect x="919.1" y="499.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="922.1" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (161 samples, 0.05%)</title><rect x="919.5" y="499.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="922.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (291 samples, 0.09%)</title><rect x="920.1" y="499.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="923.1" y="510.0"></text>
</g>
<g>
<title>java.util.TreeSet (95 samples, 0.03%)</title><rect x="921.2" y="499.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="924.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (161 samples, 0.05%)</title><rect x="921.6" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (161 samples, 0.05%)</title><rect x="921.6" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.get$Lambda (161 samples, 0.05%)</title><rect x="921.6" y="467.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.6" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$109 (152 samples, 0.05%)</title><rect x="921.6" y="451.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="924.6" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,164 samples, 0.35%)</title><rect x="922.1" y="499.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="925.1" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,164 samples, 0.35%)</title><rect x="922.1" y="483.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="925.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (1,164 samples, 0.35%)</title><rect x="922.1" y="467.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="925.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,164 samples, 0.35%)</title><rect x="922.1" y="451.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (578 samples, 0.17%)</title><rect x="922.1" y="435.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="925.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (406 samples, 0.12%)</title><rect x="922.1" y="419.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (406 samples, 0.12%)</title><rect x="922.1" y="403.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (406 samples, 0.12%)</title><rect x="922.1" y="387.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (406 samples, 0.12%)</title><rect x="922.1" y="371.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="925.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (406 samples, 0.12%)</title><rect x="922.1" y="355.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (406 samples, 0.12%)</title><rect x="922.1" y="339.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="925.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (406 samples, 0.12%)</title><rect x="922.1" y="323.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.1" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (398 samples, 0.12%)</title><rect x="922.1" y="307.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="925.1" y="318.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (172 samples, 0.05%)</title><rect x="923.6" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="926.6" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (165 samples, 0.05%)</title><rect x="923.6" y="403.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="926.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (178 samples, 0.05%)</title><rect x="924.2" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="927.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (178 samples, 0.05%)</title><rect x="924.2" y="419.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.get$Lambda (178 samples, 0.05%)</title><rect x="924.2" y="403.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="927.2" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (169 samples, 0.05%)</title><rect x="924.2" y="387.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="927.2" y="398.0"></text>
</g>
<g>
<title>java/util/List.copyOf (213 samples, 0.06%)</title><rect x="924.8" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="927.8" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (213 samples, 0.06%)</title><rect x="924.8" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="927.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (113 samples, 0.03%)</title><rect x="924.8" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="927.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (113 samples, 0.03%)</title><rect x="924.8" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (105 samples, 0.03%)</title><rect x="924.8" y="371.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="927.8" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (100 samples, 0.03%)</title><rect x="925.2" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="928.2" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (92 samples, 0.03%)</title><rect x="925.2" y="387.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="928.2" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (195 samples, 0.06%)</title><rect x="925.6" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="928.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (186 samples, 0.06%)</title><rect x="925.6" y="419.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="928.6" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (183 samples, 0.06%)</title><rect x="926.3" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.3" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (173 samples, 0.05%)</title><rect x="926.3" y="483.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="929.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (333 samples, 0.10%)</title><rect x="926.9" y="499.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.9" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (322 samples, 0.10%)</title><rect x="926.9" y="483.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="929.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (87 samples, 0.03%)</title><rect x="928.1" y="531.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="931.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (2,826 samples, 0.85%)</title><rect x="928.4" y="531.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="931.4" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (2,826 samples, 0.85%)</title><rect x="928.4" y="515.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="931.4" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2,646 samples, 0.80%)</title><rect x="928.4" y="499.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="931.4" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,646 samples, 0.80%)</title><rect x="928.4" y="483.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.4" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2,646 samples, 0.80%)</title><rect x="928.4" y="467.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.4" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (516 samples, 0.16%)</title><rect x="928.4" y="451.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="931.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (775 samples, 0.23%)</title><rect x="930.4" y="451.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.4" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (775 samples, 0.23%)</title><rect x="930.4" y="435.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="933.4" y="446.0"></text>
</g>
<g>
<title>byte[] (741 samples, 0.22%)</title><rect x="930.4" y="419.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="933.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,325 samples, 0.40%)</title><rect x="933.1" y="451.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="936.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,325 samples, 0.40%)</title><rect x="933.1" y="435.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="936.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (555 samples, 0.17%)</title><rect x="933.1" y="419.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="936.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (742 samples, 0.22%)</title><rect x="935.2" y="419.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="938.2" y="430.0"></text>
</g>
<g>
<title>byte[] (715 samples, 0.22%)</title><rect x="935.2" y="403.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="938.2" y="414.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (168 samples, 0.05%)</title><rect x="937.9" y="499.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="940.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (370 samples, 0.11%)</title><rect x="938.5" y="531.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="941.5" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (357 samples, 0.11%)</title><rect x="938.5" y="515.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="941.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (568 samples, 0.17%)</title><rect x="939.8" y="531.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.8" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (176 samples, 0.05%)</title><rect x="939.8" y="515.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="942.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (120 samples, 0.04%)</title><rect x="940.5" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.5" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (109 samples, 0.03%)</title><rect x="940.5" y="499.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="943.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (261 samples, 0.08%)</title><rect x="940.9" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.9" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (249 samples, 0.08%)</title><rect x="940.9" y="499.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="943.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (3,058 samples, 0.92%)</title><rect x="941.8" y="547.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="944.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (104 samples, 0.03%)</title><rect x="941.8" y="531.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="944.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (470 samples, 0.14%)</title><rect x="942.2" y="531.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="945.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (110 samples, 0.03%)</title><rect x="943.9" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="946.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (104 samples, 0.03%)</title><rect x="943.9" y="515.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="946.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2,359 samples, 0.71%)</title><rect x="944.3" y="531.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2,359 samples, 0.71%)</title><rect x="944.3" y="515.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="947.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Class[] (270 samples, 0.08%)</title><rect x="944.3" y="499.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="947.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (235 samples, 0.07%)</title><rect x="945.3" y="499.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="948.3" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList (154 samples, 0.05%)</title><rect x="946.2" y="499.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="949.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (969 samples, 0.29%)</title><rect x="946.8" y="499.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="949.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (969 samples, 0.29%)</title><rect x="946.8" y="483.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.8" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (969 samples, 0.29%)</title><rect x="946.8" y="467.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.8" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (969 samples, 0.29%)</title><rect x="946.8" y="451.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.8" y="462.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (958 samples, 0.29%)</title><rect x="946.8" y="435.0" width="3.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="949.8" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (367 samples, 0.11%)</title><rect x="950.2" y="499.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (367 samples, 0.11%)</title><rect x="950.2" y="483.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (252 samples, 0.08%)</title><rect x="950.2" y="467.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (246 samples, 0.07%)</title><rect x="950.2" y="451.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="953.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (115 samples, 0.03%)</title><rect x="951.1" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="954.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (110 samples, 0.03%)</title><rect x="951.1" y="451.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="954.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (335 samples, 0.10%)</title><rect x="951.5" y="499.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="954.5" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (335 samples, 0.10%)</title><rect x="951.5" y="483.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.5" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (325 samples, 0.10%)</title><rect x="951.5" y="467.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="954.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,562 samples, 0.47%)</title><rect x="952.7" y="547.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="955.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (405 samples, 0.12%)</title><rect x="952.7" y="531.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="955.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (173 samples, 0.05%)</title><rect x="952.7" y="515.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="955.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (226 samples, 0.07%)</title><rect x="953.3" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="956.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (226 samples, 0.07%)</title><rect x="953.3" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="956.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (226 samples, 0.07%)</title><rect x="953.3" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (226 samples, 0.07%)</title><rect x="953.3" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (220 samples, 0.07%)</title><rect x="953.3" y="451.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="956.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (153 samples, 0.05%)</title><rect x="954.1" y="531.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="957.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (997 samples, 0.30%)</title><rect x="954.7" y="531.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="957.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (247 samples, 0.07%)</title><rect x="954.7" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (247 samples, 0.07%)</title><rect x="954.7" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$120/18004023.get$Lambda (112 samples, 0.03%)</title><rect x="954.7" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="957.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$120 (106 samples, 0.03%)</title><rect x="954.7" y="467.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="957.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/33260527.get$Lambda (135 samples, 0.04%)</title><rect x="955.1" y="483.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="958.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$122 (129 samples, 0.04%)</title><rect x="955.1" y="467.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="958.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (750 samples, 0.23%)</title><rect x="955.6" y="515.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="958.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (750 samples, 0.23%)</title><rect x="955.6" y="499.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (411 samples, 0.12%)</title><rect x="955.6" y="483.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="958.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (324 samples, 0.10%)</title><rect x="957.1" y="483.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="960.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (324 samples, 0.10%)</title><rect x="957.1" y="467.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="960.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (312 samples, 0.09%)</title><rect x="957.1" y="451.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="960.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (3,203 samples, 0.97%)</title><rect x="958.3" y="611.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (283 samples, 0.09%)</title><rect x="958.3" y="595.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="961.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2,911 samples, 0.88%)</title><rect x="959.3" y="595.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="962.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,664 samples, 0.80%)</title><rect x="959.3" y="579.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,664 samples, 0.80%)</title><rect x="959.3" y="563.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="962.3" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (107 samples, 0.03%)</title><rect x="959.3" y="547.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="962.3" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (184 samples, 0.06%)</title><rect x="959.7" y="547.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="962.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (401 samples, 0.12%)</title><rect x="960.4" y="547.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="963.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (125 samples, 0.04%)</title><rect x="961.9" y="547.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="964.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (192 samples, 0.06%)</title><rect x="962.3" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (192 samples, 0.06%)</title><rect x="962.3" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="965.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.get$Lambda (192 samples, 0.06%)</title><rect x="962.3" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.3" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$109 (184 samples, 0.06%)</title><rect x="962.3" y="499.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="965.3" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (157 samples, 0.05%)</title><rect x="963.0" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.0" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (148 samples, 0.04%)</title><rect x="963.0" y="531.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="966.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,030 samples, 0.31%)</title><rect x="963.6" y="547.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (1,030 samples, 0.31%)</title><rect x="963.6" y="531.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,030 samples, 0.31%)</title><rect x="963.6" y="515.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (172 samples, 0.05%)</title><rect x="963.6" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (172 samples, 0.05%)</title><rect x="963.6" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="966.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.get$Lambda (172 samples, 0.05%)</title><rect x="963.6" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.6" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (162 samples, 0.05%)</title><rect x="963.6" y="451.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="966.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (414 samples, 0.12%)</title><rect x="964.2" y="499.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (414 samples, 0.12%)</title><rect x="964.2" y="483.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (414 samples, 0.12%)</title><rect x="964.2" y="467.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (414 samples, 0.12%)</title><rect x="964.2" y="451.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (414 samples, 0.12%)</title><rect x="964.2" y="435.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (414 samples, 0.12%)</title><rect x="964.2" y="419.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (414 samples, 0.12%)</title><rect x="964.2" y="403.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (414 samples, 0.12%)</title><rect x="964.2" y="387.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (404 samples, 0.12%)</title><rect x="964.2" y="371.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="967.2" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (240 samples, 0.07%)</title><rect x="965.7" y="499.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.7" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (240 samples, 0.07%)</title><rect x="965.7" y="483.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="968.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (122 samples, 0.04%)</title><rect x="965.7" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (122 samples, 0.04%)</title><rect x="965.7" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (111 samples, 0.03%)</title><rect x="965.7" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="968.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (118 samples, 0.04%)</title><rect x="966.1" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.1" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (110 samples, 0.03%)</title><rect x="966.1" y="451.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="969.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (204 samples, 0.06%)</title><rect x="966.5" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (196 samples, 0.06%)</title><rect x="966.5" y="483.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="969.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (432 samples, 0.13%)</title><rect x="967.2" y="547.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (423 samples, 0.13%)</title><rect x="967.2" y="531.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="970.2" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (247 samples, 0.07%)</title><rect x="968.8" y="579.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.8" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.of (247 samples, 0.07%)</title><rect x="968.8" y="563.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.8" y="574.0"></text>
</g>
<g>
<title>java.util.Optional (228 samples, 0.07%)</title><rect x="968.8" y="547.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="971.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (544 samples, 0.16%)</title><rect x="969.7" y="611.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="972.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (544 samples, 0.16%)</title><rect x="969.7" y="595.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (544 samples, 0.16%)</title><rect x="969.7" y="579.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.7" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (180 samples, 0.05%)</title><rect x="969.7" y="563.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="972.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (117 samples, 0.04%)</title><rect x="970.3" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="973.3" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (108 samples, 0.03%)</title><rect x="970.3" y="547.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="973.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (238 samples, 0.07%)</title><rect x="970.7" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.7" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (229 samples, 0.07%)</title><rect x="970.7" y="547.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="973.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (19,367 samples, 5.84%)</title><rect x="971.6" y="803.0" width="68.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.6" y="814.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (409 samples, 0.12%)</title><rect x="971.6" y="787.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (409 samples, 0.12%)</title><rect x="971.6" y="771.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$185/16393933.get$Lambda (150 samples, 0.05%)</title><rect x="971.6" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.6" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$185 (143 samples, 0.04%)</title><rect x="971.6" y="739.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="974.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$193/33036464.get$Lambda (259 samples, 0.08%)</title><rect x="972.1" y="755.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.1" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$193 (250 samples, 0.08%)</title><rect x="972.1" y="739.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="975.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/4024442.linkToTargetMethod (554 samples, 0.17%)</title><rect x="973.0" y="787.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="976.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (554 samples, 0.17%)</title><rect x="973.0" y="771.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="976.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/32074257.get$Lambda (554 samples, 0.17%)</title><rect x="973.0" y="755.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.0" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$187 (546 samples, 0.16%)</title><rect x="973.0" y="739.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="976.0" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3,199 samples, 0.96%)</title><rect x="975.0" y="787.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="978.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1151031.accept (2,507 samples, 0.76%)</title><rect x="975.0" y="771.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="978.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (2,507 samples, 0.76%)</title><rect x="975.0" y="755.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="978.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (2,507 samples, 0.76%)</title><rect x="975.0" y="739.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="978.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (2,507 samples, 0.76%)</title><rect x="975.0" y="723.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (2,507 samples, 0.76%)</title><rect x="975.0" y="707.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (2,507 samples, 0.76%)</title><rect x="975.0" y="691.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="978.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,507 samples, 0.76%)</title><rect x="975.0" y="675.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="978.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,507 samples, 0.76%)</title><rect x="975.0" y="659.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="978.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,507 samples, 0.76%)</title><rect x="975.0" y="643.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="978.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2,507 samples, 0.76%)</title><rect x="975.0" y="627.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="978.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/19216263.run (2,507 samples, 0.76%)</title><rect x="975.0" y="611.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2,507 samples, 0.76%)</title><rect x="975.0" y="595.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="978.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,083 samples, 0.33%)</title><rect x="975.0" y="579.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="978.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,083 samples, 0.33%)</title><rect x="975.0" y="563.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="978.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1,083 samples, 0.33%)</title><rect x="975.0" y="547.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="978.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (474 samples, 0.14%)</title><rect x="975.0" y="531.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="978.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (474 samples, 0.14%)</title><rect x="975.0" y="515.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="978.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (474 samples, 0.14%)</title><rect x="975.0" y="499.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="978.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (474 samples, 0.14%)</title><rect x="975.0" y="483.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="978.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (465 samples, 0.14%)</title><rect x="975.0" y="467.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="978.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (609 samples, 0.18%)</title><rect x="976.7" y="531.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="979.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (609 samples, 0.18%)</title><rect x="976.7" y="515.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (609 samples, 0.18%)</title><rect x="976.7" y="499.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="979.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (609 samples, 0.18%)</title><rect x="976.7" y="483.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (609 samples, 0.18%)</title><rect x="976.7" y="467.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="979.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (609 samples, 0.18%)</title><rect x="976.7" y="451.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="979.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (609 samples, 0.18%)</title><rect x="976.7" y="435.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="979.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (601 samples, 0.18%)</title><rect x="976.7" y="419.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="979.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (184 samples, 0.06%)</title><rect x="978.9" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (184 samples, 0.06%)</title><rect x="978.9" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="981.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (184 samples, 0.06%)</title><rect x="978.9" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197/13890655.get$Lambda (184 samples, 0.06%)</title><rect x="978.9" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="981.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197 (176 samples, 0.05%)</title><rect x="978.9" y="515.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="981.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1,240 samples, 0.37%)</title><rect x="979.5" y="579.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="982.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1,087 samples, 0.33%)</title><rect x="979.5" y="563.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="982.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (759 samples, 0.23%)</title><rect x="979.5" y="547.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="982.5" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (751 samples, 0.23%)</title><rect x="979.5" y="531.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="982.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (328 samples, 0.10%)</title><rect x="982.2" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="985.2" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (328 samples, 0.10%)</title><rect x="982.2" y="531.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="985.2" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (320 samples, 0.10%)</title><rect x="982.2" y="515.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="985.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (153 samples, 0.05%)</title><rect x="983.4" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="986.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$150/2099919.get (153 samples, 0.05%)</title><rect x="983.4" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (153 samples, 0.05%)</title><rect x="983.4" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (153 samples, 0.05%)</title><rect x="983.4" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="986.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (148 samples, 0.04%)</title><rect x="983.4" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="986.4" y="510.0"></text>
</g>
<g>
<title>byte[] (147 samples, 0.04%)</title><rect x="983.4" y="483.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="986.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$194/32946704.accept (692 samples, 0.21%)</title><rect x="983.9" y="771.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (692 samples, 0.21%)</title><rect x="983.9" y="755.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="986.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/32074257.run (692 samples, 0.21%)</title><rect x="983.9" y="739.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (692 samples, 0.21%)</title><rect x="983.9" y="723.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="986.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (692 samples, 0.21%)</title><rect x="983.9" y="707.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (692 samples, 0.21%)</title><rect x="983.9" y="691.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (692 samples, 0.21%)</title><rect x="983.9" y="675.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.9" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (684 samples, 0.21%)</title><rect x="983.9" y="659.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="986.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (96 samples, 0.03%)</title><rect x="986.4" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.4" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (92 samples, 0.03%)</title><rect x="986.4" y="771.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="989.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (828 samples, 0.25%)</title><rect x="986.7" y="787.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (445 samples, 0.13%)</title><rect x="986.7" y="771.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (445 samples, 0.13%)</title><rect x="986.7" y="755.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (445 samples, 0.13%)</title><rect x="986.7" y="739.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="989.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (445 samples, 0.13%)</title><rect x="986.7" y="723.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (445 samples, 0.13%)</title><rect x="986.7" y="707.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="989.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (445 samples, 0.13%)</title><rect x="986.7" y="691.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.7" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (437 samples, 0.13%)</title><rect x="986.7" y="675.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="989.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (383 samples, 0.12%)</title><rect x="988.3" y="771.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.3" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (376 samples, 0.11%)</title><rect x="988.3" y="755.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="991.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (3,277 samples, 0.99%)</title><rect x="989.7" y="787.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="992.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/2810801.run (1,805 samples, 0.54%)</title><rect x="989.7" y="771.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1,805 samples, 0.54%)</title><rect x="989.7" y="755.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,805 samples, 0.54%)</title><rect x="989.7" y="739.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,805 samples, 0.54%)</title><rect x="989.7" y="723.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,805 samples, 0.54%)</title><rect x="989.7" y="707.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,805 samples, 0.54%)</title><rect x="989.7" y="691.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/19216263.run (1,805 samples, 0.54%)</title><rect x="989.7" y="675.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,805 samples, 0.54%)</title><rect x="989.7" y="659.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="992.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1,805 samples, 0.54%)</title><rect x="989.7" y="643.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="992.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1,805 samples, 0.54%)</title><rect x="989.7" y="627.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (909 samples, 0.27%)</title><rect x="989.7" y="611.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (909 samples, 0.27%)</title><rect x="989.7" y="595.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (909 samples, 0.27%)</title><rect x="989.7" y="579.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/31242245.linkToTargetMethod (641 samples, 0.19%)</title><rect x="989.7" y="563.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/987179.invoke (641 samples, 0.19%)</title><rect x="989.7" y="547.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (641 samples, 0.19%)</title><rect x="989.7" y="531.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="992.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (641 samples, 0.19%)</title><rect x="989.7" y="515.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (641 samples, 0.19%)</title><rect x="989.7" y="499.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.7" y="510.0"></text>
</g>
<g>
<title>byte[] (641 samples, 0.19%)</title><rect x="989.7" y="483.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="992.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (268 samples, 0.08%)</title><rect x="992.0" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="995.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (268 samples, 0.08%)</title><rect x="992.0" y="547.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (268 samples, 0.08%)</title><rect x="992.0" y="531.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="995.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197/13890655.get$Lambda (268 samples, 0.08%)</title><rect x="992.0" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="995.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$197 (267 samples, 0.08%)</title><rect x="992.0" y="499.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="995.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (896 samples, 0.27%)</title><rect x="992.9" y="611.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="995.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (896 samples, 0.27%)</title><rect x="992.9" y="595.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="995.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (896 samples, 0.27%)</title><rect x="992.9" y="579.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="995.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (896 samples, 0.27%)</title><rect x="992.9" y="563.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="995.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (896 samples, 0.27%)</title><rect x="992.9" y="547.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="995.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (896 samples, 0.27%)</title><rect x="992.9" y="531.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="995.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (896 samples, 0.27%)</title><rect x="992.9" y="515.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="995.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (896 samples, 0.27%)</title><rect x="992.9" y="499.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (892 samples, 0.27%)</title><rect x="992.9" y="483.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="995.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$157/32552637.run (1,472 samples, 0.44%)</title><rect x="996.1" y="771.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1,472 samples, 0.44%)</title><rect x="996.1" y="755.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (373 samples, 0.11%)</title><rect x="996.1" y="739.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="999.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (373 samples, 0.11%)</title><rect x="996.1" y="723.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$196/11651460.get$Lambda (373 samples, 0.11%)</title><rect x="996.1" y="707.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.1" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$196 (371 samples, 0.11%)</title><rect x="996.1" y="691.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="999.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,099 samples, 0.33%)</title><rect x="997.4" y="739.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,099 samples, 0.33%)</title><rect x="997.4" y="723.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1,098 samples, 0.33%)</title><rect x="997.4" y="707.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,098 samples, 0.33%)</title><rect x="997.4" y="691.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1000.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,098 samples, 0.33%)</title><rect x="997.4" y="675.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.4" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,094 samples, 0.33%)</title><rect x="997.4" y="659.0" width="3.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1000.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (6,625 samples, 2.00%)</title><rect x="1001.3" y="787.0" width="23.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.3" y="798.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (2,203 samples, 0.66%)</title><rect x="1001.3" y="771.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.3" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2,203 samples, 0.66%)</title><rect x="1001.3" y="755.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.3" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2,203 samples, 0.66%)</title><rect x="1001.3" y="739.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1004.3" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (2,203 samples, 0.66%)</title><rect x="1001.3" y="723.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1004.3" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (2,181 samples, 0.66%)</title><rect x="1001.3" y="707.0" width="7.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1004.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (4,422 samples, 1.33%)</title><rect x="1009.2" y="771.0" width="15.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (695 samples, 0.21%)</title><rect x="1009.2" y="755.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1012.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (695 samples, 0.21%)</title><rect x="1009.2" y="739.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1012.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$233/17255282.get$Lambda (695 samples, 0.21%)</title><rect x="1009.2" y="723.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.2" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$233 (677 samples, 0.20%)</title><rect x="1009.2" y="707.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1012.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (3,727 samples, 1.12%)</title><rect x="1011.6" y="755.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.6" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,523 samples, 0.46%)</title><rect x="1011.6" y="739.0" width="5.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1014.6" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (2,185 samples, 0.66%)</title><rect x="1017.1" y="739.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.1" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (2,185 samples, 0.66%)</title><rect x="1017.1" y="723.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1020.1" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (2,161 samples, 0.65%)</title><rect x="1017.1" y="707.0" width="7.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1020.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (3,149 samples, 0.95%)</title><rect x="1024.9" y="787.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (340 samples, 0.10%)</title><rect x="1024.9" y="771.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1027.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (340 samples, 0.10%)</title><rect x="1024.9" y="755.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1027.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$179/26454431.get$Lambda (340 samples, 0.10%)</title><rect x="1024.9" y="739.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.9" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$179 (335 samples, 0.10%)</title><rect x="1024.9" y="723.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1027.9" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,581 samples, 0.48%)</title><rect x="1026.1" y="771.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1029.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (737 samples, 0.22%)</title><rect x="1026.1" y="755.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1029.1" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (734 samples, 0.22%)</title><rect x="1026.1" y="739.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1029.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (844 samples, 0.25%)</title><rect x="1028.7" y="755.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.7" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (838 samples, 0.25%)</title><rect x="1028.7" y="739.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1031.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1,228 samples, 0.37%)</title><rect x="1031.7" y="771.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1034.7" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (975 samples, 0.29%)</title><rect x="1031.7" y="755.0" width="3.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1034.7" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (253 samples, 0.08%)</title><rect x="1035.2" y="755.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1038.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (696 samples, 0.21%)</title><rect x="1036.1" y="787.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (696 samples, 0.21%)</title><rect x="1036.1" y="771.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (696 samples, 0.21%)</title><rect x="1036.1" y="755.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (696 samples, 0.21%)</title><rect x="1036.1" y="739.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (696 samples, 0.21%)</title><rect x="1036.1" y="723.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1039.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (696 samples, 0.21%)</title><rect x="1036.1" y="707.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1039.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (696 samples, 0.21%)</title><rect x="1036.1" y="691.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (696 samples, 0.21%)</title><rect x="1036.1" y="675.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (696 samples, 0.21%)</title><rect x="1036.1" y="659.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.1" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (696 samples, 0.21%)</title><rect x="1036.1" y="643.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1039.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (532 samples, 0.16%)</title><rect x="1038.6" y="787.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (532 samples, 0.16%)</title><rect x="1038.6" y="771.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (532 samples, 0.16%)</title><rect x="1038.6" y="755.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1041.6" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (531 samples, 0.16%)</title><rect x="1038.6" y="739.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1041.6" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (42,051 samples, 12.67%)</title><rect x="1040.5" y="803.0" width="149.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.5" y="814.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (5,221 samples, 1.57%)</title><rect x="1040.5" y="787.0" width="18.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (3,397 samples, 1.02%)</title><rect x="1040.5" y="771.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.5" y="782.0"></text>
</g>
<g>
<title>one.nio.net.JavaSelector$1 (328 samples, 0.10%)</title><rect x="1040.5" y="755.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1043.5" y="766.0"></text>
</g>
<g>
<title>one.nio.net.Session[] (2,569 samples, 0.77%)</title><rect x="1041.6" y="755.0" width="9.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1044.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (487 samples, 0.15%)</title><rect x="1050.8" y="755.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (487 samples, 0.15%)</title><rect x="1050.8" y="739.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1053.8" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (487 samples, 0.15%)</title><rect x="1050.8" y="723.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.8" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (480 samples, 0.14%)</title><rect x="1050.8" y="707.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1053.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,824 samples, 0.55%)</title><rect x="1052.5" y="771.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1055.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,824 samples, 0.55%)</title><rect x="1052.5" y="755.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,824 samples, 0.55%)</title><rect x="1052.5" y="739.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1,824 samples, 0.55%)</title><rect x="1052.5" y="723.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1,824 samples, 0.55%)</title><rect x="1052.5" y="707.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,824 samples, 0.55%)</title><rect x="1052.5" y="691.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1055.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,824 samples, 0.55%)</title><rect x="1052.5" y="675.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,824 samples, 0.55%)</title><rect x="1052.5" y="659.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1055.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,824 samples, 0.55%)</title><rect x="1052.5" y="643.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,817 samples, 0.55%)</title><rect x="1052.5" y="627.0" width="6.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1055.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (36,830 samples, 11.10%)</title><rect x="1059.0" y="787.0" width="131.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.0" y="798.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (36,830 samples, 11.10%)</title><rect x="1059.0" y="771.0" width="131.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1062.0" y="782.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36,498 samples, 11.00%)</title><rect x="1059.0" y="755.0" width="129.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1062.0" y="766.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6,282 samples, 1.89%)</title><rect x="1059.0" y="739.0" width="22.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1062.0" y="750.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6,282 samples, 1.89%)</title><rect x="1059.0" y="723.0" width="22.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.0" y="734.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3,963 samples, 1.19%)</title><rect x="1059.0" y="707.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,131 samples, 0.64%)</title><rect x="1059.0" y="691.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,131 samples, 0.64%)</title><rect x="1059.0" y="675.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1062.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,131 samples, 0.64%)</title><rect x="1059.0" y="659.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.0" y="670.0"></text>
</g>
<g>
<title>java.lang.String (428 samples, 0.13%)</title><rect x="1059.0" y="643.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1062.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,691 samples, 0.51%)</title><rect x="1060.6" y="643.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.6" y="654.0"></text>
</g>
<g>
<title>byte[] (1,673 samples, 0.50%)</title><rect x="1060.6" y="627.0" width="5.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1063.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (1,832 samples, 0.55%)</title><rect x="1066.6" y="691.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/26745031.linkToTargetMethod (188 samples, 0.06%)</title><rect x="1066.6" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1069.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/28097020.invokeStatic (188 samples, 0.06%)</title><rect x="1066.6" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$106/10655556.get$Lambda (188 samples, 0.06%)</title><rect x="1066.6" y="643.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1069.6" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dogm.ServiceImpl$$Lambda$106 (173 samples, 0.05%)</title><rect x="1066.6" y="627.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1069.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (328 samples, 0.10%)</title><rect x="1067.3" y="675.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1070.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (328 samples, 0.10%)</title><rect x="1067.3" y="659.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (328 samples, 0.10%)</title><rect x="1067.3" y="643.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.3" y="654.0"></text>
</g>
<g>
<title>java.lang.String (286 samples, 0.09%)</title><rect x="1067.3" y="627.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1070.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.executeAsync (1,288 samples, 0.39%)</title><rect x="1068.5" y="675.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (945 samples, 0.28%)</title><rect x="1068.5" y="659.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (945 samples, 0.28%)</title><rect x="1068.5" y="643.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1071.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$108/20693185.get$Lambda (945 samples, 0.28%)</title><rect x="1068.5" y="627.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.5" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dogm.ServiceImpl$$Lambda$108 (927 samples, 0.28%)</title><rect x="1068.5" y="611.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1071.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (343 samples, 0.10%)</title><rect x="1071.9" y="659.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (343 samples, 0.10%)</title><rect x="1071.9" y="643.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1074.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (325 samples, 0.10%)</title><rect x="1071.9" y="627.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1074.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,319 samples, 0.70%)</title><rect x="1073.1" y="707.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,319 samples, 0.70%)</title><rect x="1073.1" y="691.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,319 samples, 0.70%)</title><rect x="1073.1" y="675.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.1" y="686.0"></text>
</g>
<g>
<title>java.lang.String (2,248 samples, 0.68%)</title><rect x="1073.1" y="659.0" width="8.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1076.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6,737 samples, 2.03%)</title><rect x="1081.4" y="739.0" width="23.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1084.4" y="750.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (1,712 samples, 0.52%)</title><rect x="1081.4" y="723.0" width="6.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1084.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,107 samples, 0.63%)</title><rect x="1087.5" y="723.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.5" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (1,128 samples, 0.34%)</title><rect x="1087.5" y="707.0" width="4.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1090.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (979 samples, 0.30%)</title><rect x="1091.5" y="707.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1094.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,908 samples, 0.88%)</title><rect x="1095.0" y="723.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,908 samples, 0.88%)</title><rect x="1095.0" y="707.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.0" y="718.0"></text>
</g>
<g>
<title>char[] (681 samples, 0.21%)</title><rect x="1095.0" y="691.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1098.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,164 samples, 0.65%)</title><rect x="1097.6" y="691.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,164 samples, 0.65%)</title><rect x="1097.6" y="675.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1100.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,164 samples, 0.65%)</title><rect x="1097.6" y="659.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.6" y="670.0"></text>
</g>
<g>
<title>byte[] (2,153 samples, 0.65%)</title><rect x="1097.6" y="643.0" width="7.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1100.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (446 samples, 0.13%)</title><rect x="1105.3" y="739.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1108.3" y="750.0"></text>
</g>
<g>
<title>byte[] (430 samples, 0.13%)</title><rect x="1105.3" y="723.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1108.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (345 samples, 0.10%)</title><rect x="1106.9" y="739.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1109.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (345 samples, 0.10%)</title><rect x="1106.9" y="723.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1109.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (345 samples, 0.10%)</title><rect x="1106.9" y="707.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1109.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (291 samples, 0.09%)</title><rect x="1106.9" y="691.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1109.9" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22,688 samples, 6.84%)</title><rect x="1108.1" y="739.0" width="80.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.1" y="750.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (22,688 samples, 6.84%)</title><rect x="1108.1" y="723.0" width="80.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1111.1" y="734.0">one/nio/u..</text>
</g>
<g>
<title>char[] (3,689 samples, 1.11%)</title><rect x="1108.1" y="707.0" width="13.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1111.1" y="718.0"></text>
</g>
<g>
<title>char[] (3,634 samples, 1.10%)</title><rect x="1121.3" y="707.0" width="12.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1124.3" y="718.0"></text>
</g>
<g>
<title>java.lang.String (5,133 samples, 1.55%)</title><rect x="1134.2" y="707.0" width="18.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1137.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (92 samples, 0.03%)</title><rect x="1152.4" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1155.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10,140 samples, 3.06%)</title><rect x="1152.8" y="707.0" width="36.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.8" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10,140 samples, 3.06%)</title><rect x="1152.8" y="691.0" width="36.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.8" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10,140 samples, 3.06%)</title><rect x="1152.8" y="675.0" width="36.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1155.8" y="686.0">jav..</text>
</g>
<g>
<title>byte[] (8,979 samples, 2.71%)</title><rect x="1152.8" y="659.0" width="31.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1155.8" y="670.0">by..</text>
</g>
<g>
<title>byte[] (1,161 samples, 0.35%)</title><rect x="1184.7" y="659.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1187.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (332 samples, 0.10%)</title><rect x="1188.8" y="755.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (332 samples, 0.10%)</title><rect x="1188.8" y="739.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (329 samples, 0.10%)</title><rect x="1188.8" y="723.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.8" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (324 samples, 0.10%)</title><rect x="1188.8" y="707.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1191.8" y="718.0"></text>
</g>
</g>
</svg>
