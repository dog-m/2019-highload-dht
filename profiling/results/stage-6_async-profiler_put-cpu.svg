<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1189"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1189"> </text>
<g id="frames">
<g>
<title>all (6,516 samples, 100.00%)</title><rect x="10.0" y="1155.0" width="1180.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="1166.0">all</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="10.2" y="1139.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.2" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (2 samples, 0.03%)</title><rect x="10.5" y="1139.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.5" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (18 samples, 0.28%)</title><rect x="10.9" y="1139.0" width="3.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.9" y="1150.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (11 samples, 0.17%)</title><rect x="11.1" y="1123.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.1" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (10 samples, 0.15%)</title><rect x="11.1" y="1107.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="14.1" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.15%)</title><rect x="11.1" y="1091.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.1" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.03%)</title><rect x="11.1" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.1" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.12%)</title><rect x="11.4" y="1075.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.4" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.08%)</title><rect x="11.6" y="1059.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.6" y="1070.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="12.5" y="1059.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.5" y="1070.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (6 samples, 0.09%)</title><rect x="13.1" y="1123.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.1" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.09%)</title><rect x="13.1" y="1107.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.1" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.08%)</title><rect x="13.3" y="1091.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.3" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.08%)</title><rect x="13.3" y="1075.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.3" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (11 samples, 0.17%)</title><rect x="14.2" y="1139.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.2" y="1150.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (9 samples, 0.14%)</title><rect x="14.5" y="1123.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="17.5" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.14%)</title><rect x="14.5" y="1107.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.5" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.14%)</title><rect x="14.5" y="1091.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.5" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 0.14%)</title><rect x="14.5" y="1075.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.5" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.09%)</title><rect x="15.1" y="1059.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.1" y="1070.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (3 samples, 0.05%)</title><rect x="15.3" y="1043.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="18.3" y="1054.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.03%)</title><rect x="15.8" y="1043.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.8" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (103 samples, 1.58%)</title><rect x="16.2" y="1139.0" width="18.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="19.2" y="1150.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="17.8" y="1123.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="20.8" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="18.1" y="1123.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="21.1" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (83 samples, 1.27%)</title><rect x="18.5" y="1123.0" width="15.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.5" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (75 samples, 1.15%)</title><rect x="19.2" y="1107.0" width="13.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="22.2" y="1118.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (2 samples, 0.03%)</title><rect x="19.4" y="1091.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="22.4" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (68 samples, 1.04%)</title><rect x="20.0" y="1091.0" width="12.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="23.0" y="1102.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (2 samples, 0.03%)</title><rect x="21.6" y="1075.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="24.6" y="1086.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (3 samples, 0.05%)</title><rect x="22.0" y="1075.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.0" y="1086.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (2 samples, 0.03%)</title><rect x="22.5" y="1075.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="25.5" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (3 samples, 0.05%)</title><rect x="22.9" y="1075.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="25.9" y="1086.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.03%)</title><rect x="23.0" y="1059.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="26.0" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (31 samples, 0.48%)</title><rect x="23.4" y="1075.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="26.4" y="1086.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (3 samples, 0.05%)</title><rect x="24.5" y="1059.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="27.5" y="1070.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (11 samples, 0.17%)</title><rect x="25.2" y="1059.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="28.2" y="1070.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (2 samples, 0.03%)</title><rect x="25.2" y="1043.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="28.2" y="1054.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (9 samples, 0.14%)</title><rect x="25.6" y="1043.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="28.6" y="1054.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (3 samples, 0.05%)</title><rect x="25.6" y="1027.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="28.6" y="1038.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (3 samples, 0.05%)</title><rect x="26.1" y="1027.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="29.1" y="1038.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (2 samples, 0.03%)</title><rect x="26.7" y="1027.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="29.7" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (2 samples, 0.03%)</title><rect x="27.2" y="1059.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.2" y="1070.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (7 samples, 0.11%)</title><rect x="27.6" y="1059.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="30.6" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (6 samples, 0.09%)</title><rect x="27.7" y="1043.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="30.7" y="1054.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.03%)</title><rect x="27.9" y="1027.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="30.9" y="1038.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="28.5" y="1027.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="31.5" y="1038.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (11 samples, 0.17%)</title><rect x="29.0" y="1075.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.0" y="1086.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.03%)</title><rect x="31.0" y="1075.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="34.0" y="1086.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (3 samples, 0.05%)</title><rect x="31.4" y="1075.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="34.4" y="1086.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned int) (2 samples, 0.03%)</title><rect x="31.9" y="1075.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="34.9" y="1086.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="32.5" y="1091.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="35.5" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.06%)</title><rect x="32.8" y="1107.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="35.8" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (6 samples, 0.09%)</title><rect x="33.5" y="1123.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="36.5" y="1134.0"></text>
</g>
<g>
<title>Klass::class_loader() const (5 samples, 0.08%)</title><rect x="33.7" y="1107.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="36.7" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (13 samples, 0.20%)</title><rect x="34.8" y="1139.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="37.8" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (12 samples, 0.18%)</title><rect x="35.0" y="1123.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="38.0" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.06%)</title><rect x="35.0" y="1107.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="38.0" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.63] (4 samples, 0.06%)</title><rect x="35.0" y="1091.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="38.0" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.85] (8 samples, 0.12%)</title><rect x="35.7" y="1107.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="38.7" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (8 samples, 0.12%)</title><rect x="35.7" y="1091.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="38.7" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.63] (2 samples, 0.03%)</title><rect x="35.7" y="1075.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="38.7" y="1086.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.09%)</title><rect x="36.1" y="1075.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="39.1" y="1086.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (6 samples, 0.09%)</title><rect x="36.1" y="1059.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="39.1" y="1070.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (6 samples, 0.09%)</title><rect x="36.1" y="1043.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="39.1" y="1054.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.09%)</title><rect x="36.1" y="1027.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="39.1" y="1038.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.09%)</title><rect x="36.1" y="1011.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="39.1" y="1022.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.09%)</title><rect x="36.1" y="995.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="39.1" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="36.1" y="979.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="39.1" y="990.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="36.1" y="963.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="39.1" y="974.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.05%)</title><rect x="36.1" y="947.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="39.1" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="36.1" y="931.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="39.1" y="942.0"></text>
</g>
<g>
<title>hrtimer_cancel (3 samples, 0.05%)</title><rect x="36.6" y="979.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="39.6" y="990.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.05%)</title><rect x="36.6" y="963.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="39.6" y="974.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="36.6" y="947.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="39.6" y="958.0"></text>
</g>
<g>
<title>[not_walkable_Java] (45 samples, 0.69%)</title><rect x="37.3" y="1139.0" width="8.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="40.3" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="37.3" y="1123.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="40.3" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.03%)</title><rect x="37.3" y="1107.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="40.3" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (27 samples, 0.41%)</title><rect x="37.7" y="1123.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.7" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (23 samples, 0.35%)</title><rect x="37.9" y="1107.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="40.9" y="1118.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="37.9" y="1091.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="40.9" y="1102.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (9 samples, 0.14%)</title><rect x="38.3" y="1091.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="41.3" y="1102.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.09%)</title><rect x="38.4" y="1075.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="41.4" y="1086.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.05%)</title><rect x="39.0" y="1059.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="42.0" y="1070.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="39.5" y="1075.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="42.5" y="1086.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (12 samples, 0.18%)</title><rect x="39.9" y="1091.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="42.9" y="1102.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (7 samples, 0.11%)</title><rect x="40.1" y="1075.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="43.1" y="1086.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (2 samples, 0.03%)</title><rect x="41.0" y="1059.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="44.0" y="1070.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (2 samples, 0.03%)</title><rect x="41.5" y="1075.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="44.5" y="1086.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.03%)</title><rect x="41.5" y="1059.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="44.5" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.03%)</title><rect x="42.2" y="1107.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="45.2" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (13 samples, 0.20%)</title><rect x="42.6" y="1123.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="45.6" y="1134.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (3 samples, 0.05%)</title><rect x="42.8" y="1107.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="45.8" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (9 samples, 0.14%)</title><rect x="43.3" y="1107.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="46.3" y="1118.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (3 samples, 0.05%)</title><rect x="43.3" y="1091.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="46.3" y="1102.0"></text>
</g>
<g>
<title>CardTableRS::is_in_young(oopDesc*) const (3 samples, 0.05%)</title><rect x="43.9" y="1091.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="46.9" y="1102.0"></text>
</g>
<g>
<title>GenCollectedHeap::is_in_young(oopDesc*) (3 samples, 0.05%)</title><rect x="44.4" y="1091.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="47.4" y="1102.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.03%)</title><rect x="45.1" y="1123.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="48.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.14%)</title><rect x="45.5" y="1139.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="48.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="45.7" y="1123.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="48.7" y="1134.0"></text>
</g>
<g>
<title>__vsnprintf_chk (2 samples, 0.03%)</title><rect x="45.7" y="1107.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="48.7" y="1118.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.09%)</title><rect x="46.0" y="1123.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="49.0" y="1134.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.08%)</title><rect x="46.2" y="1107.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="49.2" y="1118.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.08%)</title><rect x="46.2" y="1091.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="49.2" y="1102.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="46.4" y="1075.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="49.4" y="1086.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="46.4" y="1059.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="49.4" y="1070.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="46.6" y="1043.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="49.6" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.05%)</title><rect x="46.6" y="1027.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="49.6" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="46.6" y="1011.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="49.6" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="46.6" y="995.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="49.6" y="1006.0"></text>
</g>
<g>
<title>[unknown_Java] (269 samples, 4.13%)</title><rect x="47.1" y="1139.0" width="48.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="50.1" y="1150.0">[unk..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="92.0" y="1123.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="95.0" y="1134.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.03%)</title><rect x="92.6" y="1123.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="95.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.12%)</title><rect x="92.9" y="1123.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="95.9" y="1134.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (2 samples, 0.03%)</title><rect x="92.9" y="1107.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="95.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="92.9" y="1091.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="95.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="93.3" y="1107.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="96.3" y="1118.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="93.3" y="1091.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="96.3" y="1102.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.06%)</title><rect x="93.7" y="1107.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="96.7" y="1118.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="93.7" y="1091.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="96.7" y="1102.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="93.7" y="1075.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="96.7" y="1086.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="93.7" y="1059.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="96.7" y="1070.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="93.7" y="1043.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="96.7" y="1054.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="93.7" y="1027.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="96.7" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.06%)</title><rect x="93.7" y="1011.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="96.7" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.06%)</title><rect x="93.7" y="995.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="96.7" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.06%)</title><rect x="93.7" y="979.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="96.7" y="990.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (4 samples, 0.06%)</title><rect x="94.8" y="1123.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="97.8" y="1134.0"></text>
</g>
<g>
<title>resume_userspace (2 samples, 0.03%)</title><rect x="95.5" y="1123.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.5" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="95.5" y="1107.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="98.5" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="95.5" y="1091.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="98.5" y="1102.0"></text>
</g>
<g>
<title>clone (90 samples, 1.38%)</title><rect x="95.8" y="1139.0" width="16.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="98.8" y="1150.0"></text>
</g>
<g>
<title>start_thread (90 samples, 1.38%)</title><rect x="95.8" y="1123.0" width="16.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="98.8" y="1134.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (90 samples, 1.38%)</title><rect x="95.8" y="1107.0" width="16.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="98.8" y="1118.0"></text>
</g>
<g>
<title>Thread::call_run() (90 samples, 1.38%)</title><rect x="95.8" y="1091.0" width="16.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="98.8" y="1102.0"></text>
</g>
<g>
<title>VMThread::run() (81 samples, 1.24%)</title><rect x="96.0" y="1075.0" width="14.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="99.0" y="1086.0"></text>
</g>
<g>
<title>VMThread::loop() (81 samples, 1.24%)</title><rect x="96.0" y="1059.0" width="14.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="99.0" y="1070.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (39 samples, 0.60%)</title><rect x="96.0" y="1043.0" width="7.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="99.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="99.8" y="1027.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="102.8" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="99.8" y="1011.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="102.8" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="99.8" y="995.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="102.8" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="99.8" y="979.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="102.8" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (16 samples, 0.25%)</title><rect x="100.2" y="1027.0" width="2.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="103.2" y="1038.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (13 samples, 0.20%)</title><rect x="100.7" y="1011.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.7" y="1022.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (13 samples, 0.20%)</title><rect x="100.7" y="995.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="103.7" y="1006.0"></text>
</g>
<g>
<title>sys_mprotect (6 samples, 0.09%)</title><rect x="100.7" y="979.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="103.7" y="990.0"></text>
</g>
<g>
<title>mprotect_fixup (6 samples, 0.09%)</title><rect x="100.7" y="963.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="103.7" y="974.0"></text>
</g>
<g>
<title>change_protection (6 samples, 0.09%)</title><rect x="100.7" y="947.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="103.7" y="958.0"></text>
</g>
<g>
<title>change_protection_range (6 samples, 0.09%)</title><rect x="100.7" y="931.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="103.7" y="942.0"></text>
</g>
<g>
<title>__ptep_modify_prot_commit (2 samples, 0.03%)</title><rect x="100.7" y="915.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="103.7" y="926.0"></text>
</g>
<g>
<title>native_set_pte_at (2 samples, 0.03%)</title><rect x="100.7" y="899.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="103.7" y="910.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (4 samples, 0.06%)</title><rect x="101.1" y="915.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="104.1" y="926.0"></text>
</g>
<g>
<title>native_flush_tlb_others (4 samples, 0.06%)</title><rect x="101.1" y="899.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="104.1" y="910.0"></text>
</g>
<g>
<title>smp_call_function_many (4 samples, 0.06%)</title><rect x="101.1" y="883.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="104.1" y="894.0"></text>
</g>
<g>
<title>smp_call_function_single (4 samples, 0.06%)</title><rect x="101.1" y="867.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="104.1" y="878.0"></text>
</g>
<g>
<title>sys_sched_yield (7 samples, 0.11%)</title><rect x="101.8" y="979.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="104.8" y="990.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.11%)</title><rect x="101.8" y="963.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="104.8" y="974.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.11%)</title><rect x="101.8" y="947.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="104.8" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="102.7" y="931.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="105.7" y="942.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (6 samples, 0.09%)</title><rect x="103.1" y="1043.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="106.1" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.09%)</title><rect x="103.1" y="1027.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="106.1" y="1038.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (6 samples, 0.09%)</title><rect x="103.1" y="1011.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="106.1" y="1022.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (6 samples, 0.09%)</title><rect x="103.1" y="995.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="106.1" y="1006.0"></text>
</g>
<g>
<title>sys_mprotect (6 samples, 0.09%)</title><rect x="103.1" y="979.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.1" y="990.0"></text>
</g>
<g>
<title>mprotect_fixup (6 samples, 0.09%)</title><rect x="103.1" y="963.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="106.1" y="974.0"></text>
</g>
<g>
<title>change_protection (6 samples, 0.09%)</title><rect x="103.1" y="947.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.1" y="958.0"></text>
</g>
<g>
<title>change_protection_range (6 samples, 0.09%)</title><rect x="103.1" y="931.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="106.1" y="942.0"></text>
</g>
<g>
<title>atomic64_xchg_cx8 (2 samples, 0.03%)</title><rect x="103.3" y="915.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="106.3" y="926.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (3 samples, 0.05%)</title><rect x="103.6" y="915.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="106.6" y="926.0"></text>
</g>
<g>
<title>native_flush_tlb_others (3 samples, 0.05%)</title><rect x="103.6" y="899.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="106.6" y="910.0"></text>
</g>
<g>
<title>smp_call_function_many (3 samples, 0.05%)</title><rect x="103.6" y="883.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="106.6" y="894.0"></text>
</g>
<g>
<title>smp_call_function_single (3 samples, 0.05%)</title><rect x="103.6" y="867.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.6" y="878.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.61] (36 samples, 0.55%)</title><rect x="104.2" y="1043.0" width="6.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="107.2" y="1054.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (36 samples, 0.55%)</title><rect x="104.2" y="1027.0" width="6.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="107.2" y="1038.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (36 samples, 0.55%)</title><rect x="104.2" y="1011.0" width="6.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="107.2" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned int, bool) (36 samples, 0.55%)</title><rect x="104.2" y="995.0" width="6.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="107.2" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned int, bool, GenCollectedHeap::GenerationType) (36 samples, 0.55%)</title><rect x="104.2" y="979.0" width="6.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="107.2" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned int, bool, bool, bool, bool) (36 samples, 0.55%)</title><rect x="104.2" y="963.0" width="6.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="107.2" y="974.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned int, bool) (35 samples, 0.54%)</title><rect x="104.2" y="947.0" width="6.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="107.2" y="958.0"></text>
</g>
<g>
<title>DefNewGeneration::FastEvacuateFollowersClosure::do_void() (2 samples, 0.03%)</title><rect x="104.2" y="931.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="107.2" y="942.0"></text>
</g>
<g>
<title>void ContiguousSpace::oop_since_save_marks_iterate&lt;FastScanClosure&gt;(FastScanClosure*) (2 samples, 0.03%)</title><rect x="104.2" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="107.2" y="926.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FastScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, oopDesc*&gt;(FastScanClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="104.2" y="899.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="107.2" y="910.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (27 samples, 0.41%)</title><rect x="104.5" y="931.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="107.5" y="942.0"></text>
</g>
<g>
<title>CardGeneration::younger_refs_iterate(OopsInGenClosure*, unsigned int) (10 samples, 0.15%)</title><rect x="104.5" y="915.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="107.5" y="926.0"></text>
</g>
<g>
<title>CardTableRS::younger_refs_in_space_iterate(Space*, OopsInGenClosure*, unsigned int) (10 samples, 0.15%)</title><rect x="104.5" y="899.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="107.5" y="910.0"></text>
</g>
<g>
<title>ClearNoncleanCardWrapper::do_MemRegion(MemRegion) (10 samples, 0.15%)</title><rect x="104.5" y="883.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="107.5" y="894.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (10 samples, 0.15%)</title><rect x="104.5" y="867.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="107.5" y="878.0"></text>
</g>
<g>
<title>BlockOffsetArrayContigSpace::block_start_unsafe(void const*) const (4 samples, 0.06%)</title><rect x="104.5" y="851.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="107.5" y="862.0"></text>
</g>
<g>
<title>ContiguousSpace::block_size(HeapWord const*) const (3 samples, 0.05%)</title><rect x="104.7" y="835.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="107.7" y="846.0"></text>
</g>
<g>
<title>FilteringDCTOC::walk_mem_region(MemRegion, HeapWord*, HeapWord*) (6 samples, 0.09%)</title><rect x="105.3" y="851.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="108.3" y="862.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, oopDesc*&gt;(FilteringClosure*, oopDesc*, Klass*, MemRegion) (2 samples, 0.03%)</title><rect x="105.4" y="835.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="108.4" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, oopDesc*&gt;(FilteringClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="105.8" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="108.8" y="846.0"></text>
</g>
<g>
<title>StringTable::oops_do(OopClosure*) (5 samples, 0.08%)</title><rect x="106.3" y="915.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="109.3" y="926.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(oopDesc**) (2 samples, 0.03%)</title><rect x="106.9" y="899.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="109.9" y="910.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (12 samples, 0.18%)</title><rect x="107.2" y="915.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="110.2" y="926.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (12 samples, 0.18%)</title><rect x="107.2" y="899.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="110.2" y="910.0"></text>
</g>
<g>
<title>MarkingCodeBlobClosure::do_code_blob(CodeBlob*) (5 samples, 0.08%)</title><rect x="107.4" y="883.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="110.4" y="894.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (5 samples, 0.08%)</title><rect x="107.4" y="867.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="110.4" y="878.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (4 samples, 0.06%)</title><rect x="108.3" y="883.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="111.3" y="894.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (4 samples, 0.06%)</title><rect x="108.3" y="867.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="111.3" y="878.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (5 samples, 0.08%)</title><rect x="109.4" y="931.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="112.4" y="942.0"></text>
</g>
<g>
<title>JvmtiExport::weak_oops_do(BoolObjectClosure*, OopClosure*) (2 samples, 0.03%)</title><rect x="110.0" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="113.0" y="926.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (2 samples, 0.03%)</title><rect x="110.0" y="899.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="113.0" y="910.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (2 samples, 0.03%)</title><rect x="110.0" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="113.0" y="894.0"></text>
</g>
<g>
<title>WatcherThread::run() (8 samples, 0.12%)</title><rect x="110.7" y="1075.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="113.7" y="1086.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (5 samples, 0.08%)</title><rect x="111.0" y="1059.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="114.0" y="1070.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.08%)</title><rect x="111.0" y="1043.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="114.0" y="1054.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (5 samples, 0.08%)</title><rect x="111.0" y="1027.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="114.0" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.08%)</title><rect x="111.0" y="1011.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="114.0" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="111.2" y="995.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="114.2" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="111.2" y="979.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="114.2" y="990.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="111.2" y="963.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="114.2" y="974.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="111.2" y="947.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="114.2" y="958.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.06%)</title><rect x="111.2" y="931.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="114.2" y="942.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.06%)</title><rect x="111.2" y="915.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="114.2" y="926.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="111.4" y="899.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="114.4" y="910.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.05%)</title><rect x="111.4" y="883.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="114.4" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="111.4" y="867.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="114.4" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,587 samples, 70.40%)</title><rect x="112.1" y="1139.0" width="830.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.1" y="1150.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,587 samples, 70.40%)</title><rect x="112.1" y="1123.0" width="830.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.1" y="1134.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,587 samples, 70.40%)</title><rect x="112.1" y="1107.0" width="830.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.1" y="1118.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (372 samples, 5.71%)</title><rect x="113.2" y="1091.0" width="67.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.2" y="1102.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (372 samples, 5.71%)</title><rect x="113.2" y="1075.0" width="67.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.2" y="1086.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (371 samples, 5.69%)</title><rect x="113.4" y="1059.0" width="67.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.4" y="1070.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$120/18004023.apply (370 samples, 5.68%)</title><rect x="113.6" y="1043.0" width="67.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.6" y="1054.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (370 samples, 5.68%)</title><rect x="113.6" y="1027.0" width="67.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.6" y="1038.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (370 samples, 5.68%)</title><rect x="113.6" y="1011.0" width="67.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.6" y="1022.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.05%)</title><rect x="113.8" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.05%)</title><rect x="113.8" y="979.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (276 samples, 4.24%)</title><rect x="114.3" y="995.0" width="50.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.3" y="1006.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (276 samples, 4.24%)</title><rect x="114.3" y="979.0" width="50.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.3" y="990.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (276 samples, 4.24%)</title><rect x="114.3" y="963.0" width="50.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.3" y="974.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (114 samples, 1.75%)</title><rect x="114.3" y="947.0" width="20.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (114 samples, 1.75%)</title><rect x="114.3" y="931.0" width="20.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (112 samples, 1.72%)</title><rect x="114.3" y="915.0" width="20.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/5261040.apply (112 samples, 1.72%)</title><rect x="114.3" y="899.0" width="20.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (112 samples, 1.72%)</title><rect x="114.3" y="883.0" width="20.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (112 samples, 1.72%)</title><rect x="114.3" y="867.0" width="20.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/30595298.apply (112 samples, 1.72%)</title><rect x="114.3" y="851.0" width="20.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (112 samples, 1.72%)</title><rect x="114.3" y="835.0" width="20.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.03%)</title><rect x="114.3" y="819.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.03%)</title><rect x="114.3" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.03%)</title><rect x="114.3" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (110 samples, 1.69%)</title><rect x="114.7" y="819.0" width="19.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (94 samples, 1.44%)</title><rect x="114.7" y="803.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (94 samples, 1.44%)</title><rect x="114.7" y="787.0" width="17.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.05%)</title><rect x="114.7" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$176/5866496.apply (91 samples, 1.40%)</title><rect x="115.2" y="771.0" width="16.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (91 samples, 1.40%)</title><rect x="115.2" y="755.0" width="16.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.06%)</title><rect x="115.4" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.06%)</title><rect x="115.4" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.03%)</title><rect x="115.8" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.06%)</title><rect x="116.1" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.05%)</title><rect x="116.3" y="723.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="116.5" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="116.5" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.03%)</title><rect x="116.5" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.03%)</title><rect x="116.5" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.03%)</title><rect x="116.5" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.03%)</title><rect x="116.5" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (31 samples, 0.48%)</title><rect x="116.8" y="739.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (31 samples, 0.48%)</title><rect x="116.8" y="723.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (8 samples, 0.12%)</title><rect x="116.8" y="707.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (8 samples, 0.12%)</title><rect x="116.8" y="691.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (7 samples, 0.11%)</title><rect x="117.0" y="675.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.05%)</title><rect x="117.2" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.05%)</title><rect x="117.2" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.05%)</title><rect x="117.2" y="627.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (3 samples, 0.05%)</title><rect x="117.8" y="659.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (23 samples, 0.35%)</title><rect x="118.3" y="707.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (23 samples, 0.35%)</title><rect x="118.3" y="691.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (19 samples, 0.29%)</title><rect x="118.3" y="675.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (19 samples, 0.29%)</title><rect x="118.3" y="659.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (19 samples, 0.29%)</title><rect x="118.3" y="643.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (19 samples, 0.29%)</title><rect x="118.3" y="627.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (16 samples, 0.25%)</title><rect x="118.8" y="611.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.8" y="622.0"></text>
</g>
<g>
<title>__kernel_vsyscall (16 samples, 0.25%)</title><rect x="118.8" y="595.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="121.8" y="606.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (15 samples, 0.23%)</title><rect x="119.0" y="579.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="122.0" y="590.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (15 samples, 0.23%)</title><rect x="119.0" y="563.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="122.0" y="574.0"></text>
</g>
<g>
<title>sys_write (15 samples, 0.23%)</title><rect x="119.0" y="547.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.0" y="558.0"></text>
</g>
<g>
<title>vfs_write (15 samples, 0.23%)</title><rect x="119.0" y="531.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="122.0" y="542.0"></text>
</g>
<g>
<title>__vfs_write (15 samples, 0.23%)</title><rect x="119.0" y="515.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.0" y="526.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.23%)</title><rect x="119.0" y="499.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="122.0" y="510.0"></text>
</g>
<g>
<title>pipe_write (15 samples, 0.23%)</title><rect x="119.0" y="483.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="122.0" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.23%)</title><rect x="119.0" y="467.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="122.0" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.23%)</title><rect x="119.0" y="451.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.0" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.23%)</title><rect x="119.0" y="435.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="122.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.05%)</title><rect x="121.7" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (51 samples, 0.78%)</title><rect x="122.5" y="739.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.05%)</title><rect x="122.5" y="723.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.5" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.05%)</title><rect x="122.5" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.5" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.05%)</title><rect x="122.5" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="122.6" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (39 samples, 0.60%)</title><rect x="123.0" y="723.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (16 samples, 0.25%)</title><rect x="123.7" y="707.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.7" y="718.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$195/19686375.test (3 samples, 0.05%)</title><rect x="126.1" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.1" y="702.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (3 samples, 0.05%)</title><rect x="126.1" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/13050421.test (3 samples, 0.05%)</title><rect x="126.1" y="659.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.05%)</title><rect x="126.1" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.1" y="654.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/4651926.test (3 samples, 0.05%)</title><rect x="126.1" y="627.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.1" y="638.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.05%)</title><rect x="126.1" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/23660417.test (3 samples, 0.05%)</title><rect x="126.1" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.05%)</title><rect x="126.1" y="579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="126.1" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="126.1" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="126.1" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (4 samples, 0.06%)</title><rect x="126.6" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (4 samples, 0.06%)</title><rect x="126.6" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.06%)</title><rect x="126.6" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="126.6" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="126.6" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.06%)</title><rect x="126.6" y="627.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.05%)</title><rect x="126.8" y="611.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (15 samples, 0.23%)</title><rect x="127.3" y="707.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.3" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (15 samples, 0.23%)</title><rect x="127.3" y="691.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.3" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (15 samples, 0.23%)</title><rect x="127.3" y="675.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="127.3" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="127.3" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="130.3" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.get$Lambda (3 samples, 0.05%)</title><rect x="127.3" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.3" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.&lt;init&gt; (2 samples, 0.03%)</title><rect x="127.5" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (11 samples, 0.17%)</title><rect x="128.1" y="659.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.1" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (9 samples, 0.14%)</title><rect x="128.3" y="643.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.3" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 0.14%)</title><rect x="128.3" y="627.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.08%)</title><rect x="128.4" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.4" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (3 samples, 0.05%)</title><rect x="128.8" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.05%)</title><rect x="128.8" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.8" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.05%)</title><rect x="129.3" y="611.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.3" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.03%)</title><rect x="129.5" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (4 samples, 0.06%)</title><rect x="130.2" y="723.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (4 samples, 0.06%)</title><rect x="130.2" y="707.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="133.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="130.2" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.05%)</title><rect x="130.2" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1682085.invoke (3 samples, 0.05%)</title><rect x="130.2" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="130.2" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.06%)</title><rect x="131.0" y="723.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.0" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.06%)</title><rect x="131.0" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.0" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.03%)</title><rect x="131.3" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.setRetryOnError (2 samples, 0.03%)</title><rect x="131.7" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (14 samples, 0.21%)</title><rect x="132.1" y="803.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (14 samples, 0.21%)</title><rect x="132.1" y="787.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.21%)</title><rect x="132.1" y="771.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.21%)</title><rect x="132.1" y="755.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9 samples, 0.14%)</title><rect x="133.0" y="739.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9 samples, 0.14%)</title><rect x="133.0" y="723.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 0.12%)</title><rect x="133.0" y="707.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (5 samples, 0.08%)</title><rect x="133.5" y="691.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.08%)</title><rect x="133.5" y="675.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.06%)</title><rect x="133.7" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (3 samples, 0.05%)</title><rect x="133.7" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (3 samples, 0.05%)</title><rect x="133.7" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (2 samples, 0.03%)</title><rect x="133.9" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (2 samples, 0.03%)</title><rect x="133.9" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.03%)</title><rect x="133.9" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="133.9" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="133.9" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="134.6" y="915.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="134.6" y="899.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.03%)</title><rect x="134.6" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="135.0" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="135.0" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.&lt;init&gt; (2 samples, 0.03%)</title><rect x="135.0" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.03%)</title><rect x="135.0" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (2 samples, 0.03%)</title><rect x="135.0" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (160 samples, 2.46%)</title><rect x="135.3" y="947.0" width="29.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.3" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (158 samples, 2.42%)</title><rect x="135.7" y="931.0" width="28.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.7" y="942.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (143 samples, 2.19%)</title><rect x="135.7" y="915.0" width="25.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.7" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (143 samples, 2.19%)</title><rect x="135.7" y="899.0" width="25.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.7" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (142 samples, 2.18%)</title><rect x="135.7" y="883.0" width="25.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.7" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$140/25694846.apply (142 samples, 2.18%)</title><rect x="135.7" y="867.0" width="25.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.7" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (142 samples, 2.18%)</title><rect x="135.7" y="851.0" width="25.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.7" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (142 samples, 2.18%)</title><rect x="135.7" y="835.0" width="25.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="138.7" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (46 samples, 0.71%)</title><rect x="135.7" y="819.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (46 samples, 0.71%)</title><rect x="135.7" y="803.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (46 samples, 0.71%)</title><rect x="135.7" y="787.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$162/23286967.apply (46 samples, 0.71%)</title><rect x="135.7" y="771.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (46 samples, 0.71%)</title><rect x="135.7" y="755.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (46 samples, 0.71%)</title><rect x="135.7" y="739.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (46 samples, 0.71%)</title><rect x="135.7" y="723.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (42 samples, 0.64%)</title><rect x="135.7" y="707.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.7" y="718.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (3 samples, 0.05%)</title><rect x="135.7" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.7" y="702.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (3 samples, 0.05%)</title><rect x="135.7" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (34 samples, 0.52%)</title><rect x="136.2" y="691.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (34 samples, 0.52%)</title><rect x="136.2" y="675.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (34 samples, 0.52%)</title><rect x="136.2" y="659.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.2" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (33 samples, 0.51%)</title><rect x="136.4" y="643.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.4" y="654.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (23 samples, 0.35%)</title><rect x="136.6" y="627.0" width="4.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="139.6" y="638.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (22 samples, 0.34%)</title><rect x="136.8" y="611.0" width="3.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="139.8" y="622.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.08%)</title><rect x="137.1" y="595.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="140.1" y="606.0"></text>
</g>
<g>
<title>.L409 (3 samples, 0.05%)</title><rect x="137.1" y="579.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="140.1" y="590.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.03%)</title><rect x="137.3" y="563.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="140.3" y="574.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.03%)</title><rect x="137.7" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="140.7" y="590.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="138.4" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="141.4" y="606.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.17%)</title><rect x="138.8" y="595.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="141.8" y="606.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.06%)</title><rect x="139.8" y="579.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="142.8" y="590.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.05%)</title><rect x="140.0" y="563.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="143.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/12533877.run (9 samples, 0.14%)</title><rect x="140.7" y="627.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (8 samples, 0.12%)</title><rect x="140.9" y="611.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.9" y="622.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (8 samples, 0.12%)</title><rect x="140.9" y="595.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.9" y="606.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (8 samples, 0.12%)</title><rect x="140.9" y="579.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.9" y="590.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (8 samples, 0.12%)</title><rect x="140.9" y="563.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.9" y="574.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (8 samples, 0.12%)</title><rect x="140.9" y="547.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (8 samples, 0.12%)</title><rect x="140.9" y="531.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (5 samples, 0.08%)</title><rect x="142.4" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="142.4" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="142.4" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="142.4" y="643.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (2 samples, 0.03%)</title><rect x="142.9" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.06%)</title><rect x="143.3" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.06%)</title><rect x="143.3" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (96 samples, 1.47%)</title><rect x="144.0" y="819.0" width="17.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="147.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (95 samples, 1.46%)</title><rect x="144.2" y="803.0" width="17.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (4 samples, 0.06%)</title><rect x="144.6" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.06%)</title><rect x="144.6" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.06%)</title><rect x="144.6" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.06%)</title><rect x="144.6" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (4 samples, 0.06%)</title><rect x="144.6" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (4 samples, 0.06%)</title><rect x="144.6" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (12 samples, 0.18%)</title><rect x="145.3" y="787.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (12 samples, 0.18%)</title><rect x="145.3" y="771.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (12 samples, 0.18%)</title><rect x="145.3" y="755.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.18%)</title><rect x="145.3" y="739.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.3" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.11%)</title><rect x="145.6" y="723.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (6 samples, 0.09%)</title><rect x="145.8" y="707.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.8" y="718.0"></text>
</g>
<g>
<title>java/util/Objects.equals (4 samples, 0.06%)</title><rect x="146.2" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.2" y="702.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (4 samples, 0.06%)</title><rect x="146.2" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.2" y="686.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (4 samples, 0.06%)</title><rect x="146.2" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.2" y="670.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (3 samples, 0.05%)</title><rect x="146.4" y="643.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.05%)</title><rect x="146.9" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (3 samples, 0.05%)</title><rect x="146.9" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (77 samples, 1.18%)</title><rect x="147.4" y="787.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.4" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (69 samples, 1.06%)</title><rect x="148.9" y="771.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.9" y="782.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (44 samples, 0.68%)</title><rect x="149.3" y="755.0" width="7.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="152.3" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.05%)</title><rect x="149.8" y="739.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="152.8" y="750.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (34 samples, 0.52%)</title><rect x="150.3" y="739.0" width="6.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="153.3" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.03%)</title><rect x="151.6" y="723.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="154.6" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.224] (2 samples, 0.03%)</title><rect x="151.6" y="707.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="154.6" y="718.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.05%)</title><rect x="152.0" y="723.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="155.0" y="734.0"></text>
</g>
<g>
<title>.L409 (2 samples, 0.03%)</title><rect x="152.0" y="707.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="155.0" y="718.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.03%)</title><rect x="152.0" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="155.0" y="702.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="152.5" y="723.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="155.5" y="734.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.03%)</title><rect x="152.9" y="723.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="155.9" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="153.2" y="723.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="156.2" y="734.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (7 samples, 0.11%)</title><rect x="153.8" y="723.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="156.8" y="734.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (6 samples, 0.09%)</title><rect x="154.0" y="707.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="157.0" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.06%)</title><rect x="154.0" y="691.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="157.0" y="702.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="154.3" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="157.3" y="686.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (8 samples, 0.12%)</title><rect x="155.1" y="723.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="158.1" y="734.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.05%)</title><rect x="155.6" y="707.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="158.6" y="718.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.03%)</title><rect x="156.7" y="739.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="159.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/6963423.run (22 samples, 0.34%)</title><rect x="157.4" y="755.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (22 samples, 0.34%)</title><rect x="157.4" y="739.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.4" y="750.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (20 samples, 0.31%)</title><rect x="157.8" y="723.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.8" y="734.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (20 samples, 0.31%)</title><rect x="157.8" y="707.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.8" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (20 samples, 0.31%)</title><rect x="157.8" y="691.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.8" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (19 samples, 0.29%)</title><rect x="158.0" y="675.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.0" y="686.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (19 samples, 0.29%)</title><rect x="158.0" y="659.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.06%)</title><rect x="158.3" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="158.5" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="158.5" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (13 samples, 0.20%)</title><rect x="159.0" y="643.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.0" y="654.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="159.4" y="627.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="162.4" y="638.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="159.8" y="611.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="162.8" y="622.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="159.8" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="162.8" y="606.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="159.8" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="162.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (6 samples, 0.09%)</title><rect x="160.3" y="627.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (6 samples, 0.09%)</title><rect x="160.3" y="611.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (4 samples, 0.06%)</title><rect x="160.7" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (4 samples, 0.06%)</title><rect x="160.7" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.08%)</title><rect x="161.6" y="915.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.08%)</title><rect x="161.6" y="899.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="164.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (3 samples, 0.05%)</title><rect x="161.9" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (10 samples, 0.15%)</title><rect x="162.5" y="915.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (8 samples, 0.12%)</title><rect x="162.8" y="899.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.06%)</title><rect x="162.8" y="883.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="163.2" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (4 samples, 0.06%)</title><rect x="163.6" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/24430281.linkToTargetMethod (4 samples, 0.06%)</title><rect x="163.6" y="867.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.6" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22860378.invoke (4 samples, 0.06%)</title><rect x="163.6" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.6" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/32983193.invoke (3 samples, 0.05%)</title><rect x="163.7" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.7" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="163.7" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.7" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="163.9" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="163.9" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (68 samples, 1.04%)</title><rect x="164.3" y="995.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (67 samples, 1.03%)</title><rect x="164.5" y="979.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.5" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (67 samples, 1.03%)</title><rect x="164.5" y="963.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (66 samples, 1.01%)</title><rect x="164.7" y="947.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.7" y="958.0"></text>
</g>
<g>
<title>__kernel_vsyscall (65 samples, 1.00%)</title><rect x="164.8" y="931.0" width="11.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="167.8" y="942.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (65 samples, 1.00%)</title><rect x="164.8" y="915.0" width="11.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="167.8" y="926.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (64 samples, 0.98%)</title><rect x="164.8" y="899.0" width="11.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="167.8" y="910.0"></text>
</g>
<g>
<title>sys_write (64 samples, 0.98%)</title><rect x="164.8" y="883.0" width="11.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="167.8" y="894.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.05%)</title><rect x="164.8" y="867.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="167.8" y="878.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="164.8" y="851.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="167.8" y="862.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="164.8" y="835.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="167.8" y="846.0"></text>
</g>
<g>
<title>vfs_write (60 samples, 0.92%)</title><rect x="165.6" y="867.0" width="10.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.6" y="878.0"></text>
</g>
<g>
<title>__vfs_write (56 samples, 0.86%)</title><rect x="165.6" y="851.0" width="10.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="168.6" y="862.0"></text>
</g>
<g>
<title>new_sync_write (56 samples, 0.86%)</title><rect x="165.6" y="835.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.6" y="846.0"></text>
</g>
<g>
<title>pipe_write (53 samples, 0.81%)</title><rect x="166.1" y="819.0" width="9.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="169.1" y="830.0"></text>
</g>
<g>
<title>__wake_up_sync_key (43 samples, 0.66%)</title><rect x="166.5" y="803.0" width="7.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="169.5" y="814.0"></text>
</g>
<g>
<title>__wake_up_common_lock (43 samples, 0.66%)</title><rect x="166.5" y="787.0" width="7.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="169.5" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (42 samples, 0.64%)</title><rect x="166.6" y="771.0" width="7.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="169.6" y="782.0"></text>
</g>
<g>
<title>copy_page_from_iter (3 samples, 0.05%)</title><rect x="174.3" y="803.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="177.3" y="814.0"></text>
</g>
<g>
<title>file_update_time (4 samples, 0.06%)</title><rect x="174.8" y="803.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="177.8" y="814.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.03%)</title><rect x="175.0" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="178.0" y="798.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.03%)</title><rect x="175.0" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="178.0" y="782.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.06%)</title><rect x="175.7" y="851.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="178.7" y="862.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="176.1" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="179.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (5 samples, 0.08%)</title><rect x="176.8" y="995.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (4 samples, 0.06%)</title><rect x="177.0" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (3 samples, 0.05%)</title><rect x="177.1" y="963.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.1" y="974.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.05%)</title><rect x="177.1" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.1" y="958.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.03%)</title><rect x="177.3" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.03%)</title><rect x="177.3" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (16 samples, 0.25%)</title><rect x="177.7" y="995.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (16 samples, 0.25%)</title><rect x="177.7" y="979.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (16 samples, 0.25%)</title><rect x="177.7" y="963.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.7" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.14%)</title><rect x="177.7" y="947.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.7" y="958.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.14%)</title><rect x="177.7" y="931.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.7" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.03%)</title><rect x="177.9" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.9" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.03%)</title><rect x="177.9" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.9" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.&lt;init&gt; (2 samples, 0.03%)</title><rect x="177.9" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (6 samples, 0.09%)</title><rect x="178.2" y="915.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="181.2" y="926.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (6 samples, 0.09%)</title><rect x="178.2" y="899.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="181.2" y="910.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long long&amp;, long long&amp;) (5 samples, 0.08%)</title><rect x="178.4" y="883.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="181.4" y="894.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.08%)</title><rect x="178.4" y="867.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="181.4" y="878.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="178.6" y="851.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="181.6" y="862.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="178.6" y="835.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="181.6" y="846.0"></text>
</g>
<g>
<title>sys_gettimeofday (3 samples, 0.05%)</title><rect x="178.8" y="819.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="181.8" y="830.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.03%)</title><rect x="179.0" y="803.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="182.0" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.06%)</title><rect x="179.3" y="947.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.3" y="958.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (4 samples, 0.06%)</title><rect x="179.3" y="931.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.3" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.06%)</title><rect x="179.3" y="915.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.3" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.06%)</title><rect x="179.3" y="899.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.3" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (4 samples, 0.06%)</title><rect x="179.3" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.3" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.06%)</title><rect x="179.3" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.3" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.06%)</title><rect x="179.3" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.3" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.create (4 samples, 0.06%)</title><rect x="179.3" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (3 samples, 0.05%)</title><rect x="180.0" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndAddLong (3 samples, 0.05%)</title><rect x="180.0" y="931.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.05%)</title><rect x="180.6" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.05%)</title><rect x="180.6" y="1075.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.05%)</title><rect x="180.6" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="183.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.05%)</title><rect x="180.6" y="1043.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.05%)</title><rect x="180.6" y="1027.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.05%)</title><rect x="180.6" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="183.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.05%)</title><rect x="181.1" y="1091.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.05%)</title><rect x="181.1" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="181.3" y="1059.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (956 samples, 14.67%)</title><rect x="181.7" y="1091.0" width="173.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.7" y="1102.0">java/util/concurrent/T..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (174 samples, 2.67%)</title><rect x="182.0" y="1075.0" width="31.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="185.0" y="1086.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (166 samples, 2.55%)</title><rect x="182.0" y="1059.0" width="30.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.0" y="1070.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (14 samples, 0.21%)</title><rect x="182.2" y="1043.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.21%)</title><rect x="182.2" y="1027.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (151 samples, 2.32%)</title><rect x="184.8" y="1043.0" width="27.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.8" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (151 samples, 2.32%)</title><rect x="184.8" y="1027.0" width="27.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.8" y="1038.0">j..</text>
</g>
<g>
<title>Unsafe_Park (25 samples, 0.38%)</title><rect x="185.1" y="1011.0" width="4.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="188.1" y="1022.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="185.5" y="995.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="188.5" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (4 samples, 0.06%)</title><rect x="186.0" y="995.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="189.0" y="1006.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.05%)</title><rect x="186.9" y="995.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="189.9" y="1006.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="187.5" y="995.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="190.5" y="1006.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="187.5" y="979.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="190.5" y="990.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="187.5" y="963.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="190.5" y="974.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="187.5" y="947.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="190.5" y="958.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="187.5" y="931.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="190.5" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="188.0" y="995.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="191.0" y="1006.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (3 samples, 0.05%)</title><rect x="188.4" y="995.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="191.4" y="1006.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.03%)</title><rect x="188.9" y="995.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="191.9" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="189.3" y="995.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="192.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (124 samples, 1.90%)</title><rect x="189.6" y="1011.0" width="22.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="192.6" y="1022.0">[..</text>
</g>
<g>
<title>__kernel_vsyscall (121 samples, 1.86%)</title><rect x="189.8" y="995.0" width="21.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="192.8" y="1006.0">_..</text>
</g>
<g>
<title>entry_SYSENTER_32 (121 samples, 1.86%)</title><rect x="189.8" y="979.0" width="21.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="192.8" y="990.0">e..</text>
</g>
<g>
<title>do_fast_syscall_32 (121 samples, 1.86%)</title><rect x="189.8" y="963.0" width="21.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="192.8" y="974.0">d..</text>
</g>
<g>
<title>sys_futex (121 samples, 1.86%)</title><rect x="189.8" y="947.0" width="21.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="192.8" y="958.0">s..</text>
</g>
<g>
<title>do_futex (120 samples, 1.84%)</title><rect x="190.0" y="931.0" width="21.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="193.0" y="942.0">d..</text>
</g>
<g>
<title>futex_wait (116 samples, 1.78%)</title><rect x="190.7" y="915.0" width="21.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="193.7" y="926.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (109 samples, 1.67%)</title><rect x="190.9" y="899.0" width="19.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="193.9" y="910.0"></text>
</g>
<g>
<title>schedule (109 samples, 1.67%)</title><rect x="190.9" y="883.0" width="19.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="193.9" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (109 samples, 1.67%)</title><rect x="190.9" y="867.0" width="19.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.9" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (109 samples, 1.67%)</title><rect x="190.9" y="851.0" width="19.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="193.9" y="862.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.09%)</title><rect x="210.7" y="899.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="213.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.11%)</title><rect x="212.3" y="1059.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.11%)</title><rect x="212.3" y="1043.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="215.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.11%)</title><rect x="212.3" y="1027.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="215.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.09%)</title><rect x="212.5" y="1011.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.09%)</title><rect x="212.5" y="995.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="212.6" y="979.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="215.6" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.08%)</title><rect x="212.6" y="963.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="215.6" y="974.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.08%)</title><rect x="212.6" y="947.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="215.6" y="958.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.08%)</title><rect x="212.6" y="931.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="215.6" y="942.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.08%)</title><rect x="212.6" y="915.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="215.6" y="926.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="212.6" y="899.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="215.6" y="910.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="212.6" y="883.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="215.6" y="894.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.08%)</title><rect x="212.6" y="867.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="215.6" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="212.6" y="851.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="215.6" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.08%)</title><rect x="212.6" y="835.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="215.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (780 samples, 11.97%)</title><rect x="213.5" y="1075.0" width="141.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.5" y="1086.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (775 samples, 11.89%)</title><rect x="214.5" y="1059.0" width="140.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.5" y="1070.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (758 samples, 11.63%)</title><rect x="216.8" y="1043.0" width="137.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="219.8" y="1054.0">java/util/concurr..</text>
</g>
<g>
<title>__clock_gettime (255 samples, 3.91%)</title><rect x="217.2" y="1027.0" width="46.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="220.2" y="1038.0">__cl..</text>
</g>
<g>
<title>[unknown] (57 samples, 0.87%)</title><rect x="217.4" y="1011.0" width="10.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="220.4" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (57 samples, 0.87%)</title><rect x="217.4" y="995.0" width="10.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="220.4" y="1006.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (57 samples, 0.87%)</title><rect x="217.4" y="979.0" width="10.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="220.4" y="990.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (56 samples, 0.86%)</title><rect x="217.5" y="963.0" width="10.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="220.5" y="974.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="227.7" y="1011.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="230.7" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (184 samples, 2.82%)</title><rect x="228.2" y="1011.0" width="33.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="231.2" y="1022.0">__..</text>
</g>
<g>
<title>entry_SYSENTER_32 (132 samples, 2.03%)</title><rect x="237.6" y="995.0" width="23.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="240.6" y="1006.0">e..</text>
</g>
<g>
<title>do_fast_syscall_32 (127 samples, 1.95%)</title><rect x="237.6" y="979.0" width="23.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="240.6" y="990.0">d..</text>
</g>
<g>
<title>clockid_to_kclock.part.3 (3 samples, 0.05%)</title><rect x="238.2" y="963.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="241.2" y="974.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (5 samples, 0.08%)</title><rect x="238.7" y="963.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="241.7" y="974.0"></text>
</g>
<g>
<title>sys_clock_gettime (116 samples, 1.78%)</title><rect x="239.6" y="963.0" width="21.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="242.6" y="974.0">s..</text>
</g>
<g>
<title>posix_ktime_get_ts (77 samples, 1.18%)</title><rect x="240.0" y="947.0" width="13.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="243.0" y="958.0"></text>
</g>
<g>
<title>ktime_get_ts64 (68 samples, 1.04%)</title><rect x="240.0" y="931.0" width="12.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="243.0" y="942.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (51 samples, 0.78%)</title><rect x="242.9" y="915.0" width="9.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="245.9" y="926.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (49 samples, 0.75%)</title><rect x="243.2" y="899.0" width="8.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="246.2" y="910.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (9 samples, 0.14%)</title><rect x="252.3" y="931.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="255.3" y="942.0"></text>
</g>
<g>
<title>put_timespec64 (37 samples, 0.57%)</title><rect x="253.9" y="947.0" width="6.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="256.9" y="958.0"></text>
</g>
<g>
<title>__copy_user_ll (3 samples, 0.05%)</title><rect x="254.5" y="931.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="257.5" y="942.0"></text>
</g>
<g>
<title>_copy_to_user (31 samples, 0.48%)</title><rect x="255.0" y="931.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="258.0" y="942.0"></text>
</g>
<g>
<title>__copy_user_ll (28 samples, 0.43%)</title><rect x="255.6" y="915.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="258.6" y="926.0"></text>
</g>
<g>
<title>sys_clock_gettime (5 samples, 0.08%)</title><rect x="260.6" y="979.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="263.6" y="990.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (10 samples, 0.15%)</title><rect x="261.5" y="1011.0" width="1.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="264.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.05%)</title><rect x="263.3" y="1027.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="266.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (489 samples, 7.50%)</title><rect x="263.9" y="1027.0" width="88.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.9" y="1038.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (489 samples, 7.50%)</title><rect x="263.9" y="1011.0" width="88.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.9" y="1022.0">jdk/intern..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (5 samples, 0.08%)</title><rect x="263.9" y="995.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="266.9" y="1006.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (2 samples, 0.03%)</title><rect x="264.8" y="995.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="267.8" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (4 samples, 0.06%)</title><rect x="265.3" y="995.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="268.3" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (475 samples, 7.29%)</title><rect x="266.1" y="995.0" width="86.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="269.1" y="1006.0">Unsafe_Park</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="268.1" y="979.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="271.1" y="990.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.06%)</title><rect x="268.6" y="979.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="271.6" y="990.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (2 samples, 0.03%)</title><rect x="269.3" y="979.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="272.3" y="990.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="269.7" y="979.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="272.7" y="990.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (24 samples, 0.37%)</title><rect x="270.0" y="979.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="273.0" y="990.0"></text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.12%)</title><rect x="271.9" y="963.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="274.9" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (7 samples, 0.11%)</title><rect x="272.0" y="947.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="275.0" y="958.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.08%)</title><rect x="272.4" y="931.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="275.4" y="942.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.08%)</title><rect x="272.4" y="915.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="275.4" y="926.0"></text>
</g>
<g>
<title>sys_clock_gettime (5 samples, 0.08%)</title><rect x="272.4" y="899.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="275.4" y="910.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (4 samples, 0.06%)</title><rect x="272.4" y="883.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="275.4" y="894.0"></text>
</g>
<g>
<title>ktime_get_ts64 (4 samples, 0.06%)</title><rect x="272.4" y="867.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="275.4" y="878.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (3 samples, 0.05%)</title><rect x="272.6" y="851.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="275.6" y="862.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (3 samples, 0.05%)</title><rect x="272.6" y="835.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="275.6" y="846.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="273.5" y="963.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="276.5" y="974.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long long, bool) (3 samples, 0.05%)</title><rect x="273.9" y="963.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="276.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="274.8" y="979.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="277.8" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="274.8" y="963.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="277.8" y="974.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="274.8" y="947.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="277.8" y="958.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="274.8" y="931.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="277.8" y="942.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.05%)</title><rect x="275.1" y="979.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="278.1" y="990.0"></text>
</g>
<g>
<title>__clock_gettime (9 samples, 0.14%)</title><rect x="275.7" y="979.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="278.7" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (7 samples, 0.11%)</title><rect x="276.0" y="963.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="279.0" y="974.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="276.6" y="947.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="279.6" y="958.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="276.6" y="931.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="279.6" y="942.0"></text>
</g>
<g>
<title>sys_clock_gettime (4 samples, 0.06%)</title><rect x="276.6" y="915.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="279.6" y="926.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (4 samples, 0.06%)</title><rect x="276.6" y="899.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="279.6" y="910.0"></text>
</g>
<g>
<title>ktime_get_ts64 (4 samples, 0.06%)</title><rect x="276.6" y="883.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="279.6" y="894.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (4 samples, 0.06%)</title><rect x="276.6" y="867.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="279.6" y="878.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (4 samples, 0.06%)</title><rect x="276.6" y="851.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="279.6" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (387 samples, 5.94%)</title><rect x="277.5" y="979.0" width="70.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="280.5" y="990.0">__kernel..</text>
</g>
<g>
<title>entry_SYSENTER_32 (382 samples, 5.86%)</title><rect x="278.4" y="963.0" width="69.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="281.4" y="974.0">entry_S..</text>
</g>
<g>
<title>do_fast_syscall_32 (382 samples, 5.86%)</title><rect x="278.4" y="947.0" width="69.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="281.4" y="958.0">do_fast..</text>
</g>
<g>
<title>sys_futex (380 samples, 5.83%)</title><rect x="278.7" y="931.0" width="68.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="281.7" y="942.0">sys_futex</text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.03%)</title><rect x="279.1" y="915.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="282.1" y="926.0"></text>
</g>
<g>
<title>__copy_user_ll (2 samples, 0.03%)</title><rect x="279.1" y="899.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="282.1" y="910.0"></text>
</g>
<g>
<title>do_futex (372 samples, 5.71%)</title><rect x="279.5" y="915.0" width="67.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="282.5" y="926.0">do_futex</text>
</g>
<g>
<title>futex_wait (363 samples, 5.57%)</title><rect x="280.0" y="899.0" width="65.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="283.0" y="910.0">futex_w..</text>
</g>
<g>
<title>futex_wait_queue_me (349 samples, 5.36%)</title><rect x="280.6" y="883.0" width="63.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="283.6" y="894.0">futex_w..</text>
</g>
<g>
<title>hrtimer_start_range_ns (11 samples, 0.17%)</title><rect x="280.7" y="867.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="283.7" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.15%)</title><rect x="280.7" y="851.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="283.7" y="862.0"></text>
</g>
<g>
<title>schedule (336 samples, 5.16%)</title><rect x="282.9" y="867.0" width="60.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="285.9" y="878.0">schedule</text>
</g>
<g>
<title>__sched_text_start (336 samples, 5.16%)</title><rect x="282.9" y="851.0" width="60.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="285.9" y="862.0">__sche..</text>
</g>
<g>
<title>finish_task_switch (336 samples, 5.16%)</title><rect x="282.9" y="835.0" width="60.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="285.9" y="846.0">finish..</text>
</g>
<g>
<title>hrtimer_cancel (10 samples, 0.15%)</title><rect x="343.9" y="883.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.9" y="894.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (10 samples, 0.15%)</title><rect x="343.9" y="867.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.9" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.15%)</title><rect x="343.9" y="851.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="346.9" y="862.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="345.7" y="899.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="348.7" y="910.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="346.8" y="915.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.8" y="926.0"></text>
</g>
<g>
<title>ktime_add_safe (2 samples, 0.03%)</title><rect x="347.2" y="915.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="350.2" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.09%)</title><rect x="347.9" y="979.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="350.9" y="990.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.di (2 samples, 0.03%)</title><rect x="349.9" y="979.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="352.9" y="990.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long long, bool) (6 samples, 0.09%)</title><rect x="351.0" y="979.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="354.0" y="990.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (9 samples, 0.14%)</title><rect x="352.4" y="1027.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="355.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3 samples, 0.05%)</title><rect x="354.3" y="1043.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$196/11651460.run (407 samples, 6.25%)</title><rect x="354.8" y="1091.0" width="73.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.8" y="1102.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (407 samples, 6.25%)</title><rect x="354.8" y="1075.0" width="73.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.8" y="1086.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (407 samples, 6.25%)</title><rect x="354.8" y="1059.0" width="73.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="357.8" y="1070.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (406 samples, 6.23%)</title><rect x="355.0" y="1043.0" width="73.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.0" y="1054.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (406 samples, 6.23%)</title><rect x="355.0" y="1027.0" width="73.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.0" y="1038.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (406 samples, 6.23%)</title><rect x="355.0" y="1011.0" width="73.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.0" y="1022.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (404 samples, 6.20%)</title><rect x="355.3" y="995.0" width="73.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.3" y="1006.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (404 samples, 6.20%)</title><rect x="355.3" y="979.0" width="73.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.3" y="990.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (404 samples, 6.20%)</title><rect x="355.3" y="963.0" width="73.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.3" y="974.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (404 samples, 6.20%)</title><rect x="355.3" y="947.0" width="73.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.3" y="958.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (403 samples, 6.18%)</title><rect x="355.5" y="931.0" width="73.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.5" y="942.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (50 samples, 0.77%)</title><rect x="355.9" y="915.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (45 samples, 0.69%)</title><rect x="356.4" y="899.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (45 samples, 0.69%)</title><rect x="356.4" y="883.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (45 samples, 0.69%)</title><rect x="356.4" y="867.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (45 samples, 0.69%)</title><rect x="356.4" y="851.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8 samples, 0.12%)</title><rect x="356.4" y="835.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/20700430.apply (7 samples, 0.11%)</title><rect x="356.6" y="819.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (7 samples, 0.11%)</title><rect x="356.6" y="803.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (7 samples, 0.11%)</title><rect x="356.6" y="787.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (7 samples, 0.11%)</title><rect x="356.6" y="771.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="356.6" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="356.6" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$206/5014188.get$Lambda (3 samples, 0.05%)</title><rect x="356.6" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="359.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.06%)</title><rect x="357.2" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.05%)</title><rect x="357.3" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="360.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (3 samples, 0.05%)</title><rect x="357.3" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$162/23286967.apply (3 samples, 0.05%)</title><rect x="357.3" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (3 samples, 0.05%)</title><rect x="357.3" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="360.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (3 samples, 0.05%)</title><rect x="357.3" y="675.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="360.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (3 samples, 0.05%)</title><rect x="357.3" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="360.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (3 samples, 0.05%)</title><rect x="357.3" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.3" y="654.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (3 samples, 0.05%)</title><rect x="357.3" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.3" y="638.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (3 samples, 0.05%)</title><rect x="357.3" y="611.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (37 samples, 0.57%)</title><rect x="357.9" y="835.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="360.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (37 samples, 0.57%)</title><rect x="357.9" y="819.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/10502657.apply (36 samples, 0.55%)</title><rect x="358.1" y="803.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (36 samples, 0.55%)</title><rect x="358.1" y="787.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (36 samples, 0.55%)</title><rect x="358.1" y="771.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/10627322.apply (35 samples, 0.54%)</title><rect x="358.2" y="755.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="361.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (35 samples, 0.54%)</title><rect x="358.2" y="739.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="361.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (3 samples, 0.05%)</title><rect x="358.4" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.05%)</title><rect x="358.4" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.05%)</title><rect x="358.4" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="361.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$201/9963887.apply (3 samples, 0.05%)</title><rect x="358.4" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="361.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (3 samples, 0.05%)</title><rect x="358.4" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (3 samples, 0.05%)</title><rect x="358.4" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="361.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.05%)</title><rect x="358.4" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.05%)</title><rect x="358.4" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.05%)</title><rect x="358.4" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="361.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (31 samples, 0.48%)</title><rect x="359.0" y="723.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (13 samples, 0.20%)</title><rect x="359.0" y="707.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="362.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (13 samples, 0.20%)</title><rect x="359.0" y="691.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (13 samples, 0.20%)</title><rect x="359.0" y="675.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="362.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$238/480874.accept (8 samples, 0.12%)</title><rect x="359.7" y="659.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (8 samples, 0.12%)</title><rect x="359.7" y="643.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (8 samples, 0.12%)</title><rect x="359.7" y="627.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (8 samples, 0.12%)</title><rect x="359.7" y="611.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (8 samples, 0.12%)</title><rect x="359.7" y="595.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.12%)</title><rect x="359.7" y="579.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.12%)</title><rect x="359.7" y="563.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.12%)</title><rect x="359.7" y="547.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.12%)</title><rect x="359.7" y="531.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (7 samples, 0.11%)</title><rect x="359.9" y="515.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (4 samples, 0.06%)</title><rect x="360.1" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="363.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.06%)</title><rect x="360.1" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="363.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.06%)</title><rect x="360.1" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="363.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.05%)</title><rect x="360.1" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.05%)</title><rect x="360.1" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.05%)</title><rect x="360.1" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.08%)</title><rect x="361.3" y="707.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.08%)</title><rect x="361.3" y="691.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.03%)</title><rect x="361.3" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.03%)</title><rect x="361.3" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.03%)</title><rect x="361.3" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.05%)</title><rect x="361.7" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.05%)</title><rect x="361.7" y="659.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (13 samples, 0.20%)</title><rect x="362.2" y="707.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="365.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (12 samples, 0.18%)</title><rect x="362.4" y="691.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (8 samples, 0.12%)</title><rect x="362.4" y="675.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (8 samples, 0.12%)</title><rect x="362.4" y="659.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="365.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (8 samples, 0.12%)</title><rect x="362.4" y="643.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="365.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8 samples, 0.12%)</title><rect x="362.4" y="627.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.12%)</title><rect x="362.4" y="611.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="365.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (4 samples, 0.06%)</title><rect x="363.9" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (2 samples, 0.03%)</title><rect x="364.6" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (2 samples, 0.03%)</title><rect x="364.6" y="883.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.03%)</title><rect x="364.6" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.03%)</title><rect x="364.9" y="915.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.03%)</title><rect x="364.9" y="899.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="367.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.03%)</title><rect x="364.9" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="367.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (349 samples, 5.36%)</title><rect x="365.3" y="915.0" width="63.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.3" y="926.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (349 samples, 5.36%)</title><rect x="365.3" y="899.0" width="63.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.3" y="910.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (349 samples, 5.36%)</title><rect x="365.3" y="883.0" width="63.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.3" y="894.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (347 samples, 5.33%)</title><rect x="365.7" y="867.0" width="62.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.7" y="878.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (346 samples, 5.31%)</title><rect x="365.8" y="851.0" width="62.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.8" y="862.0">jdk/in..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (340 samples, 5.22%)</title><rect x="366.0" y="835.0" width="61.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.0" y="846.0">java/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (340 samples, 5.22%)</title><rect x="366.0" y="819.0" width="61.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.0" y="830.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (340 samples, 5.22%)</title><rect x="366.0" y="803.0" width="61.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="369.0" y="814.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (339 samples, 5.20%)</title><rect x="366.2" y="787.0" width="61.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.2" y="798.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (2 samples, 0.03%)</title><rect x="366.2" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.2" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="366.2" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="366.2" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (337 samples, 5.17%)</title><rect x="366.6" y="771.0" width="61.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.6" y="782.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (328 samples, 5.03%)</title><rect x="368.2" y="755.0" width="59.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.2" y="766.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (2 samples, 0.03%)</title><rect x="368.7" y="739.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="371.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="369.1" y="739.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="372.1" y="750.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.05%)</title><rect x="369.1" y="723.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="372.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.05%)</title><rect x="369.1" y="707.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="372.1" y="718.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.05%)</title><rect x="369.1" y="691.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="372.1" y="702.0"></text>
</g>
<g>
<title>__kernel_vsyscall (319 samples, 4.90%)</title><rect x="369.7" y="739.0" width="57.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="372.7" y="750.0">__kern..</text>
</g>
<g>
<title>entry_SYSENTER_32 (317 samples, 4.86%)</title><rect x="370.0" y="723.0" width="57.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="373.0" y="734.0">entry_..</text>
</g>
<g>
<title>do_fast_syscall_32 (316 samples, 4.85%)</title><rect x="370.0" y="707.0" width="57.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="373.0" y="718.0">do_fas..</text>
</g>
<g>
<title>sys_writev (314 samples, 4.82%)</title><rect x="370.4" y="691.0" width="56.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="373.4" y="702.0">sys_wr..</text>
</g>
<g>
<title>do_writev (313 samples, 4.80%)</title><rect x="370.6" y="675.0" width="56.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="373.6" y="686.0">do_wri..</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="370.7" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="373.7" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="370.7" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="373.7" y="654.0"></text>
</g>
<g>
<title>vfs_writev (309 samples, 4.74%)</title><rect x="371.3" y="659.0" width="55.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="374.3" y="670.0">vfs_w..</text>
</g>
<g>
<title>do_iter_write (300 samples, 4.60%)</title><rect x="372.2" y="643.0" width="54.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="375.2" y="654.0">do_it..</text>
</g>
<g>
<title>do_iter_readv_writev (297 samples, 4.56%)</title><rect x="372.4" y="627.0" width="53.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="375.4" y="638.0">do_it..</text>
</g>
<g>
<title>sock_write_iter (293 samples, 4.50%)</title><rect x="373.1" y="611.0" width="53.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="376.1" y="622.0">sock_..</text>
</g>
<g>
<title>sock_sendmsg (291 samples, 4.47%)</title><rect x="373.5" y="595.0" width="52.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="376.5" y="606.0">sock_..</text>
</g>
<g>
<title>inet_sendmsg (284 samples, 4.36%)</title><rect x="373.6" y="579.0" width="51.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="376.6" y="590.0">inet_..</text>
</g>
<g>
<title>tcp_sendmsg (282 samples, 4.33%)</title><rect x="373.8" y="563.0" width="51.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="376.8" y="574.0">tcp_s..</text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.03%)</title><rect x="374.4" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="377.4" y="558.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="374.9" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="377.9" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="375.4" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="378.4" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (270 samples, 4.14%)</title><rect x="375.8" y="547.0" width="48.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="378.8" y="558.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="377.3" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="380.3" y="542.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.03%)</title><rect x="378.0" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="381.0" y="542.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="378.3" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="381.3" y="542.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.03%)</title><rect x="378.3" y="515.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="381.3" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.18%)</title><rect x="378.7" y="531.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="381.7" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.15%)</title><rect x="379.1" y="515.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="382.1" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (4 samples, 0.06%)</title><rect x="379.4" y="499.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="382.4" y="510.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (3 samples, 0.05%)</title><rect x="379.4" y="483.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="382.4" y="494.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="380.5" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="383.5" y="510.0"></text>
</g>
<g>
<title>tcp_push (236 samples, 3.62%)</title><rect x="381.2" y="531.0" width="42.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="384.2" y="542.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (234 samples, 3.59%)</title><rect x="381.4" y="515.0" width="42.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="384.4" y="526.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (234 samples, 3.59%)</title><rect x="381.4" y="499.0" width="42.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.4" y="510.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (217 samples, 3.33%)</title><rect x="382.1" y="483.0" width="39.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="385.1" y="494.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (201 samples, 3.08%)</title><rect x="384.1" y="467.0" width="36.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.1" y="478.0">ip_..</text>
</g>
<g>
<title>ip_local_out (196 samples, 3.01%)</title><rect x="384.7" y="451.0" width="35.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="387.7" y="462.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.05%)</title><rect x="384.9" y="435.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="387.9" y="446.0"></text>
</g>
<g>
<title>ip_output (192 samples, 2.95%)</title><rect x="385.4" y="435.0" width="34.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="388.4" y="446.0">ip..</text>
</g>
<g>
<title>ip_finish_output (191 samples, 2.93%)</title><rect x="385.4" y="419.0" width="34.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="388.4" y="430.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (188 samples, 2.89%)</title><rect x="385.9" y="403.0" width="34.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="388.9" y="414.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (165 samples, 2.53%)</title><rect x="387.2" y="387.0" width="29.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="390.2" y="398.0">__..</text>
</g>
<g>
<title>do_softirq.part.15 (165 samples, 2.53%)</title><rect x="387.2" y="371.0" width="29.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="390.2" y="382.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (164 samples, 2.52%)</title><rect x="387.4" y="355.0" width="29.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="390.4" y="366.0">do..</text>
</g>
<g>
<title>call_on_stack (164 samples, 2.52%)</title><rect x="387.4" y="339.0" width="29.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="390.4" y="350.0">ca..</text>
</g>
<g>
<title>__do_softirq (164 samples, 2.52%)</title><rect x="387.4" y="323.0" width="29.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="390.4" y="334.0">__..</text>
</g>
<g>
<title>net_rx_action (159 samples, 2.44%)</title><rect x="388.1" y="307.0" width="28.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="391.1" y="318.0">ne..</text>
</g>
<g>
<title>process_backlog (157 samples, 2.41%)</title><rect x="388.5" y="291.0" width="28.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="391.5" y="302.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (155 samples, 2.38%)</title><rect x="388.7" y="275.0" width="28.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="391.7" y="286.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (154 samples, 2.36%)</title><rect x="388.7" y="259.0" width="27.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="391.7" y="270.0">_..</text>
</g>
<g>
<title>ip_rcv (150 samples, 2.30%)</title><rect x="389.2" y="243.0" width="27.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="392.2" y="254.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (148 samples, 2.27%)</title><rect x="389.6" y="227.0" width="26.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="392.6" y="238.0">i..</text>
</g>
<g>
<title>ip_local_deliver (148 samples, 2.27%)</title><rect x="389.6" y="211.0" width="26.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="392.6" y="222.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (147 samples, 2.26%)</title><rect x="389.6" y="195.0" width="26.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="392.6" y="206.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (144 samples, 2.21%)</title><rect x="390.1" y="179.0" width="26.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="393.1" y="190.0">t..</text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.05%)</title><rect x="391.4" y="163.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="394.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (132 samples, 2.03%)</title><rect x="391.9" y="163.0" width="23.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="394.9" y="174.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (131 samples, 2.01%)</title><rect x="392.1" y="147.0" width="23.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="395.1" y="158.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="393.0" y="131.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="396.0" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (17 samples, 0.26%)</title><rect x="393.6" y="131.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="396.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (16 samples, 0.25%)</title><rect x="393.7" y="115.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="396.7" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 0.25%)</title><rect x="393.7" y="99.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="396.7" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.25%)</title><rect x="393.7" y="83.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="396.7" y="94.0"></text>
</g>
<g>
<title>tcp_ack (15 samples, 0.23%)</title><rect x="396.6" y="131.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="399.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.12%)</title><rect x="397.7" y="115.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="400.7" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.08%)</title><rect x="398.1" y="99.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="401.1" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="398.1" y="83.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="401.1" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="398.1" y="67.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="401.1" y="78.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="398.6" y="83.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="401.6" y="94.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="398.6" y="67.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.6" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.03%)</title><rect x="398.6" y="51.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="401.6" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="398.6" y="35.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="401.6" y="46.0"></text>
</g>
<g>
<title>tcp_data_queue (86 samples, 1.32%)</title><rect x="399.3" y="131.0" width="15.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="402.3" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (81 samples, 1.24%)</title><rect x="399.3" y="115.0" width="14.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="402.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (80 samples, 1.23%)</title><rect x="399.5" y="99.0" width="14.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="402.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (80 samples, 1.23%)</title><rect x="399.5" y="83.0" width="14.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="402.5" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (80 samples, 1.23%)</title><rect x="399.5" y="67.0" width="14.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="402.5" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.08%)</title><rect x="414.0" y="115.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="417.0" y="126.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.24 (3 samples, 0.05%)</title><rect x="414.4" y="99.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="417.4" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="415.1" y="131.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="418.1" y="142.0"></text>
</g>
<g>
<title>skb_try_coalesce (2 samples, 0.03%)</title><rect x="415.1" y="115.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="418.1" y="126.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="415.8" y="163.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="418.8" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (16 samples, 0.25%)</title><rect x="417.1" y="387.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="420.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (16 samples, 0.25%)</title><rect x="417.1" y="371.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="420.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.06%)</title><rect x="417.6" y="355.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="420.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.05%)</title><rect x="417.6" y="339.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="420.6" y="350.0"></text>
</g>
<g>
<title>netdev_pick_tx (4 samples, 0.06%)</title><rect x="418.5" y="355.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="421.5" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="419.5" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="422.5" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="420.2" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="423.2" y="462.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.08%)</title><rect x="420.5" y="467.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="423.5" y="478.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.08%)</title><rect x="420.5" y="451.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.5" y="462.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="421.1" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="424.1" y="446.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="421.4" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="424.4" y="494.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.03%)</title><rect x="421.4" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="424.4" y="478.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (2 samples, 0.03%)</title><rect x="421.4" y="451.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="424.4" y="462.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.06%)</title><rect x="422.2" y="483.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="425.2" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="423.1" y="483.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="426.1" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="423.1" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="426.1" y="478.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="423.1" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="426.1" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="423.1" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="426.1" y="446.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.06%)</title><rect x="424.0" y="531.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="427.0" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.05%)</title><rect x="424.2" y="515.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.2" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.06%)</title><rect x="425.1" y="579.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="428.1" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="425.1" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="428.1" y="574.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="425.4" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="428.4" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="425.4" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="428.4" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="425.4" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.4" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="425.8" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="428.8" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="426.2" y="627.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="429.2" y="638.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="426.2" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="429.2" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="426.2" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="429.2" y="606.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="426.2" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="429.2" y="590.0"></text>
</g>
<g>
<title>import_iovec (2 samples, 0.03%)</title><rect x="426.5" y="643.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="429.5" y="654.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (2 samples, 0.03%)</title><rect x="426.9" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="429.9" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (5 samples, 0.08%)</title><rect x="427.6" y="835.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,301 samples, 19.97%)</title><rect x="428.5" y="1091.0" width="235.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.5" y="1102.0">jdk/internal/net/http/common/Se..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,300 samples, 19.95%)</title><rect x="428.7" y="1075.0" width="235.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.7" y="1086.0">jdk/internal/net/http/common/Se..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (156 samples, 2.39%)</title><rect x="428.7" y="1059.0" width="28.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.7" y="1070.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (156 samples, 2.39%)</title><rect x="428.7" y="1043.0" width="28.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.7" y="1054.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (155 samples, 2.38%)</title><rect x="428.9" y="1027.0" width="28.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.9" y="1038.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (33 samples, 0.51%)</title><rect x="429.0" y="1011.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (33 samples, 0.51%)</title><rect x="429.0" y="995.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (33 samples, 0.51%)</title><rect x="429.0" y="979.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (33 samples, 0.51%)</title><rect x="429.0" y="963.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (33 samples, 0.51%)</title><rect x="429.0" y="947.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (33 samples, 0.51%)</title><rect x="429.0" y="931.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (33 samples, 0.51%)</title><rect x="429.0" y="915.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (33 samples, 0.51%)</title><rect x="429.0" y="899.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (33 samples, 0.51%)</title><rect x="429.0" y="883.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.0" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (33 samples, 0.51%)</title><rect x="429.0" y="867.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (33 samples, 0.51%)</title><rect x="429.0" y="851.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="432.0" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (31 samples, 0.48%)</title><rect x="429.2" y="835.0" width="5.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="432.2" y="846.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (31 samples, 0.48%)</title><rect x="429.2" y="819.0" width="5.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="432.2" y="830.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (31 samples, 0.48%)</title><rect x="429.2" y="803.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="432.2" y="814.0"></text>
</g>
<g>
<title>sys_write (31 samples, 0.48%)</title><rect x="429.2" y="787.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="432.2" y="798.0"></text>
</g>
<g>
<title>vfs_write (31 samples, 0.48%)</title><rect x="429.2" y="771.0" width="5.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="432.2" y="782.0"></text>
</g>
<g>
<title>__vfs_write (29 samples, 0.45%)</title><rect x="429.2" y="755.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="432.2" y="766.0"></text>
</g>
<g>
<title>new_sync_write (29 samples, 0.45%)</title><rect x="429.2" y="739.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="432.2" y="750.0"></text>
</g>
<g>
<title>pipe_write (28 samples, 0.43%)</title><rect x="429.4" y="723.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="432.4" y="734.0"></text>
</g>
<g>
<title>__wake_up_sync_key (28 samples, 0.43%)</title><rect x="429.4" y="707.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="432.4" y="718.0"></text>
</g>
<g>
<title>__wake_up_common_lock (28 samples, 0.43%)</title><rect x="429.4" y="691.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="432.4" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (28 samples, 0.43%)</title><rect x="429.4" y="675.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="432.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (121 samples, 1.86%)</title><rect x="435.0" y="1011.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.0" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (118 samples, 1.81%)</title><rect x="435.6" y="995.0" width="21.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.6" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (118 samples, 1.81%)</title><rect x="435.6" y="979.0" width="21.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.6" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (118 samples, 1.81%)</title><rect x="435.6" y="963.0" width="21.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.6" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (70 samples, 1.07%)</title><rect x="435.6" y="947.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="438.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (70 samples, 1.07%)</title><rect x="435.6" y="931.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="438.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (67 samples, 1.03%)</title><rect x="436.1" y="915.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (67 samples, 1.03%)</title><rect x="436.1" y="899.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (67 samples, 1.03%)</title><rect x="436.1" y="883.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (67 samples, 1.03%)</title><rect x="436.1" y="867.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (67 samples, 1.03%)</title><rect x="436.1" y="851.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (67 samples, 1.03%)</title><rect x="436.1" y="835.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (67 samples, 1.03%)</title><rect x="436.1" y="819.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (58 samples, 0.89%)</title><rect x="436.5" y="803.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/33260527.apply (40 samples, 0.61%)</title><rect x="437.2" y="787.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (40 samples, 0.61%)</title><rect x="437.2" y="771.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (39 samples, 0.60%)</title><rect x="437.4" y="755.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (39 samples, 0.60%)</title><rect x="437.4" y="739.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (38 samples, 0.58%)</title><rect x="437.6" y="723.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.6" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (13 samples, 0.20%)</title><rect x="438.1" y="707.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="441.1" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.03%)</title><rect x="438.1" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.1" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.03%)</title><rect x="438.1" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.1" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.03%)</title><rect x="438.1" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="438.1" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (8 samples, 0.12%)</title><rect x="438.6" y="691.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.12%)</title><rect x="438.6" y="675.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="441.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (7 samples, 0.11%)</title><rect x="438.8" y="659.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="441.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (7 samples, 0.11%)</title><rect x="438.8" y="643.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.11%)</title><rect x="438.8" y="627.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.09%)</title><rect x="438.8" y="611.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (4 samples, 0.06%)</title><rect x="439.2" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.05%)</title><rect x="439.4" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (2 samples, 0.03%)</title><rect x="440.1" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (2 samples, 0.03%)</title><rect x="440.1" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (2 samples, 0.03%)</title><rect x="440.1" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (2 samples, 0.03%)</title><rect x="440.1" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.03%)</title><rect x="440.1" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="440.5" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.29%)</title><rect x="441.0" y="707.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/10621704.run (19 samples, 0.29%)</title><rect x="441.0" y="691.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="444.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (19 samples, 0.29%)</title><rect x="441.0" y="675.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (6 samples, 0.09%)</title><rect x="441.2" y="659.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.05%)</title><rect x="441.5" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.05%)</title><rect x="441.5" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (11 samples, 0.17%)</title><rect x="442.3" y="659.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="445.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (11 samples, 0.17%)</title><rect x="442.3" y="643.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.3" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (9 samples, 0.14%)</title><rect x="442.3" y="627.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="445.3" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (9 samples, 0.14%)</title><rect x="442.3" y="611.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="445.3" y="622.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (9 samples, 0.14%)</title><rect x="442.3" y="595.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.3" y="606.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.05%)</title><rect x="442.3" y="579.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="445.3" y="590.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (6 samples, 0.09%)</title><rect x="442.8" y="579.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="445.8" y="590.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.05%)</title><rect x="443.2" y="563.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="446.2" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="443.4" y="547.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="446.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="443.9" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="443.9" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="446.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/21539894.apply (14 samples, 0.21%)</title><rect x="444.4" y="787.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (14 samples, 0.21%)</title><rect x="444.4" y="771.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="447.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (13 samples, 0.20%)</title><rect x="444.4" y="755.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (10 samples, 0.15%)</title><rect x="445.0" y="739.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (10 samples, 0.15%)</title><rect x="445.0" y="723.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="448.0" y="734.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (9 samples, 0.14%)</title><rect x="445.2" y="707.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.2" y="718.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (5 samples, 0.08%)</title><rect x="445.3" y="691.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.3" y="702.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (5 samples, 0.08%)</title><rect x="445.3" y="675.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.3" y="686.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (5 samples, 0.08%)</title><rect x="445.3" y="659.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="448.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (5 samples, 0.08%)</title><rect x="445.3" y="643.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.3" y="654.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.05%)</title><rect x="446.3" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="449.3" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.05%)</title><rect x="446.3" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.3" y="686.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.03%)</title><rect x="446.4" y="659.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="449.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.06%)</title><rect x="447.0" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="450.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.06%)</title><rect x="447.0" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$186/6790542.apply (3 samples, 0.05%)</title><rect x="447.2" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="450.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (3 samples, 0.05%)</title><rect x="447.2" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="447.3" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.03%)</title><rect x="447.3" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="450.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="447.3" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.05%)</title><rect x="447.7" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.05%)</title><rect x="447.7" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.05%)</title><rect x="447.7" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (47 samples, 0.72%)</title><rect x="448.2" y="947.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (4 samples, 0.06%)</title><rect x="449.3" y="931.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.03%)</title><rect x="450.1" y="931.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (6 samples, 0.09%)</title><rect x="450.4" y="931.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.4" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.09%)</title><rect x="450.4" y="915.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.4" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.09%)</title><rect x="450.4" y="899.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.4" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (4 samples, 0.06%)</title><rect x="450.8" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (4 samples, 0.06%)</title><rect x="450.8" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.8" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.06%)</title><rect x="450.8" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.8" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.05%)</title><rect x="451.0" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (29 samples, 0.45%)</title><rect x="451.5" y="931.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (29 samples, 0.45%)</title><rect x="451.5" y="915.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (9 samples, 0.14%)</title><rect x="452.6" y="899.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (9 samples, 0.14%)</title><rect x="452.6" y="883.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.trim (7 samples, 0.11%)</title><rect x="454.2" y="899.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.2" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (7 samples, 0.11%)</title><rect x="454.2" y="883.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.2" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (7 samples, 0.11%)</title><rect x="455.5" y="899.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.5" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="456.0" y="883.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="456.0" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.0" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.03%)</title><rect x="456.4" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,144 samples, 17.56%)</title><rect x="456.9" y="1059.0" width="207.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.9" y="1070.0">jdk/internal/net/http/commo..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,144 samples, 17.56%)</title><rect x="456.9" y="1043.0" width="207.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.9" y="1054.0">jdk/internal/net/http/commo..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,144 samples, 17.56%)</title><rect x="456.9" y="1027.0" width="207.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.9" y="1038.0">jdk/internal/net/http/commo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$161/5657416.run (1,142 samples, 17.53%)</title><rect x="457.3" y="1011.0" width="206.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.3" y="1022.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,141 samples, 17.51%)</title><rect x="457.5" y="995.0" width="206.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.5" y="1006.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,138 samples, 17.46%)</title><rect x="457.7" y="979.0" width="206.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.7" y="990.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="457.7" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="457.7" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$170/25985558.get$Lambda (2 samples, 0.03%)</title><rect x="457.7" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1,135 samples, 17.42%)</title><rect x="458.0" y="963.0" width="205.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.0" y="974.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1,135 samples, 17.42%)</title><rect x="458.0" y="947.0" width="205.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.0" y="958.0">jdk/internal/net/http/Respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/16991611.run (172 samples, 2.64%)</title><rect x="458.0" y="931.0" width="31.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.0" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (172 samples, 2.64%)</title><rect x="458.0" y="915.0" width="31.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.0" y="926.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (172 samples, 2.64%)</title><rect x="458.0" y="899.0" width="31.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.0" y="910.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (10 samples, 0.15%)</title><rect x="458.0" y="883.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.08%)</title><rect x="458.0" y="867.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.0" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.08%)</title><rect x="458.0" y="851.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.0" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.08%)</title><rect x="458.0" y="835.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.0" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.08%)</title><rect x="458.0" y="819.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.0" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.05%)</title><rect x="458.2" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="458.4" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="458.4" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="458.4" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="458.4" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="458.4" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.4" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.06%)</title><rect x="458.9" y="867.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.9" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.05%)</title><rect x="459.1" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.1" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (3 samples, 0.05%)</title><rect x="459.1" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (3 samples, 0.05%)</title><rect x="459.1" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (160 samples, 2.46%)</title><rect x="459.8" y="883.0" width="29.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.8" y="894.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (10 samples, 0.15%)</title><rect x="459.8" y="867.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.8" y="878.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (10 samples, 0.15%)</title><rect x="459.8" y="851.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.8" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.05%)</title><rect x="460.0" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.0" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.03%)</title><rect x="460.2" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (6 samples, 0.09%)</title><rect x="460.6" y="835.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.6" y="846.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (6 samples, 0.09%)</title><rect x="460.6" y="819.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="463.6" y="830.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long long&amp;, long long&amp;) (5 samples, 0.08%)</title><rect x="460.7" y="803.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="463.7" y="814.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.05%)</title><rect x="460.9" y="787.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="463.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.05%)</title><rect x="460.9" y="771.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.9" y="782.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.05%)</title><rect x="460.9" y="755.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="463.9" y="766.0"></text>
</g>
<g>
<title>sys_gettimeofday (2 samples, 0.03%)</title><rect x="461.1" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="464.1" y="750.0"></text>
</g>
<g>
<title>do_gettimeofday (2 samples, 0.03%)</title><rect x="461.1" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="464.1" y="734.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.03%)</title><rect x="461.1" y="707.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="464.1" y="718.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.03%)</title><rect x="461.1" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="464.1" y="702.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="461.1" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="464.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (150 samples, 2.30%)</title><rect x="461.6" y="867.0" width="27.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.6" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (10 samples, 0.15%)</title><rect x="462.0" y="851.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.0" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.isAfter (2 samples, 0.03%)</title><rect x="462.4" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.4" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (2 samples, 0.03%)</title><rect x="462.4" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.4" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (4 samples, 0.06%)</title><rect x="462.9" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.9" y="846.0"></text>
</g>
<g>
<title>java/time/Duration.toNanos (2 samples, 0.03%)</title><rect x="462.9" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.9" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (2 samples, 0.03%)</title><rect x="463.3" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (7 samples, 0.11%)</title><rect x="463.8" y="851.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.8" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.08%)</title><rect x="463.8" y="835.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.05%)</title><rect x="463.8" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.03%)</title><rect x="464.0" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.0" y="814.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.03%)</title><rect x="464.0" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.0" y="798.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (2 samples, 0.03%)</title><rect x="464.0" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.0" y="782.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (2 samples, 0.03%)</title><rect x="464.0" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.0" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="464.4" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.03%)</title><rect x="464.4" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.4" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.03%)</title><rect x="464.7" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.7" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.03%)</title><rect x="464.7" y="819.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (131 samples, 2.01%)</title><rect x="465.1" y="851.0" width="23.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.1" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (131 samples, 2.01%)</title><rect x="465.1" y="835.0" width="23.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.1" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (7 samples, 0.11%)</title><rect x="465.1" y="819.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (7 samples, 0.11%)</title><rect x="465.1" y="803.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (7 samples, 0.11%)</title><rect x="465.1" y="787.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.06%)</title><rect x="465.3" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.06%)</title><rect x="465.3" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.06%)</title><rect x="465.3" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (2 samples, 0.03%)</title><rect x="466.0" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (124 samples, 1.90%)</title><rect x="466.4" y="819.0" width="22.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.4" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (122 samples, 1.87%)</title><rect x="466.7" y="803.0" width="22.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.7" y="814.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (120 samples, 1.84%)</title><rect x="466.7" y="787.0" width="21.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.7" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (120 samples, 1.84%)</title><rect x="466.7" y="771.0" width="21.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.7" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (120 samples, 1.84%)</title><rect x="466.7" y="755.0" width="21.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.7" y="766.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (119 samples, 1.83%)</title><rect x="466.9" y="739.0" width="21.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.9" y="750.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (119 samples, 1.83%)</title><rect x="466.9" y="723.0" width="21.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.9" y="734.0">s..</text>
</g>
<g>
<title>__kernel_vsyscall (115 samples, 1.76%)</title><rect x="467.6" y="707.0" width="20.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="470.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (115 samples, 1.76%)</title><rect x="467.6" y="691.0" width="20.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="470.6" y="702.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (115 samples, 1.76%)</title><rect x="467.6" y="675.0" width="20.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="470.6" y="686.0"></text>
</g>
<g>
<title>sys_write (115 samples, 1.76%)</title><rect x="467.6" y="659.0" width="20.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="470.6" y="670.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="467.6" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="470.6" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="467.6" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="470.6" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="467.6" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="470.6" y="622.0"></text>
</g>
<g>
<title>vfs_write (111 samples, 1.70%)</title><rect x="468.3" y="643.0" width="20.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="471.3" y="654.0"></text>
</g>
<g>
<title>__vfs_write (105 samples, 1.61%)</title><rect x="468.5" y="627.0" width="19.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="471.5" y="638.0"></text>
</g>
<g>
<title>new_sync_write (104 samples, 1.60%)</title><rect x="468.5" y="611.0" width="18.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="471.5" y="622.0"></text>
</g>
<g>
<title>kill_fasync (2 samples, 0.03%)</title><rect x="468.7" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="471.7" y="606.0"></text>
</g>
<g>
<title>pipe_write (101 samples, 1.55%)</title><rect x="469.1" y="595.0" width="18.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="472.1" y="606.0"></text>
</g>
<g>
<title>__wake_up_sync_key (98 samples, 1.50%)</title><rect x="469.3" y="579.0" width="17.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="472.3" y="590.0"></text>
</g>
<g>
<title>__wake_up_common_lock (98 samples, 1.50%)</title><rect x="469.3" y="563.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.3" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (98 samples, 1.50%)</title><rect x="469.3" y="547.0" width="17.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="472.3" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.06%)</title><rect x="487.7" y="627.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.7" y="638.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="488.1" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="491.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="488.4" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.03%)</title><rect x="488.8" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (2 samples, 0.03%)</title><rect x="488.8" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/1920882.accept (14 samples, 0.21%)</title><rect x="489.2" y="931.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (14 samples, 0.21%)</title><rect x="489.2" y="915.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (14 samples, 0.21%)</title><rect x="489.2" y="899.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="492.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (13 samples, 0.20%)</title><rect x="489.2" y="883.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.20%)</title><rect x="489.2" y="867.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.12%)</title><rect x="490.1" y="851.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.12%)</title><rect x="490.1" y="835.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/20534699.accept (3 samples, 0.05%)</title><rect x="490.1" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (3 samples, 0.05%)</title><rect x="490.1" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (3 samples, 0.05%)</title><rect x="490.1" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (3 samples, 0.05%)</title><rect x="490.1" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (3 samples, 0.05%)</title><rect x="490.1" y="755.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$223/21000255.accept (5 samples, 0.08%)</title><rect x="490.6" y="819.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (5 samples, 0.08%)</title><rect x="490.6" y="803.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (5 samples, 0.08%)</title><rect x="490.6" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.6" y="798.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (5 samples, 0.08%)</title><rect x="490.6" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.6" y="782.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (4 samples, 0.06%)</title><rect x="490.8" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (947 samples, 14.53%)</title><rect x="491.7" y="931.0" width="171.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.7" y="942.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (947 samples, 14.53%)</title><rect x="491.7" y="915.0" width="171.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.7" y="926.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (947 samples, 14.53%)</title><rect x="491.7" y="899.0" width="171.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.7" y="910.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (945 samples, 14.50%)</title><rect x="492.1" y="883.0" width="171.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.1" y="894.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (945 samples, 14.50%)</title><rect x="492.1" y="867.0" width="171.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.1" y="878.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (930 samples, 14.27%)</title><rect x="494.8" y="851.0" width="168.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.8" y="862.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (927 samples, 14.23%)</title><rect x="495.3" y="835.0" width="167.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.3" y="846.0">java/util/concurrent/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/27658891.accept (927 samples, 14.23%)</title><rect x="495.3" y="819.0" width="167.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.3" y="830.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (927 samples, 14.23%)</title><rect x="495.3" y="803.0" width="167.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.3" y="814.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (927 samples, 14.23%)</title><rect x="495.3" y="787.0" width="167.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.3" y="798.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (927 samples, 14.23%)</title><rect x="495.3" y="771.0" width="167.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.3" y="782.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (920 samples, 14.12%)</title><rect x="496.6" y="755.0" width="166.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.6" y="766.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (919 samples, 14.10%)</title><rect x="496.8" y="739.0" width="166.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="499.8" y="750.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (916 samples, 14.06%)</title><rect x="496.8" y="723.0" width="165.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.8" y="734.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (912 samples, 14.00%)</title><rect x="497.3" y="707.0" width="165.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.3" y="718.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (192 samples, 2.95%)</title><rect x="497.5" y="691.0" width="34.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.5" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.11%)</title><rect x="497.5" y="675.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.5" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.11%)</title><rect x="497.5" y="659.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (5 samples, 0.08%)</title><rect x="497.5" y="643.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.5" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (2 samples, 0.03%)</title><rect x="498.4" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.4" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (185 samples, 2.84%)</title><rect x="498.8" y="675.0" width="33.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.8" y="686.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (185 samples, 2.84%)</title><rect x="498.8" y="659.0" width="33.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.8" y="670.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.setPriority (5 samples, 0.08%)</title><rect x="499.1" y="643.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (5 samples, 0.08%)</title><rect x="499.1" y="627.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.1" y="638.0"></text>
</g>
<g>
<title>JVM_SetThreadPriority (2 samples, 0.03%)</title><rect x="499.3" y="611.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="502.3" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="499.7" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="502.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.addUnstarted (3 samples, 0.05%)</title><rect x="500.0" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.0" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (175 samples, 2.69%)</title><rect x="500.6" y="643.0" width="31.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.6" y="654.0">ja..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (2 samples, 0.03%)</title><rect x="500.6" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.6" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (173 samples, 2.66%)</title><rect x="500.9" y="627.0" width="31.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.9" y="638.0">ja..</text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (4 samples, 0.06%)</title><rect x="500.9" y="611.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="503.9" y="622.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_getStackAccessControlContext (169 samples, 2.59%)</title><rect x="501.7" y="611.0" width="30.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="504.7" y="622.0">Ja..</text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (157 samples, 2.41%)</title><rect x="502.2" y="595.0" width="28.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="505.2" y="606.0">JV..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (14 samples, 0.21%)</title><rect x="507.1" y="579.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="510.1" y="590.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;573526ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)3, 573526ull&gt;::oop_access_barrier(oopDesc*, int) (13 samples, 0.20%)</title><rect x="509.6" y="579.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="512.6" y="590.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.03%)</title><rect x="512.0" y="579.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="515.0" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::protection_domain() const (2 samples, 0.03%)</title><rect x="512.4" y="579.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="515.4" y="590.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.03%)</title><rect x="512.7" y="579.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="515.7" y="590.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="513.1" y="579.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="516.1" y="590.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::~JvmtiVMObjectAllocEventCollector() (2 samples, 0.03%)</title><rect x="513.4" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="516.4" y="590.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="514.0" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="517.0" y="590.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (2 samples, 0.03%)</title><rect x="514.7" y="579.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="517.7" y="590.0"></text>
</g>
<g>
<title>frame::entry_frame_is_first() const (2 samples, 0.03%)</title><rect x="515.1" y="579.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="518.1" y="590.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.03%)</title><rect x="515.6" y="579.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="518.6" y="590.0"></text>
</g>
<g>
<title>java_security_AccessControlContext::create(objArrayHandle, bool, Handle, Thread*) (6 samples, 0.09%)</title><rect x="516.2" y="579.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="519.2" y="590.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;573526ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)1, 573526ull&gt;::oop_access_barrier(oopDesc*, int, oopDesc*) (2 samples, 0.03%)</title><rect x="516.3" y="563.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="519.3" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="516.7" y="563.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="519.7" y="574.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (5 samples, 0.08%)</title><rect x="517.2" y="579.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="520.2" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (5 samples, 0.08%)</title><rect x="517.2" y="563.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="520.2" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (3 samples, 0.05%)</title><rect x="517.6" y="547.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="520.6" y="558.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (14 samples, 0.21%)</title><rect x="518.1" y="579.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="521.1" y="590.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (10 samples, 0.15%)</title><rect x="518.9" y="563.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="521.9" y="574.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.06%)</title><rect x="519.1" y="547.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="522.1" y="558.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="519.4" y="531.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="522.4" y="542.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (4 samples, 0.06%)</title><rect x="520.0" y="547.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="523.0" y="558.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (55 samples, 0.84%)</title><rect x="520.7" y="579.0" width="9.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="523.7" y="590.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (3 samples, 0.05%)</title><rect x="524.7" y="563.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="527.7" y="574.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (26 samples, 0.40%)</title><rect x="525.8" y="563.0" width="4.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="528.8" y="574.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (20 samples, 0.31%)</title><rect x="526.8" y="547.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="529.8" y="558.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (12 samples, 0.18%)</title><rect x="527.4" y="531.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="530.4" y="542.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (12 samples, 0.18%)</title><rect x="527.4" y="515.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="530.4" y="526.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (5 samples, 0.08%)</title><rect x="529.6" y="531.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="532.6" y="542.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::~JvmtiVMObjectAllocEventCollector() (2 samples, 0.03%)</title><rect x="530.6" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="533.6" y="606.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (2 samples, 0.03%)</title><rect x="531.9" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="534.9" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.start (719 samples, 11.03%)</title><rect x="532.3" y="691.0" width="130.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.3" y="702.0">java/lang/Thread..</text>
</g>
<g>
<title>java/lang/Thread.start0 (717 samples, 11.00%)</title><rect x="532.6" y="675.0" width="129.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.6" y="686.0">java/lang/Thread..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (9 samples, 0.14%)</title><rect x="533.5" y="659.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="536.5" y="670.0"></text>
</g>
<g>
<title>JVM_StartThread (175 samples, 2.69%)</title><rect x="535.2" y="659.0" width="31.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="538.2" y="670.0">JV..</text>
</g>
<g>
<title>AllocateHeap(unsigned int, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (2 samples, 0.03%)</title><rect x="535.9" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="538.9" y="654.0"></text>
</g>
<g>
<title>HandshakeState::HandshakeState() (2 samples, 0.03%)</title><rect x="536.6" y="643.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="539.6" y="654.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned int) (93 samples, 1.43%)</title><rect x="537.0" y="643.0" width="16.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="540.0" y="654.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.05%)</title><rect x="537.2" y="627.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="540.2" y="638.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (2 samples, 0.03%)</title><rect x="537.9" y="627.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="540.9" y="638.0"></text>
</g>
<g>
<title>BarrierSet::on_thread_create(Thread*) (3 samples, 0.05%)</title><rect x="538.4" y="627.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="541.4" y="638.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (3 samples, 0.05%)</title><rect x="539.3" y="627.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="542.3" y="638.0"></text>
</g>
<g>
<title>Thread::Thread() (32 samples, 0.49%)</title><rect x="540.1" y="627.0" width="5.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="543.1" y="638.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (4 samples, 0.06%)</title><rect x="540.4" y="611.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="543.4" y="622.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned int, AllocFailStrategy::AllocFailEnum) (2 samples, 0.03%)</title><rect x="540.8" y="595.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="543.8" y="606.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType, unsigned int) (2 samples, 0.03%)</title><rect x="541.1" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="544.1" y="622.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (8 samples, 0.12%)</title><rect x="541.5" y="611.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="544.5" y="622.0"></text>
</g>
<g>
<title>_Atomic_move_long (2 samples, 0.03%)</title><rect x="541.7" y="595.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="544.7" y="606.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="542.1" y="595.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="545.1" y="606.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.06%)</title><rect x="542.2" y="579.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="545.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="542.2" y="563.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="545.2" y="574.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="542.2" y="547.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="545.2" y="558.0"></text>
</g>
<g>
<title>sys_clock_gettime (3 samples, 0.05%)</title><rect x="542.4" y="531.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="545.4" y="542.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (5 samples, 0.08%)</title><rect x="543.1" y="611.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="546.1" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.09%)</title><rect x="544.4" y="611.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="547.4" y="622.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.06%)</title><rect x="544.6" y="595.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="547.6" y="606.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="544.6" y="579.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.6" y="590.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="544.6" y="563.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="547.6" y="574.0"></text>
</g>
<g>
<title>sys_gettimeofday (3 samples, 0.05%)</title><rect x="544.8" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="547.8" y="558.0"></text>
</g>
<g>
<title>do_gettimeofday (2 samples, 0.03%)</title><rect x="544.9" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="547.9" y="542.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.03%)</title><rect x="544.9" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="547.9" y="526.0"></text>
</g>
<g>
<title>getpagesize (2 samples, 0.03%)</title><rect x="546.4" y="627.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="549.4" y="638.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned int) (35 samples, 0.54%)</title><rect x="546.9" y="627.0" width="6.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="549.9" y="638.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.05%)</title><rect x="547.1" y="611.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="550.1" y="622.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.03%)</title><rect x="548.0" y="611.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="551.0" y="622.0"></text>
</g>
<g>
<title>OSThread::OSThread(int (*)(void*), void*) (3 samples, 0.05%)</title><rect x="548.4" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="551.4" y="622.0"></text>
</g>
<g>
<title>OSThread::pd_initialize() (2 samples, 0.03%)</title><rect x="548.4" y="595.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="551.4" y="606.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="548.4" y="579.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="551.4" y="590.0"></text>
</g>
<g>
<title>__pthread_create_2_1 (18 samples, 0.28%)</title><rect x="548.9" y="611.0" width="3.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="551.9" y="622.0"></text>
</g>
<g>
<title>free (2 samples, 0.03%)</title><rect x="552.7" y="611.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="555.7" y="622.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (40 samples, 0.61%)</title><rect x="553.8" y="643.0" width="7.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="556.8" y="654.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (4 samples, 0.06%)</title><rect x="554.4" y="627.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="557.4" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="554.5" y="611.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="557.5" y="622.0"></text>
</g>
<g>
<title>ThreadService::add_thread(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="555.3" y="627.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="558.3" y="638.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (2 samples, 0.03%)</title><rect x="555.8" y="627.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="558.8" y="638.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (25 samples, 0.38%)</title><rect x="556.2" y="627.0" width="4.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="559.2" y="638.0"></text>
</g>
<g>
<title>Threads::non_java_threads_do(ThreadClosure*) (4 samples, 0.06%)</title><rect x="559.4" y="611.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="562.4" y="622.0"></text>
</g>
<g>
<title>free (3 samples, 0.05%)</title><rect x="560.2" y="611.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="563.2" y="622.0"></text>
</g>
<g>
<title>Monitor::lock() (8 samples, 0.12%)</title><rect x="561.1" y="643.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="564.1" y="654.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (3 samples, 0.05%)</title><rect x="561.4" y="627.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="564.4" y="638.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (3 samples, 0.05%)</title><rect x="562.0" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="565.0" y="638.0"></text>
</g>
<g>
<title>Parker::Allocate(JavaThread*) (3 samples, 0.05%)</title><rect x="562.7" y="643.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="565.7" y="654.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned int, bool, MemoryType) (4 samples, 0.06%)</title><rect x="563.4" y="643.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="566.4" y="654.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned int, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (2 samples, 0.03%)</title><rect x="563.6" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="566.6" y="638.0"></text>
</g>
<g>
<title>Thread::start(Thread*) (2 samples, 0.03%)</title><rect x="564.1" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="567.1" y="654.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (2 samples, 0.03%)</title><rect x="564.1" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="567.1" y="638.0"></text>
</g>
<g>
<title>ThreadSafepointState::create(JavaThread*) (2 samples, 0.03%)</title><rect x="564.7" y="643.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="567.7" y="654.0"></text>
</g>
<g>
<title>jni_functions() (2 samples, 0.03%)</title><rect x="566.0" y="643.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="569.0" y="654.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned int) (2 samples, 0.03%)</title><rect x="566.3" y="643.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="569.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (519 samples, 7.97%)</title><rect x="567.2" y="659.0" width="94.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="570.2" y="670.0">[unknown]</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (33 samples, 0.51%)</title><rect x="567.2" y="643.0" width="6.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="570.2" y="654.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (14 samples, 0.21%)</title><rect x="573.2" y="643.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="576.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.21%)</title><rect x="573.2" y="627.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="576.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.21%)</title><rect x="573.2" y="611.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="576.2" y="622.0"></text>
</g>
<g>
<title>__vsnprintf_chk (12 samples, 0.18%)</title><rect x="573.6" y="595.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="576.6" y="606.0"></text>
</g>
<g>
<title>_IO_vfprintf (6 samples, 0.09%)</title><rect x="574.1" y="579.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="577.1" y="590.0"></text>
</g>
<g>
<title>strchrnul (3 samples, 0.05%)</title><rect x="575.2" y="579.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="578.2" y="590.0"></text>
</g>
<g>
<title>__kernel_vsyscall (210 samples, 3.22%)</title><rect x="575.9" y="643.0" width="38.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="578.9" y="654.0">__k..</text>
</g>
<g>
<title>entry_SYSENTER_32 (209 samples, 3.21%)</title><rect x="576.1" y="627.0" width="37.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="579.1" y="638.0">ent..</text>
</g>
<g>
<title>do_fast_syscall_32 (209 samples, 3.21%)</title><rect x="576.1" y="611.0" width="37.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="579.1" y="622.0">do_..</text>
</g>
<g>
<title>sys_futex (209 samples, 3.21%)</title><rect x="576.1" y="595.0" width="37.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="579.1" y="606.0">sys..</text>
</g>
<g>
<title>do_futex (208 samples, 3.19%)</title><rect x="576.3" y="579.0" width="37.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="579.3" y="590.0">do_..</text>
</g>
<g>
<title>futex_wait (133 samples, 2.04%)</title><rect x="576.3" y="563.0" width="24.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="579.3" y="574.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (128 samples, 1.96%)</title><rect x="576.3" y="547.0" width="23.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="579.3" y="558.0">f..</text>
</g>
<g>
<title>plist_add (2 samples, 0.03%)</title><rect x="576.5" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="579.5" y="542.0"></text>
</g>
<g>
<title>schedule (125 samples, 1.92%)</title><rect x="576.8" y="531.0" width="22.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="579.8" y="542.0">s..</text>
</g>
<g>
<title>__sched_text_start (125 samples, 1.92%)</title><rect x="576.8" y="515.0" width="22.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="579.8" y="526.0">_..</text>
</g>
<g>
<title>finish_task_switch (124 samples, 1.90%)</title><rect x="577.0" y="499.0" width="22.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="580.0" y="510.0">f..</text>
</g>
<g>
<title>put_task_stack (2 samples, 0.03%)</title><rect x="599.1" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="602.1" y="494.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.06%)</title><rect x="599.5" y="547.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="602.5" y="558.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="599.8" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="602.8" y="542.0"></text>
</g>
<g>
<title>futex_wake (75 samples, 1.15%)</title><rect x="600.4" y="563.0" width="13.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="603.4" y="574.0"></text>
</g>
<g>
<title>wake_up_q (71 samples, 1.09%)</title><rect x="601.1" y="547.0" width="12.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="604.1" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (71 samples, 1.09%)</title><rect x="601.1" y="531.0" width="12.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="604.1" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (71 samples, 1.09%)</title><rect x="601.1" y="515.0" width="12.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="604.1" y="526.0"></text>
</g>
<g>
<title>_dl_allocate_tls_init (4 samples, 0.06%)</title><rect x="614.5" y="643.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="617.5" y="654.0"></text>
</g>
<g>
<title>clone (247 samples, 3.79%)</title><rect x="615.2" y="643.0" width="44.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="618.2" y="654.0">clone</text>
</g>
<g>
<title>restore_all (241 samples, 3.70%)</title><rect x="616.3" y="627.0" width="43.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="619.3" y="638.0">rest..</text>
</g>
<g>
<title>do_int80_syscall_32 (241 samples, 3.70%)</title><rect x="616.3" y="611.0" width="43.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="619.3" y="622.0">do_i..</text>
</g>
<g>
<title>sys_clone (239 samples, 3.67%)</title><rect x="616.7" y="595.0" width="43.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="619.7" y="606.0">sys_..</text>
</g>
<g>
<title>_do_fork (237 samples, 3.64%)</title><rect x="616.7" y="579.0" width="42.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="619.7" y="590.0">_do_..</text>
</g>
<g>
<title>_raw_write_lock_irq (3 samples, 0.05%)</title><rect x="617.2" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="620.2" y="574.0"></text>
</g>
<g>
<title>audit_alloc (2 samples, 0.03%)</title><rect x="618.3" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="621.3" y="574.0"></text>
</g>
<g>
<title>copy_process.part.42 (145 samples, 2.23%)</title><rect x="618.8" y="563.0" width="26.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="621.8" y="574.0">c..</text>
</g>
<g>
<title>__alloc_pages_nodemask (16 samples, 0.25%)</title><rect x="621.2" y="547.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="624.2" y="558.0"></text>
</g>
<g>
<title>get_page_from_freelist (13 samples, 0.20%)</title><rect x="621.6" y="531.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="624.6" y="542.0"></text>
</g>
<g>
<title>__delayacct_tsk_init (2 samples, 0.03%)</title><rect x="624.1" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="627.1" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="624.1" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="627.1" y="542.0"></text>
</g>
<g>
<title>__percpu_down_read (2 samples, 0.03%)</title><rect x="624.6" y="547.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="627.6" y="558.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="625.2" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="628.2" y="558.0"></text>
</g>
<g>
<title>_warn_unseeded_randomness (3 samples, 0.05%)</title><rect x="625.5" y="547.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="628.5" y="558.0"></text>
</g>
<g>
<title>alloc_pid (11 samples, 0.17%)</title><rect x="626.1" y="547.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="629.1" y="558.0"></text>
</g>
<g>
<title>arch_dup_task_struct (10 samples, 0.15%)</title><rect x="628.1" y="547.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="631.1" y="558.0"></text>
</g>
<g>
<title>fpu__copy (5 samples, 0.08%)</title><rect x="628.1" y="531.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="631.1" y="542.0"></text>
</g>
<g>
<title>memcpy (5 samples, 0.08%)</title><rect x="629.0" y="531.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="632.0" y="542.0"></text>
</g>
<g>
<title>arch_local_irq_enable (11 samples, 0.17%)</title><rect x="629.9" y="547.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="632.9" y="558.0"></text>
</g>
<g>
<title>cgroup_can_fork (5 samples, 0.08%)</title><rect x="631.9" y="547.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="634.9" y="558.0"></text>
</g>
<g>
<title>pids_can_fork (3 samples, 0.05%)</title><rect x="632.2" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="635.2" y="542.0"></text>
</g>
<g>
<title>cgroup_post_fork (11 samples, 0.17%)</title><rect x="632.8" y="547.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="635.8" y="558.0"></text>
</g>
<g>
<title>cpu_cgroup_fork (7 samples, 0.11%)</title><rect x="633.5" y="531.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.5" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.11%)</title><rect x="633.5" y="515.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="636.5" y="526.0"></text>
</g>
<g>
<title>copy_creds (2 samples, 0.03%)</title><rect x="634.8" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="637.8" y="558.0"></text>
</g>
<g>
<title>copy_thread_tls (4 samples, 0.06%)</title><rect x="635.3" y="547.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="638.3" y="558.0"></text>
</g>
<g>
<title>do_set_thread_area (2 samples, 0.03%)</title><rect x="635.7" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="638.7" y="542.0"></text>
</g>
<g>
<title>cpuset_fork (2 samples, 0.03%)</title><rect x="636.0" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="639.0" y="558.0"></text>
</g>
<g>
<title>fpu__copy (2 samples, 0.03%)</title><rect x="636.4" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="639.4" y="558.0"></text>
</g>
<g>
<title>get_random_u32 (3 samples, 0.05%)</title><rect x="636.9" y="547.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="639.9" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="636.9" y="531.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="639.9" y="542.0"></text>
</g>
<g>
<title>idr_preload (2 samples, 0.03%)</title><rect x="637.5" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="640.5" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.05%)</title><rect x="638.0" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="641.0" y="558.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="638.6" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="641.6" y="558.0"></text>
</g>
<g>
<title>lsm_task_alloc (3 samples, 0.05%)</title><rect x="639.1" y="547.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="642.1" y="558.0"></text>
</g>
<g>
<title>perf_event_init_task (3 samples, 0.05%)</title><rect x="640.0" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="643.0" y="558.0"></text>
</g>
<g>
<title>sched_fork (10 samples, 0.15%)</title><rect x="641.3" y="547.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="644.3" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.09%)</title><rect x="641.3" y="531.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="644.3" y="542.0"></text>
</g>
<g>
<title>__sched_fork.isra.67 (3 samples, 0.05%)</title><rect x="642.4" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="645.4" y="542.0"></text>
</g>
<g>
<title>security_task_alloc (8 samples, 0.12%)</title><rect x="643.1" y="547.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="646.1" y="558.0"></text>
</g>
<g>
<title>lsm_task_alloc (5 samples, 0.08%)</title><rect x="643.5" y="531.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="646.5" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.05%)</title><rect x="643.8" y="515.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="646.8" y="526.0"></text>
</g>
<g>
<title>task_active_pid_ns (2 samples, 0.03%)</title><rect x="644.5" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="647.5" y="558.0"></text>
</g>
<g>
<title>copy_semundo (2 samples, 0.03%)</title><rect x="645.1" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="648.1" y="574.0"></text>
</g>
<g>
<title>ftrace_graph_init_task (3 samples, 0.05%)</title><rect x="645.5" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="648.5" y="574.0"></text>
</g>
<g>
<title>perf_event_fork (2 samples, 0.03%)</title><rect x="646.4" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="649.4" y="574.0"></text>
</g>
<g>
<title>perf_event_init_task (2 samples, 0.03%)</title><rect x="646.7" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="649.7" y="574.0"></text>
</g>
<g>
<title>wake_up_new_task (64 samples, 0.98%)</title><rect x="648.0" y="563.0" width="11.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="651.0" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (64 samples, 0.98%)</title><rect x="648.0" y="547.0" width="11.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="651.0" y="558.0"></text>
</g>
<g>
<title>malloc (7 samples, 0.11%)</title><rect x="659.9" y="643.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="662.9" y="654.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.06%)</title><rect x="661.8" y="659.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="664.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$228/32211625.accept (2 samples, 0.03%)</title><rect x="662.7" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (2 samples, 0.03%)</title><rect x="663.2" y="931.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (2 samples, 0.03%)</title><rect x="663.2" y="915.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.03%)</title><rect x="663.2" y="899.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="663.2" y="883.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="663.2" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.03%)</title><rect x="663.7" y="979.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$108/20693185.run (1,539 samples, 23.62%)</title><rect x="664.1" y="1091.0" width="278.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.1" y="1102.0">ru/mail/polis/service/dogm/ServiceImp..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$2 (1,539 samples, 23.62%)</title><rect x="664.1" y="1075.0" width="278.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.1" y="1086.0">ru/mail/polis/service/dogm/ServiceImp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (413 samples, 6.34%)</title><rect x="664.1" y="1059.0" width="74.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.1" y="1070.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (401 samples, 6.15%)</title><rect x="665.4" y="1043.0" width="72.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.4" y="1054.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.14%)</title><rect x="665.4" y="1027.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.06%)</title><rect x="666.3" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.06%)</title><rect x="666.3" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.06%)</title><rect x="666.3" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.06%)</title><rect x="666.3" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (392 samples, 6.02%)</title><rect x="667.0" y="1027.0" width="71.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.0" y="1038.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (392 samples, 6.02%)</title><rect x="667.0" y="1011.0" width="71.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.0" y="1022.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (390 samples, 5.99%)</title><rect x="667.4" y="995.0" width="70.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.4" y="1006.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (390 samples, 5.99%)</title><rect x="667.4" y="979.0" width="70.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.4" y="990.0">one/nio/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="667.4" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.4" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="667.4" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.4" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="667.4" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.4" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="667.4" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="667.4" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="670.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (388 samples, 5.95%)</title><rect x="667.7" y="963.0" width="70.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.7" y="974.0">sun/nio/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="667.7" y="947.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="667.7" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.03%)</title><rect x="667.7" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.03%)</title><rect x="667.7" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.20%)</title><rect x="668.1" y="947.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.20%)</title><rect x="668.1" y="931.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.20%)</title><rect x="668.1" y="915.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (13 samples, 0.20%)</title><rect x="668.1" y="899.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.1" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (13 samples, 0.20%)</title><rect x="668.1" y="883.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (13 samples, 0.20%)</title><rect x="668.1" y="867.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.1" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (11 samples, 0.17%)</title><rect x="668.5" y="851.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="671.5" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (8 samples, 0.12%)</title><rect x="668.6" y="835.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="671.6" y="846.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (6 samples, 0.09%)</title><rect x="669.0" y="819.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="672.0" y="830.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (6 samples, 0.09%)</title><rect x="669.0" y="803.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="672.0" y="814.0"></text>
</g>
<g>
<title>sys_gettimeofday (6 samples, 0.09%)</title><rect x="669.0" y="787.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="672.0" y="798.0"></text>
</g>
<g>
<title>do_gettimeofday (3 samples, 0.05%)</title><rect x="669.5" y="771.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="672.5" y="782.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.03%)</title><rect x="669.7" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="672.7" y="766.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.03%)</title><rect x="669.7" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="672.7" y="750.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="669.7" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="672.7" y="734.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.03%)</title><rect x="670.1" y="835.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="673.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (373 samples, 5.72%)</title><rect x="670.4" y="947.0" width="67.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.4" y="958.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (372 samples, 5.71%)</title><rect x="670.6" y="931.0" width="67.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.6" y="942.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (372 samples, 5.71%)</title><rect x="670.6" y="915.0" width="67.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.6" y="926.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (4 samples, 0.06%)</title><rect x="670.6" y="899.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.6" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (368 samples, 5.65%)</title><rect x="671.4" y="899.0" width="66.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.4" y="910.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (363 samples, 5.57%)</title><rect x="672.3" y="883.0" width="65.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.3" y="894.0">sun/nio..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (2 samples, 0.03%)</title><rect x="672.8" y="867.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="675.8" y="878.0"></text>
</g>
<g>
<title>__kernel_vsyscall (352 samples, 5.40%)</title><rect x="673.3" y="867.0" width="63.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="676.3" y="878.0">__kerne..</text>
</g>
<g>
<title>entry_SYSENTER_32 (351 samples, 5.39%)</title><rect x="673.5" y="851.0" width="63.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="676.5" y="862.0">entry_S..</text>
</g>
<g>
<title>do_fast_syscall_32 (351 samples, 5.39%)</title><rect x="673.5" y="835.0" width="63.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="676.5" y="846.0">do_fast..</text>
</g>
<g>
<title>exit_to_usermode_loop (11 samples, 0.17%)</title><rect x="673.5" y="819.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="676.5" y="830.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.17%)</title><rect x="673.5" y="803.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="676.5" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (11 samples, 0.17%)</title><rect x="673.5" y="787.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="676.5" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.17%)</title><rect x="673.5" y="771.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="676.5" y="782.0"></text>
</g>
<g>
<title>sys_write (340 samples, 5.22%)</title><rect x="675.5" y="819.0" width="61.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="678.5" y="830.0">sys_wr..</text>
</g>
<g>
<title>vfs_write (339 samples, 5.20%)</title><rect x="675.7" y="803.0" width="61.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="678.7" y="814.0">vfs_wr..</text>
</g>
<g>
<title>__vfs_write (333 samples, 5.11%)</title><rect x="676.2" y="787.0" width="60.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="679.2" y="798.0">__vfs_..</text>
</g>
<g>
<title>new_sync_write (329 samples, 5.05%)</title><rect x="676.4" y="771.0" width="59.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="679.4" y="782.0">new_sy..</text>
</g>
<g>
<title>sock_write_iter (327 samples, 5.02%)</title><rect x="676.8" y="755.0" width="59.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="679.8" y="766.0">sock_w..</text>
</g>
<g>
<title>sock_sendmsg (324 samples, 4.97%)</title><rect x="677.3" y="739.0" width="58.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="680.3" y="750.0">sock_s..</text>
</g>
<g>
<title>inet_sendmsg (317 samples, 4.86%)</title><rect x="677.5" y="723.0" width="57.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="680.5" y="734.0">inet_s..</text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="677.5" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="680.5" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (314 samples, 4.82%)</title><rect x="677.9" y="707.0" width="56.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="680.9" y="718.0">tcp_se..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.05%)</title><rect x="678.4" y="691.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="681.4" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="679.0" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="682.0" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (303 samples, 4.65%)</title><rect x="679.3" y="691.0" width="54.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="682.3" y="702.0">tcp_s..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="680.8" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="683.8" y="686.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (14 samples, 0.21%)</title><rect x="681.7" y="675.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="684.7" y="686.0"></text>
</g>
<g>
<title>__alloc_skb (13 samples, 0.20%)</title><rect x="681.9" y="659.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="684.9" y="670.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.45 (7 samples, 0.11%)</title><rect x="681.9" y="643.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="684.9" y="654.0"></text>
</g>
<g>
<title>__kmalloc_track_caller (4 samples, 0.06%)</title><rect x="681.9" y="627.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="684.9" y="638.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="682.2" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="685.2" y="622.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="682.8" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="685.8" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.05%)</title><rect x="683.3" y="643.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="686.3" y="654.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="683.8" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="686.8" y="654.0"></text>
</g>
<g>
<title>tcp_push (267 samples, 4.10%)</title><rect x="684.2" y="675.0" width="48.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="687.2" y="686.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (267 samples, 4.10%)</title><rect x="684.2" y="659.0" width="48.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="687.2" y="670.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (267 samples, 4.10%)</title><rect x="684.2" y="643.0" width="48.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="687.2" y="654.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (251 samples, 3.85%)</title><rect x="684.9" y="627.0" width="45.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="687.9" y="638.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (238 samples, 3.65%)</title><rect x="686.7" y="611.0" width="43.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="689.7" y="622.0">ip_q..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="687.1" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="690.1" y="606.0"></text>
</g>
<g>
<title>ip_local_out (233 samples, 3.58%)</title><rect x="687.5" y="595.0" width="42.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="690.5" y="606.0">ip_l..</text>
</g>
<g>
<title>ip_output (233 samples, 3.58%)</title><rect x="687.5" y="579.0" width="42.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="690.5" y="590.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (229 samples, 3.51%)</title><rect x="688.2" y="563.0" width="41.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="691.2" y="574.0">ip_..</text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="688.4" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="691.4" y="558.0"></text>
</g>
<g>
<title>ip_finish_output2 (226 samples, 3.47%)</title><rect x="688.7" y="547.0" width="41.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="691.7" y="558.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (209 samples, 3.21%)</title><rect x="688.9" y="531.0" width="37.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="691.9" y="542.0">__l..</text>
</g>
<g>
<title>do_softirq.part.15 (209 samples, 3.21%)</title><rect x="688.9" y="515.0" width="37.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="691.9" y="526.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (208 samples, 3.19%)</title><rect x="689.1" y="499.0" width="37.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="692.1" y="510.0">do_..</text>
</g>
<g>
<title>call_on_stack (208 samples, 3.19%)</title><rect x="689.1" y="483.0" width="37.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="692.1" y="494.0">cal..</text>
</g>
<g>
<title>__do_softirq (206 samples, 3.16%)</title><rect x="689.1" y="467.0" width="37.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="692.1" y="478.0">__d..</text>
</g>
<g>
<title>net_rx_action (201 samples, 3.08%)</title><rect x="689.6" y="451.0" width="36.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="692.6" y="462.0">net..</text>
</g>
<g>
<title>process_backlog (198 samples, 3.04%)</title><rect x="690.2" y="435.0" width="35.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="693.2" y="446.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (197 samples, 3.02%)</title><rect x="690.2" y="419.0" width="35.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="693.2" y="430.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (196 samples, 3.01%)</title><rect x="690.2" y="403.0" width="35.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="693.2" y="414.0">__n..</text>
</g>
<g>
<title>ip_rcv (190 samples, 2.92%)</title><rect x="691.1" y="387.0" width="34.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="694.1" y="398.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (186 samples, 2.85%)</title><rect x="691.8" y="371.0" width="33.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.8" y="382.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (185 samples, 2.84%)</title><rect x="692.0" y="355.0" width="33.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="695.0" y="366.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (185 samples, 2.84%)</title><rect x="692.0" y="339.0" width="33.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="695.0" y="350.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (177 samples, 2.72%)</title><rect x="693.4" y="323.0" width="32.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="696.4" y="334.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="694.9" y="307.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="697.9" y="318.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.08%)</title><rect x="695.4" y="307.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="698.4" y="318.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="695.6" y="291.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="698.6" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (159 samples, 2.44%)</title><rect x="696.5" y="307.0" width="28.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="699.5" y="318.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (157 samples, 2.41%)</title><rect x="696.9" y="291.0" width="28.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="699.9" y="302.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (12 samples, 0.18%)</title><rect x="696.9" y="275.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="699.9" y="286.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (11 samples, 0.17%)</title><rect x="697.1" y="259.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="700.1" y="270.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.15%)</title><rect x="697.2" y="243.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="700.2" y="254.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.14%)</title><rect x="697.4" y="227.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="700.4" y="238.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.12%)</title><rect x="697.4" y="211.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="700.4" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (88 samples, 1.35%)</title><rect x="699.2" y="275.0" width="16.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="702.2" y="286.0"></text>
</g>
<g>
<title>__wake_up_sync_key (88 samples, 1.35%)</title><rect x="699.2" y="259.0" width="16.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="702.2" y="270.0"></text>
</g>
<g>
<title>__wake_up_common_lock (88 samples, 1.35%)</title><rect x="699.2" y="243.0" width="16.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="702.2" y="254.0"></text>
</g>
<g>
<title>__lock_text_start (88 samples, 1.35%)</title><rect x="699.2" y="227.0" width="16.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="702.2" y="238.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.15%)</title><rect x="715.2" y="275.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="718.2" y="286.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.12%)</title><rect x="715.5" y="259.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="718.5" y="270.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.08%)</title><rect x="715.7" y="243.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="718.7" y="254.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="715.9" y="227.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="718.9" y="238.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="715.9" y="211.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="718.9" y="222.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="716.3" y="227.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="719.3" y="238.0"></text>
</g>
<g>
<title>tcp_data_queue (45 samples, 0.69%)</title><rect x="717.2" y="275.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="720.2" y="286.0"></text>
</g>
<g>
<title>sock_def_readable (43 samples, 0.66%)</title><rect x="717.3" y="259.0" width="7.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="720.3" y="270.0"></text>
</g>
<g>
<title>__wake_up_sync_key (43 samples, 0.66%)</title><rect x="717.3" y="243.0" width="7.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="720.3" y="254.0"></text>
</g>
<g>
<title>__wake_up_common_lock (43 samples, 0.66%)</title><rect x="717.3" y="227.0" width="7.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="720.3" y="238.0"></text>
</g>
<g>
<title>__lock_text_start (43 samples, 0.66%)</title><rect x="717.3" y="211.0" width="7.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="720.3" y="222.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="726.0" y="451.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="729.0" y="462.0"></text>
</g>
<g>
<title>dev_queue_xmit (16 samples, 0.25%)</title><rect x="726.8" y="531.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="729.8" y="542.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.23%)</title><rect x="726.8" y="515.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="729.8" y="526.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.14%)</title><rect x="727.1" y="499.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="730.1" y="510.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.08%)</title><rect x="727.3" y="483.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="730.3" y="494.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.05%)</title><rect x="727.7" y="467.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="730.7" y="478.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="727.7" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.7" y="462.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.05%)</title><rect x="728.2" y="483.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="731.2" y="494.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="729.1" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="732.1" y="510.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="729.8" y="611.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.8" y="622.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="729.8" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="732.8" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.08%)</title><rect x="731.3" y="627.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="734.3" y="638.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.14%)</title><rect x="732.6" y="675.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="735.6" y="686.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.12%)</title><rect x="732.6" y="659.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="735.6" y="670.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="733.1" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="736.1" y="654.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="734.2" y="691.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="737.2" y="702.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.08%)</title><rect x="734.9" y="723.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="737.9" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.05%)</title><rect x="735.3" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="738.3" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="735.3" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="738.3" y="702.0"></text>
</g>
<g>
<title>sock_write_iter (3 samples, 0.05%)</title><rect x="736.0" y="771.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="739.0" y="782.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.05%)</title><rect x="736.5" y="787.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="739.5" y="798.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="736.7" y="771.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="739.7" y="782.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="736.7" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="739.7" y="766.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="736.7" y="739.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="739.7" y="750.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.03%)</title><rect x="736.7" y="723.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="739.7" y="734.0"></text>
</g>
<g>
<title>__write (3 samples, 0.05%)</title><rect x="737.1" y="867.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="740.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.08%)</title><rect x="738.0" y="1043.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$106/10655556.act (1,126 samples, 17.28%)</title><rect x="738.9" y="1059.0" width="203.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.9" y="1070.0">ru/mail/polis/service/dogm/..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$0 (1,126 samples, 17.28%)</title><rect x="738.9" y="1043.0" width="203.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.9" y="1054.0">ru/mail/polis/service/dogm/..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.processEntityRequest (1,126 samples, 17.28%)</title><rect x="738.9" y="1027.0" width="203.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.9" y="1038.0">ru/mail/polis/service/dogm/..</text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.09%)</title><rect x="739.1" y="1011.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.09%)</title><rect x="739.1" y="995.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (3 samples, 0.05%)</title><rect x="739.6" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorPut.processEntityDirectly (396 samples, 6.08%)</title><rect x="740.3" y="1011.0" width="71.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.3" y="1022.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.05%)</title><rect x="740.5" y="995.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="740.7" y="979.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.7" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="740.7" y="963.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.7" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dogm/RocksDAO.upsertWithTimestamp (392 samples, 6.02%)</title><rect x="741.1" y="995.0" width="71.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.1" y="1006.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (392 samples, 6.02%)</title><rect x="741.1" y="979.0" width="71.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.1" y="990.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (388 samples, 5.95%)</title><rect x="741.4" y="963.0" width="70.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.4" y="974.0">org/rock..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (5 samples, 0.08%)</title><rect x="741.6" y="947.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="744.6" y="958.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9151950321374915066.so (7 samples, 0.11%)</title><rect x="742.5" y="947.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="745.5" y="958.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (369 samples, 5.66%)</title><rect x="743.8" y="947.0" width="66.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="746.8" y="958.0">Java_or..</text>
</g>
<g>
<title>operator new[](unsigned int) (2 samples, 0.03%)</title><rect x="745.1" y="931.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="748.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="745.4" y="931.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="748.4" y="942.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (358 samples, 5.49%)</title><rect x="745.8" y="931.0" width="64.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="748.8" y="942.0">rocksdb..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.06%)</title><rect x="746.9" y="915.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="749.9" y="926.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="747.0" y="899.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="750.0" y="910.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="747.0" y="883.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="750.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (344 samples, 5.28%)</title><rect x="747.6" y="915.0" width="62.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="750.6" y="926.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (343 samples, 5.26%)</title><rect x="747.8" y="899.0" width="62.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="750.8" y="910.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (339 samples, 5.20%)</title><rect x="748.0" y="883.0" width="61.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="751.0" y="894.0">rocksd..</text>
</g>
<g>
<title>free (2 samples, 0.03%)</title><rect x="748.0" y="867.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="751.0" y="878.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.03%)</title><rect x="748.3" y="867.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="751.3" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (304 samples, 4.67%)</title><rect x="748.7" y="867.0" width="55.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="751.7" y="878.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="748.7" y="851.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="751.7" y="862.0"></text>
</g>
<g>
<title>___tls_get_addr (3 samples, 0.05%)</title><rect x="749.0" y="851.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="752.0" y="862.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="749.6" y="851.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="752.6" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (285 samples, 4.37%)</title><rect x="750.1" y="851.0" width="51.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="753.1" y="862.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni9151950321374915066.so (2 samples, 0.03%)</title><rect x="753.0" y="835.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="756.0" y="846.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="753.6" y="835.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="756.6" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.06%)</title><rect x="754.5" y="835.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="757.5" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.03%)</title><rect x="755.2" y="835.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="758.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.03%)</title><rect x="755.2" y="819.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="758.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (150 samples, 2.30%)</title><rect x="755.7" y="835.0" width="27.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="758.7" y="846.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (144 samples, 2.21%)</title><rect x="756.6" y="819.0" width="26.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="759.6" y="830.0">r..</text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="757.0" y="803.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="760.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (139 samples, 2.13%)</title><rect x="757.4" y="803.0" width="25.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="760.4" y="814.0">r..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (5 samples, 0.08%)</title><rect x="757.6" y="787.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="760.6" y="798.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned int) (133 samples, 2.04%)</title><rect x="758.5" y="787.0" width="24.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="761.5" y="798.0">r..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="758.8" y="771.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="761.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (127 samples, 1.95%)</title><rect x="759.4" y="771.0" width="23.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="762.4" y="782.0">r..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned int) (124 samples, 1.90%)</title><rect x="759.9" y="755.0" width="22.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="762.9" y="766.0">r..</text>
</g>
<g>
<title>__kernel_vsyscall (119 samples, 1.83%)</title><rect x="760.8" y="739.0" width="21.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="763.8" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSENTER_32 (118 samples, 1.81%)</title><rect x="761.0" y="723.0" width="21.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="764.0" y="734.0">e..</text>
</g>
<g>
<title>do_fast_syscall_32 (118 samples, 1.81%)</title><rect x="761.0" y="707.0" width="21.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="764.0" y="718.0">d..</text>
</g>
<g>
<title>sys_write (116 samples, 1.78%)</title><rect x="761.4" y="691.0" width="21.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="764.4" y="702.0">s..</text>
</g>
<g>
<title>vfs_write (110 samples, 1.69%)</title><rect x="762.4" y="675.0" width="20.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="765.4" y="686.0"></text>
</g>
<g>
<title>__vfs_write (102 samples, 1.57%)</title><rect x="762.6" y="659.0" width="18.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="765.6" y="670.0"></text>
</g>
<g>
<title>new_sync_write (99 samples, 1.52%)</title><rect x="763.2" y="643.0" width="17.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="766.2" y="654.0"></text>
</g>
<g>
<title>ext4_file_write_iter (99 samples, 1.52%)</title><rect x="763.2" y="627.0" width="17.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="766.2" y="638.0"></text>
</g>
<g>
<title>__generic_file_write_iter (96 samples, 1.47%)</title><rect x="763.7" y="611.0" width="17.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="766.7" y="622.0"></text>
</g>
<g>
<title>file_remove_privs (2 samples, 0.03%)</title><rect x="764.8" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="767.8" y="606.0"></text>
</g>
<g>
<title>file_update_time (46 samples, 0.71%)</title><rect x="765.2" y="595.0" width="8.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="768.2" y="606.0"></text>
</g>
<g>
<title>generic_update_time (45 samples, 0.69%)</title><rect x="765.3" y="579.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="768.3" y="590.0"></text>
</g>
<g>
<title>__mark_inode_dirty (45 samples, 0.69%)</title><rect x="765.3" y="563.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="768.3" y="574.0"></text>
</g>
<g>
<title>ext4_dirty_inode (43 samples, 0.66%)</title><rect x="765.5" y="547.0" width="7.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="768.5" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.06%)</title><rect x="765.5" y="531.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="768.5" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.03%)</title><rect x="765.7" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="768.7" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.06%)</title><rect x="766.2" y="531.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="769.2" y="542.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.03%)</title><rect x="766.6" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="769.6" y="526.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (33 samples, 0.51%)</title><rect x="767.1" y="531.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="770.1" y="542.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.03%)</title><rect x="767.3" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="770.3" y="526.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (21 samples, 0.32%)</title><rect x="767.9" y="515.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="770.9" y="526.0"></text>
</g>
<g>
<title>ext4_do_update_inode (21 samples, 0.32%)</title><rect x="767.9" y="499.0" width="3.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="770.9" y="510.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (16 samples, 0.25%)</title><rect x="768.4" y="483.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="771.4" y="494.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.52 (14 samples, 0.21%)</title><rect x="768.8" y="467.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="771.8" y="478.0"></text>
</g>
<g>
<title>crypto_shash_update (12 samples, 0.18%)</title><rect x="769.1" y="451.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="772.1" y="462.0"></text>
</g>
<g>
<title>chksum_update (11 samples, 0.17%)</title><rect x="769.1" y="435.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="772.1" y="446.0"></text>
</g>
<g>
<title>__crc32c_le (10 samples, 0.15%)</title><rect x="769.3" y="419.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="772.3" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (8 samples, 0.12%)</title><rect x="771.7" y="515.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="774.7" y="526.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (7 samples, 0.11%)</title><rect x="771.7" y="499.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="774.7" y="510.0"></text>
</g>
<g>
<title>__getblk_gfp (6 samples, 0.09%)</title><rect x="771.7" y="483.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="774.7" y="494.0"></text>
</g>
<g>
<title>__find_get_block (5 samples, 0.08%)</title><rect x="771.7" y="467.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="774.7" y="478.0"></text>
</g>
<g>
<title>mark_page_accessed (4 samples, 0.06%)</title><rect x="771.9" y="451.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="774.9" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (42 samples, 0.64%)</title><rect x="773.5" y="595.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="776.5" y="606.0"></text>
</g>
<g>
<title>ext4_da_write_begin (10 samples, 0.15%)</title><rect x="773.5" y="579.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="776.5" y="590.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.05%)</title><rect x="774.0" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="777.0" y="574.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.03%)</title><rect x="774.8" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="777.8" y="574.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.03%)</title><rect x="774.8" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="777.8" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_end (20 samples, 0.31%)</title><rect x="775.3" y="579.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="778.3" y="590.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.03%)</title><rect x="775.5" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="778.5" y="574.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.03%)</title><rect x="775.5" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="778.5" y="558.0"></text>
</g>
<g>
<title>generic_write_end (16 samples, 0.25%)</title><rect x="776.0" y="563.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="779.0" y="574.0"></text>
</g>
<g>
<title>__mark_inode_dirty (15 samples, 0.23%)</title><rect x="776.0" y="547.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="779.0" y="558.0"></text>
</g>
<g>
<title>ext4_dirty_inode (14 samples, 0.21%)</title><rect x="776.0" y="531.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="779.0" y="542.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (14 samples, 0.21%)</title><rect x="776.0" y="515.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="779.0" y="526.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (8 samples, 0.12%)</title><rect x="776.2" y="499.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="779.2" y="510.0"></text>
</g>
<g>
<title>ext4_do_update_inode (7 samples, 0.11%)</title><rect x="776.4" y="483.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="779.4" y="494.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (6 samples, 0.09%)</title><rect x="776.6" y="467.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="779.6" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.52 (6 samples, 0.09%)</title><rect x="776.6" y="451.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="779.6" y="462.0"></text>
</g>
<g>
<title>crypto_shash_update (5 samples, 0.08%)</title><rect x="776.7" y="435.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="779.7" y="446.0"></text>
</g>
<g>
<title>chksum_update (5 samples, 0.08%)</title><rect x="776.7" y="419.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="779.7" y="430.0"></text>
</g>
<g>
<title>__crc32c_le (5 samples, 0.08%)</title><rect x="776.7" y="403.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="779.7" y="414.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.08%)</title><rect x="777.7" y="499.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="780.7" y="510.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (4 samples, 0.06%)</title><rect x="777.7" y="483.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="780.7" y="494.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.05%)</title><rect x="777.7" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="780.7" y="478.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.05%)</title><rect x="777.7" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="780.7" y="462.0"></text>
</g>
<g>
<title>ext4_nonda_switch (2 samples, 0.03%)</title><rect x="778.9" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="781.9" y="590.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (8 samples, 0.12%)</title><rect x="779.5" y="579.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="782.5" y="590.0"></text>
</g>
<g>
<title>copyin (7 samples, 0.11%)</title><rect x="779.5" y="563.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="782.5" y="574.0"></text>
</g>
<g>
<title>__copy_user_ll (7 samples, 0.11%)</title><rect x="779.5" y="547.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="782.5" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.08%)</title><rect x="781.5" y="659.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="784.5" y="670.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.05%)</title><rect x="781.8" y="643.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="784.8" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="782.0" y="627.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="785.0" y="638.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="782.0" y="611.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="785.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.03%)</title><rect x="782.9" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="785.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.03%)</title><rect x="783.4" y="835.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="786.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (86 samples, 1.32%)</title><rect x="784.0" y="835.0" width="15.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="787.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="784.0" y="819.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="787.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (81 samples, 1.24%)</title><rect x="784.9" y="819.0" width="14.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="787.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (75 samples, 1.15%)</title><rect x="785.4" y="803.0" width="13.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="788.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (74 samples, 1.14%)</title><rect x="785.6" y="787.0" width="13.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="788.6" y="798.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="785.8" y="771.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="788.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (65 samples, 1.00%)</title><rect x="786.5" y="771.0" width="11.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="789.5" y="782.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9151950321374915066.so (61 samples, 0.94%)</title><rect x="786.5" y="755.0" width="11.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="789.5" y="766.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9151950321374915066.so (13 samples, 0.20%)</title><rect x="786.7" y="739.0" width="2.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="789.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned int, unsigned int, rocksdb::Logger*) (4 samples, 0.06%)</title><rect x="788.3" y="723.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="791.3" y="734.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (46 samples, 0.71%)</title><rect x="789.1" y="739.0" width="8.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="792.1" y="750.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9151950321374915066.so (35 samples, 0.54%)</title><rect x="790.0" y="723.0" width="6.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="793.0" y="734.0"></text>
</g>
<g>
<title>___tls_get_addr (2 samples, 0.03%)</title><rect x="794.9" y="707.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="797.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.09%)</title><rect x="795.2" y="707.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="798.2" y="718.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="795.8" y="691.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="798.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.08%)</title><rect x="796.5" y="723.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="799.5" y="734.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.05%)</title><rect x="796.8" y="707.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="799.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="797.9" y="755.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="800.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long long, rocksdb::ValueType) (4 samples, 0.06%)</title><rect x="798.3" y="771.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="801.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="799.0" y="803.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="802.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long long) (4 samples, 0.06%)</title><rect x="799.6" y="835.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="802.6" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="800.5" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="803.5" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (3 samples, 0.05%)</title><rect x="801.2" y="835.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="804.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned int, unsigned int) (3 samples, 0.05%)</title><rect x="802.1" y="851.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="805.1" y="862.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (4 samples, 0.06%)</title><rect x="802.6" y="851.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="805.6" y="862.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="803.4" y="851.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="806.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (2 samples, 0.03%)</title><rect x="803.7" y="867.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="806.7" y="878.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (4 samples, 0.06%)</title><rect x="804.1" y="867.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="807.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (17 samples, 0.26%)</title><rect x="804.8" y="867.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="807.8" y="878.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.06%)</title><rect x="805.0" y="851.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="808.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.05%)</title><rect x="805.7" y="851.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="808.7" y="862.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.06%)</title><rect x="806.3" y="851.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="809.3" y="862.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (3 samples, 0.05%)</title><rect x="806.4" y="835.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="809.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (3 samples, 0.05%)</title><rect x="807.0" y="851.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="810.0" y="862.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned int) (2 samples, 0.03%)</title><rect x="807.5" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="810.5" y="862.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned int) (2 samples, 0.03%)</title><rect x="809.0" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="812.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="809.3" y="883.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="812.3" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.05%)</title><rect x="809.9" y="915.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="812.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.06%)</title><rect x="810.6" y="947.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="813.6" y="958.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.03%)</title><rect x="810.8" y="931.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="813.8" y="942.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="811.7" y="963.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="814.7" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/ProcessorPut.processEntityRequest (722 samples, 11.08%)</title><rect x="812.1" y="1011.0" width="130.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.1" y="1022.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor.processEntityRequestOnClusterEmptyResult (722 samples, 11.08%)</title><rect x="812.1" y="995.0" width="130.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.1" y="1006.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (79 samples, 1.21%)</title><rect x="813.3" y="979.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.timedGet (77 samples, 1.18%)</title><rect x="813.7" y="963.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.7" y="974.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="814.1" y="947.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="817.1" y="958.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.06%)</title><rect x="814.2" y="931.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="817.2" y="942.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (4 samples, 0.06%)</title><rect x="814.2" y="915.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="817.2" y="926.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (4 samples, 0.06%)</title><rect x="814.2" y="899.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="817.2" y="910.0"></text>
</g>
<g>
<title>sys_clock_gettime (3 samples, 0.05%)</title><rect x="814.4" y="883.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="817.4" y="894.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (2 samples, 0.03%)</title><rect x="814.6" y="867.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="817.6" y="878.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.03%)</title><rect x="814.6" y="851.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="817.6" y="862.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.03%)</title><rect x="814.6" y="835.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="817.6" y="846.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="814.6" y="819.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="817.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (70 samples, 1.07%)</title><rect x="815.0" y="947.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (70 samples, 1.07%)</title><rect x="815.0" y="931.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (70 samples, 1.07%)</title><rect x="815.0" y="915.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.0" y="926.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.06%)</title><rect x="815.1" y="899.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="818.1" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.05%)</title><rect x="815.3" y="883.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="818.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.05%)</title><rect x="815.3" y="867.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="818.3" y="878.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="815.3" y="851.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="818.3" y="862.0"></text>
</g>
<g>
<title>sys_clock_gettime (2 samples, 0.03%)</title><rect x="815.3" y="835.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="818.3" y="846.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (2 samples, 0.03%)</title><rect x="815.3" y="819.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="818.3" y="830.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.03%)</title><rect x="815.3" y="803.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="818.3" y="814.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.03%)</title><rect x="815.3" y="787.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="818.3" y="798.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="815.3" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="818.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (65 samples, 1.00%)</title><rect x="815.9" y="899.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="818.9" y="910.0"></text>
</g>
<g>
<title>Unsafe_Park (64 samples, 0.98%)</title><rect x="816.0" y="883.0" width="11.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="819.0" y="894.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (5 samples, 0.08%)</title><rect x="816.4" y="867.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="819.4" y="878.0"></text>
</g>
<g>
<title>__kernel_vsyscall (52 samples, 0.80%)</title><rect x="817.5" y="867.0" width="9.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="820.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (51 samples, 0.78%)</title><rect x="817.7" y="851.0" width="9.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="820.7" y="862.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (51 samples, 0.78%)</title><rect x="817.7" y="835.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="820.7" y="846.0"></text>
</g>
<g>
<title>sys_futex (51 samples, 0.78%)</title><rect x="817.7" y="819.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="820.7" y="830.0"></text>
</g>
<g>
<title>do_futex (51 samples, 0.78%)</title><rect x="817.7" y="803.0" width="9.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="820.7" y="814.0"></text>
</g>
<g>
<title>futex_wait (51 samples, 0.78%)</title><rect x="817.7" y="787.0" width="9.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="820.7" y="798.0"></text>
</g>
<g>
<title>futex_wait_queue_me (46 samples, 0.71%)</title><rect x="817.9" y="771.0" width="8.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="820.9" y="782.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (5 samples, 0.08%)</title><rect x="817.9" y="755.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="820.9" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.08%)</title><rect x="817.9" y="739.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="820.9" y="750.0"></text>
</g>
<g>
<title>schedule (41 samples, 0.63%)</title><rect x="818.8" y="755.0" width="7.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="821.8" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (41 samples, 0.63%)</title><rect x="818.8" y="739.0" width="7.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="821.8" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (41 samples, 0.63%)</title><rect x="818.8" y="723.0" width="7.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="821.8" y="734.0"></text>
</g>
<g>
<title>hrtimer_cancel (3 samples, 0.05%)</title><rect x="826.4" y="771.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="829.4" y="782.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.05%)</title><rect x="826.4" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="829.4" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="826.5" y="739.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="829.5" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="826.9" y="867.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="829.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (394 samples, 6.05%)</title><rect x="827.6" y="979.0" width="71.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.6" y="990.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (394 samples, 6.05%)</title><rect x="827.6" y="963.0" width="71.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.6" y="974.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (392 samples, 6.02%)</title><rect x="828.0" y="947.0" width="71.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.0" y="958.0">java/uti..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (76 samples, 1.17%)</title><rect x="828.7" y="931.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.7" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="828.7" y="915.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.7" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="828.7" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (2 samples, 0.03%)</title><rect x="828.7" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (74 samples, 1.14%)</title><rect x="829.1" y="915.0" width="13.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.1" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (74 samples, 1.14%)</title><rect x="829.1" y="899.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="832.1" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (72 samples, 1.10%)</title><rect x="829.4" y="883.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="832.4" y="894.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (2 samples, 0.03%)</title><rect x="829.4" y="867.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.4" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (70 samples, 1.07%)</title><rect x="829.8" y="867.0" width="12.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.8" y="878.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_getStackAccessControlContext (68 samples, 1.04%)</title><rect x="830.2" y="851.0" width="12.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="833.2" y="862.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (62 samples, 0.95%)</title><rect x="830.7" y="835.0" width="11.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="833.7" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (4 samples, 0.06%)</title><rect x="834.2" y="819.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="837.2" y="830.0"></text>
</g>
<g>
<title>java_security_AccessControlContext::create(objArrayHandle, bool, Handle, Thread*) (2 samples, 0.03%)</title><rect x="836.0" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="839.0" y="830.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (3 samples, 0.05%)</title><rect x="836.3" y="819.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="839.3" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.03%)</title><rect x="836.5" y="803.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="839.5" y="814.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.09%)</title><rect x="837.2" y="819.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="840.2" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="838.0" y="803.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="841.0" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (20 samples, 0.31%)</title><rect x="838.3" y="819.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="841.3" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.12%)</title><rect x="840.5" y="803.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="843.5" y="814.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (8 samples, 0.12%)</title><rect x="840.5" y="787.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="843.5" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.08%)</title><rect x="840.7" y="771.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="843.7" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.05%)</title><rect x="841.0" y="755.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="844.0" y="766.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.03%)</title><rect x="841.6" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="844.6" y="782.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="842.1" y="835.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="845.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.start (312 samples, 4.79%)</title><rect x="842.5" y="931.0" width="56.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="845.5" y="942.0">java/l..</text>
</g>
<g>
<title>java/lang/Thread.start0 (309 samples, 4.74%)</title><rect x="843.0" y="915.0" width="56.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.0" y="926.0">java/..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.05%)</title><rect x="843.0" y="899.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="846.0" y="910.0"></text>
</g>
<g>
<title>JVM_StartThread (93 samples, 1.43%)</title><rect x="843.6" y="899.0" width="16.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="846.6" y="910.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned int) (47 samples, 0.72%)</title><rect x="844.3" y="883.0" width="8.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="847.3" y="894.0"></text>
</g>
<g>
<title>Thread::Thread() (15 samples, 0.23%)</title><rect x="845.0" y="867.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="848.0" y="878.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.05%)</title><rect x="845.0" y="851.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="848.0" y="862.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (5 samples, 0.08%)</title><rect x="845.9" y="851.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="848.9" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="846.3" y="835.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="849.3" y="846.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (2 samples, 0.03%)</title><rect x="846.8" y="851.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="849.8" y="862.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned int) (23 samples, 0.35%)</title><rect x="848.5" y="867.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="851.5" y="878.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.05%)</title><rect x="848.6" y="851.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="851.6" y="862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.08%)</title><rect x="849.2" y="851.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="852.2" y="862.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (3 samples, 0.05%)</title><rect x="849.5" y="835.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="852.5" y="846.0"></text>
</g>
<g>
<title>__pthread_create_2_1 (9 samples, 0.14%)</title><rect x="850.5" y="851.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="853.5" y="862.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (29 samples, 0.45%)</title><rect x="852.8" y="883.0" width="5.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="855.8" y="894.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (3 samples, 0.05%)</title><rect x="853.3" y="867.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="856.3" y="878.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="853.3" y="851.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="856.3" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="853.3" y="835.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="856.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="853.3" y="819.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="856.3" y="830.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="853.3" y="803.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="856.3" y="814.0"></text>
</g>
<g>
<title>Thread::is_hidden_from_external_view() const (2 samples, 0.03%)</title><rect x="854.1" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="857.1" y="878.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (13 samples, 0.20%)</title><rect x="854.6" y="867.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="857.6" y="878.0"></text>
</g>
<g>
<title>os::elapsedTime() (2 samples, 0.03%)</title><rect x="857.0" y="867.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="860.0" y="878.0"></text>
</g>
<g>
<title>os::set_priority(Thread*, ThreadPriority) (3 samples, 0.05%)</title><rect x="857.5" y="867.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="860.5" y="878.0"></text>
</g>
<g>
<title>os::set_native_priority(Thread*, int) (3 samples, 0.05%)</title><rect x="857.5" y="851.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="860.5" y="862.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (2 samples, 0.03%)</title><rect x="858.1" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="861.1" y="894.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned int, bool, MemoryType) (3 samples, 0.05%)</title><rect x="858.8" y="883.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="861.8" y="894.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="860.8" y="899.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="863.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (206 samples, 3.16%)</title><rect x="861.1" y="899.0" width="37.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="864.1" y="910.0">[un..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (17 samples, 0.26%)</title><rect x="861.1" y="883.0" width="3.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="864.1" y="894.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (7 samples, 0.11%)</title><rect x="864.2" y="883.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="867.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="864.2" y="867.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="867.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="864.2" y="851.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="867.2" y="862.0"></text>
</g>
<g>
<title>__vsnprintf_chk (6 samples, 0.09%)</title><rect x="864.4" y="835.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="867.4" y="846.0"></text>
</g>
<g>
<title>_IO_vfprintf (6 samples, 0.09%)</title><rect x="864.4" y="819.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="867.4" y="830.0"></text>
</g>
<g>
<title>__kernel_vsyscall (84 samples, 1.29%)</title><rect x="865.5" y="883.0" width="15.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="868.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (82 samples, 1.26%)</title><rect x="865.8" y="867.0" width="14.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="868.8" y="878.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (82 samples, 1.26%)</title><rect x="865.8" y="851.0" width="14.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="868.8" y="862.0"></text>
</g>
<g>
<title>sys_futex (82 samples, 1.26%)</title><rect x="865.8" y="835.0" width="14.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="868.8" y="846.0"></text>
</g>
<g>
<title>do_futex (82 samples, 1.26%)</title><rect x="865.8" y="819.0" width="14.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="868.8" y="830.0"></text>
</g>
<g>
<title>futex_wait (45 samples, 0.69%)</title><rect x="866.2" y="803.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="869.2" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (43 samples, 0.66%)</title><rect x="866.2" y="787.0" width="7.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="869.2" y="798.0"></text>
</g>
<g>
<title>schedule (42 samples, 0.64%)</title><rect x="866.4" y="771.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="869.4" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (42 samples, 0.64%)</title><rect x="866.4" y="755.0" width="7.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="869.4" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (41 samples, 0.63%)</title><rect x="866.6" y="739.0" width="7.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="869.6" y="750.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="874.0" y="787.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="877.0" y="798.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.03%)</title><rect x="874.0" y="771.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="877.0" y="782.0"></text>
</g>
<g>
<title>futex_wake (35 samples, 0.54%)</title><rect x="874.4" y="803.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="877.4" y="814.0"></text>
</g>
<g>
<title>wake_up_q (34 samples, 0.52%)</title><rect x="874.5" y="787.0" width="6.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="877.5" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (34 samples, 0.52%)</title><rect x="874.5" y="771.0" width="6.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="877.5" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (34 samples, 0.52%)</title><rect x="874.5" y="755.0" width="6.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="877.5" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="880.9" y="883.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="883.9" y="894.0"></text>
</g>
<g>
<title>clone (90 samples, 1.38%)</title><rect x="881.6" y="883.0" width="16.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="884.6" y="894.0"></text>
</g>
<g>
<title>restore_all (90 samples, 1.38%)</title><rect x="881.6" y="867.0" width="16.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="884.6" y="878.0"></text>
</g>
<g>
<title>do_int80_syscall_32 (90 samples, 1.38%)</title><rect x="881.6" y="851.0" width="16.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="884.6" y="862.0"></text>
</g>
<g>
<title>sys_clone (88 samples, 1.35%)</title><rect x="882.0" y="835.0" width="15.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="885.0" y="846.0"></text>
</g>
<g>
<title>_do_fork (88 samples, 1.35%)</title><rect x="882.0" y="819.0" width="15.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="885.0" y="830.0"></text>
</g>
<g>
<title>audit_alloc (2 samples, 0.03%)</title><rect x="882.1" y="803.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="885.1" y="814.0"></text>
</g>
<g>
<title>copy_process.part.42 (50 samples, 0.77%)</title><rect x="882.5" y="803.0" width="9.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="885.5" y="814.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (6 samples, 0.09%)</title><rect x="882.5" y="787.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="885.5" y="798.0"></text>
</g>
<g>
<title>get_page_from_freelist (6 samples, 0.09%)</title><rect x="882.5" y="771.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="885.5" y="782.0"></text>
</g>
<g>
<title>__delayacct_tsk_init (2 samples, 0.03%)</title><rect x="883.6" y="787.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="886.6" y="798.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="883.6" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="886.6" y="782.0"></text>
</g>
<g>
<title>alloc_pid (3 samples, 0.05%)</title><rect x="884.3" y="787.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="887.3" y="798.0"></text>
</g>
<g>
<title>arch_dup_task_struct (3 samples, 0.05%)</title><rect x="884.9" y="787.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="887.9" y="798.0"></text>
</g>
<g>
<title>memcpy (2 samples, 0.03%)</title><rect x="885.0" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="888.0" y="782.0"></text>
</g>
<g>
<title>arch_local_irq_enable (4 samples, 0.06%)</title><rect x="885.4" y="787.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="888.4" y="798.0"></text>
</g>
<g>
<title>audit_alloc (2 samples, 0.03%)</title><rect x="886.1" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="889.1" y="798.0"></text>
</g>
<g>
<title>cgroup_post_fork (2 samples, 0.03%)</title><rect x="886.7" y="787.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="889.7" y="798.0"></text>
</g>
<g>
<title>perf_event_init_task (4 samples, 0.06%)</title><rect x="889.0" y="787.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.0" y="798.0"></text>
</g>
<g>
<title>rcuwait_wake_up (2 samples, 0.03%)</title><rect x="889.7" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="892.7" y="798.0"></text>
</g>
<g>
<title>sched_fork (5 samples, 0.08%)</title><rect x="890.1" y="787.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="893.1" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="890.1" y="771.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="893.1" y="782.0"></text>
</g>
<g>
<title>security_task_alloc (2 samples, 0.03%)</title><rect x="891.0" y="787.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="894.0" y="798.0"></text>
</g>
<g>
<title>lsm_task_alloc (2 samples, 0.03%)</title><rect x="891.0" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="894.0" y="782.0"></text>
</g>
<g>
<title>wake_up_new_task (29 samples, 0.45%)</title><rect x="892.6" y="803.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="895.6" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (29 samples, 0.45%)</title><rect x="892.6" y="787.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="895.6" y="798.0"></text>
</g>
<g>
<title>malloc (3 samples, 0.05%)</title><rect x="897.9" y="883.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="900.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (7 samples, 0.11%)</title><rect x="899.0" y="979.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (7 samples, 0.11%)</title><rect x="899.0" y="963.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (7 samples, 0.11%)</title><rect x="899.0" y="947.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/BasicTopology.nodesFor (5 samples, 0.08%)</title><rect x="900.3" y="979.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.3" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.08%)</title><rect x="900.3" y="963.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.3" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.08%)</title><rect x="900.3" y="947.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.3" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.08%)</title><rect x="900.3" y="931.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.3" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.08%)</title><rect x="900.3" y="915.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.3" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (5 samples, 0.08%)</title><rect x="900.3" y="899.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/SimpleRequestProcessor.processEntityRemotely (230 samples, 3.53%)</title><rect x="901.2" y="979.0" width="41.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.2" y="990.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3 samples, 0.05%)</title><rect x="901.3" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.03%)</title><rect x="901.5" y="947.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.03%)</title><rect x="901.5" y="931.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$162/23286967.apply (2 samples, 0.03%)</title><rect x="901.5" y="915.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (2 samples, 0.03%)</title><rect x="901.5" y="899.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2 samples, 0.03%)</title><rect x="901.5" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2 samples, 0.03%)</title><rect x="901.5" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="904.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2 samples, 0.03%)</title><rect x="901.5" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.5" y="862.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2 samples, 0.03%)</title><rect x="901.5" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.5" y="846.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (2 samples, 0.03%)</title><rect x="901.5" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/processors/Bridges.sendRequestTo (226 samples, 3.47%)</title><rect x="901.9" y="963.0" width="40.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.9" y="974.0">ru/..</text>
</g>
<g>
<title>java/net/URI.create (23 samples, 0.35%)</title><rect x="902.1" y="947.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.1" y="958.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (23 samples, 0.35%)</title><rect x="902.1" y="931.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.1" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (23 samples, 0.35%)</title><rect x="902.1" y="915.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="905.1" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (9 samples, 0.14%)</title><rect x="902.2" y="899.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.2" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (9 samples, 0.14%)</title><rect x="902.2" y="883.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="905.2" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (9 samples, 0.14%)</title><rect x="902.2" y="867.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.2" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (13 samples, 0.20%)</title><rect x="903.9" y="899.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.9" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.06%)</title><rect x="903.9" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.9" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.06%)</title><rect x="903.9" y="867.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.9" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (9 samples, 0.14%)</title><rect x="904.6" y="883.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.6" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (7 samples, 0.11%)</title><rect x="904.8" y="867.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.8" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.05%)</title><rect x="905.3" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.3" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.05%)</title><rect x="905.3" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="906.4" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.4" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="906.4" y="931.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (183 samples, 2.81%)</title><rect x="906.8" y="947.0" width="33.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.8" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (183 samples, 2.81%)</title><rect x="906.8" y="931.0" width="33.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.8" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (179 samples, 2.75%)</title><rect x="907.3" y="915.0" width="32.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="910.3" y="926.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (179 samples, 2.75%)</title><rect x="907.3" y="899.0" width="32.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.3" y="910.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.05%)</title><rect x="908.0" y="883.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (83 samples, 1.27%)</title><rect x="908.8" y="883.0" width="15.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="911.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (7 samples, 0.11%)</title><rect x="908.8" y="867.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (6 samples, 0.09%)</title><rect x="908.9" y="851.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.06%)</title><rect x="909.3" y="835.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.03%)</title><rect x="909.5" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="912.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.03%)</title><rect x="909.5" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="912.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="909.5" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="912.5" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.09%)</title><rect x="910.0" y="867.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.0" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.09%)</title><rect x="910.0" y="851.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.0" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (6 samples, 0.09%)</title><rect x="910.0" y="835.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.0" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.09%)</title><rect x="910.0" y="819.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="913.0" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (5 samples, 0.08%)</title><rect x="910.2" y="803.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.2" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.08%)</title><rect x="910.2" y="787.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.06%)</title><rect x="910.2" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.2" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (4 samples, 0.06%)</title><rect x="910.2" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.2" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.06%)</title><rect x="910.2" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/26283990.test (2 samples, 0.03%)</title><rect x="910.6" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (2 samples, 0.03%)</title><rect x="910.6" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="913.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/827193.test (2 samples, 0.03%)</title><rect x="910.6" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.03%)</title><rect x="910.6" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.6" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.03%)</title><rect x="910.6" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.03%)</title><rect x="910.6" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.03%)</title><rect x="910.6" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="910.6" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (67 samples, 1.03%)</title><rect x="911.3" y="867.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="914.3" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (67 samples, 1.03%)</title><rect x="911.3" y="851.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.3" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (66 samples, 1.01%)</title><rect x="911.5" y="835.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.5" y="846.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (48 samples, 0.74%)</title><rect x="912.0" y="819.0" width="8.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="915.0" y="830.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (40 samples, 0.61%)</title><rect x="912.7" y="803.0" width="7.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="915.7" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (11 samples, 0.17%)</title><rect x="913.7" y="787.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="916.7" y="798.0"></text>
</g>
<g>
<title>.L409 (3 samples, 0.05%)</title><rect x="913.7" y="771.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="916.7" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.08%)</title><rect x="914.6" y="771.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="917.6" y="782.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.03%)</title><rect x="914.7" y="755.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="917.7" y="766.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.03%)</title><rect x="915.1" y="755.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="918.1" y="766.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="915.8" y="787.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="918.8" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (3 samples, 0.05%)</title><rect x="916.4" y="787.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="919.4" y="798.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (8 samples, 0.12%)</title><rect x="917.1" y="787.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="920.1" y="798.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.08%)</title><rect x="917.6" y="771.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="920.6" y="782.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.05%)</title><rect x="917.8" y="755.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="920.8" y="766.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (8 samples, 0.12%)</title><rect x="918.5" y="787.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="921.5" y="798.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.06%)</title><rect x="918.9" y="771.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="921.9" y="782.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.05%)</title><rect x="919.1" y="755.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="922.1" y="766.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.03%)</title><rect x="920.4" y="803.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="923.4" y="814.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (15 samples, 0.23%)</title><rect x="920.7" y="819.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.7" y="830.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (13 samples, 0.20%)</title><rect x="921.1" y="803.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.1" y="814.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (6 samples, 0.09%)</title><rect x="922.3" y="787.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="925.3" y="798.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.09%)</title><rect x="922.3" y="771.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.09%)</title><rect x="922.3" y="755.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.03%)</title><rect x="923.4" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="926.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (6 samples, 0.09%)</title><rect x="923.8" y="883.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="926.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (6 samples, 0.09%)</title><rect x="923.8" y="867.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="926.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (6 samples, 0.09%)</title><rect x="923.8" y="851.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="926.8" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (3 samples, 0.05%)</title><rect x="924.0" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="927.0" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.03%)</title><rect x="924.5" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (82 samples, 1.26%)</title><rect x="924.9" y="883.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (76 samples, 1.17%)</title><rect x="924.9" y="867.0" width="13.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="927.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (76 samples, 1.17%)</title><rect x="924.9" y="851.0" width="13.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="927.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (76 samples, 1.17%)</title><rect x="924.9" y="835.0" width="13.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (76 samples, 1.17%)</title><rect x="924.9" y="819.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (74 samples, 1.14%)</title><rect x="925.2" y="803.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="928.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (74 samples, 1.14%)</title><rect x="925.2" y="787.0" width="13.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="928.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (74 samples, 1.14%)</title><rect x="925.2" y="771.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="928.2" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.05%)</title><rect x="925.4" y="755.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="928.4" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.14%)</title><rect x="926.0" y="755.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="929.0" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.08%)</title><rect x="926.3" y="739.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="929.3" y="750.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.05%)</title><rect x="926.7" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="929.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.94%)</title><rect x="927.6" y="755.0" width="11.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="930.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="927.6" y="739.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="930.6" y="750.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="927.6" y="723.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="930.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="927.6" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="930.6" y="718.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="927.6" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="930.6" y="702.0"></text>
</g>
<g>
<title>__kernel_vsyscall (56 samples, 0.86%)</title><rect x="928.0" y="739.0" width="10.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="931.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (54 samples, 0.83%)</title><rect x="928.3" y="723.0" width="9.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="931.3" y="734.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (54 samples, 0.83%)</title><rect x="928.3" y="707.0" width="9.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="931.3" y="718.0"></text>
</g>
<g>
<title>sys_futex (54 samples, 0.83%)</title><rect x="928.3" y="691.0" width="9.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="931.3" y="702.0"></text>
</g>
<g>
<title>do_futex (53 samples, 0.81%)</title><rect x="928.3" y="675.0" width="9.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="931.3" y="686.0"></text>
</g>
<g>
<title>futex_wake (53 samples, 0.81%)</title><rect x="928.3" y="659.0" width="9.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="931.3" y="670.0"></text>
</g>
<g>
<title>wake_up_q (50 samples, 0.77%)</title><rect x="928.9" y="643.0" width="9.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="931.9" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (50 samples, 0.77%)</title><rect x="928.9" y="627.0" width="9.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="931.9" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (50 samples, 0.77%)</title><rect x="928.9" y="611.0" width="9.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="931.9" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.05%)</title><rect x="938.1" y="739.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="941.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (6 samples, 0.09%)</title><rect x="938.6" y="867.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="941.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.09%)</title><rect x="938.6" y="851.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="941.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.09%)</title><rect x="938.6" y="835.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="941.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$120/18004023.apply (4 samples, 0.06%)</title><rect x="938.6" y="819.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="941.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (4 samples, 0.06%)</title><rect x="938.6" y="803.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="941.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (4 samples, 0.06%)</title><rect x="938.6" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (4 samples, 0.06%)</title><rect x="938.6" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="941.6" y="782.0"></text>
</g>
<g>
<title>java/util/Optional.of (4 samples, 0.06%)</title><rect x="938.6" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="941.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/33260527.apply (2 samples, 0.03%)</title><rect x="939.4" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2 samples, 0.03%)</title><rect x="939.4" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="942.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.03%)</title><rect x="939.4" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="942.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.03%)</title><rect x="939.4" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="942.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="939.4" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (8 samples, 0.12%)</title><rect x="939.9" y="947.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (8 samples, 0.12%)</title><rect x="939.9" y="931.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="942.9" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.12%)</title><rect x="939.9" y="915.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="942.9" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.12%)</title><rect x="939.9" y="899.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.9" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8 samples, 0.12%)</title><rect x="939.9" y="883.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.9" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$109/8719760.accept (8 samples, 0.12%)</title><rect x="939.9" y="867.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.9" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.12%)</title><rect x="939.9" y="851.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="942.9" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.09%)</title><rect x="940.3" y="835.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="943.3" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/23455084.accept (3 samples, 0.05%)</title><rect x="940.8" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.8" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.05%)</title><rect x="940.8" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7 samples, 0.11%)</title><rect x="941.4" y="947.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="944.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7 samples, 0.11%)</title><rect x="941.4" y="931.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="944.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (7 samples, 0.11%)</title><rect x="941.4" y="915.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/827193.test (7 samples, 0.11%)</title><rect x="941.4" y="899.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (7 samples, 0.11%)</title><rect x="941.4" y="883.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.4" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (7 samples, 0.11%)</title><rect x="941.4" y="867.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="944.4" y="878.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (7 samples, 0.11%)</title><rect x="941.4" y="851.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="944.4" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (7 samples, 0.11%)</title><rect x="941.4" y="835.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.4" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.11%)</title><rect x="941.4" y="819.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.4" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.06%)</title><rect x="941.9" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.06%)</title><rect x="941.9" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="944.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.06%)</title><rect x="941.9" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="944.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.06%)</title><rect x="941.9" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.9" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.06%)</title><rect x="941.9" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (829 samples, 12.72%)</title><rect x="944.1" y="1139.0" width="150.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.1" y="1150.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (169 samples, 2.59%)</title><rect x="947.0" y="1123.0" width="30.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="950.0" y="1134.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1151031.accept (166 samples, 2.55%)</title><rect x="947.0" y="1107.0" width="30.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="950.0" y="1118.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (166 samples, 2.55%)</title><rect x="947.0" y="1091.0" width="30.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.0" y="1102.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (166 samples, 2.55%)</title><rect x="947.0" y="1075.0" width="30.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.0" y="1086.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (166 samples, 2.55%)</title><rect x="947.0" y="1059.0" width="30.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.0" y="1070.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (166 samples, 2.55%)</title><rect x="947.0" y="1043.0" width="30.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.0" y="1054.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.05%)</title><rect x="947.0" y="1027.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (163 samples, 2.50%)</title><rect x="947.5" y="1027.0" width="29.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.5" y="1038.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (163 samples, 2.50%)</title><rect x="947.5" y="1011.0" width="29.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.5" y="1022.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (163 samples, 2.50%)</title><rect x="947.5" y="995.0" width="29.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.5" y="1006.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (163 samples, 2.50%)</title><rect x="947.5" y="979.0" width="29.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="950.5" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (163 samples, 2.50%)</title><rect x="947.5" y="963.0" width="29.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.5" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/19216263.run (163 samples, 2.50%)</title><rect x="947.5" y="947.0" width="29.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.5" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (162 samples, 2.49%)</title><rect x="947.7" y="931.0" width="29.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.7" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (113 samples, 1.73%)</title><rect x="947.9" y="915.0" width="20.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (113 samples, 1.73%)</title><rect x="947.9" y="899.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (113 samples, 1.73%)</title><rect x="947.9" y="883.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="950.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (112 samples, 1.72%)</title><rect x="948.1" y="867.0" width="20.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="951.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (112 samples, 1.72%)</title><rect x="948.1" y="851.0" width="20.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (110 samples, 1.69%)</title><rect x="948.4" y="835.0" width="19.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (110 samples, 1.69%)</title><rect x="948.4" y="819.0" width="19.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (110 samples, 1.69%)</title><rect x="948.4" y="803.0" width="19.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (110 samples, 1.69%)</title><rect x="948.4" y="787.0" width="19.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="951.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (108 samples, 1.66%)</title><rect x="948.4" y="771.0" width="19.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (108 samples, 1.66%)</title><rect x="948.4" y="755.0" width="19.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (107 samples, 1.64%)</title><rect x="948.6" y="739.0" width="19.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.6" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="948.6" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="951.6" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (2 samples, 0.03%)</title><rect x="949.0" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="952.0" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.12%)</title><rect x="949.7" y="723.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="952.7" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="949.9" y="707.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="952.9" y="718.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.03%)</title><rect x="950.4" y="707.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="953.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.43%)</title><rect x="951.1" y="723.0" width="16.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="954.1" y="734.0"></text>
</g>
<g>
<title>__kernel_vsyscall (91 samples, 1.40%)</title><rect x="951.1" y="707.0" width="16.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="954.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (91 samples, 1.40%)</title><rect x="951.1" y="691.0" width="16.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="954.1" y="702.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (91 samples, 1.40%)</title><rect x="951.1" y="675.0" width="16.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="954.1" y="686.0"></text>
</g>
<g>
<title>sys_futex (90 samples, 1.38%)</title><rect x="951.3" y="659.0" width="16.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="954.3" y="670.0"></text>
</g>
<g>
<title>do_futex (89 samples, 1.37%)</title><rect x="951.3" y="643.0" width="16.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="954.3" y="654.0"></text>
</g>
<g>
<title>futex_wake (87 samples, 1.34%)</title><rect x="951.5" y="627.0" width="15.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="954.5" y="638.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.06%)</title><rect x="951.5" y="611.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="954.5" y="622.0"></text>
</g>
<g>
<title>wake_q_add (2 samples, 0.03%)</title><rect x="951.9" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="954.9" y="606.0"></text>
</g>
<g>
<title>wake_up_q (83 samples, 1.27%)</title><rect x="952.2" y="611.0" width="15.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="955.2" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (82 samples, 1.26%)</title><rect x="952.4" y="595.0" width="14.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="955.4" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (82 samples, 1.26%)</title><rect x="952.4" y="579.0" width="14.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="955.4" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="966.9" y="563.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="969.9" y="574.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="966.9" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="969.9" y="558.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="966.9" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="969.9" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="966.9" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="969.9" y="526.0"></text>
</g>
<g>
<title>call_on_stack (2 samples, 0.03%)</title><rect x="966.9" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="969.9" y="510.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.03%)</title><rect x="966.9" y="483.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="969.9" y="494.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="966.9" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="969.9" y="478.0"></text>
</g>
<g>
<title>rebalance_domains (2 samples, 0.03%)</title><rect x="966.9" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="969.9" y="462.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="966.9" y="435.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="969.9" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="966.9" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="969.9" y="430.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="967.6" y="707.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="970.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.06%)</title><rect x="968.3" y="915.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.06%)</title><rect x="968.3" y="899.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.06%)</title><rect x="968.3" y="883.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (44 samples, 0.68%)</title><rect x="969.1" y="915.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="972.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (2 samples, 0.03%)</title><rect x="969.8" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="972.8" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (38 samples, 0.58%)</title><rect x="970.2" y="899.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="970.2" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="973.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="970.2" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="973.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="970.2" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (36 samples, 0.55%)</title><rect x="970.5" y="883.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (36 samples, 0.55%)</title><rect x="970.5" y="867.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.5" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (32 samples, 0.49%)</title><rect x="971.2" y="851.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="974.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (32 samples, 0.49%)</title><rect x="971.2" y="835.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="974.2" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (29 samples, 0.45%)</title><rect x="971.8" y="819.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="974.8" y="830.0"></text>
</g>
<g>
<title>__kernel_vsyscall (25 samples, 0.38%)</title><rect x="972.5" y="803.0" width="4.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="975.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (23 samples, 0.35%)</title><rect x="972.9" y="787.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="975.9" y="798.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (23 samples, 0.35%)</title><rect x="972.9" y="771.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="975.9" y="782.0"></text>
</g>
<g>
<title>sys_read (22 samples, 0.34%)</title><rect x="973.1" y="755.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="976.1" y="766.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 0.34%)</title><rect x="973.1" y="739.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="976.1" y="750.0"></text>
</g>
<g>
<title>__vfs_read (18 samples, 0.28%)</title><rect x="973.1" y="723.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="976.1" y="734.0"></text>
</g>
<g>
<title>new_sync_read (18 samples, 0.28%)</title><rect x="973.1" y="707.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="976.1" y="718.0"></text>
</g>
<g>
<title>sock_read_iter (18 samples, 0.28%)</title><rect x="973.1" y="691.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="976.1" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.26%)</title><rect x="973.2" y="675.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="976.2" y="686.0"></text>
</g>
<g>
<title>inet_recvmsg (16 samples, 0.25%)</title><rect x="973.2" y="659.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="976.2" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 0.21%)</title><rect x="973.6" y="643.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="976.6" y="654.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="974.0" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="977.0" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.09%)</title><rect x="974.7" y="627.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="977.7" y="638.0"></text>
</g>
<g>
<title>tcp_send_ack (5 samples, 0.08%)</title><rect x="974.9" y="611.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="977.9" y="622.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.38 (5 samples, 0.08%)</title><rect x="974.9" y="595.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="977.9" y="606.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.06%)</title><rect x="974.9" y="579.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="977.9" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.05%)</title><rect x="975.0" y="563.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="978.0" y="574.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="975.2" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="978.2" y="558.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.03%)</title><rect x="975.2" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="978.2" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.03%)</title><rect x="975.2" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="978.2" y="526.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="975.2" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="978.2" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="975.8" y="627.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="978.8" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.06%)</title><rect x="976.3" y="723.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="979.3" y="734.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="976.7" y="707.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="979.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$194/32946704.accept (3 samples, 0.05%)</title><rect x="977.0" y="1107.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.05%)</title><rect x="977.0" y="1091.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="980.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/32074257.run (3 samples, 0.05%)</title><rect x="977.0" y="1075.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.05%)</title><rect x="977.0" y="1059.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="980.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (2 samples, 0.03%)</title><rect x="977.2" y="1043.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="980.2" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (7 samples, 0.11%)</title><rect x="977.6" y="1123.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="980.6" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.06%)</title><rect x="978.1" y="1107.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.1" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (4 samples, 0.06%)</title><rect x="978.1" y="1091.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.1" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (4 samples, 0.06%)</title><rect x="978.1" y="1075.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="981.1" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.06%)</title><rect x="978.1" y="1059.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.1" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.03%)</title><rect x="978.1" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.1" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.03%)</title><rect x="978.1" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.1" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="978.5" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (217 samples, 3.33%)</title><rect x="978.8" y="1123.0" width="39.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.8" y="1134.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/2810801.run (85 samples, 1.30%)</title><rect x="978.8" y="1107.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (85 samples, 1.30%)</title><rect x="978.8" y="1091.0" width="15.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (85 samples, 1.30%)</title><rect x="978.8" y="1075.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (85 samples, 1.30%)</title><rect x="978.8" y="1059.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (85 samples, 1.30%)</title><rect x="978.8" y="1043.0" width="15.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="981.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (84 samples, 1.29%)</title><rect x="979.0" y="1027.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/19216263.run (83 samples, 1.27%)</title><rect x="979.0" y="1011.0" width="15.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (82 samples, 1.26%)</title><rect x="979.2" y="995.0" width="14.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (80 samples, 1.23%)</title><rect x="979.6" y="979.0" width="14.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="982.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (78 samples, 1.20%)</title><rect x="979.9" y="963.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="982.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (4 samples, 0.06%)</title><rect x="979.9" y="947.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="982.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.05%)</title><rect x="980.1" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.05%)</title><rect x="980.1" y="915.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.03%)</title><rect x="980.1" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.03%)</title><rect x="980.1" y="883.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.03%)</title><rect x="980.1" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (74 samples, 1.14%)</title><rect x="980.7" y="947.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="983.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (69 samples, 1.06%)</title><rect x="981.6" y="931.0" width="12.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (69 samples, 1.06%)</title><rect x="981.6" y="915.0" width="12.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (68 samples, 1.04%)</title><rect x="981.7" y="899.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="984.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (68 samples, 1.04%)</title><rect x="981.7" y="883.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="984.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="981.9" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.03%)</title><rect x="981.9" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.03%)</title><rect x="981.9" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.03%)</title><rect x="981.9" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="984.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (65 samples, 1.00%)</title><rect x="982.3" y="867.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="985.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (65 samples, 1.00%)</title><rect x="982.3" y="851.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (65 samples, 1.00%)</title><rect x="982.3" y="835.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="985.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (65 samples, 1.00%)</title><rect x="982.3" y="819.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="985.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (64 samples, 0.98%)</title><rect x="982.5" y="803.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="985.5" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.12%)</title><rect x="982.6" y="787.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="985.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.83%)</title><rect x="984.1" y="787.0" width="9.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="987.1" y="798.0"></text>
</g>
<g>
<title>__kernel_vsyscall (53 samples, 0.81%)</title><rect x="984.1" y="771.0" width="9.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="987.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (53 samples, 0.81%)</title><rect x="984.1" y="755.0" width="9.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="987.1" y="766.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (53 samples, 0.81%)</title><rect x="984.1" y="739.0" width="9.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="987.1" y="750.0"></text>
</g>
<g>
<title>sys_futex (53 samples, 0.81%)</title><rect x="984.1" y="723.0" width="9.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="987.1" y="734.0"></text>
</g>
<g>
<title>do_futex (52 samples, 0.80%)</title><rect x="984.3" y="707.0" width="9.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="987.3" y="718.0"></text>
</g>
<g>
<title>futex_wake (51 samples, 0.78%)</title><rect x="984.5" y="691.0" width="9.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="987.5" y="702.0"></text>
</g>
<g>
<title>wake_up_q (50 samples, 0.77%)</title><rect x="984.6" y="675.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="987.6" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (50 samples, 0.77%)</title><rect x="984.6" y="659.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="987.6" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (50 samples, 0.77%)</title><rect x="984.6" y="643.0" width="9.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="987.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$157/32552637.run (132 samples, 2.03%)</title><rect x="994.2" y="1107.0" width="23.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.2" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (132 samples, 2.03%)</title><rect x="994.2" y="1091.0" width="23.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="997.2" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (119 samples, 1.83%)</title><rect x="996.4" y="1075.0" width="21.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="999.4" y="1086.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (119 samples, 1.83%)</title><rect x="996.4" y="1059.0" width="21.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="999.4" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (119 samples, 1.83%)</title><rect x="996.4" y="1043.0" width="21.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.4" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (119 samples, 1.83%)</title><rect x="996.4" y="1027.0" width="21.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="999.4" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (116 samples, 1.78%)</title><rect x="996.6" y="1011.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.6" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (116 samples, 1.78%)</title><rect x="996.6" y="995.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.6" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (116 samples, 1.78%)</title><rect x="996.6" y="979.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.6" y="990.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.23%)</title><rect x="996.6" y="963.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="999.6" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.05%)</title><rect x="997.5" y="947.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1000.5" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="997.7" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1000.7" y="942.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.03%)</title><rect x="998.2" y="947.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1001.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.55%)</title><rect x="999.3" y="963.0" width="18.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1002.3" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (95 samples, 1.46%)</title><rect x="999.5" y="947.0" width="17.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1002.5" y="958.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (93 samples, 1.43%)</title><rect x="999.9" y="931.0" width="16.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1002.9" y="942.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (93 samples, 1.43%)</title><rect x="999.9" y="915.0" width="16.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1002.9" y="926.0"></text>
</g>
<g>
<title>sys_futex (93 samples, 1.43%)</title><rect x="999.9" y="899.0" width="16.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1002.9" y="910.0"></text>
</g>
<g>
<title>do_futex (93 samples, 1.43%)</title><rect x="999.9" y="883.0" width="16.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1002.9" y="894.0"></text>
</g>
<g>
<title>futex_wake (93 samples, 1.43%)</title><rect x="999.9" y="867.0" width="16.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1002.9" y="878.0"></text>
</g>
<g>
<title>wake_up_q (90 samples, 1.38%)</title><rect x="1000.4" y="851.0" width="16.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1003.4" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (90 samples, 1.38%)</title><rect x="1000.4" y="835.0" width="16.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1003.4" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (90 samples, 1.38%)</title><rect x="1000.4" y="819.0" width="16.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1003.4" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.08%)</title><rect x="1016.7" y="947.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1019.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (26 samples, 0.40%)</title><rect x="1018.1" y="1123.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1021.1" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.14%)</title><rect x="1019.0" y="1107.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1022.0" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.14%)</title><rect x="1019.0" y="1091.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1022.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (8 samples, 0.12%)</title><rect x="1019.2" y="1075.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.2" y="1086.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (8 samples, 0.12%)</title><rect x="1019.2" y="1059.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1022.2" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long long&amp;, long long&amp;) (8 samples, 0.12%)</title><rect x="1019.2" y="1043.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1022.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1019.2" y="1027.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1022.2" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="1019.2" y="1011.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1022.2" y="1022.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="1019.2" y="995.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1022.2" y="1006.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="1019.2" y="979.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1022.2" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.09%)</title><rect x="1019.6" y="1027.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1022.6" y="1038.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (5 samples, 0.08%)</title><rect x="1019.8" y="1011.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1022.8" y="1022.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.08%)</title><rect x="1019.8" y="995.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1022.8" y="1006.0"></text>
</g>
<g>
<title>sys_gettimeofday (4 samples, 0.06%)</title><rect x="1020.0" y="979.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1023.0" y="990.0"></text>
</g>
<g>
<title>do_gettimeofday (3 samples, 0.05%)</title><rect x="1020.1" y="963.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1023.1" y="974.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.03%)</title><rect x="1020.1" y="947.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1023.1" y="958.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.03%)</title><rect x="1020.1" y="931.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1023.1" y="942.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="1020.1" y="915.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1023.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (12 samples, 0.18%)</title><rect x="1020.7" y="1107.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1023.7" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (9 samples, 0.14%)</title><rect x="1021.0" y="1091.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.03%)</title><rect x="1022.9" y="1123.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (23 samples, 0.35%)</title><rect x="1023.2" y="1123.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1026.2" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.now (17 samples, 0.26%)</title><rect x="1023.2" y="1107.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.2" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (17 samples, 0.26%)</title><rect x="1023.2" y="1091.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (15 samples, 0.23%)</title><rect x="1023.6" y="1075.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1026.6" y="1086.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (15 samples, 0.23%)</title><rect x="1023.6" y="1059.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1026.6" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long long&amp;, long long&amp;) (8 samples, 0.12%)</title><rect x="1024.8" y="1043.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1027.8" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.09%)</title><rect x="1025.0" y="1027.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1028.0" y="1038.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (6 samples, 0.09%)</title><rect x="1025.0" y="1011.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1028.0" y="1022.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (5 samples, 0.08%)</title><rect x="1025.0" y="995.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1028.0" y="1006.0"></text>
</g>
<g>
<title>sys_gettimeofday (5 samples, 0.08%)</title><rect x="1025.0" y="979.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1028.0" y="990.0"></text>
</g>
<g>
<title>do_gettimeofday (4 samples, 0.06%)</title><rect x="1025.2" y="963.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1028.2" y="974.0"></text>
</g>
<g>
<title>__getnstimeofday64 (4 samples, 0.06%)</title><rect x="1025.2" y="947.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1028.2" y="958.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (4 samples, 0.06%)</title><rect x="1025.2" y="931.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1028.2" y="942.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (3 samples, 0.05%)</title><rect x="1025.4" y="915.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1028.4" y="926.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (5 samples, 0.08%)</title><rect x="1026.5" y="1107.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1029.5" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (5 samples, 0.08%)</title><rect x="1026.5" y="1091.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1029.5" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.06%)</title><rect x="1026.7" y="1075.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.7" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (4 samples, 0.06%)</title><rect x="1026.7" y="1059.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1029.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (365 samples, 5.60%)</title><rect x="1027.4" y="1123.0" width="66.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.4" y="1134.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (365 samples, 5.60%)</title><rect x="1027.4" y="1107.0" width="66.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.4" y="1118.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (362 samples, 5.56%)</title><rect x="1027.9" y="1091.0" width="65.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.9" y="1102.0">sun/nio..</text>
</g>
<g>
<title>__clock_gettime (7 samples, 0.11%)</title><rect x="1028.1" y="1075.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1031.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="1028.3" y="1059.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1031.3" y="1070.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.05%)</title><rect x="1028.3" y="1043.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1031.3" y="1054.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.05%)</title><rect x="1028.3" y="1027.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1031.3" y="1038.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.05%)</title><rect x="1028.3" y="1011.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1031.3" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="1028.8" y="1059.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1031.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="1028.8" y="1043.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1031.8" y="1054.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="1028.8" y="1027.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1031.8" y="1038.0"></text>
</g>
<g>
<title>sys_clock_gettime (2 samples, 0.03%)</title><rect x="1028.8" y="1011.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1031.8" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (300 samples, 4.60%)</title><rect x="1029.6" y="1075.0" width="54.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1032.6" y="1086.0">sun/n..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="1030.6" y="1059.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1033.6" y="1070.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (2 samples, 0.03%)</title><rect x="1031.0" y="1059.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1034.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="1031.4" y="1059.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1034.4" y="1070.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.05%)</title><rect x="1031.4" y="1043.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1034.4" y="1054.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.05%)</title><rect x="1031.4" y="1027.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1034.4" y="1038.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.05%)</title><rect x="1031.4" y="1011.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1034.4" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (286 samples, 4.39%)</title><rect x="1031.9" y="1059.0" width="51.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1034.9" y="1070.0">__ker..</text>
</g>
<g>
<title>entry_SYSENTER_32 (284 samples, 4.36%)</title><rect x="1032.3" y="1043.0" width="51.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1035.3" y="1054.0">entry..</text>
</g>
<g>
<title>do_fast_syscall_32 (284 samples, 4.36%)</title><rect x="1032.3" y="1027.0" width="51.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1035.3" y="1038.0">do_fa..</text>
</g>
<g>
<title>sys_epoll_wait (284 samples, 4.36%)</title><rect x="1032.3" y="1011.0" width="51.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1035.3" y="1022.0">sys_e..</text>
</g>
<g>
<title>ep_poll (282 samples, 4.33%)</title><rect x="1032.3" y="995.0" width="51.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1035.3" y="1006.0">ep_poll</text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="1032.4" y="979.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1035.4" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.16 (12 samples, 0.18%)</title><rect x="1032.8" y="979.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1035.8" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="1033.0" y="963.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1036.0" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.14%)</title><rect x="1033.4" y="963.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1036.4" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (7 samples, 0.11%)</title><rect x="1033.5" y="947.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1036.5" y="958.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.06%)</title><rect x="1034.1" y="931.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1037.1" y="942.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.03%)</title><rect x="1035.2" y="979.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1038.2" y="990.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.03%)</title><rect x="1035.2" y="963.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1038.2" y="974.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="1035.2" y="947.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1038.2" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (257 samples, 3.94%)</title><rect x="1035.7" y="979.0" width="46.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1038.7" y="990.0">sche..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (256 samples, 3.93%)</title><rect x="1035.9" y="963.0" width="46.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1038.9" y="974.0">sche..</text>
</g>
<g>
<title>__hrtimer_init (2 samples, 0.03%)</title><rect x="1035.9" y="947.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1038.9" y="958.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (12 samples, 0.18%)</title><rect x="1036.3" y="947.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1039.3" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.17%)</title><rect x="1036.4" y="931.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1039.4" y="942.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.05%)</title><rect x="1038.4" y="947.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1041.4" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.05%)</title><rect x="1038.4" y="931.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1041.4" y="942.0"></text>
</g>
<g>
<title>schedule (239 samples, 3.67%)</title><rect x="1039.0" y="947.0" width="43.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1042.0" y="958.0">sche..</text>
</g>
<g>
<title>__sched_text_start (239 samples, 3.67%)</title><rect x="1039.0" y="931.0" width="43.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1042.0" y="942.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (238 samples, 3.65%)</title><rect x="1039.1" y="915.0" width="43.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1042.1" y="926.0">fini..</text>
</g>
<g>
<title>apic_timer_interrupt (4 samples, 0.06%)</title><rect x="1081.5" y="899.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1084.5" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (4 samples, 0.06%)</title><rect x="1081.5" y="883.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1084.5" y="894.0"></text>
</g>
<g>
<title>irq_exit (4 samples, 0.06%)</title><rect x="1081.5" y="867.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1084.5" y="878.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.06%)</title><rect x="1081.5" y="851.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.5" y="862.0"></text>
</g>
<g>
<title>call_on_stack (4 samples, 0.06%)</title><rect x="1081.5" y="835.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.5" y="846.0"></text>
</g>
<g>
<title>__do_softirq (4 samples, 0.06%)</title><rect x="1081.5" y="819.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1084.5" y="830.0"></text>
</g>
<g>
<title>select_estimate_accuracy (4 samples, 0.06%)</title><rect x="1082.2" y="979.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1085.2" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (39 samples, 0.60%)</title><rect x="1083.9" y="1075.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (35 samples, 0.54%)</title><rect x="1084.1" y="1059.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.1" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (35 samples, 0.54%)</title><rect x="1084.1" y="1043.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1087.1" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (31 samples, 0.48%)</title><rect x="1084.6" y="1027.0" width="5.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1087.6" y="1038.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (31 samples, 0.48%)</title><rect x="1084.6" y="1011.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1087.6" y="1022.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (31 samples, 0.48%)</title><rect x="1084.6" y="995.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1087.6" y="1006.0"></text>
</g>
<g>
<title>sys_read (31 samples, 0.48%)</title><rect x="1084.6" y="979.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1087.6" y="990.0"></text>
</g>
<g>
<title>vfs_read (30 samples, 0.46%)</title><rect x="1084.8" y="963.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1087.8" y="974.0"></text>
</g>
<g>
<title>__vfs_read (29 samples, 0.45%)</title><rect x="1084.8" y="947.0" width="5.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1087.8" y="958.0"></text>
</g>
<g>
<title>new_sync_read (29 samples, 0.45%)</title><rect x="1084.8" y="931.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1087.8" y="942.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.03%)</title><rect x="1085.1" y="915.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1088.1" y="926.0"></text>
</g>
<g>
<title>pipe_read (22 samples, 0.34%)</title><rect x="1085.9" y="915.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1088.9" y="926.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="1086.8" y="899.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1089.8" y="910.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="1086.8" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1089.8" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="1086.8" y="867.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1089.8" y="878.0"></text>
</g>
<g>
<title>copy_page_to_iter (8 samples, 0.12%)</title><rect x="1087.3" y="899.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1090.3" y="910.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.03%)</title><rect x="1088.8" y="899.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1091.8" y="910.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.06%)</title><rect x="1089.1" y="899.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1092.1" y="910.0"></text>
</g>
<g>
<title>__atime_needs_update (3 samples, 0.05%)</title><rect x="1089.1" y="883.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1092.1" y="894.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="1089.3" y="867.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1092.3" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.05%)</title><rect x="1090.4" y="1059.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.05%)</title><rect x="1090.4" y="1043.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.05%)</title><rect x="1090.4" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.4" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.05%)</title><rect x="1090.4" y="1011.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.4" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.06%)</title><rect x="1090.9" y="1075.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (5 samples, 0.08%)</title><rect x="1091.7" y="1075.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (5 samples, 0.08%)</title><rect x="1091.7" y="1059.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1094.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.05%)</title><rect x="1091.7" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1094.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="1092.2" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1095.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.03%)</title><rect x="1092.6" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.03%)</title><rect x="1092.6" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1095.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="1092.6" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.05%)</title><rect x="1092.9" y="1075.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (4 samples, 0.06%)</title><rect x="1093.5" y="1123.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (4 samples, 0.06%)</title><rect x="1093.5" y="1107.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.5" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (4 samples, 0.06%)</title><rect x="1093.5" y="1091.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1096.5" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (3 samples, 0.05%)</title><rect x="1093.5" y="1075.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.5" y="1086.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="1093.7" y="1059.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1096.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="1093.7" y="1043.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1096.7" y="1054.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="1093.7" y="1027.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1096.7" y="1038.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.03%)</title><rect x="1093.7" y="1011.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1096.7" y="1022.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.03%)</title><rect x="1093.7" y="995.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1096.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (524 samples, 8.04%)</title><rect x="1094.7" y="1139.0" width="94.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.7" y="1150.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (202 samples, 3.10%)</title><rect x="1095.7" y="1123.0" width="36.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.7" y="1134.0">one..</text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="1095.8" y="1107.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1098.8" y="1118.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.05%)</title><rect x="1096.0" y="1091.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1099.0" y="1102.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (3 samples, 0.05%)</title><rect x="1096.0" y="1075.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1099.0" y="1086.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (3 samples, 0.05%)</title><rect x="1096.0" y="1059.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1099.0" y="1070.0"></text>
</g>
<g>
<title>sys_clock_gettime (2 samples, 0.03%)</title><rect x="1096.2" y="1043.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1099.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (8 samples, 0.12%)</title><rect x="1096.7" y="1107.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.7" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (5 samples, 0.08%)</title><rect x="1097.3" y="1091.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1100.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.08%)</title><rect x="1097.3" y="1075.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1100.3" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (188 samples, 2.89%)</title><rect x="1098.2" y="1107.0" width="34.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.2" y="1118.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (188 samples, 2.89%)</title><rect x="1098.2" y="1091.0" width="34.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.2" y="1102.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (186 samples, 2.85%)</title><rect x="1098.5" y="1075.0" width="33.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.5" y="1086.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (168 samples, 2.58%)</title><rect x="1098.7" y="1059.0" width="30.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1101.7" y="1070.0">su..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="1099.3" y="1043.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1102.3" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (157 samples, 2.41%)</title><rect x="1100.0" y="1043.0" width="28.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1103.0" y="1054.0">__..</text>
</g>
<g>
<title>entry_SYSENTER_32 (154 samples, 2.36%)</title><rect x="1100.5" y="1027.0" width="27.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1103.5" y="1038.0">e..</text>
</g>
<g>
<title>do_fast_syscall_32 (153 samples, 2.35%)</title><rect x="1100.5" y="1011.0" width="27.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1103.5" y="1022.0">d..</text>
</g>
<g>
<title>sys_epoll_wait (153 samples, 2.35%)</title><rect x="1100.5" y="995.0" width="27.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1103.5" y="1006.0">s..</text>
</g>
<g>
<title>ep_poll (149 samples, 2.29%)</title><rect x="1101.1" y="979.0" width="27.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1104.1" y="990.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.16 (21 samples, 0.32%)</title><rect x="1101.3" y="963.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1104.3" y="974.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.06%)</title><rect x="1101.8" y="947.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1104.8" y="958.0"></text>
</g>
<g>
<title>ep_send_events_proc (10 samples, 0.15%)</title><rect x="1102.7" y="947.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1105.7" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (8 samples, 0.12%)</title><rect x="1102.7" y="931.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1105.7" y="942.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.09%)</title><rect x="1103.1" y="915.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1106.1" y="926.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.06%)</title><rect x="1103.4" y="899.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1106.4" y="910.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="1104.2" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1107.2" y="942.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.05%)</title><rect x="1104.5" y="947.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1107.5" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (127 samples, 1.95%)</title><rect x="1105.1" y="963.0" width="23.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1108.1" y="974.0">s..</text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="1105.1" y="947.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1108.1" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (125 samples, 1.92%)</title><rect x="1105.4" y="947.0" width="22.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1108.4" y="958.0">s..</text>
</g>
<g>
<title>schedule (124 samples, 1.90%)</title><rect x="1105.6" y="931.0" width="22.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1108.6" y="942.0">s..</text>
</g>
<g>
<title>__sched_text_start (124 samples, 1.90%)</title><rect x="1105.6" y="915.0" width="22.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1108.6" y="926.0">_..</text>
</g>
<g>
<title>finish_task_switch (123 samples, 1.89%)</title><rect x="1105.8" y="899.0" width="22.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1108.8" y="910.0">f..</text>
</g>
<g>
<title>epoll_wait (3 samples, 0.05%)</title><rect x="1128.6" y="1043.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1131.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (7 samples, 0.11%)</title><rect x="1129.2" y="1059.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1132.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.05%)</title><rect x="1129.2" y="1043.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1132.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.05%)</title><rect x="1129.2" y="1027.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1132.2" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (4 samples, 0.06%)</title><rect x="1129.7" y="1043.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.7" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.06%)</title><rect x="1129.7" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1132.7" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.06%)</title><rect x="1129.7" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.7" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.06%)</title><rect x="1129.7" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.7" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.03%)</title><rect x="1130.4" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.4" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (3 samples, 0.05%)</title><rect x="1130.8" y="1059.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1133.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (3 samples, 0.05%)</title><rect x="1130.8" y="1043.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.8" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="1131.0" y="1027.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="1131.0" y="1011.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="1131.0" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.0" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 0.06%)</title><rect x="1131.5" y="1059.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (316 samples, 4.85%)</title><rect x="1132.2" y="1123.0" width="57.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1135.2" y="1134.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (315 samples, 4.83%)</title><rect x="1132.4" y="1107.0" width="57.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.4" y="1118.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (183 samples, 2.81%)</title><rect x="1132.8" y="1091.0" width="33.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.8" y="1102.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (150 samples, 2.30%)</title><rect x="1133.1" y="1075.0" width="27.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.1" y="1086.0">o..</text>
</g>
<g>
<title>java/util/LinkedList.addLast (5 samples, 0.08%)</title><rect x="1133.1" y="1059.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (145 samples, 2.23%)</title><rect x="1134.0" y="1059.0" width="26.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.0" y="1070.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (137 samples, 2.10%)</title><rect x="1134.2" y="1043.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.2" y="1054.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.08%)</title><rect x="1134.2" y="1027.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="1134.8" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1137.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (132 samples, 2.03%)</title><rect x="1135.1" y="1027.0" width="23.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1138.1" y="1038.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.12%)</title><rect x="1135.1" y="1011.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="1136.0" y="995.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="1136.0" y="979.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.executeAsync (124 samples, 1.90%)</title><rect x="1136.6" y="1011.0" width="22.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.6" y="1022.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (123 samples, 1.89%)</title><rect x="1136.8" y="995.0" width="22.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.8" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (122 samples, 1.87%)</title><rect x="1136.8" y="979.0" width="22.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.8" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (111 samples, 1.70%)</title><rect x="1136.8" y="963.0" width="20.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (110 samples, 1.69%)</title><rect x="1136.9" y="947.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1139.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (110 samples, 1.69%)</title><rect x="1136.9" y="931.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1139.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (110 samples, 1.69%)</title><rect x="1136.9" y="915.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (108 samples, 1.66%)</title><rect x="1137.3" y="899.0" width="19.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1140.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (108 samples, 1.66%)</title><rect x="1137.3" y="883.0" width="19.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.3" y="894.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="1137.7" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1140.7" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (16 samples, 0.25%)</title><rect x="1138.2" y="867.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1141.2" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="1138.9" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.9" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.05%)</title><rect x="1139.3" y="851.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.3" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="1140.0" y="851.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1143.0" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="1140.6" y="851.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1143.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.34%)</title><rect x="1141.1" y="867.0" width="15.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1144.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1141.1" y="851.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1144.1" y="862.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="1141.1" y="835.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1144.1" y="846.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="1141.1" y="819.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1144.1" y="830.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="1141.1" y="803.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1144.1" y="814.0"></text>
</g>
<g>
<title>__kernel_vsyscall (83 samples, 1.27%)</title><rect x="1141.5" y="851.0" width="15.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1144.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (82 samples, 1.26%)</title><rect x="1141.6" y="835.0" width="14.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1144.6" y="846.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (82 samples, 1.26%)</title><rect x="1141.6" y="819.0" width="14.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1144.6" y="830.0"></text>
</g>
<g>
<title>sys_futex (81 samples, 1.24%)</title><rect x="1141.8" y="803.0" width="14.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1144.8" y="814.0"></text>
</g>
<g>
<title>do_futex (81 samples, 1.24%)</title><rect x="1141.8" y="787.0" width="14.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1144.8" y="798.0"></text>
</g>
<g>
<title>futex_wake (80 samples, 1.23%)</title><rect x="1142.0" y="771.0" width="14.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1145.0" y="782.0"></text>
</g>
<g>
<title>wake_q_add (2 samples, 0.03%)</title><rect x="1142.9" y="755.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1145.9" y="766.0"></text>
</g>
<g>
<title>wake_up_q (73 samples, 1.12%)</title><rect x="1143.3" y="755.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1146.3" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (73 samples, 1.12%)</title><rect x="1143.3" y="739.0" width="13.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1146.3" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (73 samples, 1.12%)</title><rect x="1143.3" y="723.0" width="13.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1146.3" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="1156.5" y="851.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1159.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.11%)</title><rect x="1156.9" y="963.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.11%)</title><rect x="1156.9" y="947.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.11%)</title><rect x="1156.9" y="931.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1159.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.06%)</title><rect x="1158.1" y="963.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.06%)</title><rect x="1158.1" y="947.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.06%)</title><rect x="1158.1" y="931.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1161.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.11%)</title><rect x="1159.0" y="1043.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.0" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.11%)</title><rect x="1159.0" y="1027.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1162.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.11%)</title><rect x="1159.0" y="1011.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (31 samples, 0.48%)</title><rect x="1160.3" y="1075.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1163.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="1165.2" y="1059.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="1165.2" y="1043.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1168.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (130 samples, 2.00%)</title><rect x="1165.9" y="1091.0" width="23.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.9" y="1102.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (130 samples, 2.00%)</title><rect x="1165.9" y="1075.0" width="23.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1168.9" y="1086.0">o..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="1165.9" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.9" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1165.9" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1168.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1165.9" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.9" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1165.9" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1168.9" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="1165.9" y="995.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1168.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="1165.9" y="979.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.9" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (128 samples, 1.96%)</title><rect x="1166.3" y="1059.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.3" y="1070.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.08%)</title><rect x="1166.3" y="1043.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.08%)</title><rect x="1166.3" y="1027.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1169.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.08%)</title><rect x="1166.3" y="1011.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.3" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (123 samples, 1.89%)</title><rect x="1167.2" y="1043.0" width="22.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1170.2" y="1054.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (123 samples, 1.89%)</title><rect x="1167.2" y="1027.0" width="22.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1170.2" y="1038.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (122 samples, 1.87%)</title><rect x="1167.4" y="1011.0" width="22.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1170.4" y="1022.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (122 samples, 1.87%)</title><rect x="1167.4" y="995.0" width="22.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1170.4" y="1006.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (120 samples, 1.84%)</title><rect x="1167.7" y="979.0" width="21.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.7" y="990.0">s..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1168.3" y="963.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1171.3" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.03%)</title><rect x="1168.3" y="947.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1171.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (2 samples, 0.03%)</title><rect x="1168.3" y="931.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1171.3" y="942.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (2 samples, 0.03%)</title><rect x="1168.3" y="915.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1171.3" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (113 samples, 1.73%)</title><rect x="1168.6" y="963.0" width="20.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1171.6" y="974.0"></text>
</g>
<g>
<title>entry_SYSENTER_32 (112 samples, 1.72%)</title><rect x="1168.8" y="947.0" width="20.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1171.8" y="958.0"></text>
</g>
<g>
<title>do_fast_syscall_32 (111 samples, 1.70%)</title><rect x="1168.8" y="931.0" width="20.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1171.8" y="942.0"></text>
</g>
<g>
<title>sys_read (109 samples, 1.67%)</title><rect x="1169.0" y="915.0" width="19.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1172.0" y="926.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="1169.0" y="899.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1172.0" y="910.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="1169.0" y="883.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1172.0" y="894.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="1169.0" y="867.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1172.0" y="878.0"></text>
</g>
<g>
<title>vfs_read (106 samples, 1.63%)</title><rect x="1169.5" y="899.0" width="19.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1172.5" y="910.0"></text>
</g>
<g>
<title>__vfs_read (101 samples, 1.55%)</title><rect x="1169.5" y="883.0" width="18.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1172.5" y="894.0"></text>
</g>
<g>
<title>new_sync_read (100 samples, 1.53%)</title><rect x="1169.5" y="867.0" width="18.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1172.5" y="878.0"></text>
</g>
<g>
<title>sock_read_iter (100 samples, 1.53%)</title><rect x="1169.5" y="851.0" width="18.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1172.5" y="862.0"></text>
</g>
<g>
<title>sock_recvmsg (98 samples, 1.50%)</title><rect x="1169.9" y="835.0" width="17.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1172.9" y="846.0"></text>
</g>
<g>
<title>inet_recvmsg (96 samples, 1.47%)</title><rect x="1170.1" y="819.0" width="17.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1173.1" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="1170.1" y="803.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1173.1" y="814.0"></text>
</g>
<g>
<title>tcp_recvmsg (91 samples, 1.40%)</title><rect x="1171.0" y="803.0" width="16.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1174.0" y="814.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="1171.7" y="787.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1174.7" y="798.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="1171.7" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1174.7" y="782.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1172.3" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1175.3" y="798.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (13 samples, 0.20%)</title><rect x="1172.8" y="787.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1175.8" y="798.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="1173.0" y="771.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1176.0" y="782.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.12%)</title><rect x="1173.3" y="771.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1176.3" y="782.0"></text>
</g>
<g>
<title>copyout (8 samples, 0.12%)</title><rect x="1173.3" y="755.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.3" y="766.0"></text>
</g>
<g>
<title>__copy_user_ll (8 samples, 0.12%)</title><rect x="1173.3" y="739.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1176.3" y="750.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.03%)</title><rect x="1174.8" y="771.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.8" y="782.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (64 samples, 0.98%)</title><rect x="1175.2" y="787.0" width="11.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1178.2" y="798.0"></text>
</g>
<g>
<title>tcp_send_ack (61 samples, 0.94%)</title><rect x="1175.7" y="771.0" width="11.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1178.7" y="782.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.38 (61 samples, 0.94%)</title><rect x="1175.7" y="755.0" width="11.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1178.7" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.08%)</title><rect x="1175.7" y="739.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1178.7" y="750.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.05%)</title><rect x="1176.1" y="723.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1179.1" y="734.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (52 samples, 0.80%)</title><rect x="1176.8" y="739.0" width="9.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1179.8" y="750.0"></text>
</g>
<g>
<title>ip_queue_xmit (52 samples, 0.80%)</title><rect x="1176.8" y="723.0" width="9.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1179.8" y="734.0"></text>
</g>
<g>
<title>ip_local_out (50 samples, 0.77%)</title><rect x="1176.8" y="707.0" width="9.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1179.8" y="718.0"></text>
</g>
<g>
<title>ip_output (50 samples, 0.77%)</title><rect x="1176.8" y="691.0" width="9.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1179.8" y="702.0"></text>
</g>
<g>
<title>ip_finish_output (50 samples, 0.77%)</title><rect x="1176.8" y="675.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1179.8" y="686.0"></text>
</g>
<g>
<title>ip_finish_output2 (49 samples, 0.75%)</title><rect x="1177.0" y="659.0" width="8.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1180.0" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (42 samples, 0.64%)</title><rect x="1177.0" y="643.0" width="7.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.0" y="654.0"></text>
</g>
<g>
<title>do_softirq.part.15 (42 samples, 0.64%)</title><rect x="1177.0" y="627.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1180.0" y="638.0"></text>
</g>
<g>
<title>do_softirq_own_stack (42 samples, 0.64%)</title><rect x="1177.0" y="611.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1180.0" y="622.0"></text>
</g>
<g>
<title>call_on_stack (42 samples, 0.64%)</title><rect x="1177.0" y="595.0" width="7.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1180.0" y="606.0"></text>
</g>
<g>
<title>__do_softirq (42 samples, 0.64%)</title><rect x="1177.0" y="579.0" width="7.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1180.0" y="590.0"></text>
</g>
<g>
<title>net_rx_action (38 samples, 0.58%)</title><rect x="1177.7" y="563.0" width="6.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.7" y="574.0"></text>
</g>
<g>
<title>process_backlog (36 samples, 0.55%)</title><rect x="1178.0" y="547.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.0" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb (36 samples, 0.55%)</title><rect x="1178.0" y="531.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1181.0" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (36 samples, 0.55%)</title><rect x="1178.0" y="515.0" width="6.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1181.0" y="526.0"></text>
</g>
<g>
<title>ip_rcv (35 samples, 0.54%)</title><rect x="1178.2" y="499.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.2" y="510.0"></text>
</g>
<g>
<title>ip_rcv_finish (34 samples, 0.52%)</title><rect x="1178.4" y="483.0" width="6.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1181.4" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver (34 samples, 0.52%)</title><rect x="1178.4" y="467.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.4" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (32 samples, 0.49%)</title><rect x="1178.4" y="451.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1181.4" y="462.0"></text>
</g>
<g>
<title>tcp_v4_rcv (32 samples, 0.49%)</title><rect x="1178.4" y="435.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.4" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (26 samples, 0.40%)</title><rect x="1179.3" y="419.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.3" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 0.38%)</title><rect x="1179.5" y="403.0" width="4.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1182.5" y="414.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="1180.2" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1183.2" y="398.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1180.2" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1183.2" y="382.0"></text>
</g>
<g>
<title>tcp_ack (18 samples, 0.28%)</title><rect x="1180.8" y="387.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1183.8" y="398.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.05%)</title><rect x="1181.1" y="371.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1184.1" y="382.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 0.14%)</title><rect x="1181.9" y="371.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1184.9" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.05%)</title><rect x="1182.4" y="355.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1185.4" y="366.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.05%)</title><rect x="1182.4" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1185.4" y="350.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.05%)</title><rect x="1182.4" y="323.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1185.4" y="334.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.05%)</title><rect x="1182.4" y="307.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1185.4" y="318.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.05%)</title><rect x="1182.4" y="291.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1185.4" y="302.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="1182.6" y="275.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1185.6" y="286.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="1182.9" y="355.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1185.9" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.11%)</title><rect x="1184.6" y="643.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1187.6" y="654.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.11%)</title><rect x="1184.6" y="627.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1187.6" y="638.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.05%)</title><rect x="1184.9" y="611.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1187.9" y="622.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="1185.1" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1188.1" y="606.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="1185.1" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1188.1" y="590.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="1185.1" y="563.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1188.1" y="574.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="1185.1" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1188.1" y="558.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="1185.8" y="707.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1188.8" y="718.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="1186.2" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1189.2" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.05%)</title><rect x="1186.7" y="787.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1189.7" y="798.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.06%)</title><rect x="1188.0" y="883.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1191.0" y="894.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.05%)</title><rect x="1188.2" y="867.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1191.2" y="878.0"></text>
</g>
<g>
<title>read (2 samples, 0.03%)</title><rect x="1189.1" y="963.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1192.1" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.03%)</title><rect x="1189.6" y="1139.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.6" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.03%)</title><rect x="1189.6" y="1123.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.6" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.03%)</title><rect x="1189.6" y="1107.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.6" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.03%)</title><rect x="1189.6" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.6" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="1189.6" y="1075.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.6" y="1086.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.03%)</title><rect x="1189.6" y="1059.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.6" y="1070.0"></text>
</g>
</g>
</svg>
