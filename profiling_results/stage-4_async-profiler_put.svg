<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1125"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1125"> </text>
<g id="frames">
<g>
<title>all (3,991 samples, 100.00%)</title><rect x="10.0" y="1091.0" width="1180.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="13.0" y="1102.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.03%)</title><rect x="10.0" y="1075.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="10.3" y="1075.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.3" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (77 samples, 1.93%)</title><rect x="10.6" y="1075.0" width="22.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.6" y="1086.0">O..</text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.05%)</title><rect x="11.2" y="1059.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="14.2" y="1070.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="11.8" y="1059.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.8" y="1070.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (20 samples, 0.50%)</title><rect x="12.1" y="1059.0" width="5.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.1" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.08%)</title><rect x="12.4" y="1043.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.4" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (13 samples, 0.33%)</title><rect x="13.3" y="1043.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.3" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (12 samples, 0.30%)</title><rect x="13.3" y="1027.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="16.3" y="1038.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (1 samples, 0.03%)</title><rect x="13.3" y="1011.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.3" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.03%)</title><rect x="13.5" y="1011.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="16.5" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (10 samples, 0.25%)</title><rect x="13.8" y="1011.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.8" y="1022.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned int, Thread*) (1 samples, 0.03%)</title><rect x="14.1" y="995.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.1" y="1006.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="14.1" y="979.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="17.1" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (1 samples, 0.03%)</title><rect x="14.4" y="995.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.4" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (1 samples, 0.03%)</title><rect x="14.4" y="979.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.4" y="990.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.03%)</title><rect x="14.4" y="963.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.4" y="974.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (1 samples, 0.03%)</title><rect x="14.7" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.7" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.13%)</title><rect x="15.0" y="995.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.0" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (1 samples, 0.03%)</title><rect x="15.0" y="979.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.0" y="990.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (1 samples, 0.03%)</title><rect x="15.3" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="18.3" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="15.6" y="979.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="18.6" y="990.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.05%)</title><rect x="15.9" y="979.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="18.9" y="990.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="16.5" y="995.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="19.5" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="16.8" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="19.8" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (3 samples, 0.08%)</title><rect x="17.1" y="1043.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="20.1" y="1054.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (52 samples, 1.30%)</title><rect x="18.0" y="1059.0" width="15.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="21.0" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.13%)</title><rect x="18.0" y="1043.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.0" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (47 samples, 1.18%)</title><rect x="19.5" y="1043.0" width="13.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="22.5" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (43 samples, 1.08%)</title><rect x="20.3" y="1027.0" width="12.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="23.3" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (5 samples, 0.13%)</title><rect x="20.6" y="1011.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="23.6" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (37 samples, 0.93%)</title><rect x="22.1" y="1011.0" width="11.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="25.1" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate(unsigned int, bool*) (6 samples, 0.15%)</title><rect x="23.0" y="995.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="26.0" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (2 samples, 0.05%)</title><rect x="23.0" y="979.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="26.0" y="990.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned int, bool) (1 samples, 0.03%)</title><rect x="23.6" y="979.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="26.6" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (2 samples, 0.05%)</title><rect x="23.9" y="979.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="26.9" y="990.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.03%)</title><rect x="23.9" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="26.9" y="974.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (1 samples, 0.03%)</title><rect x="24.2" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.2" y="974.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="24.5" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="27.5" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="24.8" y="995.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="27.8" y="1006.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned int, Thread*) (1 samples, 0.03%)</title><rect x="25.1" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="28.1" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (15 samples, 0.38%)</title><rect x="25.4" y="995.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="28.4" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="26.6" y="979.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="29.6" y="990.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (2 samples, 0.05%)</title><rect x="26.9" y="979.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="29.9" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (2 samples, 0.05%)</title><rect x="27.4" y="979.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.4" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (2 samples, 0.05%)</title><rect x="27.4" y="963.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="30.4" y="974.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.03%)</title><rect x="27.4" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.4" y="958.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (1 samples, 0.03%)</title><rect x="27.7" y="947.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="30.7" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="28.0" y="979.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.0" y="990.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="28.3" y="979.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.3" y="990.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (4 samples, 0.10%)</title><rect x="28.6" y="979.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="31.6" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (3 samples, 0.08%)</title><rect x="28.6" y="963.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="31.6" y="974.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="29.2" y="947.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="32.2" y="958.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="29.5" y="963.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="32.5" y="974.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (7 samples, 0.18%)</title><rect x="29.8" y="995.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="32.8" y="1006.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="31.9" y="995.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="34.9" y="1006.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.05%)</title><rect x="32.2" y="995.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="35.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="32.8" y="995.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="35.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="32.8" y="979.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="35.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="32.8" y="963.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="35.8" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="33.1" y="1027.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="36.1" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (10 samples, 0.25%)</title><rect x="33.4" y="1075.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="36.4" y="1086.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (10 samples, 0.25%)</title><rect x="33.4" y="1059.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="36.4" y="1070.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.25%)</title><rect x="33.4" y="1043.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="36.4" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.23%)</title><rect x="33.7" y="1027.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="36.7" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.20%)</title><rect x="33.7" y="1011.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="36.7" y="1022.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned int, unsigned int, Thread*) (1 samples, 0.03%)</title><rect x="33.7" y="995.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="36.7" y="1006.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="33.7" y="979.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="36.7" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="33.9" y="995.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="36.9" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.10%)</title><rect x="34.2" y="995.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="37.2" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (3 samples, 0.08%)</title><rect x="34.2" y="979.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="37.2" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (3 samples, 0.08%)</title><rect x="34.2" y="963.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.2" y="974.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned int) (1 samples, 0.03%)</title><rect x="34.5" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="37.5" y="958.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (1 samples, 0.03%)</title><rect x="34.8" y="947.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="37.8" y="958.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="35.1" y="979.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="38.1" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="35.1" y="963.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="38.1" y="974.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="35.1" y="947.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="38.1" y="958.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.05%)</title><rect x="35.4" y="995.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="38.4" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="36.0" y="1011.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="39.0" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (28 samples, 0.70%)</title><rect x="36.3" y="1075.0" width="8.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="39.3" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="37.8" y="1059.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="40.8" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (21 samples, 0.53%)</title><rect x="38.1" y="1059.0" width="6.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="41.1" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (20 samples, 0.50%)</title><rect x="38.4" y="1043.0" width="5.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="41.4" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (19 samples, 0.48%)</title><rect x="38.4" y="1027.0" width="5.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="41.4" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (12 samples, 0.30%)</title><rect x="38.7" y="1011.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="41.7" y="1022.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (3 samples, 0.08%)</title><rect x="39.0" y="995.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="42.0" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned int, unsigned int, unsigned int*) (1 samples, 0.03%)</title><rect x="39.9" y="995.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="42.9" y="1006.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned int, bool) (1 samples, 0.03%)</title><rect x="39.9" y="979.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="42.9" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned int, bool, bool*) (1 samples, 0.03%)</title><rect x="40.2" y="995.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="43.2" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="40.5" y="995.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="43.5" y="1006.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (3 samples, 0.08%)</title><rect x="40.7" y="995.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="43.7" y="1006.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.05%)</title><rect x="40.7" y="979.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="43.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="41.0" y="963.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="44.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="41.0" y="947.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="44.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="41.0" y="931.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="44.0" y="942.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="41.3" y="979.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="44.3" y="990.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned int) (2 samples, 0.05%)</title><rect x="41.6" y="995.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="44.6" y="1006.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (2 samples, 0.05%)</title><rect x="42.2" y="1011.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="45.2" y="1022.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (3 samples, 0.08%)</title><rect x="42.8" y="1011.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="45.8" y="1022.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="43.7" y="1011.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="46.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="43.7" y="995.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="46.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="43.7" y="979.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="46.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="43.7" y="963.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="46.7" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="44.0" y="1027.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="47.0" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.03%)</title><rect x="44.3" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="47.3" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (17 samples, 0.43%)</title><rect x="44.6" y="1075.0" width="5.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="47.6" y="1086.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="44.6" y="1059.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="47.6" y="1070.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (16 samples, 0.40%)</title><rect x="44.9" y="1059.0" width="4.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="47.9" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.13%)</title><rect x="44.9" y="1043.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="47.9" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.63] (4 samples, 0.10%)</title><rect x="45.2" y="1027.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="48.2" y="1038.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.85] (11 samples, 0.28%)</title><rect x="46.4" y="1043.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="49.4" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (10 samples, 0.25%)</title><rect x="46.7" y="1027.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="49.7" y="1038.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.63] (3 samples, 0.08%)</title><rect x="46.7" y="1011.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="49.7" y="1022.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.03%)</title><rect x="47.5" y="1011.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="50.5" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="47.5" y="995.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="50.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="47.5" y="979.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="50.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="47.5" y="963.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="50.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="47.5" y="947.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="50.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="47.5" y="931.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="50.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="47.5" y="915.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="50.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="47.5" y="899.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="50.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="47.5" y="883.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="50.5" y="894.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.13%)</title><rect x="47.8" y="1011.0" width="1.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="50.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="47.8" y="995.0" width="1.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="50.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="47.8" y="979.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="50.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="47.8" y="963.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="50.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="47.8" y="947.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="50.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="47.8" y="931.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="50.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="47.8" y="915.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="50.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="47.8" y="899.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="50.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="47.8" y="883.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="50.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="47.8" y="867.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="50.8" y="878.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long long) (1 samples, 0.03%)</title><rect x="49.3" y="1011.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="52.3" y="1022.0"></text>
</g>
<g>
<title>[not_walkable] (3 samples, 0.08%)</title><rect x="49.6" y="1075.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="52.6" y="1086.0"></text>
</g>
<g>
<title>[not_walkable_Java] (23 samples, 0.58%)</title><rect x="50.5" y="1075.0" width="6.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="53.5" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.20%)</title><rect x="50.8" y="1059.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="53.8" y="1070.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (3 samples, 0.08%)</title><rect x="51.4" y="1043.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="54.4" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.08%)</title><rect x="52.3" y="1043.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="55.3" y="1054.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="52.6" y="1027.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="55.6" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::is_in_young(oopDesc*) (1 samples, 0.03%)</title><rect x="52.9" y="1027.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="55.9" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (10 samples, 0.25%)</title><rect x="53.2" y="1059.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="56.2" y="1070.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="53.5" y="1043.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="56.5" y="1054.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="53.8" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="56.8" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (6 samples, 0.15%)</title><rect x="54.1" y="1043.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="57.1" y="1054.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.13%)</title><rect x="54.1" y="1027.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="57.1" y="1038.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (3 samples, 0.08%)</title><rect x="54.1" y="1011.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="57.1" y="1022.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="54.9" y="1011.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="57.9" y="1022.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="55.2" y="995.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="58.2" y="1006.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.03%)</title><rect x="55.5" y="1027.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="58.5" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.03%)</title><rect x="55.8" y="1043.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="58.8" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.10%)</title><rect x="56.1" y="1059.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="59.1" y="1070.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (3 samples, 0.08%)</title><rect x="56.4" y="1043.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="59.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="57.3" y="1075.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="60.3" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-i386/lib/server/libjvm.so (3 samples, 0.08%)</title><rect x="57.3" y="1059.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="60.3" y="1070.0"></text>
</g>
<g>
<title>__vsnprintf_chk (3 samples, 0.08%)</title><rect x="57.3" y="1043.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="60.3" y="1054.0"></text>
</g>
<g>
<title>_IO_vfprintf (2 samples, 0.05%)</title><rect x="57.3" y="1027.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="60.3" y="1038.0"></text>
</g>
<g>
<title>__printf_fp (1 samples, 0.03%)</title><rect x="57.9" y="1027.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="60.9" y="1038.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.03%)</title><rect x="57.9" y="1011.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="60.9" y="1022.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.08%)</title><rect x="58.2" y="1059.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="61.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="58.2" y="1043.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="61.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="58.2" y="1027.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="61.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="58.2" y="1011.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="61.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="58.2" y="995.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="61.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="58.2" y="979.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="61.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="58.2" y="963.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="61.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="58.2" y="947.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="61.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="58.2" y="931.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="61.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="58.5" y="915.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="61.5" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="59.1" y="1059.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="62.1" y="1070.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.03%)</title><rect x="59.4" y="1059.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="62.4" y="1070.0"></text>
</g>
<g>
<title>[unknown_Java] (141 samples, 3.53%)</title><rect x="59.7" y="1075.0" width="41.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="62.7" y="1086.0">[un..</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="95.4" y="1059.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="98.4" y="1070.0"></text>
</g>
<g>
<title>Thread::current() (3 samples, 0.08%)</title><rect x="95.7" y="1059.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="98.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.38%)</title><rect x="96.6" y="1059.0" width="4.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="99.6" y="1070.0"></text>
</g>
<g>
<title>Thread::current() (3 samples, 0.08%)</title><rect x="96.6" y="1043.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="99.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="97.5" y="1043.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="100.5" y="1054.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.03%)</title><rect x="97.5" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="100.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="97.8" y="1027.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="100.8" y="1038.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.08%)</title><rect x="98.1" y="1043.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="101.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="98.1" y="1027.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="101.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="98.1" y="1011.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="101.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="98.1" y="995.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="101.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="98.1" y="979.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="101.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="98.1" y="963.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="101.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="98.1" y="947.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="101.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="98.4" y="931.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="101.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="98.4" y="915.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="101.4" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.18%)</title><rect x="99.0" y="1043.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="102.0" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="101.1" y="1059.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="104.1" y="1070.0"></text>
</g>
<g>
<title>clone (43 samples, 1.08%)</title><rect x="101.4" y="1075.0" width="12.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="104.4" y="1086.0"></text>
</g>
<g>
<title>start_thread (43 samples, 1.08%)</title><rect x="101.4" y="1059.0" width="12.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="104.4" y="1070.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (43 samples, 1.08%)</title><rect x="101.4" y="1043.0" width="12.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="104.4" y="1054.0"></text>
</g>
<g>
<title>Thread::call_run() (43 samples, 1.08%)</title><rect x="101.4" y="1027.0" width="12.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="104.4" y="1038.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.03%)</title><rect x="101.4" y="1011.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="104.4" y="1022.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.03%)</title><rect x="101.4" y="995.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="104.4" y="1006.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.03%)</title><rect x="101.4" y="979.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="104.4" y="990.0"></text>
</g>
<g>
<title>load_agent(AttachOperation*, outputStream*) (1 samples, 0.03%)</title><rect x="101.4" y="963.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="104.4" y="974.0"></text>
</g>
<g>
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (1 samples, 0.03%)</title><rect x="101.4" y="947.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="104.4" y="958.0"></text>
</g>
<g>
<title>Agent_OnAttach (1 samples, 0.03%)</title><rect x="101.4" y="931.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="104.4" y="942.0"></text>
</g>
<g>
<title>Profiler::run(Arguments&amp;) (1 samples, 0.03%)</title><rect x="101.4" y="915.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="104.4" y="926.0"></text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::ostream&amp;) (1 samples, 0.03%)</title><rect x="101.4" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="104.4" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="101.4" y="883.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="104.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="867.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="104.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="851.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="104.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="835.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="104.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="819.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="104.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="803.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="104.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="787.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="104.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="771.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="104.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="755.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="104.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="739.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="104.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="723.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="104.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="707.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="104.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="691.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="104.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="675.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="104.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="659.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="104.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="643.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="104.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="101.4" y="627.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="104.4" y="638.0"></text>
</g>
<g>
<title>VMThread::run() (34 samples, 0.85%)</title><rect x="101.7" y="1011.0" width="10.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="104.7" y="1022.0"></text>
</g>
<g>
<title>VMThread::loop() (34 samples, 0.85%)</title><rect x="101.7" y="995.0" width="10.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="104.7" y="1006.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.05%)</title><rect x="101.7" y="979.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="104.7" y="990.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (2 samples, 0.05%)</title><rect x="101.7" y="963.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="104.7" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.05%)</title><rect x="101.7" y="947.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="104.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="101.7" y="931.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="104.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="101.7" y="915.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="104.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="101.7" y="899.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="104.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="102.0" y="883.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="105.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="102.0" y="867.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="105.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="102.0" y="851.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="105.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="102.0" y="835.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="105.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="102.0" y="819.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="105.0" y="830.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (12 samples, 0.30%)</title><rect x="102.2" y="979.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="105.2" y="990.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (3 samples, 0.08%)</title><rect x="102.2" y="963.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="105.2" y="974.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="102.2" y="947.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="105.2" y="958.0"></text>
</g>
<g>
<title>Dictionary::does_any_dictionary_needs_resizing() (1 samples, 0.03%)</title><rect x="102.2" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="105.2" y="942.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.03%)</title><rect x="102.5" y="931.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="105.5" y="942.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.62] (1 samples, 0.03%)</title><rect x="102.5" y="915.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="105.5" y="926.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="102.5" y="899.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="105.5" y="910.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (1 samples, 0.03%)</title><rect x="102.5" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="105.5" y="894.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="102.5" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="105.5" y="878.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="102.5" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="105.5" y="862.0"></text>
</g>
<g>
<title>SubTasksDone::SubTasksDone(unsigned int) (1 samples, 0.03%)</title><rect x="102.8" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="105.8" y="958.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned int, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="102.8" y="931.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="105.8" y="942.0"></text>
</g>
<g>
<title>MallocTracker::record_malloc(void*, unsigned int, MemoryType, NativeCallStack const&amp;, NMT_TrackingLevel) (1 samples, 0.03%)</title><rect x="102.8" y="915.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="105.8" y="926.0"></text>
</g>
<g>
<title>SubTasksDone::SubTasksDone(unsigned int) (1 samples, 0.03%)</title><rect x="103.1" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="106.1" y="974.0"></text>
</g>
<g>
<title>__kernel_vsyscall (8 samples, 0.20%)</title><rect x="103.4" y="963.0" width="2.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="106.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="103.4" y="947.0" width="2.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="106.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="103.4" y="931.0" width="2.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="106.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="103.4" y="915.0" width="2.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="106.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="103.4" y="899.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="106.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="103.4" y="883.0" width="2.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="106.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="103.4" y="867.0" width="2.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="106.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="103.4" y="851.0" width="2.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="106.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.18%)</title><rect x="103.7" y="835.0" width="2.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="106.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.18%)</title><rect x="103.7" y="819.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="106.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.18%)</title><rect x="103.7" y="803.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="106.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="104.9" y="787.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="107.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="104.9" y="771.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="107.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="104.9" y="755.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="107.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="104.9" y="739.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="107.9" y="750.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (6 samples, 0.15%)</title><rect x="105.8" y="979.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="108.8" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.15%)</title><rect x="105.8" y="963.0" width="1.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="108.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="105.8" y="947.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="108.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="105.8" y="931.0" width="1.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="108.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="105.8" y="915.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="108.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="105.8" y="899.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="108.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="105.8" y="883.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="108.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="105.8" y="867.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="108.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="106.1" y="851.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="109.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="106.7" y="835.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="109.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="106.7" y="819.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="109.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="106.7" y="803.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="109.7" y="814.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.61] (14 samples, 0.35%)</title><rect x="107.6" y="979.0" width="4.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="110.6" y="990.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (14 samples, 0.35%)</title><rect x="107.6" y="963.0" width="4.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="110.6" y="974.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (14 samples, 0.35%)</title><rect x="107.6" y="947.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="110.6" y="958.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned int, bool) (14 samples, 0.35%)</title><rect x="107.6" y="931.0" width="4.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="110.6" y="942.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned int, bool, GenCollectedHeap::GenerationType) (14 samples, 0.35%)</title><rect x="107.6" y="915.0" width="4.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="110.6" y="926.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned int, bool, bool, bool, bool) (14 samples, 0.35%)</title><rect x="107.6" y="899.0" width="4.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="110.6" y="910.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned int, bool) (12 samples, 0.30%)</title><rect x="107.6" y="883.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="110.6" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::trace_heap_after_gc(GCTracer const*) (1 samples, 0.03%)</title><rect x="107.6" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="110.6" y="878.0"></text>
</g>
<g>
<title>GCTracer::report_metaspace_summary(GCWhen::Type, MetaspaceSummary const&amp;) const (1 samples, 0.03%)</title><rect x="107.6" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="110.6" y="862.0"></text>
</g>
<g>
<title>GCTracer::send_metaspace_chunk_free_list_summary(GCWhen::Type, Metaspace::MetadataType, MetaspaceChunkFreeListSummary const&amp;) const (1 samples, 0.03%)</title><rect x="107.6" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="110.6" y="846.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (10 samples, 0.25%)</title><rect x="107.9" y="867.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="110.9" y="878.0"></text>
</g>
<g>
<title>CardGeneration::younger_refs_iterate(OopsInGenClosure*, unsigned int) (2 samples, 0.05%)</title><rect x="107.9" y="851.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="110.9" y="862.0"></text>
</g>
<g>
<title>CardTableRS::younger_refs_in_space_iterate(Space*, OopsInGenClosure*, unsigned int) (2 samples, 0.05%)</title><rect x="107.9" y="835.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="110.9" y="846.0"></text>
</g>
<g>
<title>ClearNoncleanCardWrapper::do_MemRegion(MemRegion) (2 samples, 0.05%)</title><rect x="107.9" y="819.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="110.9" y="830.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (2 samples, 0.05%)</title><rect x="107.9" y="803.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="110.9" y="814.0"></text>
</g>
<g>
<title>BlockOffsetArrayContigSpace::block_start_unsafe(void const*) const (1 samples, 0.03%)</title><rect x="107.9" y="787.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="110.9" y="798.0"></text>
</g>
<g>
<title>ContiguousSpace::block_size(HeapWord const*) const (1 samples, 0.03%)</title><rect x="107.9" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="110.9" y="782.0"></text>
</g>
<g>
<title>FilteringDCTOC::walk_mem_region(MemRegion, HeapWord*, HeapWord*) (1 samples, 0.03%)</title><rect x="108.2" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="111.2" y="798.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.03%)</title><rect x="108.5" y="851.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="111.5" y="862.0"></text>
</g>
<g>
<title>JNIHandles::oops_do(OopClosure*) (1 samples, 0.03%)</title><rect x="108.8" y="851.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="111.8" y="862.0"></text>
</g>
<g>
<title>StringTable::oops_do(OopClosure*) (2 samples, 0.05%)</title><rect x="109.0" y="851.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="112.0" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.08%)</title><rect x="109.6" y="851.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="112.6" y="862.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.08%)</title><rect x="109.6" y="835.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="112.6" y="846.0"></text>
</g>
<g>
<title>MarkingCodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.03%)</title><rect x="109.6" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="112.6" y="830.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.03%)</title><rect x="109.6" y="803.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="112.6" y="814.0"></text>
</g>
<g>
<title>oop_Relocation::oop_value() (1 samples, 0.03%)</title><rect x="109.6" y="787.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="112.6" y="798.0"></text>
</g>
<g>
<title>Relocation::pd_address_in_code() (1 samples, 0.03%)</title><rect x="109.6" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="112.6" y="782.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.03%)</title><rect x="109.6" y="755.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="112.6" y="766.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (1 samples, 0.03%)</title><rect x="109.9" y="819.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="112.9" y="830.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (1 samples, 0.03%)</title><rect x="109.9" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="112.9" y="814.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="110.2" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="113.2" y="830.0"></text>
</g>
<g>
<title>Universe::oops_do(OopClosure*, bool) (1 samples, 0.03%)</title><rect x="110.5" y="851.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="113.5" y="862.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(oopDesc**) (1 samples, 0.03%)</title><rect x="110.5" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="113.5" y="846.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.03%)</title><rect x="110.8" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="113.8" y="878.0"></text>
</g>
<g>
<title>DefNewGeneration::FastKeepAliveClosure::do_oop(oopDesc**) (1 samples, 0.03%)</title><rect x="110.8" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="113.8" y="862.0"></text>
</g>
<g>
<title>DerivedPointerTable::update_pointers() (1 samples, 0.03%)</title><rect x="111.1" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="114.1" y="894.0"></text>
</g>
<g>
<title>free (1 samples, 0.03%)</title><rect x="111.1" y="867.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="114.1" y="878.0"></text>
</g>
<g>
<title>TraceMemoryManagerStats::~TraceMemoryManagerStats() (1 samples, 0.03%)</title><rect x="111.4" y="883.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="114.4" y="894.0"></text>
</g>
<g>
<title>GCMemoryManager::gc_end(bool, bool, bool, bool, GCCause::Cause, bool) (1 samples, 0.03%)</title><rect x="111.4" y="867.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="114.4" y="878.0"></text>
</g>
<g>
<title>WatcherThread::run() (8 samples, 0.20%)</title><rect x="111.7" y="1011.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="114.7" y="1022.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.05%)</title><rect x="111.7" y="995.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="114.7" y="1006.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (2 samples, 0.05%)</title><rect x="111.7" y="979.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="114.7" y="990.0"></text>
</g>
<g>
<title>ContiguousSpaceUsedHelper::take_sample() (1 samples, 0.03%)</title><rect x="112.0" y="963.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="115.0" y="974.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (6 samples, 0.15%)</title><rect x="112.3" y="995.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="115.3" y="1006.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (6 samples, 0.15%)</title><rect x="112.3" y="979.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="115.3" y="990.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long long) (6 samples, 0.15%)</title><rect x="112.3" y="963.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="115.3" y="974.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="112.3" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="115.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="112.6" y="947.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="115.6" y="958.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="112.6" y="931.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="115.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="112.6" y="915.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="115.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="112.6" y="899.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="115.6" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.08%)</title><rect x="112.9" y="947.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="115.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="112.9" y="931.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="115.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="112.9" y="915.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="115.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="112.9" y="899.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="115.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="112.9" y="883.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="115.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="112.9" y="867.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="115.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="112.9" y="851.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="115.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="112.9" y="835.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="115.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="112.9" y="819.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="115.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="113.2" y="803.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="116.2" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.03%)</title><rect x="113.8" y="947.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="116.8" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,795 samples, 70.03%)</title><rect x="114.1" y="1075.0" width="826.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.1" y="1086.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,795 samples, 70.03%)</title><rect x="114.1" y="1059.0" width="826.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.1" y="1070.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,795 samples, 70.03%)</title><rect x="114.1" y="1043.0" width="826.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.1" y="1054.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (508 samples, 12.73%)</title><rect x="115.6" y="1027.0" width="150.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.6" y="1038.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (492 samples, 12.33%)</title><rect x="120.3" y="1011.0" width="145.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.3" y="1022.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (411 samples, 10.30%)</title><rect x="120.9" y="995.0" width="121.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.9" y="1006.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (40 samples, 1.00%)</title><rect x="121.5" y="979.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (40 samples, 1.00%)</title><rect x="121.5" y="963.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="132.1" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="132.1" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.08%)</title><rect x="132.4" y="947.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (369 samples, 9.25%)</title><rect x="133.3" y="979.0" width="109.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.3" y="990.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (367 samples, 9.20%)</title><rect x="133.9" y="963.0" width="108.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.9" y="974.0">jdk/internal/..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (6 samples, 0.15%)</title><rect x="134.8" y="947.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="137.8" y="958.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (4 samples, 0.10%)</title><rect x="136.5" y="947.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="139.5" y="958.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (5 samples, 0.13%)</title><rect x="137.7" y="947.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="140.7" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (11 samples, 0.28%)</title><rect x="139.2" y="947.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="142.2" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (115 samples, 2.88%)</title><rect x="142.5" y="947.0" width="34.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="145.5" y="958.0">Un..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.03%)</title><rect x="146.6" y="931.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="149.6" y="942.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (6 samples, 0.15%)</title><rect x="146.9" y="931.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="149.9" y="942.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (6 samples, 0.15%)</title><rect x="148.7" y="931.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="151.7" y="942.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="150.1" y="915.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="153.1" y="926.0"></text>
</g>
<g>
<title>JfrEvent&lt;EventThreadPark&gt;::JfrEvent(EventStartTime) (5 samples, 0.13%)</title><rect x="150.4" y="931.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="153.4" y="942.0"></text>
</g>
<g>
<title>Parker::park(bool, long long) (28 samples, 0.70%)</title><rect x="151.9" y="931.0" width="8.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="154.9" y="942.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (14 samples, 0.35%)</title><rect x="156.1" y="915.0" width="4.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="159.1" y="926.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (9 samples, 0.23%)</title><rect x="160.2" y="931.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="163.2" y="942.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="162.9" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="165.9" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (4 samples, 0.10%)</title><rect x="163.2" y="931.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="166.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="164.3" y="931.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="167.3" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.08%)</title><rect x="164.3" y="915.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="167.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="164.3" y="899.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="167.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="164.3" y="883.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="167.3" y="894.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (10 samples, 0.25%)</title><rect x="165.2" y="931.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="168.2" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.13%)</title><rect x="168.2" y="931.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="171.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="168.5" y="915.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="171.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="168.5" y="899.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="171.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="168.5" y="883.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="171.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="168.5" y="867.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="171.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="168.5" y="851.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="171.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="169.1" y="835.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="172.1" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="169.7" y="931.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="172.7" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="170.0" y="931.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="173.0" y="942.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (5 samples, 0.13%)</title><rect x="170.3" y="931.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="173.3" y="942.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (3 samples, 0.08%)</title><rect x="171.7" y="931.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="174.7" y="942.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="172.6" y="931.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="175.6" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (5 samples, 0.13%)</title><rect x="172.9" y="931.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="175.9" y="942.0"></text>
</g>
<g>
<title>pthread_cond_wait (5 samples, 0.13%)</title><rect x="174.4" y="931.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="177.4" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="175.9" y="931.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="178.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (221 samples, 5.54%)</title><rect x="176.5" y="947.0" width="65.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="179.5" y="958.0">[unknown]</text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="176.5" y="931.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="179.5" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (5 samples, 0.13%)</title><rect x="176.5" y="915.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="179.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="176.5" y="899.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="179.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="176.5" y="883.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="179.5" y="894.0"></text>
</g>
<g>
<title>__condvar_confirm_wakeup (2 samples, 0.05%)</title><rect x="177.9" y="931.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="180.9" y="942.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (3 samples, 0.08%)</title><rect x="178.5" y="931.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="181.5" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (200 samples, 5.01%)</title><rect x="179.4" y="931.0" width="59.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="182.4" y="942.0">__kern..</text>
</g>
<g>
<title>[unknown] (198 samples, 4.96%)</title><rect x="180.0" y="915.0" width="58.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="183.0" y="926.0">[unkno..</text>
</g>
<g>
<title>[unknown] (198 samples, 4.96%)</title><rect x="180.0" y="899.0" width="58.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="183.0" y="910.0">[unkno..</text>
</g>
<g>
<title>[unknown] (195 samples, 4.89%)</title><rect x="180.9" y="883.0" width="57.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="183.9" y="894.0">[unkno..</text>
</g>
<g>
<title>[unknown] (191 samples, 4.79%)</title><rect x="182.1" y="867.0" width="56.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="185.1" y="878.0">[unkno..</text>
</g>
<g>
<title>[unknown] (190 samples, 4.76%)</title><rect x="182.4" y="851.0" width="56.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="185.4" y="862.0">[unkno..</text>
</g>
<g>
<title>[unknown] (189 samples, 4.74%)</title><rect x="182.7" y="835.0" width="55.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="185.7" y="846.0">[unkn..</text>
</g>
<g>
<title>[unknown] (180 samples, 4.51%)</title><rect x="185.3" y="819.0" width="53.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="188.3" y="830.0">[unkn..</text>
</g>
<g>
<title>[unknown] (176 samples, 4.41%)</title><rect x="186.5" y="803.0" width="52.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="189.5" y="814.0">[unkn..</text>
</g>
<g>
<title>[unknown] (175 samples, 4.38%)</title><rect x="186.8" y="787.0" width="51.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="189.8" y="798.0">[unkn..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="238.3" y="771.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="241.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="238.3" y="755.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="241.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="238.3" y="739.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="241.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="238.3" y="723.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="241.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="238.3" y="707.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="241.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="238.3" y="691.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="241.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="238.3" y="675.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="241.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="238.3" y="659.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="241.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="238.3" y="643.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="241.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="238.3" y="627.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="241.3" y="638.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="238.5" y="931.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="241.5" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.20%)</title><rect x="238.8" y="931.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="241.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="240.9" y="915.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="243.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="240.9" y="899.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="243.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="240.9" y="883.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="243.9" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="241.2" y="931.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="244.2" y="942.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="241.5" y="931.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="244.5" y="942.0"></text>
</g>
<g>
<title>__condvar_confirm_wakeup (1 samples, 0.03%)</title><rect x="241.8" y="947.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="244.8" y="958.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="242.1" y="947.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="245.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.05%)</title><rect x="242.4" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.05%)</title><rect x="242.4" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.05%)</title><rect x="242.4" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (77 samples, 1.93%)</title><rect x="243.0" y="995.0" width="22.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.0" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (77 samples, 1.93%)</title><rect x="243.0" y="979.0" width="22.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="246.0" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (77 samples, 1.93%)</title><rect x="243.0" y="963.0" width="22.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.0" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (77 samples, 1.93%)</title><rect x="243.0" y="947.0" width="22.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.0" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (74 samples, 1.85%)</title><rect x="243.9" y="931.0" width="21.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.9" y="942.0">j..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="243.9" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="246.9" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="244.2" y="915.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="247.2" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.20%)</title><rect x="244.5" y="915.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="247.5" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="245.1" y="899.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="248.1" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.08%)</title><rect x="245.3" y="899.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="248.3" y="910.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="245.9" y="883.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="248.9" y="894.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="246.2" y="899.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="249.2" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.03%)</title><rect x="246.5" y="899.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="249.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.58%)</title><rect x="246.8" y="915.0" width="18.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="249.8" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (62 samples, 1.55%)</title><rect x="246.8" y="899.0" width="18.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="249.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.55%)</title><rect x="246.8" y="883.0" width="18.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="249.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.55%)</title><rect x="246.8" y="867.0" width="18.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="249.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.55%)</title><rect x="246.8" y="851.0" width="18.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="249.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.55%)</title><rect x="246.8" y="835.0" width="18.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="249.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.55%)</title><rect x="246.8" y="819.0" width="18.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="249.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 1.53%)</title><rect x="247.1" y="803.0" width="18.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="250.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.45%)</title><rect x="248.0" y="787.0" width="17.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="251.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.45%)</title><rect x="248.0" y="771.0" width="17.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="251.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="264.9" y="755.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="267.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="264.9" y="739.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="267.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="264.9" y="723.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="267.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="264.9" y="707.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="267.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="264.9" y="691.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="267.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="264.9" y="675.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="267.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="264.9" y="659.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="267.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="264.9" y="643.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="267.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="264.9" y="627.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="267.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="264.9" y="611.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="267.9" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="265.2" y="899.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="268.2" y="910.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="265.5" y="915.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="268.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$67/3551101.run (2,282 samples, 57.18%)</title><rect x="265.8" y="1027.0" width="674.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.8" y="1038.0">ru/mail/polis/service/dogm/ServiceImpl$$Lambda$67/3551101.run</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$5 (2,282 samples, 57.18%)</title><rect x="265.8" y="1011.0" width="674.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.8" y="1022.0">ru/mail/polis/service/dogm/ServiceImpl.lambda$executeAsync$5</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (910 samples, 22.80%)</title><rect x="266.3" y="995.0" width="269.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.3" y="1006.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (91 samples, 2.28%)</title><rect x="267.8" y="979.0" width="26.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.8" y="990.0">j..</text>
</g>
<g>
<title>java/lang/String.regionMatches (91 samples, 2.28%)</title><rect x="267.8" y="963.0" width="26.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="270.8" y="974.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (91 samples, 2.28%)</title><rect x="267.8" y="947.0" width="26.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.8" y="958.0">j..</text>
</g>
<g>
<title>__vdso_gettimeofday (14 samples, 0.35%)</title><rect x="270.5" y="931.0" width="4.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="273.5" y="942.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="274.6" y="931.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="277.6" y="942.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (67 samples, 1.68%)</title><rect x="274.9" y="931.0" width="19.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="277.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="276.4" y="915.0" width="1.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="279.4" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (6 samples, 0.15%)</title><rect x="276.4" y="899.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="279.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="276.4" y="883.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="279.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="276.4" y="867.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="279.4" y="878.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.10%)</title><rect x="278.2" y="915.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="281.2" y="926.0"></text>
</g>
<g>
<title>__kernel_vsyscall (46 samples, 1.15%)</title><rect x="279.4" y="915.0" width="13.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="282.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.05%)</title><rect x="280.5" y="899.0" width="12.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="283.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.05%)</title><rect x="280.5" y="883.0" width="12.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="283.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.98%)</title><rect x="281.4" y="867.0" width="11.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="284.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.63%)</title><rect x="285.6" y="851.0" width="7.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="288.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.50%)</title><rect x="287.0" y="835.0" width="6.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="290.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="290.6" y="819.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="293.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="291.2" y="803.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="294.2" y="814.0"></text>
</g>
<g>
<title>__vdso_gettimeofday (6 samples, 0.15%)</title><rect x="293.0" y="915.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="296.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (810 samples, 20.30%)</title><rect x="294.7" y="979.0" width="239.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.7" y="990.0">one/nio/http/HttpSession.writeRe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.48%)</title><rect x="295.0" y="963.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="298.0" y="947.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="301.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="298.0" y="931.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="301.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="298.0" y="915.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="301.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.18%)</title><rect x="298.6" y="947.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.6" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.18%)</title><rect x="298.6" y="931.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.18%)</title><rect x="298.6" y="915.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (790 samples, 19.79%)</title><rect x="300.6" y="963.0" width="233.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="303.6" y="974.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (790 samples, 19.79%)</title><rect x="300.6" y="947.0" width="233.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.6" y="958.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (783 samples, 19.62%)</title><rect x="302.7" y="931.0" width="231.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.7" y="942.0">one/nio/net/Session$ArrayQueueI..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (783 samples, 19.62%)</title><rect x="302.7" y="915.0" width="231.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.7" y="926.0">one/nio/net/JavaSocket.write</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.13%)</title><rect x="302.7" y="899.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.7" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.13%)</title><rect x="302.7" y="883.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.7" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.13%)</title><rect x="302.7" y="867.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.7" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.13%)</title><rect x="302.7" y="851.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.13%)</title><rect x="302.7" y="835.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (778 samples, 19.49%)</title><rect x="304.2" y="899.0" width="230.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.2" y="910.0">sun/nio/ch/SocketChannelImpl.w..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="304.2" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="304.2" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.25%)</title><rect x="304.8" y="883.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.25%)</title><rect x="304.8" y="867.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.25%)</title><rect x="304.8" y="851.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="307.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.25%)</title><rect x="304.8" y="835.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="307.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (760 samples, 19.04%)</title><rect x="307.7" y="883.0" width="224.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.7" y="894.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (760 samples, 19.04%)</title><rect x="307.7" y="867.0" width="224.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.7" y="878.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (760 samples, 19.04%)</title><rect x="307.7" y="851.0" width="224.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.7" y="862.0">sun/nio/ch/IOUtil.writeFromNat..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (7 samples, 0.18%)</title><rect x="307.7" y="835.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (753 samples, 18.87%)</title><rect x="309.8" y="835.0" width="222.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.8" y="846.0">sun/nio/ch/SocketDispatcher.w..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (747 samples, 18.72%)</title><rect x="311.6" y="819.0" width="220.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.6" y="830.0">sun/nio/ch/FileDispatcherImpl..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.05%)</title><rect x="314.8" y="803.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="317.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="315.1" y="787.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="318.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="315.1" y="771.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="318.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="315.1" y="755.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="318.1" y="766.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (3 samples, 0.08%)</title><rect x="315.4" y="803.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="318.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="316.3" y="803.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="319.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="316.3" y="787.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="319.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="316.3" y="771.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="319.3" y="782.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="316.6" y="787.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="319.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="316.6" y="771.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="319.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="316.6" y="755.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="319.6" y="766.0"></text>
</g>
<g>
<title>__kernel_vsyscall (726 samples, 18.19%)</title><rect x="316.9" y="803.0" width="214.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="319.9" y="814.0">__kernel_vsyscall</text>
</g>
<g>
<title>[unknown] (719 samples, 18.02%)</title><rect x="319.0" y="787.0" width="212.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="322.0" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (719 samples, 18.02%)</title><rect x="319.0" y="771.0" width="212.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="322.0" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (715 samples, 17.92%)</title><rect x="320.2" y="755.0" width="211.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="323.2" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (711 samples, 17.82%)</title><rect x="321.3" y="739.0" width="210.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="324.3" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (696 samples, 17.44%)</title><rect x="325.8" y="723.0" width="205.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="328.8" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (685 samples, 17.16%)</title><rect x="329.0" y="707.0" width="202.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="332.0" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (646 samples, 16.19%)</title><rect x="340.6" y="691.0" width="191.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="343.6" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (646 samples, 16.19%)</title><rect x="340.6" y="675.0" width="191.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="343.6" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (644 samples, 16.14%)</title><rect x="341.1" y="659.0" width="190.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="344.1" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (641 samples, 16.06%)</title><rect x="342.0" y="643.0" width="189.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="345.0" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (636 samples, 15.94%)</title><rect x="343.5" y="627.0" width="188.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="346.5" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (618 samples, 15.48%)</title><rect x="348.8" y="611.0" width="182.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="351.8" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (596 samples, 14.93%)</title><rect x="355.3" y="595.0" width="176.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="358.3" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (586 samples, 14.68%)</title><rect x="358.3" y="579.0" width="173.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="361.3" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (568 samples, 14.23%)</title><rect x="363.6" y="563.0" width="168.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="366.6" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (542 samples, 13.58%)</title><rect x="371.3" y="547.0" width="160.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="374.3" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (527 samples, 13.20%)</title><rect x="375.7" y="531.0" width="155.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="378.7" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (519 samples, 13.00%)</title><rect x="378.1" y="515.0" width="153.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="381.1" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (516 samples, 12.93%)</title><rect x="379.0" y="499.0" width="152.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="382.0" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (514 samples, 12.88%)</title><rect x="379.6" y="483.0" width="152.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="382.6" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (497 samples, 12.45%)</title><rect x="384.6" y="467.0" width="147.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="387.6" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (494 samples, 12.38%)</title><rect x="385.5" y="451.0" width="146.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="388.5" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (482 samples, 12.08%)</title><rect x="389.0" y="435.0" width="142.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="392.0" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (475 samples, 11.90%)</title><rect x="391.1" y="419.0" width="140.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="394.1" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (470 samples, 11.78%)</title><rect x="392.6" y="403.0" width="139.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="395.6" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (459 samples, 11.50%)</title><rect x="395.8" y="387.0" width="135.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="398.8" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (457 samples, 11.45%)</title><rect x="396.4" y="371.0" width="135.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="399.4" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (450 samples, 11.28%)</title><rect x="398.5" y="355.0" width="133.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="401.5" y="366.0">[unknown]</text>
</g>
<g>
<title>[unknown] (449 samples, 11.25%)</title><rect x="398.8" y="339.0" width="132.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="401.8" y="350.0">[unknown]</text>
</g>
<g>
<title>[unknown] (444 samples, 11.13%)</title><rect x="400.3" y="323.0" width="131.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="403.3" y="334.0">[unknown]</text>
</g>
<g>
<title>[unknown] (433 samples, 10.85%)</title><rect x="403.5" y="307.0" width="128.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="406.5" y="318.0">[unknown]</text>
</g>
<g>
<title>[unknown] (433 samples, 10.85%)</title><rect x="403.5" y="291.0" width="128.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="406.5" y="302.0">[unknown]</text>
</g>
<g>
<title>[unknown] (432 samples, 10.82%)</title><rect x="403.8" y="275.0" width="127.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="406.8" y="286.0">[unknown]</text>
</g>
<g>
<title>[unknown] (430 samples, 10.77%)</title><rect x="404.4" y="259.0" width="127.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="407.4" y="270.0">[unknown]</text>
</g>
<g>
<title>[unknown] (412 samples, 10.32%)</title><rect x="409.7" y="243.0" width="121.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="412.7" y="254.0">[unknown]</text>
</g>
<g>
<title>[unknown] (402 samples, 10.07%)</title><rect x="412.7" y="227.0" width="118.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="415.7" y="238.0">[unknown]</text>
</g>
<g>
<title>[unknown] (381 samples, 9.55%)</title><rect x="418.9" y="211.0" width="112.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="421.9" y="222.0">[unknown]</text>
</g>
<g>
<title>[unknown] (359 samples, 9.00%)</title><rect x="425.4" y="195.0" width="106.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="428.4" y="206.0">[unknown]</text>
</g>
<g>
<title>[unknown] (335 samples, 8.39%)</title><rect x="432.5" y="179.0" width="99.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="435.5" y="190.0">[unknown]</text>
</g>
<g>
<title>[unknown] (323 samples, 8.09%)</title><rect x="436.1" y="163.0" width="95.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="439.1" y="174.0">[unknown]</text>
</g>
<g>
<title>[unknown] (317 samples, 7.94%)</title><rect x="437.8" y="147.0" width="93.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="440.8" y="158.0">[unknown]</text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="530.1" y="131.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="533.1" y="142.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="530.4" y="115.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="533.4" y="126.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="531.6" y="803.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="534.6" y="814.0"></text>
</g>
<g>
<title>convertReturnVal (2 samples, 0.05%)</title><rect x="531.8" y="803.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="534.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (3 samples, 0.08%)</title><rect x="532.4" y="883.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endWrite (3 samples, 0.08%)</title><rect x="533.3" y="883.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.3" y="894.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.08%)</title><rect x="533.3" y="867.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.10%)</title><rect x="534.2" y="979.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.10%)</title><rect x="534.2" y="963.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.10%)</title><rect x="534.2" y="947.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$66/11409370.act (622 samples, 15.59%)</title><rect x="535.4" y="995.0" width="183.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="538.4" y="1006.0">ru/mail/polis/service/do..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$0 (622 samples, 15.59%)</title><rect x="535.4" y="979.0" width="183.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.4" y="990.0">ru/mail/polis/service/do..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.proxy (622 samples, 15.59%)</title><rect x="535.4" y="963.0" width="183.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.4" y="974.0">ru/mail/polis/service/do..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/Bridges.sendRequestTo (622 samples, 15.59%)</title><rect x="535.4" y="947.0" width="183.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.4" y="958.0">ru/mail/polis/service/do..</text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.10%)</title><rect x="535.4" y="931.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.4" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.10%)</title><rect x="535.4" y="915.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="536.3" y="899.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="539.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="536.3" y="883.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="539.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="536.3" y="867.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="539.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (618 samples, 15.48%)</title><rect x="536.6" y="931.0" width="182.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="539.6" y="942.0">one/nio/http/HttpClient...</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (618 samples, 15.48%)</title><rect x="536.6" y="915.0" width="182.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.6" y="926.0">one/nio/http/HttpClient...</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.20%)</title><rect x="536.9" y="899.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="539.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.20%)</title><rect x="536.9" y="883.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="539.9" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.20%)</title><rect x="536.9" y="867.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (138 samples, 3.46%)</title><rect x="539.2" y="899.0" width="40.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.2" y="910.0">one..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (129 samples, 3.23%)</title><rect x="541.9" y="883.0" width="38.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.9" y="894.0">one..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (129 samples, 3.23%)</title><rect x="541.9" y="867.0" width="38.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.9" y="878.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (115 samples, 2.88%)</title><rect x="542.8" y="851.0" width="34.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.8" y="862.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (115 samples, 2.88%)</title><rect x="542.8" y="835.0" width="34.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.8" y="846.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.10%)</title><rect x="542.8" y="819.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.8" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.10%)</title><rect x="542.8" y="803.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (4 samples, 0.10%)</title><rect x="542.8" y="787.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (4 samples, 0.10%)</title><rect x="542.8" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.10%)</title><rect x="542.8" y="755.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (4 samples, 0.10%)</title><rect x="542.8" y="739.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (4 samples, 0.10%)</title><rect x="542.8" y="723.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (111 samples, 2.78%)</title><rect x="544.0" y="819.0" width="32.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.0" y="830.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (111 samples, 2.78%)</title><rect x="544.0" y="803.0" width="32.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.0" y="814.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (108 samples, 2.71%)</title><rect x="544.9" y="787.0" width="31.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.9" y="798.0">su..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.08%)</title><rect x="546.0" y="771.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="549.0" y="782.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (2 samples, 0.05%)</title><rect x="546.9" y="771.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="549.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="547.5" y="771.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="550.5" y="782.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="547.5" y="755.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="550.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="547.5" y="739.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="550.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="547.5" y="723.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="550.5" y="734.0"></text>
</g>
<g>
<title>__kernel_vsyscall (95 samples, 2.38%)</title><rect x="547.8" y="771.0" width="28.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="550.8" y="782.0">__..</text>
</g>
<g>
<title>[unknown] (95 samples, 2.38%)</title><rect x="547.8" y="755.0" width="28.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="550.8" y="766.0">[u..</text>
</g>
<g>
<title>[unknown] (95 samples, 2.38%)</title><rect x="547.8" y="739.0" width="28.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="550.8" y="750.0">[u..</text>
</g>
<g>
<title>[unknown] (95 samples, 2.38%)</title><rect x="547.8" y="723.0" width="28.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="550.8" y="734.0">[u..</text>
</g>
<g>
<title>[unknown] (94 samples, 2.36%)</title><rect x="548.1" y="707.0" width="27.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="551.1" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (90 samples, 2.26%)</title><rect x="549.3" y="691.0" width="26.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="552.3" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (90 samples, 2.26%)</title><rect x="549.3" y="675.0" width="26.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="552.3" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (80 samples, 2.00%)</title><rect x="552.3" y="659.0" width="23.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="555.3" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (78 samples, 1.95%)</title><rect x="552.8" y="643.0" width="23.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="555.8" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (77 samples, 1.93%)</title><rect x="553.1" y="627.0" width="22.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="556.1" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (77 samples, 1.93%)</title><rect x="553.1" y="611.0" width="22.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="556.1" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (75 samples, 1.88%)</title><rect x="553.7" y="595.0" width="22.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="556.7" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (73 samples, 1.83%)</title><rect x="554.3" y="579.0" width="21.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="557.3" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (70 samples, 1.75%)</title><rect x="555.2" y="563.0" width="20.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="558.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 1.68%)</title><rect x="556.1" y="547.0" width="19.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="559.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 1.63%)</title><rect x="556.7" y="531.0" width="19.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="559.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.55%)</title><rect x="557.6" y="515.0" width="18.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="560.6" y="526.0"></text>
</g>
<g>
<title>read (3 samples, 0.08%)</title><rect x="575.9" y="771.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="578.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (6 samples, 0.15%)</title><rect x="576.8" y="851.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.05%)</title><rect x="578.0" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.0" y="846.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.03%)</title><rect x="578.3" y="819.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="581.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endRead (5 samples, 0.13%)</title><rect x="578.6" y="851.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.6" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.10%)</title><rect x="578.9" y="835.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.9" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="579.7" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.7" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="579.7" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="579.7" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (28 samples, 0.70%)</title><rect x="580.0" y="899.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (11 samples, 0.28%)</title><rect x="583.9" y="883.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.9" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.10%)</title><rect x="587.1" y="883.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.10%)</title><rect x="587.1" y="867.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.10%)</title><rect x="587.1" y="851.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (10 samples, 0.25%)</title><rect x="588.3" y="899.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.10%)</title><rect x="590.1" y="883.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.10%)</title><rect x="590.1" y="867.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.10%)</title><rect x="590.1" y="851.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.10%)</title><rect x="591.3" y="899.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.10%)</title><rect x="591.3" y="883.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.10%)</title><rect x="591.3" y="867.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.setTimeout (1 samples, 0.03%)</title><rect x="592.5" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="595.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.socket (1 samples, 0.03%)</title><rect x="592.5" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="595.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.writeFully (426 samples, 10.67%)</title><rect x="592.8" y="899.0" width="125.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.8" y="910.0">one/nio/net/Jav..</text>
</g>
<g>
<title>java/nio/channels/Channels$1.write (292 samples, 7.32%)</title><rect x="593.1" y="883.0" width="86.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.1" y="894.0">java/nio/c..</text>
</g>
<g>
<title>java/nio/channels/Channels.writeFully (292 samples, 7.32%)</title><rect x="593.1" y="867.0" width="86.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="596.1" y="878.0">java/nio/c..</text>
</g>
<g>
<title>java/nio/channels/Channels.writeFullyImpl (292 samples, 7.32%)</title><rect x="593.1" y="851.0" width="86.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.1" y="862.0">java/nio/c..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="593.6" y="835.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="596.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="593.6" y="819.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="596.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="593.6" y="803.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="596.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (288 samples, 7.22%)</title><rect x="594.2" y="835.0" width="85.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.2" y="846.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (272 samples, 6.82%)</title><rect x="594.2" y="819.0" width="80.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.2" y="830.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (271 samples, 6.79%)</title><rect x="594.5" y="803.0" width="80.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.5" y="814.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (271 samples, 6.79%)</title><rect x="594.5" y="787.0" width="80.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.5" y="798.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (2 samples, 0.05%)</title><rect x="594.5" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (269 samples, 6.74%)</title><rect x="595.1" y="771.0" width="79.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.1" y="782.0">sun/nio/c..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="596.3" y="755.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="599.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="596.3" y="739.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="599.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="596.3" y="723.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="599.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="596.3" y="707.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="599.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="596.3" y="691.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="599.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="596.3" y="675.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="599.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (264 samples, 6.61%)</title><rect x="596.6" y="755.0" width="78.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.6" y="766.0">sun/nio/c..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.08%)</title><rect x="596.9" y="739.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="599.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="597.8" y="739.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="600.8" y="750.0"></text>
</g>
<g>
<title>__kernel_vsyscall (2 samples, 0.05%)</title><rect x="597.8" y="723.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="600.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="597.8" y="707.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="600.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="597.8" y="691.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="600.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="598.1" y="675.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="601.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="598.1" y="659.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="601.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="598.1" y="643.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="601.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="598.1" y="627.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="601.1" y="638.0"></text>
</g>
<g>
<title>__kernel_vsyscall (257 samples, 6.44%)</title><rect x="598.4" y="739.0" width="76.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="601.4" y="750.0">__kernel..</text>
</g>
<g>
<title>[unknown] (256 samples, 6.41%)</title><rect x="598.7" y="723.0" width="75.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="601.7" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (256 samples, 6.41%)</title><rect x="598.7" y="707.0" width="75.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="601.7" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (256 samples, 6.41%)</title><rect x="598.7" y="691.0" width="75.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="601.7" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (251 samples, 6.29%)</title><rect x="600.1" y="675.0" width="74.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="603.1" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (244 samples, 6.11%)</title><rect x="602.2" y="659.0" width="72.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="605.2" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (236 samples, 5.91%)</title><rect x="604.6" y="643.0" width="69.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="607.6" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (206 samples, 5.16%)</title><rect x="613.5" y="627.0" width="60.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="616.5" y="638.0">[unkno..</text>
</g>
<g>
<title>[unknown] (206 samples, 5.16%)</title><rect x="613.5" y="611.0" width="60.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="616.5" y="622.0">[unkno..</text>
</g>
<g>
<title>[unknown] (203 samples, 5.09%)</title><rect x="614.3" y="595.0" width="60.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="617.3" y="606.0">[unkno..</text>
</g>
<g>
<title>[unknown] (199 samples, 4.99%)</title><rect x="615.5" y="579.0" width="58.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="618.5" y="590.0">[unkno..</text>
</g>
<g>
<title>[unknown] (196 samples, 4.91%)</title><rect x="616.4" y="563.0" width="58.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="619.4" y="574.0">[unkno..</text>
</g>
<g>
<title>[unknown] (187 samples, 4.69%)</title><rect x="619.1" y="547.0" width="55.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="622.1" y="558.0">[unkn..</text>
</g>
<g>
<title>[unknown] (181 samples, 4.54%)</title><rect x="620.8" y="531.0" width="53.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="623.8" y="542.0">[unkn..</text>
</g>
<g>
<title>[unknown] (175 samples, 4.38%)</title><rect x="622.6" y="515.0" width="51.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="625.6" y="526.0">[unkn..</text>
</g>
<g>
<title>[unknown] (167 samples, 4.18%)</title><rect x="625.0" y="499.0" width="49.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="628.0" y="510.0">[unkn..</text>
</g>
<g>
<title>[unknown] (157 samples, 3.93%)</title><rect x="627.9" y="483.0" width="46.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="630.9" y="494.0">[unk..</text>
</g>
<g>
<title>[unknown] (152 samples, 3.81%)</title><rect x="629.4" y="467.0" width="45.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="632.4" y="478.0">[unk..</text>
</g>
<g>
<title>[unknown] (151 samples, 3.78%)</title><rect x="629.7" y="451.0" width="44.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="632.7" y="462.0">[unk..</text>
</g>
<g>
<title>[unknown] (149 samples, 3.73%)</title><rect x="630.3" y="435.0" width="44.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="633.3" y="446.0">[unk..</text>
</g>
<g>
<title>[unknown] (148 samples, 3.71%)</title><rect x="630.6" y="419.0" width="43.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="633.6" y="430.0">[unk..</text>
</g>
<g>
<title>[unknown] (147 samples, 3.68%)</title><rect x="630.9" y="403.0" width="43.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="633.9" y="414.0">[unk..</text>
</g>
<g>
<title>[unknown] (147 samples, 3.68%)</title><rect x="630.9" y="387.0" width="43.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="633.9" y="398.0">[unk..</text>
</g>
<g>
<title>[unknown] (146 samples, 3.66%)</title><rect x="631.2" y="371.0" width="43.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="634.2" y="382.0">[unk..</text>
</g>
<g>
<title>[unknown] (144 samples, 3.61%)</title><rect x="631.8" y="355.0" width="42.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="634.8" y="366.0">[unk..</text>
</g>
<g>
<title>[unknown] (144 samples, 3.61%)</title><rect x="631.8" y="339.0" width="42.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="634.8" y="350.0">[unk..</text>
</g>
<g>
<title>[unknown] (141 samples, 3.53%)</title><rect x="632.7" y="323.0" width="41.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="635.7" y="334.0">[un..</text>
</g>
<g>
<title>[unknown] (141 samples, 3.53%)</title><rect x="632.7" y="307.0" width="41.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="635.7" y="318.0">[un..</text>
</g>
<g>
<title>[unknown] (138 samples, 3.46%)</title><rect x="633.6" y="291.0" width="40.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="636.6" y="302.0">[un..</text>
</g>
<g>
<title>[unknown] (138 samples, 3.46%)</title><rect x="633.6" y="275.0" width="40.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="636.6" y="286.0">[un..</text>
</g>
<g>
<title>[unknown] (137 samples, 3.43%)</title><rect x="633.9" y="259.0" width="40.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="636.9" y="270.0">[un..</text>
</g>
<g>
<title>[unknown] (134 samples, 3.36%)</title><rect x="634.7" y="243.0" width="39.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="637.7" y="254.0">[un..</text>
</g>
<g>
<title>[unknown] (134 samples, 3.36%)</title><rect x="634.7" y="227.0" width="39.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="637.7" y="238.0">[un..</text>
</g>
<g>
<title>[unknown] (134 samples, 3.36%)</title><rect x="634.7" y="211.0" width="39.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="637.7" y="222.0">[un..</text>
</g>
<g>
<title>[unknown] (132 samples, 3.31%)</title><rect x="635.3" y="195.0" width="39.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="638.3" y="206.0">[un..</text>
</g>
<g>
<title>[unknown] (130 samples, 3.26%)</title><rect x="635.9" y="179.0" width="38.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="638.9" y="190.0">[un..</text>
</g>
<g>
<title>[unknown] (125 samples, 3.13%)</title><rect x="637.4" y="163.0" width="37.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="640.4" y="174.0">[un..</text>
</g>
<g>
<title>[unknown] (123 samples, 3.08%)</title><rect x="638.0" y="147.0" width="36.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="641.0" y="158.0">[un..</text>
</g>
<g>
<title>[unknown] (113 samples, 2.83%)</title><rect x="640.9" y="131.0" width="33.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="643.9" y="142.0">[u..</text>
</g>
<g>
<title>[unknown] (106 samples, 2.66%)</title><rect x="643.0" y="115.0" width="31.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="646.0" y="126.0">[u..</text>
</g>
<g>
<title>[unknown] (102 samples, 2.56%)</title><rect x="644.2" y="99.0" width="30.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="647.2" y="110.0">[u..</text>
</g>
<g>
<title>[unknown] (98 samples, 2.46%)</title><rect x="645.4" y="83.0" width="29.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="648.4" y="94.0">[u..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="674.1" y="67.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="677.1" y="78.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="674.1" y="51.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="677.1" y="62.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="674.1" y="35.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="677.1" y="46.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="674.4" y="739.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="677.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (13 samples, 0.33%)</title><rect x="674.7" y="819.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="676.7" y="803.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="679.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="676.7" y="787.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="679.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="676.7" y="771.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="679.7" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="677.0" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.10%)</title><rect x="677.3" y="803.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.3" y="814.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.03%)</title><rect x="677.6" y="787.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="680.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="677.9" y="787.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="680.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="677.9" y="771.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="680.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="677.9" y="755.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="680.9" y="766.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.03%)</title><rect x="678.2" y="787.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="681.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endWrite (3 samples, 0.08%)</title><rect x="678.5" y="819.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="678.5" y="803.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="681.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="678.5" y="787.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="681.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="678.5" y="771.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="681.5" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.05%)</title><rect x="678.8" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.8" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.05%)</title><rect x="678.8" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.getOutputStream (133 samples, 3.33%)</title><rect x="679.4" y="883.0" width="39.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.4" y="894.0">sun..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (131 samples, 3.28%)</title><rect x="680.0" y="867.0" width="38.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.0" y="878.0">jav..</text>
</g>
<g>
<title>JVM_DoPrivileged (8 samples, 0.20%)</title><rect x="680.6" y="851.0" width="2.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="683.6" y="862.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedExceptionAction_2 (116 samples, 2.91%)</title><rect x="682.9" y="851.0" width="34.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="685.9" y="862.0">Ja..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="683.5" y="835.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="686.5" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="683.8" y="835.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="686.8" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="684.1" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="687.1" y="846.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="684.4" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="687.4" y="846.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (95 samples, 2.38%)</title><rect x="684.7" y="835.0" width="28.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="687.7" y="846.0">JV..</text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.05%)</title><rect x="686.8" y="819.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="689.8" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.224] (2 samples, 0.05%)</title><rect x="686.8" y="803.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="689.8" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (20 samples, 0.50%)</title><rect x="687.4" y="819.0" width="5.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="690.4" y="830.0"></text>
</g>
<g>
<title>.L409 (7 samples, 0.18%)</title><rect x="687.4" y="803.0" width="2.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="690.4" y="814.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.08%)</title><rect x="687.7" y="787.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="690.7" y="798.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.05%)</title><rect x="688.0" y="771.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="691.0" y="782.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.03%)</title><rect x="688.6" y="787.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="691.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="688.6" y="771.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="691.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="688.6" y="755.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="691.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="688.6" y="739.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="691.6" y="750.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.05%)</title><rect x="688.8" y="787.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="691.8" y="798.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="689.4" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="692.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="689.4" y="787.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="692.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="689.4" y="771.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="692.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="689.4" y="755.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="692.4" y="766.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.03%)</title><rect x="689.7" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="692.7" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.23%)</title><rect x="690.0" y="803.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="693.0" y="814.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="691.5" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="694.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="691.8" y="787.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="694.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="691.8" y="771.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="694.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="691.8" y="755.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="694.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="691.8" y="739.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="694.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="691.8" y="723.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="694.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="691.8" y="707.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="694.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="691.8" y="691.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="694.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="691.8" y="675.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="694.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="691.8" y="659.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="694.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="691.8" y="643.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="694.8" y="654.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.05%)</title><rect x="692.1" y="787.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="695.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="692.4" y="771.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="695.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="692.4" y="755.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="695.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="692.4" y="739.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="695.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="692.4" y="723.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="695.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="692.4" y="707.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="695.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="692.4" y="691.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="695.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="692.4" y="675.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="695.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="692.4" y="659.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="695.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="692.4" y="643.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="695.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="692.4" y="627.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="695.4" y="638.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.03%)</title><rect x="692.7" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="695.7" y="814.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.03%)</title><rect x="693.0" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="696.0" y="814.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.05%)</title><rect x="693.3" y="819.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="696.3" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.05%)</title><rect x="693.9" y="819.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="696.9" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.05%)</title><rect x="694.5" y="819.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="697.5" y="830.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (3 samples, 0.08%)</title><rect x="695.1" y="819.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="698.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="695.9" y="819.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="698.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="695.9" y="803.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="698.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="695.9" y="787.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="698.9" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="696.2" y="819.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="699.2" y="830.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.05%)</title><rect x="696.5" y="819.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="699.5" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="697.1" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="700.1" y="830.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.03%)</title><rect x="697.4" y="819.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="700.4" y="830.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (29 samples, 0.73%)</title><rect x="697.7" y="819.0" width="8.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="700.7" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.08%)</title><rect x="698.0" y="803.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="701.0" y="814.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.05%)</title><rect x="698.9" y="803.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="701.9" y="814.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (21 samples, 0.53%)</title><rect x="699.5" y="803.0" width="6.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="702.5" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (12 samples, 0.30%)</title><rect x="699.8" y="787.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="702.8" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (7 samples, 0.18%)</title><rect x="701.3" y="771.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="704.3" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.10%)</title><rect x="703.3" y="787.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="706.3" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="704.5" y="787.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="707.5" y="798.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (3 samples, 0.08%)</title><rect x="704.8" y="787.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="707.8" y="798.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.05%)</title><rect x="705.7" y="803.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="708.7" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (22 samples, 0.55%)</title><rect x="706.3" y="819.0" width="6.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="709.3" y="830.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.03%)</title><rect x="708.4" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="711.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="708.4" y="787.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="711.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="708.4" y="771.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="711.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="708.4" y="755.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="711.4" y="766.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.13%)</title><rect x="708.7" y="803.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="711.7" y="814.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.05%)</title><rect x="709.5" y="787.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="712.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="710.1" y="803.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="713.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="710.1" y="787.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="713.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="710.1" y="771.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="713.1" y="782.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.03%)</title><rect x="710.4" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="713.4" y="814.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.18%)</title><rect x="710.7" y="803.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="713.7" y="814.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (2 samples, 0.05%)</title><rect x="711.6" y="787.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="714.6" y="798.0"></text>
</g>
<g>
<title>frame::frame(int*, int*, int*, unsigned char*) (2 samples, 0.05%)</title><rect x="712.2" y="787.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="715.2" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="712.2" y="771.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="715.2" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="712.2" y="755.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="715.2" y="766.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (3 samples, 0.08%)</title><rect x="712.8" y="835.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="715.8" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.186] (2 samples, 0.05%)</title><rect x="713.7" y="835.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="716.7" y="846.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.05%)</title><rect x="714.3" y="835.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="717.3" y="846.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.05%)</title><rect x="714.9" y="835.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="717.9" y="846.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.03%)</title><rect x="715.5" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="718.5" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.08%)</title><rect x="715.8" y="835.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="718.8" y="846.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.05%)</title><rect x="716.6" y="835.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="719.6" y="846.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (2 samples, 0.05%)</title><rect x="717.2" y="851.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="720.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (3 samples, 0.08%)</title><rect x="717.8" y="851.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor$2.run (2 samples, 0.05%)</title><rect x="718.1" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.1" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/Channels.newOutputStream (2 samples, 0.05%)</title><rect x="718.1" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.1" y="830.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (2 samples, 0.05%)</title><rect x="718.7" y="899.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl$$Lambda$68/21366685.act (748 samples, 18.74%)</title><rect x="719.3" y="995.0" width="221.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.3" y="1006.0">ru/mail/polis/service/dogm/Se..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.lambda$entity$2 (748 samples, 18.74%)</title><rect x="719.3" y="979.0" width="221.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.3" y="990.0">ru/mail/polis/service/dogm/Se..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.put (748 samples, 18.74%)</title><rect x="719.3" y="963.0" width="221.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.3" y="974.0">ru/mail/polis/service/dogm/Se..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="719.3" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.3" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="719.3" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="719.3" y="915.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.3" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="719.3" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDAO.upsert (747 samples, 18.72%)</title><rect x="719.6" y="947.0" width="220.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.6" y="958.0">ru/mail/polis/dao/RocksDAO.up..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (743 samples, 18.62%)</title><rect x="719.6" y="931.0" width="219.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.6" y="942.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (743 samples, 18.62%)</title><rect x="719.6" y="915.0" width="219.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.6" y="926.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (6 samples, 0.15%)</title><rect x="719.6" y="899.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="722.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="721.1" y="883.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="724.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="721.1" y="867.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="724.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="721.1" y="851.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="724.1" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (21 samples, 0.53%)</title><rect x="721.4" y="899.0" width="6.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="724.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="726.4" y="883.0" width="1.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="729.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="726.4" y="867.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="729.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="726.4" y="851.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="729.4" y="862.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (707 samples, 17.71%)</title><rect x="727.6" y="899.0" width="209.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="730.6" y="910.0">Java_org_rocksdb_RocksDB_pu..</text>
</g>
<g>
<title>free (1 samples, 0.03%)</title><rect x="728.2" y="883.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="731.2" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="728.5" y="883.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="731.5" y="894.0"></text>
</g>
<g>
<title>malloc (6 samples, 0.15%)</title><rect x="728.8" y="883.0" width="1.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="731.8" y="894.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.03%)</title><rect x="730.5" y="883.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="733.5" y="894.0"></text>
</g>
<g>
<title>operator new(unsigned int) (4 samples, 0.10%)</title><rect x="730.8" y="883.0" width="1.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="733.8" y="894.0"></text>
</g>
<g>
<title>operator new[](unsigned int) (2 samples, 0.05%)</title><rect x="732.0" y="883.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="735.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="732.6" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="735.6" y="894.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (689 samples, 17.26%)</title><rect x="732.9" y="883.0" width="203.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="735.9" y="894.0">rocksdb_put_helper(JNIEnv_*..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="734.4" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="737.4" y="878.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="734.7" y="867.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="737.7" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="734.7" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="737.7" y="862.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (16 samples, 0.40%)</title><rect x="735.0" y="867.0" width="4.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="738.0" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="735.3" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="738.3" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.10%)</title><rect x="735.6" y="851.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="738.6" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="736.7" y="851.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="739.7" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.158] (2 samples, 0.05%)</title><rect x="737.3" y="851.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="740.3" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.13%)</title><rect x="737.9" y="851.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="740.9" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.05%)</title><rect x="738.8" y="835.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="741.8" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned int) (1 samples, 0.03%)</title><rect x="739.4" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="742.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (654 samples, 16.39%)</title><rect x="739.7" y="867.0" width="193.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="742.7" y="878.0">rocksdb::DB::Put(rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="739.7" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="742.7" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (653 samples, 16.36%)</title><rect x="740.0" y="851.0" width="193.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="743.0" y="862.0">rocksdb::DBImpl::Put(rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (645 samples, 16.16%)</title><rect x="740.0" y="835.0" width="190.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="743.0" y="846.0">rocksdb::DB::Put(rocksdb:..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.03%)</title><rect x="740.0" y="819.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="743.0" y="830.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="740.3" y="819.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="743.3" y="830.0"></text>
</g>
<g>
<title>free (4 samples, 0.10%)</title><rect x="740.6" y="819.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="743.6" y="830.0"></text>
</g>
<g>
<title>operator delete(void*) (3 samples, 0.08%)</title><rect x="741.8" y="819.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="744.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (578 samples, 14.48%)</title><rect x="742.7" y="819.0" width="170.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="745.7" y="830.0">rocksdb::DBImpl::Write..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (5 samples, 0.13%)</title><rect x="743.0" y="803.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="746.0" y="814.0"></text>
</g>
<g>
<title>___tls_get_addr (3 samples, 0.08%)</title><rect x="744.4" y="803.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="747.4" y="814.0"></text>
</g>
<g>
<title>_init (4 samples, 0.10%)</title><rect x="745.3" y="803.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="748.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="746.2" y="787.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="749.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="746.2" y="771.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="749.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="746.2" y="755.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="749.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.05%)</title><rect x="746.5" y="803.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="749.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (4 samples, 0.10%)</title><rect x="747.1" y="803.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="750.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="748.0" y="787.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="751.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="748.0" y="771.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="751.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="748.0" y="755.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="751.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (545 samples, 13.66%)</title><rect x="748.3" y="803.0" width="161.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="751.3" y="814.0">rocksdb::DBImpl::Writ..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (2 samples, 0.05%)</title><rect x="756.3" y="787.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="759.3" y="798.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (1 samples, 0.03%)</title><rect x="756.9" y="787.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="759.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="756.9" y="771.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="759.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="756.9" y="755.0" width="0.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="759.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="756.9" y="739.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="759.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="756.9" y="723.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="759.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="756.9" y="707.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="759.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="756.9" y="691.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="759.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="756.9" y="675.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="759.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="756.9" y="659.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="759.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="756.9" y="643.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="759.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="756.9" y="627.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="759.9" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="757.1" y="787.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="760.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="757.4" y="771.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="760.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="757.4" y="755.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="760.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="757.4" y="739.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="760.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="757.7" y="787.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="760.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="757.7" y="771.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="760.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="757.7" y="755.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="760.7" y="766.0"></text>
</g>
<g>
<title>___tls_get_addr (6 samples, 0.15%)</title><rect x="759.2" y="787.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="762.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="760.7" y="771.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="763.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="760.7" y="755.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="763.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="760.7" y="739.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="763.7" y="750.0"></text>
</g>
<g>
<title>_init (3 samples, 0.08%)</title><rect x="761.0" y="787.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="764.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="761.6" y="771.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="764.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="761.6" y="755.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="764.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="761.6" y="739.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="764.6" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.08%)</title><rect x="761.9" y="787.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="764.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned int*, rocksdb::WriteBatch**) (1 samples, 0.03%)</title><rect x="762.8" y="787.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="765.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (5 samples, 0.13%)</title><rect x="763.1" y="787.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="766.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (4 samples, 0.10%)</title><rect x="764.5" y="787.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="767.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (3 samples, 0.08%)</title><rect x="764.5" y="771.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="767.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.03%)</title><rect x="765.4" y="771.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="768.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="765.4" y="755.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="768.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="765.4" y="739.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="768.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="765.4" y="723.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="768.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.03%)</title><rect x="765.7" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="768.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (1 samples, 0.03%)</title><rect x="766.0" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="769.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long long*, bool, bool, unsigned long long) (330 samples, 8.27%)</title><rect x="766.3" y="787.0" width="97.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="769.3" y="798.0">rocksdb::DB..</text>
</g>
<g>
<title>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.03%)</title><rect x="766.6" y="771.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="769.6" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned int*, rocksdb::WriteBatch**) (1 samples, 0.03%)</title><rect x="766.9" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="769.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long long*, unsigned long long*) (321 samples, 8.04%)</title><rect x="767.2" y="771.0" width="94.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="770.2" y="782.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (317 samples, 7.94%)</title><rect x="767.8" y="755.0" width="93.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="770.8" y="766.0">rocksdb::lo..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (4 samples, 0.10%)</title><rect x="767.8" y="739.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="770.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned int) (2 samples, 0.05%)</title><rect x="769.0" y="739.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="772.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned int) (311 samples, 7.79%)</title><rect x="769.6" y="739.0" width="91.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="772.6" y="750.0">rocksdb::lo..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (1 samples, 0.03%)</title><rect x="770.2" y="723.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="773.2" y="734.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.05%)</title><rect x="770.5" y="723.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="773.5" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (1 samples, 0.03%)</title><rect x="771.0" y="723.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="774.0" y="734.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="771.3" y="723.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="774.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (3 samples, 0.08%)</title><rect x="771.9" y="723.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="774.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned int, unsigned int) (4 samples, 0.10%)</title><rect x="772.8" y="723.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="775.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="773.7" y="707.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="776.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="773.7" y="691.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="776.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="773.7" y="675.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="776.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (6 samples, 0.15%)</title><rect x="774.0" y="723.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="777.0" y="734.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="775.5" y="707.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="778.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (286 samples, 7.17%)</title><rect x="775.8" y="723.0" width="84.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="778.8" y="734.0">rocksdb::W..</text>
</g>
<g>
<title>___tls_get_addr (1 samples, 0.03%)</title><rect x="776.1" y="707.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="779.1" y="718.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="776.4" y="707.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="779.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (2 samples, 0.05%)</title><rect x="776.7" y="707.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="779.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="777.3" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="780.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (3 samples, 0.08%)</title><rect x="777.8" y="707.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="780.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="778.4" y="691.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="781.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="778.4" y="675.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="781.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="778.4" y="659.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="781.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned int) (276 samples, 6.92%)</title><rect x="778.7" y="707.0" width="81.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="781.7" y="718.0">rocksdb::..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (5 samples, 0.13%)</title><rect x="780.2" y="691.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="783.2" y="702.0"></text>
</g>
<g>
<title>__kernel_vsyscall (263 samples, 6.59%)</title><rect x="781.7" y="691.0" width="77.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="784.7" y="702.0">__kernel_..</text>
</g>
<g>
<title>[unknown] (262 samples, 6.56%)</title><rect x="782.0" y="675.0" width="77.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="785.0" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (262 samples, 6.56%)</title><rect x="782.0" y="659.0" width="77.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="785.0" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (262 samples, 6.56%)</title><rect x="782.0" y="643.0" width="77.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="785.0" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (258 samples, 6.46%)</title><rect x="783.2" y="627.0" width="76.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="786.2" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (247 samples, 6.19%)</title><rect x="786.4" y="611.0" width="73.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="789.4" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (239 samples, 5.99%)</title><rect x="788.8" y="595.0" width="70.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="791.8" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (226 samples, 5.66%)</title><rect x="792.6" y="579.0" width="66.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="795.6" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (220 samples, 5.51%)</title><rect x="794.4" y="563.0" width="65.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="797.4" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (211 samples, 5.29%)</title><rect x="797.1" y="547.0" width="62.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="800.1" y="558.0">[unkno..</text>
</g>
<g>
<title>[unknown] (192 samples, 4.81%)</title><rect x="802.7" y="531.0" width="56.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="805.7" y="542.0">[unkno..</text>
</g>
<g>
<title>[unknown] (174 samples, 4.36%)</title><rect x="808.0" y="515.0" width="51.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="811.0" y="526.0">[unkn..</text>
</g>
<g>
<title>[unknown] (149 samples, 3.73%)</title><rect x="815.4" y="499.0" width="44.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="818.4" y="510.0">[unk..</text>
</g>
<g>
<title>[unknown] (128 samples, 3.21%)</title><rect x="821.6" y="483.0" width="37.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="824.6" y="494.0">[un..</text>
</g>
<g>
<title>[unknown] (115 samples, 2.88%)</title><rect x="825.4" y="467.0" width="34.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="828.4" y="478.0">[u..</text>
</g>
<g>
<title>[unknown] (100 samples, 2.51%)</title><rect x="829.9" y="451.0" width="29.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="832.9" y="462.0">[u..</text>
</g>
<g>
<title>[unknown] (70 samples, 1.75%)</title><rect x="838.7" y="435.0" width="20.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="841.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.35%)</title><rect x="843.5" y="419.0" width="15.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="846.5" y="430.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 1.13%)</title><rect x="846.1" y="403.0" width="13.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="849.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.90%)</title><rect x="848.8" y="387.0" width="10.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="851.8" y="398.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.70%)</title><rect x="851.2" y="371.0" width="8.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="854.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.35%)</title><rect x="855.3" y="355.0" width="4.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="858.3" y="366.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="859.4" y="691.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="862.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="859.7" y="691.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="862.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned int) (4 samples, 0.10%)</title><rect x="860.3" y="723.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="863.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="861.2" y="707.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="864.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="861.2" y="691.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="864.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="861.2" y="675.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="864.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned int) (2 samples, 0.05%)</title><rect x="861.5" y="755.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="864.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (4 samples, 0.10%)</title><rect x="862.1" y="771.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="865.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="863.0" y="755.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="866.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="863.0" y="739.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="866.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="863.0" y="723.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="866.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="863.3" y="771.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="866.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="863.3" y="755.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="866.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="863.3" y="739.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="866.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="863.3" y="723.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="866.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.03%)</title><rect x="863.9" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="866.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (8 samples, 0.20%)</title><rect x="864.2" y="787.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="867.2" y="798.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="864.8" y="771.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="867.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (3 samples, 0.08%)</title><rect x="865.1" y="771.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="868.1" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="865.1" y="755.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="868.1" y="766.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="865.4" y="755.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="868.4" y="766.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="865.7" y="755.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="868.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.05%)</title><rect x="866.0" y="771.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="869.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.03%)</title><rect x="866.5" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="869.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.03%)</title><rect x="866.8" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="869.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.05%)</title><rect x="867.1" y="787.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="870.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.03%)</title><rect x="867.7" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="870.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="867.7" y="771.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="870.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="867.7" y="755.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="870.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="867.7" y="739.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="870.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.03%)</title><rect x="868.0" y="787.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="871.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long long, rocksdb::DB*, bool, bool, bool) (120 samples, 3.01%)</title><rect x="868.3" y="787.0" width="35.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="871.3" y="798.0">roc..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="868.6" y="771.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="871.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="868.6" y="755.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="871.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="868.6" y="739.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="871.6" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="868.9" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="871.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (117 samples, 2.93%)</title><rect x="869.2" y="771.0" width="34.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="872.2" y="782.0">ro..</text>
</g>
<g>
<title>rocksdb::GetLengthPrefixedSlice(rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.03%)</title><rect x="869.5" y="755.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="872.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (112 samples, 2.81%)</title><rect x="869.8" y="755.0" width="33.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="872.8" y="766.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.03%)</title><rect x="870.1" y="739.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="873.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.03%)</title><rect x="870.4" y="739.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="873.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (1 samples, 0.03%)</title><rect x="870.7" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="873.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (108 samples, 2.71%)</title><rect x="871.0" y="739.0" width="31.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="874.0" y="750.0">ro..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (4 samples, 0.10%)</title><rect x="872.8" y="723.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="875.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="872.8" y="707.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="875.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="872.8" y="691.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="875.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="872.8" y="675.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="875.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="872.8" y="659.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="875.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="872.8" y="643.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="875.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="873.0" y="627.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="876.0" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (3 samples, 0.08%)</title><rect x="873.9" y="723.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="876.9" y="734.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="874.8" y="723.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="877.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.05%)</title><rect x="875.1" y="723.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="878.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.05%)</title><rect x="875.7" y="723.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="878.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="876.0" y="707.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="879.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="876.0" y="691.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="879.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="876.0" y="675.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="879.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="876.0" y="659.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="879.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="876.0" y="643.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="879.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="876.0" y="627.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="879.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (86 samples, 2.15%)</title><rect x="876.3" y="723.0" width="25.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="879.3" y="734.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (72 samples, 1.80%)</title><rect x="878.4" y="707.0" width="21.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="881.4" y="718.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (9 samples, 0.23%)</title><rect x="879.0" y="691.0" width="2.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="882.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="879.0" y="675.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="882.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="879.0" y="659.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="882.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="879.0" y="643.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="882.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="879.3" y="627.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="882.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="879.3" y="611.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="882.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="879.6" y="595.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="882.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned int, unsigned int, rocksdb::Logger*) (6 samples, 0.15%)</title><rect x="879.8" y="675.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="882.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="881.3" y="659.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="884.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="881.3" y="643.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="884.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="881.3" y="627.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="884.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="881.3" y="611.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="884.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="881.3" y="595.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="884.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="881.3" y="579.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="884.3" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="881.6" y="691.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="884.6" y="702.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (59 samples, 1.48%)</title><rect x="881.9" y="691.0" width="17.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="884.9" y="702.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/ld-2.27.so (1 samples, 0.03%)</title><rect x="883.7" y="675.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="886.7" y="686.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (43 samples, 1.08%)</title><rect x="884.0" y="675.0" width="12.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="887.0" y="686.0"></text>
</g>
<g>
<title>___tls_get_addr (2 samples, 0.05%)</title><rect x="894.6" y="659.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="897.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.13%)</title><rect x="895.2" y="659.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="898.2" y="670.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.05%)</title><rect x="895.8" y="643.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="898.8" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (1 samples, 0.03%)</title><rect x="896.4" y="643.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="899.4" y="654.0"></text>
</g>
<g>
<title>___tls_get_addr (1 samples, 0.03%)</title><rect x="896.7" y="675.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="899.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.05%)</title><rect x="897.0" y="675.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="900.0" y="686.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (1 samples, 0.03%)</title><rect x="897.0" y="659.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="900.0" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (1 samples, 0.03%)</title><rect x="897.3" y="659.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="900.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.13%)</title><rect x="897.6" y="675.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="900.6" y="686.0"></text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.05%)</title><rect x="898.5" y="659.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="901.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableRep::KeyComparator::decode_key(char const*) const (1 samples, 0.03%)</title><rect x="899.1" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="902.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned int, unsigned int, rocksdb::Logger*) (1 samples, 0.03%)</title><rect x="899.4" y="691.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="902.4" y="702.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.05%)</title><rect x="899.7" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="902.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.05%)</title><rect x="900.2" y="707.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="903.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.03%)</title><rect x="900.8" y="707.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="903.8" y="718.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni643623829602200933.so (1 samples, 0.03%)</title><rect x="900.8" y="691.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="903.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.05%)</title><rect x="901.1" y="707.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="904.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.03%)</title><rect x="901.7" y="723.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="904.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.03%)</title><rect x="902.0" y="723.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="905.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long long, rocksdb::ValueType) (2 samples, 0.05%)</title><rect x="902.3" y="723.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="905.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.03%)</title><rect x="902.9" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="905.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.05%)</title><rect x="903.2" y="755.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="906.2" y="766.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="903.5" y="739.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="906.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long long) (3 samples, 0.08%)</title><rect x="903.8" y="787.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="906.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (3 samples, 0.08%)</title><rect x="904.7" y="787.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="907.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="905.3" y="771.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="908.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="905.3" y="755.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="908.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="905.3" y="739.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="908.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.03%)</title><rect x="905.6" y="787.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="908.6" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.05%)</title><rect x="905.9" y="787.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="908.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.05%)</title><rect x="906.5" y="787.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="909.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="906.8" y="771.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="909.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="906.8" y="755.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="909.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="906.8" y="739.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="909.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (5 samples, 0.13%)</title><rect x="907.0" y="787.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="910.0" y="798.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.10%)</title><rect x="907.0" y="771.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="910.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="907.0" y="755.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="910.0" y="766.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="907.0" y="739.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="910.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="907.0" y="723.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="910.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="907.0" y="707.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="910.0" y="718.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.08%)</title><rect x="907.3" y="755.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="910.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="907.9" y="739.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="910.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="907.9" y="723.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="910.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="907.9" y="707.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="910.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="907.9" y="691.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="910.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.03%)</title><rect x="908.2" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="911.2" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.03%)</title><rect x="908.5" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="911.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (2 samples, 0.05%)</title><rect x="908.8" y="787.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="911.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.03%)</title><rect x="909.4" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="912.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.03%)</title><rect x="909.7" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="912.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (5 samples, 0.13%)</title><rect x="910.0" y="803.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="913.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.05%)</title><rect x="911.5" y="803.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="914.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned int, unsigned int) (1 samples, 0.03%)</title><rect x="912.1" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="915.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.05%)</title><rect x="912.4" y="803.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="915.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.03%)</title><rect x="913.0" y="803.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="916.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.03%)</title><rect x="913.3" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="916.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long long*, unsigned long long, bool, unsigned long long*, unsigned int, rocksdb::PreReleaseCallback*) (3 samples, 0.08%)</title><rect x="913.6" y="819.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="916.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (5 samples, 0.13%)</title><rect x="914.4" y="819.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="917.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 0.65%)</title><rect x="915.9" y="819.0" width="7.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="918.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.03%)</title><rect x="915.9" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="918.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (6 samples, 0.15%)</title><rect x="916.2" y="803.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="919.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (5 samples, 0.13%)</title><rect x="918.0" y="803.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="921.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.03%)</title><rect x="918.6" y="787.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="921.6" y="798.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.05%)</title><rect x="918.9" y="787.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="921.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.03%)</title><rect x="919.5" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="922.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.20%)</title><rect x="919.8" y="803.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="922.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (3 samples, 0.08%)</title><rect x="920.6" y="787.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="923.6" y="798.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (2 samples, 0.05%)</title><rect x="921.5" y="787.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="924.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (2 samples, 0.05%)</title><rect x="922.1" y="803.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="925.1" y="814.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned int) (3 samples, 0.08%)</title><rect x="922.7" y="803.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="925.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned int, unsigned int) (5 samples, 0.13%)</title><rect x="923.6" y="819.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="926.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.05%)</title><rect x="925.1" y="819.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="928.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="925.7" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="928.7" y="830.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned int) (2 samples, 0.05%)</title><rect x="926.0" y="819.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="929.0" y="830.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.03%)</title><rect x="926.6" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="929.6" y="830.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.03%)</title><rect x="926.9" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="929.9" y="830.0"></text>
</g>
<g>
<title>std::string::append(unsigned int, char) (4 samples, 0.10%)</title><rect x="927.2" y="819.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="930.2" y="830.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned int) (5 samples, 0.13%)</title><rect x="928.3" y="819.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="931.3" y="830.0"></text>
</g>
<g>
<title>std::string::resize(unsigned int, char) (3 samples, 0.08%)</title><rect x="929.8" y="819.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="932.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.03%)</title><rect x="930.7" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="933.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.10%)</title><rect x="931.0" y="835.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="934.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned int, unsigned int) (2 samples, 0.05%)</title><rect x="932.2" y="835.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="935.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.03%)</title><rect x="932.8" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="935.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (6 samples, 0.15%)</title><rect x="933.1" y="867.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="936.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="934.8" y="867.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="937.8" y="878.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned int) (4 samples, 0.10%)</title><rect x="935.4" y="867.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="938.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.18%)</title><rect x="936.6" y="899.0" width="2.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="939.6" y="910.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="936.6" y="883.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="939.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="936.6" y="867.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="939.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="936.6" y="851.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="939.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="936.6" y="835.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="939.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="936.6" y="819.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="939.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="936.6" y="803.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="939.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="936.6" y="787.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="939.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="936.6" y="771.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="939.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="936.6" y="755.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="939.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="936.6" y="739.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="939.6" y="750.0"></text>
</g>
<g>
<title>malloc (6 samples, 0.15%)</title><rect x="936.9" y="883.0" width="1.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="939.9" y="894.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="938.7" y="899.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="941.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.getByteArray (3 samples, 0.08%)</title><rect x="939.3" y="931.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="942.3" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.08%)</title><rect x="939.3" y="915.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.3" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="939.3" y="899.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="942.3" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="939.3" y="883.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="942.3" y="894.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="939.3" y="867.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.3" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.08%)</title><rect x="939.3" y="851.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.3" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.08%)</title><rect x="939.3" y="835.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="942.3" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="939.9" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.restoreByteArray (1 samples, 0.03%)</title><rect x="940.2" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.getByteArray (1 samples, 0.03%)</title><rect x="940.2" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.2" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="940.2" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="943.2" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="940.2" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="943.2" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="940.2" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.2" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="940.2" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="943.2" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="940.2" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="943.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1 samples, 0.03%)</title><rect x="940.5" y="1075.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="943.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="940.5" y="1059.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="943.5" y="1070.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="940.5" y="1043.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="943.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.03%)</title><rect x="940.8" y="1075.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (1 samples, 0.03%)</title><rect x="940.8" y="1059.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="943.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.03%)</title><rect x="940.8" y="1043.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (1 samples, 0.03%)</title><rect x="940.8" y="1027.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="943.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.&lt;init&gt; (1 samples, 0.03%)</title><rect x="940.8" y="1011.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="943.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/SelectableJavaSocket.&lt;init&gt; (1 samples, 0.03%)</title><rect x="940.8" y="995.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (837 samples, 20.97%)</title><rect x="941.0" y="1075.0" width="247.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="944.0" y="1086.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>__vdso_gettimeofday (2 samples, 0.05%)</title><rect x="941.9" y="1059.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="944.9" y="1070.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="942.5" y="1059.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="945.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (322 samples, 8.07%)</title><rect x="942.8" y="1059.0" width="95.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="945.8" y="1070.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (26 samples, 0.65%)</title><rect x="942.8" y="1043.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (24 samples, 0.60%)</title><rect x="943.4" y="1027.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="946.4" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (24 samples, 0.60%)</title><rect x="943.4" y="1011.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="946.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (24 samples, 0.60%)</title><rect x="943.4" y="995.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="946.4" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (24 samples, 0.60%)</title><rect x="943.4" y="979.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="946.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (24 samples, 0.60%)</title><rect x="943.4" y="963.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="946.4" y="974.0"></text>
</g>
<g>
<title>__clock_gettime (20 samples, 0.50%)</title><rect x="944.6" y="947.0" width="5.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="947.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="945.5" y="931.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="948.5" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.08%)</title><rect x="945.5" y="915.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="948.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="945.5" y="899.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="948.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="945.5" y="883.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="948.5" y="894.0"></text>
</g>
<g>
<title>__kernel_vsyscall (13 samples, 0.33%)</title><rect x="946.4" y="931.0" width="3.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="949.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.30%)</title><rect x="946.7" y="915.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="949.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.30%)</title><rect x="946.7" y="899.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="949.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.30%)</title><rect x="946.7" y="883.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="949.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="947.9" y="867.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="950.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.18%)</title><rect x="948.1" y="851.0" width="2.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="951.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="948.7" y="835.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="951.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="949.9" y="819.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="952.9" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="950.2" y="931.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="953.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (4 samples, 0.10%)</title><rect x="950.5" y="1043.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="953.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (4 samples, 0.10%)</title><rect x="950.5" y="1027.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.5" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (292 samples, 7.32%)</title><rect x="951.7" y="1043.0" width="86.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="954.7" y="1054.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (292 samples, 7.32%)</title><rect x="951.7" y="1027.0" width="86.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.7" y="1038.0">sun/nio/ch..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="953.5" y="1011.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="956.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="953.5" y="995.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="956.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="953.5" y="979.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="956.5" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (285 samples, 7.14%)</title><rect x="953.8" y="1011.0" width="84.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="956.8" y="1022.0">sun/nio/ch..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="954.9" y="995.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="957.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="954.9" y="979.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="957.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="954.9" y="963.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="957.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Math.min (2 samples, 0.05%)</title><rect x="955.2" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.2" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (245 samples, 6.14%)</title><rect x="955.8" y="995.0" width="72.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.8" y="1006.0">sun/nio/..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (2 samples, 0.05%)</title><rect x="957.6" y="979.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="960.6" y="990.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (1 samples, 0.03%)</title><rect x="958.2" y="979.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="961.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="958.5" y="979.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="961.5" y="990.0"></text>
</g>
<g>
<title>__kernel_vsyscall (3 samples, 0.08%)</title><rect x="958.5" y="963.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="961.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="958.5" y="947.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="961.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="958.5" y="931.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="961.5" y="942.0"></text>
</g>
<g>
<title>__kernel_vsyscall (226 samples, 5.66%)</title><rect x="959.4" y="979.0" width="66.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="962.4" y="990.0">__kerne..</text>
</g>
<g>
<title>[unknown] (219 samples, 5.49%)</title><rect x="961.5" y="963.0" width="64.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="964.5" y="974.0">[unknown]</text>
</g>
<g>
<title>[unknown] (219 samples, 5.49%)</title><rect x="961.5" y="947.0" width="64.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="964.5" y="958.0">[unknown]</text>
</g>
<g>
<title>[unknown] (216 samples, 5.41%)</title><rect x="962.3" y="931.0" width="63.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="965.3" y="942.0">[unknown]</text>
</g>
<g>
<title>[unknown] (212 samples, 5.31%)</title><rect x="963.5" y="915.0" width="62.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="966.5" y="926.0">[unkno..</text>
</g>
<g>
<title>[unknown] (208 samples, 5.21%)</title><rect x="964.7" y="899.0" width="61.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="967.7" y="910.0">[unkno..</text>
</g>
<g>
<title>[unknown] (203 samples, 5.09%)</title><rect x="966.2" y="883.0" width="60.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="969.2" y="894.0">[unkno..</text>
</g>
<g>
<title>[unknown] (192 samples, 4.81%)</title><rect x="969.4" y="867.0" width="56.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="972.4" y="878.0">[unkno..</text>
</g>
<g>
<title>[unknown] (188 samples, 4.71%)</title><rect x="970.6" y="851.0" width="55.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="973.6" y="862.0">[unkn..</text>
</g>
<g>
<title>[unknown] (179 samples, 4.49%)</title><rect x="973.3" y="835.0" width="52.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="976.3" y="846.0">[unkn..</text>
</g>
<g>
<title>epoll_wait (7 samples, 0.18%)</title><rect x="1026.2" y="979.0" width="2.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1029.2" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (23 samples, 0.58%)</title><rect x="1028.3" y="995.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1031.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.03%)</title><rect x="1029.2" y="979.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.15%)</title><rect x="1029.5" y="979.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.08%)</title><rect x="1029.7" y="963.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1032.7" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="1030.6" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1033.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.getEvent (3 samples, 0.08%)</title><rect x="1031.2" y="979.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1034.2" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (10 samples, 0.25%)</title><rect x="1032.1" y="979.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.20%)</title><rect x="1032.1" y="963.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.20%)</title><rect x="1032.1" y="947.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.1" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="1032.1" y="931.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.1" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.18%)</title><rect x="1032.4" y="931.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.4" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (6 samples, 0.15%)</title><rect x="1032.7" y="915.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.7" y="926.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.03%)</title><rect x="1034.5" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.03%)</title><rect x="1034.5" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1037.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="1034.5" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1037.5" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (1 samples, 0.03%)</title><rect x="1034.8" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1037.8" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (3 samples, 0.08%)</title><rect x="1035.1" y="995.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.1" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.03%)</title><rect x="1035.7" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1038.7" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.05%)</title><rect x="1036.0" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1039.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.05%)</title><rect x="1036.0" y="979.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1039.0" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="1036.0" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1039.0" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="1036.3" y="963.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.3" y="974.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="1036.3" y="947.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.3" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="1036.3" y="931.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.3" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.05%)</title><rect x="1036.5" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.05%)</title><rect x="1036.5" y="979.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.5" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.05%)</title><rect x="1036.5" y="963.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.08%)</title><rect x="1037.1" y="995.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.1" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (1 samples, 0.03%)</title><rect x="1037.7" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.7" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (1 samples, 0.03%)</title><rect x="1037.7" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.7" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (1 samples, 0.03%)</title><rect x="1037.7" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.7" y="958.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="1037.7" y="931.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1040.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1037.7" y="915.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1040.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1037.7" y="899.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1040.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1037.7" y="883.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1040.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1037.7" y="867.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1040.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1037.7" y="851.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1040.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1037.7" y="835.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1040.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1037.7" y="819.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1040.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1037.7" y="803.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1040.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1037.7" y="787.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1040.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1037.7" y="771.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1040.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (495 samples, 12.40%)</title><rect x="1038.0" y="1059.0" width="146.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.0" y="1070.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (492 samples, 12.33%)</title><rect x="1038.9" y="1043.0" width="145.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1041.9" y="1054.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (354 samples, 8.87%)</title><rect x="1039.2" y="1027.0" width="104.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1042.2" y="1038.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (303 samples, 7.59%)</title><rect x="1042.8" y="1011.0" width="89.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.8" y="1022.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (303 samples, 7.59%)</title><rect x="1042.8" y="995.0" width="89.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1045.8" y="1006.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (284 samples, 7.12%)</title><rect x="1042.8" y="979.0" width="83.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.8" y="990.0">RequestHa..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.03%)</title><rect x="1042.8" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="1042.8" y="947.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="1042.8" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.03%)</title><rect x="1042.8" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1045.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.25%)</title><rect x="1043.1" y="963.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1046.1" y="974.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.15%)</title><rect x="1044.2" y="947.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1047.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="1045.1" y="931.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="1045.1" y="915.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1048.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (273 samples, 6.84%)</title><rect x="1046.0" y="963.0" width="80.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.0" y="974.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.executeAsync (273 samples, 6.84%)</title><rect x="1046.0" y="947.0" width="80.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.0" y="958.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (273 samples, 6.84%)</title><rect x="1046.0" y="931.0" width="80.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.0" y="942.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (256 samples, 6.41%)</title><rect x="1051.0" y="915.0" width="75.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1054.0" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (246 samples, 6.16%)</title><rect x="1051.0" y="899.0" width="72.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1054.0" y="910.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.10%)</title><rect x="1051.0" y="883.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.10%)</title><rect x="1051.0" y="867.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1054.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.10%)</title><rect x="1051.0" y="851.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1054.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (242 samples, 6.06%)</title><rect x="1052.2" y="883.0" width="71.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.2" y="894.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (242 samples, 6.06%)</title><rect x="1052.2" y="867.0" width="71.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.2" y="878.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (242 samples, 6.06%)</title><rect x="1052.2" y="851.0" width="71.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.2" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (242 samples, 6.06%)</title><rect x="1052.2" y="835.0" width="71.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.2" y="846.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (241 samples, 6.04%)</title><rect x="1052.5" y="819.0" width="71.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1055.5" y="830.0">jdk/inte..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="1052.8" y="803.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1055.8" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (3 samples, 0.08%)</title><rect x="1053.4" y="803.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1056.4" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.08%)</title><rect x="1054.3" y="803.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1057.3" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (37 samples, 0.93%)</title><rect x="1055.2" y="803.0" width="10.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1058.2" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097812ull, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097812ull&gt;::oop_access_barrier(void*) (4 samples, 0.10%)</title><rect x="1057.0" y="787.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1060.0" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.08%)</title><rect x="1058.1" y="787.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1061.1" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="1059.0" y="787.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1062.0" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.10%)</title><rect x="1059.6" y="787.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1062.6" y="798.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="1060.5" y="771.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1063.5" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (5 samples, 0.13%)</title><rect x="1060.8" y="787.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1063.8" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="1062.3" y="787.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1065.3" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.05%)</title><rect x="1062.9" y="787.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1065.9" y="798.0"></text>
</g>
<g>
<title>pthread_cond_signal (2 samples, 0.05%)</title><rect x="1063.5" y="787.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1066.5" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.13%)</title><rect x="1064.0" y="787.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1067.0" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="1065.5" y="787.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1068.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (194 samples, 4.86%)</title><rect x="1066.1" y="803.0" width="57.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1069.1" y="814.0">[unkno..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="1066.1" y="787.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1069.1" y="798.0"></text>
</g>
<g>
<title>__kernel_vsyscall (4 samples, 0.10%)</title><rect x="1066.1" y="771.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1069.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="1066.1" y="755.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1069.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="1066.1" y="739.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1069.1" y="750.0"></text>
</g>
<g>
<title>__kernel_vsyscall (185 samples, 4.64%)</title><rect x="1067.3" y="787.0" width="54.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1070.3" y="798.0">__ker..</text>
</g>
<g>
<title>[unknown] (183 samples, 4.59%)</title><rect x="1067.9" y="771.0" width="54.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1070.9" y="782.0">[unkn..</text>
</g>
<g>
<title>[unknown] (183 samples, 4.59%)</title><rect x="1067.9" y="755.0" width="54.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1070.9" y="766.0">[unkn..</text>
</g>
<g>
<title>[unknown] (182 samples, 4.56%)</title><rect x="1068.2" y="739.0" width="53.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1071.2" y="750.0">[unkn..</text>
</g>
<g>
<title>[unknown] (182 samples, 4.56%)</title><rect x="1068.2" y="723.0" width="53.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1071.2" y="734.0">[unkn..</text>
</g>
<g>
<title>[unknown] (181 samples, 4.54%)</title><rect x="1068.5" y="707.0" width="53.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1071.5" y="718.0">[unkn..</text>
</g>
<g>
<title>[unknown] (177 samples, 4.43%)</title><rect x="1069.7" y="691.0" width="52.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1072.7" y="702.0">[unkn..</text>
</g>
<g>
<title>[unknown] (174 samples, 4.36%)</title><rect x="1070.6" y="675.0" width="51.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1073.6" y="686.0">[unkn..</text>
</g>
<g>
<title>[unknown] (172 samples, 4.31%)</title><rect x="1071.1" y="659.0" width="50.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1074.1" y="670.0">[unkn..</text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.13%)</title><rect x="1122.0" y="787.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1125.0" y="798.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.ax (1 samples, 0.03%)</title><rect x="1123.5" y="803.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1126.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.25%)</title><rect x="1123.8" y="899.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.25%)</title><rect x="1123.8" y="883.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.25%)</title><rect x="1123.8" y="867.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.25%)</title><rect x="1123.8" y="851.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1126.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (19 samples, 0.48%)</title><rect x="1126.7" y="979.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (19 samples, 0.48%)</title><rect x="1126.7" y="963.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.7" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (19 samples, 0.48%)</title><rect x="1126.7" y="947.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.7" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (19 samples, 0.48%)</title><rect x="1132.3" y="1011.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.48%)</title><rect x="1132.3" y="995.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.48%)</title><rect x="1132.3" y="979.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1135.3" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.28%)</title><rect x="1138.0" y="1011.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.28%)</title><rect x="1138.0" y="995.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.28%)</title><rect x="1138.0" y="979.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.0" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.23%)</title><rect x="1141.2" y="1011.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.23%)</title><rect x="1141.2" y="995.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (137 samples, 3.43%)</title><rect x="1143.9" y="1027.0" width="40.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.9" y="1038.0">one..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (132 samples, 3.31%)</title><rect x="1145.4" y="1011.0" width="39.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1148.4" y="1022.0">one..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (132 samples, 3.31%)</title><rect x="1145.4" y="995.0" width="39.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1148.4" y="1006.0">sun..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.10%)</title><rect x="1145.4" y="979.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.10%)</title><rect x="1145.4" y="963.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.10%)</title><rect x="1145.4" y="947.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.10%)</title><rect x="1145.4" y="931.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.4" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (121 samples, 3.03%)</title><rect x="1146.5" y="979.0" width="35.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.5" y="990.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (121 samples, 3.03%)</title><rect x="1146.5" y="963.0" width="35.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.5" y="974.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (120 samples, 3.01%)</title><rect x="1146.5" y="947.0" width="35.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.5" y="958.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (120 samples, 3.01%)</title><rect x="1146.5" y="931.0" width="35.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.5" y="942.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (107 samples, 2.68%)</title><rect x="1150.4" y="915.0" width="31.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1153.4" y="926.0">su..</text>
</g>
<g>
<title>/lib/i386-linux-gnu/libc-2.27.so (3 samples, 0.08%)</title><rect x="1152.5" y="899.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1155.5" y="910.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (3 samples, 0.08%)</title><rect x="1153.3" y="899.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1156.3" y="910.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.08%)</title><rect x="1153.3" y="883.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1156.3" y="894.0"></text>
</g>
<g>
<title>__kernel_vsyscall (90 samples, 2.26%)</title><rect x="1154.2" y="899.0" width="26.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1157.2" y="910.0">_..</text>
</g>
<g>
<title>[unknown] (88 samples, 2.20%)</title><rect x="1154.8" y="883.0" width="26.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1157.8" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (88 samples, 2.20%)</title><rect x="1154.8" y="867.0" width="26.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1157.8" y="878.0">[..</text>
</g>
<g>
<title>[unknown] (88 samples, 2.20%)</title><rect x="1154.8" y="851.0" width="26.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1157.8" y="862.0">[..</text>
</g>
<g>
<title>[unknown] (87 samples, 2.18%)</title><rect x="1155.1" y="835.0" width="25.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1158.1" y="846.0">[..</text>
</g>
<g>
<title>[unknown] (82 samples, 2.05%)</title><rect x="1156.6" y="819.0" width="24.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1159.6" y="830.0">[..</text>
</g>
<g>
<title>[unknown] (79 samples, 1.98%)</title><rect x="1157.5" y="803.0" width="23.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1160.5" y="814.0">[..</text>
</g>
<g>
<title>[unknown] (67 samples, 1.68%)</title><rect x="1161.0" y="787.0" width="19.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1164.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 1.63%)</title><rect x="1161.6" y="771.0" width="19.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1164.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 1.50%)</title><rect x="1163.1" y="755.0" width="17.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1166.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.35%)</title><rect x="1164.9" y="739.0" width="15.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1167.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 1.10%)</title><rect x="1167.8" y="723.0" width="13.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1170.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.75%)</title><rect x="1172.0" y="707.0" width="8.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1175.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.45%)</title><rect x="1175.5" y="691.0" width="5.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1178.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="1179.4" y="675.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1182.4" y="686.0"></text>
</g>
<g>
<title>__x86.get_pc_thunk.bx (1 samples, 0.03%)</title><rect x="1180.8" y="899.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1183.8" y="910.0"></text>
</g>
<g>
<title>read (3 samples, 0.08%)</title><rect x="1181.1" y="899.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1184.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="1182.0" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1185.0" y="958.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="1182.0" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.0" y="942.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="1182.0" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1185.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (2 samples, 0.05%)</title><rect x="1182.3" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1185.3" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endRead (5 samples, 0.13%)</title><rect x="1182.9" y="979.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.9" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.13%)</title><rect x="1182.9" y="963.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1185.9" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (14 samples, 0.35%)</title><rect x="1184.4" y="1059.0" width="4.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1184.4" y="1043.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1187.4" y="1054.0"></text>
</g>
<g>
<title>__kernel_vsyscall (1 samples, 0.03%)</title><rect x="1184.4" y="1027.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1187.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1184.4" y="1011.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1187.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1184.4" y="995.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1187.4" y="1006.0"></text>
</g>
<g>
<title>__kernel_vsyscall (13 samples, 0.33%)</title><rect x="1184.7" y="1043.0" width="3.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1187.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.28%)</title><rect x="1185.3" y="1027.0" width="3.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1188.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.28%)</title><rect x="1185.3" y="1011.0" width="3.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1188.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.25%)</title><rect x="1185.6" y="995.0" width="2.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1188.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.23%)</title><rect x="1185.9" y="979.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1188.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.18%)</title><rect x="1186.5" y="963.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1189.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1187.9" y="947.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1190.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1188.2" y="931.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1191.2" y="942.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.03%)</title><rect x="1188.5" y="1075.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dogm/ServiceImpl.entity (1 samples, 0.03%)</title><rect x="1188.8" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.03%)</title><rect x="1188.8" y="1059.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="1188.8" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.8" y="1054.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.03%)</title><rect x="1188.8" y="1027.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.8" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.03%)</title><rect x="1189.1" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.1" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.03%)</title><rect x="1189.1" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.1" y="1070.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.03%)</title><rect x="1189.1" y="1043.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.1" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.05%)</title><rect x="1189.4" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="1189.4" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="1189.4" y="1043.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.4" y="1054.0"></text>
</g>
<g>
<title>Thread::current() (2 samples, 0.05%)</title><rect x="1189.4" y="1027.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="1038.0"></text>
</g>
</g>
</svg>
